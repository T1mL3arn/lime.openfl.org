<!-- This file can be parsed by haxe.rtti.XmlParser -->
<haxe>
	<abstract path="Any" params="" file="/usr/local/lib/haxe/std/Any.hx">
		<from><icast field="__cast"><c path="__cast.T"/></icast></from>
		<this><d/></this>
		<to><icast field="__promote"><c path="__promote.T"/></icast></to>
		<haxe_doc>`Any` is a type that is compatible with any other in both ways.

	This means that a value of any type can be assigned to `Any`, and
	vice-versa, a value of `Any` type can be assigned to any other type.

	It's a more type-safe alternative to `Dynamic`, because it doesn't
	support field access or operators and it's bound to monomorphs. So,
	to work with the actual value, it needs to be explicitly promoted
	to another type.</haxe_doc>
		<impl><class path="_Any.Any_Impl_" params="" file="/usr/local/lib/haxe/std/Any.hx" private="1" module="Any"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="Array" params="T" file="/usr/local/lib/haxe/std/js/_std/Array.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` Array.</haxe_doc>
		</length>
		<concat public="1" set="method">
			<f a="a">
				<c path="Array"><c path="Array.T"/></c>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Returns a new Array by appending the elements of `a` to the elements of
		`this` Array.

		This operation does not modify `this` Array.

		If `a` is the empty Array `[]`, a copy of `this` Array is returned.

		The length of the returned Array is equal to the sum of `this.length`
		and `a.length`.

		If `a` is `null`, the result is unspecified.</haxe_doc>
		</concat>
		<join public="1" set="method">
			<f a="sep">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string representation of `this` Array, with `sep` separating
		each element.

		The result of this operation is equal to `Std.string(this[0]) + sep +
		Std.string(this[1]) + sep + ... + sep + Std.string(this[this.length-1])`

		If `this` is the empty Array `[]`, the result is the empty String `""`.
		If `this` has exactly one element, the result is equal to a call to
		`Std.string(this[0])`.

		If `sep` is null, the result is unspecified.</haxe_doc>
		</join>
		<pop public="1" set="method">
			<f a=""><x path="Null"><c path="Array.T"/></x></f>
			<haxe_doc>Removes the last element of `this` Array and returns it.

		This operation modifies `this` Array in place.

		If `this` has at least one element, `this.length` will decrease by 1.

		If `this` is the empty Array `[]`, null is returned and the length
		remains 0.</haxe_doc>
		</pop>
		<push public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Adds the element `x` at the end of `this` Array and returns the new
		length of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` increases by 1.</haxe_doc>
		</push>
		<slice public="1" set="method">
			<f a="pos:?end">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc>Creates a shallow copy of the range of `this` Array, starting at and
		including `pos`, up to but not including `end`.

		This operation does not modify `this` Array.

		The elements are not copied and retain their identity.

		If `end` is omitted or exceeds `this.length`, it defaults to the end of
		`this` Array.

		If `pos` or `end` are negative, their offsets are calculated from the
		end of `this` Array by `this.length + pos` and `this.length + end`
		respectively. If this yields a negative value, 0 is used instead.

		If `pos` exceeds `this.length` or if `end` is less than or equals
		`pos`, the result is `[]`.</haxe_doc>
		</slice>
		<splice public="1" set="method">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="Array"><c path="Array.T"/></c>
			</f>
			<haxe_doc><![CDATA[Removes `len` elements from `this` Array, starting at and including
		`pos`, an returns them.

		This operation modifies `this` Array in place.

		If `len` is < 0 or `pos` exceeds `this`.length, an empty Array [] is 
		returned and `this` Array is unchanged.

		If `pos` is negative, its value is calculated from the end	of `this`
		Array by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the sum of the resulting values for `len` and `pos` exceed
		`this.length`, this operation will affect the elements from `pos` to the
		end of `this` Array.

		The length of the returned Array is equal to the new length of `this`
		Array subtracted from the original length of `this` Array. In other
		words, each element of the original `this` Array either remains in
		`this` Array or becomes an element of the returned Array.]]></haxe_doc>
		</splice>
		<unshift public="1" set="method">
			<f a="x">
				<c path="Array.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds the element `x` at the start of `this` Array.

		This operation modifies `this` Array in place.

		`this.length` and the index of each Array element increases by 1.</haxe_doc>
		</unshift>
		<indexOf public="1" set="method">
			<f a="x:?fromIndex">
				<c path="Array.T"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns position of the first occurrence of `x` in `this` Array, searching front to back.

		If `x` is found by checking standard equality, the function returns its index.

		If `x` is not found, the function returns -1.

		If `fromIndex` is specified, it will be used as the starting index to search from,
		otherwise search starts with zero index. If it is negative, it will be taken as the
		offset from the end of `this` Array to compute the starting index. If given or computed
		starting index is less than 0, the whole array will be searched, if it is greater than
		or equal to the length of `this` Array, the function returns -1.</haxe_doc>
		</indexOf>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Array.</haxe_doc>
		</new>
		<haxe_doc>An Array is a storage for values. You can access it using indexes or
	with its API.

	@see https://haxe.org/manual/std-Array.html
	@see https://haxe.org/manual/lf-array-comprehension.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Class" params="T" file="/usr/local/lib/haxe/std/Class.hx">
		<this><x path="Class"><c path="Class.T"/></x></this>
		<haxe_doc>An abstract type that represents a Class.

	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-class-instance.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<class path="Date" params="" file="/usr/local/lib/haxe/std/js/_std/Date.hx" extern="1">
		<now public="1" get="inline" set="null" line="38" static="1">
			<f a=""><c path="Date"/></f>
			<haxe_doc>Returns a Date representing the current local time.</haxe_doc>
		</now>
		<fromTime public="1" get="inline" set="null" line="42" static="1">
			<f a="t">
				<x path="Float"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from timestamp (in milliseconds) `t`.</haxe_doc>
		</fromTime>
		<fromString public="1" get="inline" set="null" line="46" static="1">
			<f a="s">
				<c path="String"/>
				<c path="Date"/>
			</f>
			<haxe_doc>Returns a Date from a formatted string `s`, with the following accepted
		formats:

		- `"YYYY-MM-DD hh:mm:ss"`
		- `"YYYY-MM-DD"`
		- `"hh:mm:ss"`

		The first two formats are expressed in local time, the third in UTC
		Epoch.</haxe_doc>
		</fromString>
		<getTime public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the timestamp (in milliseconds) of the date. It might
		only have a per-second precision depending on the platforms.</haxe_doc>
		</getTime>
		<getHours public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the hours of `this` Date (0-23 range).</haxe_doc>
		</getHours>
		<getMinutes public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the minutes of `this` Date (0-59 range).</haxe_doc>
		</getMinutes>
		<getSeconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the seconds of `this` Date (0-59 range).</haxe_doc>
		</getSeconds>
		<getFullYear public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the full year of `this` Date (4-digits).</haxe_doc>
		</getFullYear>
		<getMonth public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the month of `this` Date (0-11 range).</haxe_doc>
		</getMonth>
		<getDate public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of `this` Date (1-31 range).</haxe_doc>
		</getDate>
		<getDay public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the week of `this` Date (0-6 range) where `0` is Sunday.</haxe_doc>
		</getDay>
		<toString public="1" get="inline" set="null" line="34">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representation of `this` Date, by using the
		standard format [YYYY-MM-DD HH:MM:SS]. See `DateTools.format` for
		other formating rules.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="year:month:day:hour:min:sec">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new date object from the given arguments.

		The behaviour of a Date instance is only consistent across platforms if
		the the arguments describe a valid date.

		- month: 0 to 11
		- day: 1 to 31
		- hour: 0 to 23
		- min: 0 to 59
		- sec: 0 to 59</haxe_doc>
		</new>
		<haxe_doc>The Date class provides a basic structure for date and time related
	information. Date instances can be created by

	- `new Date()` for a specific date,
	- `Date.now()` to obtain information about the current time,
	- `Date.fromTime()` with a given timestamp or
	- `Date.fromString()` by parsing from a String.

	There are some extra functions available in the `DateTools` class.

	In the context of Haxe dates, a timestamp is defined as the number of
	milliseconds elapsed since 1st January 1970.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="js.RegExp" params="" file="/usr/local/lib/haxe/std/js/RegExp.hx" extern="1">
		<global public="1" set="null"><x path="Bool"/></global>
		<ignoreCase public="1" set="null"><x path="Bool"/></ignoreCase>
		<multiline public="1" set="null"><x path="Bool"/></multiline>
		<source public="1" set="null"><c path="String"/></source>
		<lastIndex public="1"><x path="Int"/></lastIndex>
		<exec public="1" set="method"><f a="str">
	<c path="String"/>
	<x path="Null"><c path="js.RegExpMatch"/></x>
</f></exec>
		<test public="1" set="method"><f a="str">
	<c path="String"/>
	<x path="Bool"/>
</f></test>
		<toString public="1" set="method"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method"><f a="pattern:?flags">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>Native JavaScript regular expressions.

	For cross-platform regular expressions, use Haxe `EReg` class or
	[regexp literals](https://haxe.org/manual/std-regex.html).</haxe_doc>
		<meta><m n=":native"><e>"RegExp"</e></m></meta>
	</class>
	<class path="EReg" params="" file="/usr/local/lib/haxe/std/js/_std/EReg.hx">
		<r><c path="_EReg.HaxeRegExp"/></r>
		<match public="1" set="method" line="30">
			<f a="s">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if `this` regular expression matches String `s`.

		This method modifies the internal state.

		If `s` is `null`, the result is unspecified.</haxe_doc>
		</match>
		<matched public="1" set="method" line="37">
			<f a="n">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the matched sub-group `n` of `this` EReg.

		This method should only be called after `this.match` or
		`this.matchSub`, and then operates on the String of that operation.

		The index `n` corresponds to the n-th set of parentheses in the pattern
		of `this` EReg. If no such sub-group exists, an exception is thrown.

		If `n` equals 0, the whole matched substring is returned.</haxe_doc>
		</matched>
		<new public="1" get="inline" set="null" line="26">
			<f a="r:opt">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new regular expression with pattern `r` and modifiers `opt`.

		This is equivalent to the shorthand syntax `~/r/opt`

		If `r` or `opt` are null, the result is unspecified.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The EReg class represents regular expressions.

	While basic usage and patterns consistently work across platforms, some more
	complex operations may yield different results. This is a necessary trade-
	off to retain a certain level of performance.

	EReg instances can be created by calling the constructor, or with the
	special syntax `~/pattern/modifier`

	EReg instances maintain an internal state, which is affected by several of
	its methods.

	A detailed explanation of the supported operations is available at
	<https://haxe.org/manual/std-regex.html>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="_EReg.HaxeRegExp" params="" file="/usr/local/lib/haxe/std/js/_std/EReg.hx" private="1" module="EReg" extern="1">
		<extends path="js.RegExp"/>
		<m public="1"><c path="js.RegExpMatch"/></m>
		<s public="1"><c path="String"/></s>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"RegExp"</e></m>
		</meta>
	</class>
	<abstract path="Enum" params="T" file="/usr/local/lib/haxe/std/Enum.hx">
		<this><x path="Enum"><c path="Enum.T"/></x></this>
		<haxe_doc>An abstract type that represents an Enum type.

	The corresponding enum instance type is `EnumValue`.

	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-enum-instance.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="EnumValue" params="" file="/usr/local/lib/haxe/std/EnumValue.hx">
		<this><x path="EnumValue"/></this>
		<haxe_doc>An abstract type that represents any enum value.
	See `Type` for the Haxe Reflection API.

	@see https://haxe.org/manual/types-enum-instance.html</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<typedef path="List" params="T" file="/usr/local/lib/haxe/std/List.hx"><c path="haxe.ds.List"><c path="List.T"/></c></typedef>
	<typedef path="Map" params="K:V" file="/usr/local/lib/haxe/std/Map.hx"><x path="haxe.ds.Map">
	<c path="Map.K"/>
	<c path="Map.V"/>
</x></typedef>
	<typedef path="IMap" params="K:V" file="/usr/local/lib/haxe/std/Map.hx" module="Map">
		<c path="haxe.IMap">
			<c path="IMap.K"/>
			<c path="IMap.V"/>
		</c>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":deprecated"/>
		</meta>
	</typedef>
	<class path="Math" params="" file="/usr/local/lib/haxe/std/js/_std/Math.hx" extern="1">
		<PI public="1" set="null" static="1"><x path="Float"/></PI>
		<NEGATIVE_INFINITY public="1" get="accessor" set="null" static="1"><x path="Float"/></NEGATIVE_INFINITY>
		<get_NEGATIVE_INFINITY get="inline" set="null" line="32" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":has_untyped"/></meta>
		</get_NEGATIVE_INFINITY>
		<POSITIVE_INFINITY public="1" get="accessor" set="null" static="1"><x path="Float"/></POSITIVE_INFINITY>
		<get_POSITIVE_INFINITY get="inline" set="null" line="37" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":has_untyped"/></meta>
		</get_POSITIVE_INFINITY>
		<NaN public="1" get="accessor" set="null" static="1"><x path="Float"/></NaN>
		<get_NaN get="inline" set="null" line="42" static="1">
			<f a=""><x path="Float"/></f>
			<meta><m n=":has_untyped"/></meta>
		</get_NaN>
		<abs public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></abs>
		<acos public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></acos>
		<asin public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></asin>
		<atan public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></atan>
		<atan2 public="1" set="method" static="1"><f a="y:x">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></atan2>
		<ceil public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Int"/>
</f></ceil>
		<cos public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></cos>
		<exp public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></exp>
		<floor public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Int"/>
</f></floor>
		<log public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></log>
		<max public="1" set="method" static="1"><f a="a:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></max>
		<min public="1" set="method" static="1"><f a="a:b">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></min>
		<pow public="1" set="method" static="1"><f a="v:exp">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
</f></pow>
		<random public="1" set="method" static="1"><f a=""><x path="Float"/></f></random>
		<round public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Int"/>
</f></round>
		<sin public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></sin>
		<sqrt public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></sqrt>
		<tan public="1" set="method" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></tan>
		<ffloor public="1" get="inline" set="null" line="65" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></ffloor>
		<fceil public="1" get="inline" set="null" line="69" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></fceil>
		<fround public="1" get="inline" set="null" line="73" static="1"><f a="v">
	<x path="Float"/>
	<x path="Float"/>
</f></fround>
		<isFinite public="1" get="inline" set="null" line="77" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</isFinite>
		<isNaN public="1" get="inline" set="null" line="81" static="1">
			<f a="f">
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</isNaN>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":keepInit"/>
		</meta>
	</class>
	<class path="Reflect" params="" file="/usr/local/lib/haxe/std/js/_std/Reflect.hx">
		<field public="1" set="method" line="30" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Returns the value of the field named `field` on object `o`.

		If `o` is not an object or has no field named `field`, the result is
		null.

		If the field is defined as a property, its accessors are ignored. Refer
		to `Reflect.getProperty` for a function supporting property accessors.

		If `field` is null, the result is unspecified.

		(As3) If used on a property field, the getter will be invoked. It is
		not possible to obtain the value directly.</haxe_doc>
		</field>
		<fields public="1" set="method" line="52" static="1">
			<f a="o">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the fields of structure `o`.

		This method is only guaranteed to work on anonymous structures. Refer to
		`Type.getInstanceFields` for a function supporting class instances.

		If `o` is null, the result is unspecified.</haxe_doc>
		</fields>
		<isFunction public="1" set="method" line="64" static="1">
			<f a="f">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":access"><e>js.Boot</e></m></meta>
			<haxe_doc>Returns true if `f` is a function, false otherwise.

		If `f` is null, the result is false.</haxe_doc>
		</isFunction>
		<compareMethods public="1" set="method" line="72" static="1">
			<f a="f1:f2">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Compares the functions `f1` and `f2`.
		
		If `f1` or `f2` are null, the result is false.
		If `f1` or `f2` are not functions, the result is unspecified.

		Otherwise the result is true if `f1` and the `f2` are physically equal,
		false otherwise.

		If `f1` or `f2` are member method closures, the result is true if they
		are closures of the same method on the same object value, false otherwise.</haxe_doc>
		</compareMethods>
		<deleteField public="1" set="method" line="92" static="1">
			<f a="o:field">
				<d/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the field named `field` from structure `o`.

		This method is only guaranteed to work on anonymous structures.

		If `o` or `field` are null, the result is unspecified.</haxe_doc>
		</deleteField>
		<haxe_doc>The Reflect API is a way to manipulate values dynamically through an
	abstract interface in an untyped manner. Use with care.

	@see https://haxe.org/manual/std-reflection.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="String" params="" file="/usr/local/lib/haxe/std/js/_std/String.hx" extern="1">
		<fromCharCode public="1" set="method" static="1">
			<f a="code">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String corresponding to the character code `code`.

		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
		</fromCharCode>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of characters in `this` String.</haxe_doc>
		</length>
		<toUpperCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are upper case.

		Affects the characters `a-z`. Other characters remain unchanged.</haxe_doc>
		</toUpperCase>
		<toLowerCase public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String where all characters of `this` String are lower case.

		Affects the characters `A-Z`. Other characters remain unchanged.</haxe_doc>
		</toLowerCase>
		<charAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, the empty String `""`
		is returned.</haxe_doc>
		</charAt>
		<indexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the leftmost occurrence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method">
			<f a="str:?startIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the rightmost occurrence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method">
			<f a="delimiter">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Splits `this` String at each occurrence of `delimiter`.

		If `this` String is the empty String `""`, the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.

		If `delimiter` is the empty String `""`, `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.

		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.

		If `delimiter` is null, the result is unspecified.

		Otherwise, `this` String is split into parts at each occurrence of
		`delimiter`. If `this` String starts (or ends) with `delimiter`, the
		result `Array` contains a leading (or trailing) empty String `""` element.
		Two subsequent delimiters also result in an empty String `""` element.</haxe_doc>
		</split>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<substring public="1" set="method">
			<f a="startIndex:?endIndex">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the part of `this` String from `startIndex` to but not including `endIndex`.

		If `startIndex` or `endIndex` are negative, 0 is used instead.

		If `startIndex` exceeds `endIndex`, they are swapped.

		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.

		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String `""` is returned.</haxe_doc>
		</substring>
		<charCodeAt public="1" get="inline" set="null" line="35">
			<f a="index">
				<x path="Int"/>
				<x path="Null"><x path="Int"/></x>
			</f>
			<haxe_doc>Returns the character code at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, `null` is returned.

		To obtain the character code of a single character, `"x".code` can be
		used instead to inline the character code at compile time. Note that
		this only works on String literals of length 1.</haxe_doc>
		</charCodeAt>
		<substr public="1" get="inline" set="null" line="39">
			<f a="pos:?len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.

		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.

		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.

		If `len` is negative, the result is unspecified.</haxe_doc>
		</substr>
		<new public="1" set="method">
			<f a="string">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</new>
		<haxe_doc>The basic String class.

	A Haxe String is immutable, it is not possible to modify individual
	characters. No method of this class changes the state of `this` String.

	Strings can be constructed using the String literal syntax `"string value"`.

	String can be concatenated by using the `+` operator. If an operand is not a
	String, it is passed through `Std.string()` first.
	
	@see https://haxe.org/manual/std-String.html</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="Std" params="" file="/usr/local/lib/haxe/std/js/_std/Std.hx">
		<string public="1" set="method" line="36" static="1">
			<f a="s">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Converts any value to a String.

		If `s` is of `String`, `Int`, `Float` or `Bool`, its value is returned.

		If `s` is an instance of a class and that class or one of its parent classes has
		a `toString` method, that method is called. If no such method is present, the result
		is unspecified.

		If `s` is an enum constructor without argument, the constructor's name is returned. If
		arguments exists, the constructor's name followed by the String representations of
		the arguments is returned.

		If `s` is a structure, the field names along with their values are returned. The field order
		and the operator separating field names and values are unspecified.

		If s is null, "null" is returned.</haxe_doc>
		</string>
		<parseInt public="1" set="method" line="45" static="1">
			<f a="x">
				<c path="String"/>
				<x path="Null"><x path="Int"/></x>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Converts a `String` to an `Int`.

		Leading whitespaces are ignored.

		If `x` starts with 0x or 0X, hexadecimal notation is recognized where the following digits may
		contain 0-9 and A-F.

		Otherwise `x` is read as decimal number with 0-9 being allowed characters. `x` may also start with
		a - to denote a negative value.

		In decimal mode, parsing continues until an invalid character is detected, in which case the
		result up to that point is returned. For hexadecimal notation, the effect of invalid characters
		is unspecified.

		Leading 0s that are not part of the 0x/0X hexadecimal notation are ignored, which means octal
		notation is not supported.

		If `x` is null, the result is unspecified.
		If `x` cannot be parsed as integer, the result is `null`.</haxe_doc>
		</parseInt>
		<haxe_doc>The Std class provides standard methods for manipulating basic types.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":keepInit"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="Void" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Void"/></this>
		<haxe_doc>The standard `Void` type. Only `null` values can be of the type `Void`.

	@see https://haxe.org/manual/types-void.html</haxe_doc>
		<meta><m n=":coreType"/></meta>
	</abstract>
	<abstract path="Float" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Float"/></this>
		<haxe_doc><![CDATA[The standard `Float` type, this is a double-precision IEEE 64bit float.

	On static targets, `null` cannot be assigned to Float. If this is necessary,
	`Null<Float>` can be used instead.

	`Std.int` converts a `Float` to an `Int`, rounded towards 0.
	`Std.parseFloat` converts a `String` to a `Float`.

	@see https://haxe.org/manual/types-basic-types.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Int" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Int"/></this>
		<to><icast><x path="Float"/></icast></to>
		<haxe_doc><![CDATA[The standard `Int` type. Its precision depends on the platform.

	On static targets, `null` cannot be assigned to `Int`. If this is necessary,
	`Null<Int>` can be used instead.

	`Std.int` converts a `Float` to an `Int`, rounded towards 0.
	`Std.parseInt` converts a `String` to an `Int`.

	@see https://haxe.org/manual/types-basic-types.html
	@see https://haxe.org/manual/std-math-integer-math.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Null" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<from><icast><c path="Null.T"/></icast></from>
		<this><x path="Null"><c path="Null.T"/></x></this>
		<to><icast><c path="Null.T"/></icast></to>
		<haxe_doc>`Null` can be useful in two cases. In order to document some methods
	that accept or can return a `null` value, or for the Flash compiler and AS3
	generator to distinguish between base values that can be `null` and others that
	can't.

	@see https://haxe.org/manual/types-nullability.html</haxe_doc>
		<meta>
			<m n=":forward"/>
			<m n=":coreType"/>
		</meta>
	</abstract>
	<abstract path="Bool" params="" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Bool"/></this>
		<haxe_doc><![CDATA[The standard Boolean type, which can either be `true` or `false`.

	On static targets, `null` cannot be assigned to `Bool`. If this is necessary,
	`Null<Bool>` can be used instead.

	@see https://haxe.org/manual/types-bool.html
	@see https://haxe.org/manual/types-nullability.html]]></haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":notNull"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<abstract path="Dynamic" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<this><x path="Dynamic"><c path="Dynamic.T"/></x></this>
		<haxe_doc>`Dynamic` is a special type which is compatible with all other types.

	Use of `Dynamic` should be minimized as it prevents several compiler
	checks and optimizations. See `Any` type for a safer alternative for
	representing values of any type.

	@see https://haxe.org/manual/types-dynamic.html</haxe_doc>
		<meta>
			<m n=":valueUsed"/>
			<m n=":coreType"/>
			<m n=":runtimeValue"/>
		</meta>
	</abstract>
	<typedef path="Iterator" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a>
			<next set="method">
				<f a=""><c path="Iterator.T"/></f>
				<haxe_doc>Returns the current item of the `Iterator` and advances to the next one.

		This method is not required to check `hasNext()` first. A call to this
		method while `hasNext()` is `false` yields unspecified behavior.

		On the other hand, iterators should not require a call to `hasNext()`
		before the first call to `next()` if an element is available.</haxe_doc>
			</next>
			<hasNext set="method">
				<f a=""><x path="Bool"/></f>
				<haxe_doc>Returns `false` if the iteration is complete, `true` otherwise.

		Usually iteration is considered to be complete if all elements of the
		underlying data structure were handled through calls to `next()`. However,
		in custom iterators any logic may be used to determine the completion
		state.</haxe_doc>
			</hasNext>
		</a>
		<haxe_doc>An `Iterator` is a structure that permits iteration over elements of type `T`.

	Any class with matching `hasNext()` and `next()` fields is considered an `Iterator`
	and can then be used e.g. in `for`-loops. This makes it easy to implement
	custom iterators.

	@see https://haxe.org/manual/lf-iterators.html</haxe_doc>
	</typedef>
	<typedef path="Iterable" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes">
		<a><iterator set="method"><f a=""><t path="Iterator"><c path="Iterable.T"/></t></f></iterator></a>
		<haxe_doc>An `Iterable` is a data structure which has an `iterator()` method.
	See `Lambda` for generic functions on iterable structures.

	@see https://haxe.org/manual/lf-iterators.html</haxe_doc>
	</typedef>
	<class path="ArrayAccess" params="T" file="/usr/local/lib/haxe/std/StdTypes.hx" module="StdTypes" extern="1" interface="1"><haxe_doc>`ArrayAccess` is used to indicate a class that can be accessed using brackets.
	The type parameter represents the type of the elements stored.

	This interface should be used for externs only. Haxe does not support custom
	array access on classes. However, array access can be implemented for
	abstract types.

	@see https://haxe.org/manual/types-abstract-array-access.html</haxe_doc></class>
	<class path="StringBuf" params="" file="/usr/local/lib/haxe/std/StringBuf.hx">
		<b><c path="String"/></b>
		<length public="1" get="null" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` StringBuf in characters.</haxe_doc>
		</length>
		<new public="1" get="inline" set="null" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringBuf instance.

		This may involve initialization of the internal buffer.</haxe_doc>
		</new>
		<haxe_doc>A String buffer is an efficient way to build a big string by appending small
	elements together.

	Its cross-platform implementation uses String concatenation internally, but
	StringBuf may be optimized for different targets.

	Unlike String, an instance of StringBuf is not immutable in the sense that
	it can be passed as argument to functions which modify it by appending more
	values. However, the internal buffer cannot be modified.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="StringTools" params="" file="/usr/local/lib/haxe/std/StringTools.hx">
		<startsWith public="1" set="method" line="183" static="1">
			<f a="s:start">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` starts with the string `start`.

		If `start` is `null`, the result is unspecified.

		If `start` is the empty String `""`, the result is true.</haxe_doc>
		</startsWith>
		<endsWith public="1" set="method" line="213" static="1">
			<f a="s:end">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Tells if the string `s` ends with the string `end`.

		If `end` is `null`, the result is unspecified.

		If `end` is the empty String `""`, the result is true.</haxe_doc>
		</endsWith>
		<replace public="1" set="method" line="378" static="1">
			<f a="s:sub:by">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Replace all occurrences of the String `sub` in the String `s` by the
		String `by`.

		If `sub` is the empty String `""`, `by` is inserted after each character
		of `s`. If `by` is also the empty String `""`, `s` remains unchanged.

		This is a convenience function for `s.split(sub).join(by)`.

		If `sub` or `by` are null, the result is unspecified.</haxe_doc>
		</replace>
		<hex public="1" set="method" line="400" static="1">
			<f a="n:?digits">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encodes `n` into a hexadecimal representation.

		If `digits` is specified, the resulting String is padded with "0" until
		its `length` equals `digits`.</haxe_doc>
		</hex>
		<haxe_doc>This class provides advanced methods on Strings. It is ideally used with
	`using StringTools` and then acts as an [extension](https://haxe.org/manual/lf-static-extension.html)
	to the `String` class.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<enum path="ValueType" params="" file="/usr/local/lib/haxe/std/js/_std/Type.hx" module="Type">
		<TNull/>
		<TInt/>
		<TFloat/>
		<TBool/>
		<TObject/>
		<TFunction/>
		<TClass a="c"><x path="Class"><d/></x></TClass>
		<TEnum a="e"><x path="Enum"><d/></x></TEnum>
		<TUnknown/>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="Type" params="" file="/usr/local/lib/haxe/std/js/_std/Type.hx">
		<getClassName public="1" set="method" line="56" static="1">
			<f a="c">
				<x path="Class"><d/></x>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the name of class `c`, including its path.

		If `c` is inside a package, the package structure is returned dot-
		separated, with another dot separating the class name:
		`pack1.pack2.(...).packN.ClassName`
		If `c` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `c` has no package, the class name is returned.

		If `c` is null, the result is unspecified.

		The class name does not include any type parameters.</haxe_doc>
		</getClassName>
		<getEnumName public="1" set="method" line="63" static="1">
			<f a="e">
				<x path="Enum"><d/></x>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
		`pack1.pack2.(...).packN.EnumName`
		If `e` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is null, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getEnumName>
		<createInstance public="1" params="T" set="method" line="137" static="1">
			<f a="cl:args">
				<x path="Class"><c path="createInstance.T"/></x>
				<c path="Array"><d/></c>
				<c path="createInstance.T"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates an instance of class `cl`, using `args` as arguments to the
		class constructor.

		This function guarantees that the class constructor is called.

		Default values of constructors arguments are not guaranteed to be
		taken into account.

		If `cl` or `args` are null, or if the number of elements in `args` does
		not match the expected number of constructor arguments, or if any
		argument has an invalid type,  or if `cl` has no own constructor, the
		result is unspecified.

		In particular, default values of constructor arguments are not
		guaranteed to be taken into account.</haxe_doc>
		</createInstance>
		<createEnum public="1" params="T" set="method" line="146" static="1">
			<f a="e:constr:?params">
				<x path="Enum"><c path="createEnum.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createEnum.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is null, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createEnum>
		<typeof public="1" set="method" line="188" static="1">
			<f a="v">
				<d/>
				<e path="ValueType"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":access"><e>js.Boot</e></m>
			</meta>
			<haxe_doc>Returns the runtime type of value `v`.

		The result corresponds to the type `v` has at runtime, which may vary
		per platform. Assumptions regarding this should be minimized to avoid
		surprises.</haxe_doc>
		</typeof>
		<enumParameters public="1" set="method" line="267" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.

		If `e` has no arguments, the result is [].

		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.

		If `e` is null, the result is unspecified.</haxe_doc>
		</enumParameters>
		<haxe_doc>The Haxe Reflection API allows retrieval of type information at runtime.

	This class complements the more lightweight Reflect class, with a focus on
	class and enum instances.

	@see https://haxe.org/manual/types.html
	@see https://haxe.org/manual/std-reflection.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<abstract path="UInt" params="" file="/usr/local/lib/haxe/std/UInt.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>The unsigned `Int` type is only defined for Flash and C#.
	Simulate it for other platforms.

	@see https://haxe.org/manual/types-basic-types.html</haxe_doc>
		<impl><class path="_UInt.UInt_Impl_" params="" file="/usr/local/lib/haxe/std/UInt.hx" private="1" module="UInt">
	<gt set="method" line="120" static="1">
		<f a="a:b">
			<x path="UInt"/>
			<x path="UInt"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<toFloat set="method" line="282" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toFloat>
	<meta>
		<m n=":keep"/>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="_UInt.UInt_Impl_" params="" file="/usr/local/lib/haxe/std/UInt.hx" private="1" module="UInt">
		<gt set="method" line="120" static="1">
			<f a="a:b">
				<x path="UInt"/>
				<x path="UInt"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<toFloat set="method" line="282" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toFloat>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<abstract path="haxe.Function" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with any function type.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<meta><m n=":callable"/></meta>
		<impl><class path="haxe._Constraints.Function_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.FlatEnum" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc>This type unifies with an enum instance if all constructors of the enum
	require no arguments.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.</haxe_doc>
		<impl><class path="haxe._Constraints.FlatEnum_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.Constructible" params="T" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints">
		<this><d/></this>
		<haxe_doc><![CDATA[This type unifies with any instance of classes that have a constructor
	which

	  * is public and
	  * unifies with the type used for type parameter `T`.

	If a type parameter A is assigned to a type parameter B which is constrained
	to `Constructible<T>`, A must be explicitly constrained to
	`Constructible<T>` as well.

	It is intended to be used as a type parameter constraint. If used as a real
	type, the underlying type will be `Dynamic`.]]></haxe_doc>
		<impl><class path="haxe._Constraints.Constructible_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" private="1" module="haxe.Constraints"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.IMap" params="K:V" file="/usr/local/lib/haxe/std/haxe/Constraints.hx" module="haxe.Constraints" interface="1">
		<set public="1" set="method"><f a="k:v">
	<c path="haxe.IMap.K"/>
	<c path="haxe.IMap.V"/>
	<x path="Void"/>
</f></set>
		<exists public="1" set="method"><f a="k">
	<c path="haxe.IMap.K"/>
	<x path="Bool"/>
</f></exists>
		<remove public="1" set="method"><f a="k">
	<c path="haxe.IMap.K"/>
	<x path="Bool"/>
</f></remove>
		<meta><m n=":keep"/></meta>
	</class>
	<abstract path="haxe.DynamicAccess" params="T" file="/usr/local/lib/haxe/std/haxe/DynamicAccess.hx">
		<from><icast><d><c path="haxe.DynamicAccess.T"/></d></icast></from>
		<this><d><c path="haxe.DynamicAccess.T"/></d></this>
		<to><icast><d><c path="haxe.DynamicAccess.T"/></d></icast></to>
		<haxe_doc>DynamicAccess is an abstract type for working with anonymous structures
	that are intended to hold collections of objects by the string key.

	For example, these types of structures are often created from JSON.

	Basically, it wraps `Reflect` calls in a `Map`-like interface.</haxe_doc>
		<impl><class path="haxe._DynamicAccess.DynamicAccess_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/DynamicAccess.hx" private="1" module="haxe.DynamicAccess"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.EnumTools" params="" file="/usr/local/lib/haxe/std/haxe/EnumTools.hx" extern="1">
		<getName public="1" params="T" get="inline" set="null" line="50" static="1">
			<f a="e">
				<x path="Enum"><c path="getName.T"/></x>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the name of enum `e`, including its path.

		If `e` is inside a package, the package structure is returned dot-
		separated, with another dot separating the enum name:
			pack1.pack2.(...).packN.EnumName
		If `e` is a sub-type of a Haxe module, that module is not part of the
		package structure.

		If `e` has no package, the enum name is returned.

		If `e` is `null`, the result is unspecified.

		The enum name does not include any type parameters.</haxe_doc>
		</getName>
		<createByName public="1" params="T" get="inline" set="null" line="63" static="1">
			<f a="e:constr:?params">
				<x path="Enum"><c path="createByName.T"/></x>
				<c path="String"/>
				<c path="Array"><d/></c>
				<c path="createByName.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor `constr` with
		arguments `params`.

		If `e` or `constr` is `null`, or if enum `e` has no constructor named
		`constr`, or if the number of elements in `params` does not match the
		expected number of constructor arguments, or if any argument has an
		invalid type, the result is unspecified.</haxe_doc>
		</createByName>
		<createByIndex public="1" params="T" get="inline" set="null" line="79" static="1">
			<f a="e:index:?params">
				<x path="Enum"><c path="createByIndex.T"/></x>
				<x path="Int"/>
				<c path="Array"><d/></c>
				<c path="createByIndex.T"/>
			</f>
			<haxe_doc>Creates an instance of enum `e` by calling its constructor number
		`index` with arguments `params`.

		The constructor indices are preserved from Haxe syntax, so the first
		declared is index 0, the next index 1 etc.

		If `e` or `index` is `null`, or if enum `e` has no constructor
		corresponding to index `index`, or if the number of elements in `params`
		does not match the expected number of constructor arguments, or if any
		argument has an invalid type, the result is unspecified.</haxe_doc>
		</createByIndex>
		<createAll public="1" params="T" get="inline" set="null" line="96" static="1">
			<f a="e">
				<x path="Enum"><c path="createAll.T"/></x>
				<c path="Array"><c path="createAll.T"/></c>
			</f>
			<haxe_doc>Returns a list of all constructors of enum `e` that require no
		arguments.

		This may return the empty Array `[]` if all constructors of `e` require
		arguments.

		Otherwise an instance of `e` constructed through each of its non-
		argument constructors is returned, in the order of the constructor
		declaration.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</createAll>
		<getConstructors public="1" params="T" get="inline" set="null" line="108" static="1">
			<f a="e">
				<x path="Enum"><c path="getConstructors.T"/></x>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns a list of the names of all constructors of enum `e`.

		The order of the constructor names in the returned Array is preserved
		from the original syntax.

		If `c` is `null`, the result is unspecified.</haxe_doc>
		</getConstructors>
		<haxe_doc>This class provides advanced methods on enums. It is ideally used with
	`using EnumTools` and then acts as an 
  [extension](https://haxe.org/manual/lf-static-extension.html) to the 
  `enum` types.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
	</class>
	<class path="haxe.EnumValueTools" params="" file="/usr/local/lib/haxe/std/haxe/EnumTools.hx" module="haxe.EnumTools" extern="1">
		<equals public="1" params="T" get="inline" set="null" line="132" static="1">
			<f a="a:b">
				<c path="equals.T"/>
				<c path="equals.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Recursively compares two enum instances `a` and `b` by value.

		Unlike `a == b`, this function performs a deep equality check on the
		arguments of the constructors (if there are any).

		If `a` or `b` are `null`, the result is unspecified.</haxe_doc>
		</equals>
		<getName public="1" get="inline" set="null" line="143" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the constructor name of enum instance `e`.

		The result String does not contain any constructor arguments.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getName>
		<getParameters public="1" get="inline" set="null" line="157" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<c path="Array"><d/></c>
			</f>
			<haxe_doc>Returns a list of the constructor arguments of enum instance `e`.

		If `e` has no arguments, the result is `[]`.

		Otherwise the result are the values that were used as arguments to `e`,
		in the order of their declaration.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getParameters>
		<getIndex public="1" get="inline" set="null" line="169" static="1">
			<f a="e">
				<x path="EnumValue"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index of enum instance `e`.

		This corresponds to the original syntactic position of `e`. The index of
		the first declared constructor is 0, the next one is 1 etc.

		If `e` is `null`, the result is unspecified.</haxe_doc>
		</getIndex>
		<match public="1" set="method" static="1">
			<f a="e:pattern">
				<x path="EnumValue"/>
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Matches enum instance `e` against pattern `pattern`, returning `true` if
		matching succeeded and `false` otherwise.

		Example usage:

		```haxe
		if (e.match(pattern)) {
			// codeIfTrue
		} else {
			// codeIfFalse
		}
		```

		This is equivalent to the following code:

		```haxe
		switch (e) {
			case pattern:
				// codeIfTrue
			case _:
				// codeIfFalse
		}
		```

		This method is implemented in the compiler. This definition exists only
		for documentation.</haxe_doc>
		</match>
		<haxe_doc>This class provides advanced methods on enum values. It is ideally used with
	`using EnumValueTools` and then acts as an 
  [extension](https://haxe.org/manual/lf-static-extension.html) to the 
  `EnumValue` types.

	If the first argument to any of the methods is null, the result is
	unspecified.</haxe_doc>
	</class>
	<abstract path="haxe.Int32" params="" file="/usr/local/lib/haxe/std/haxe/Int32.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="Int"/></icast>
			<icast field="toFloat"><x path="Float"/></icast>
		</to>
		<haxe_doc>Int32 provides a 32-bit integer with consistent overflow behavior across
 	all platforms.</haxe_doc>
		<impl><class path="haxe._Int32.Int32_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Int32.hx" private="1" module="haxe.Int32"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.Int64" params="" file="/usr/local/lib/haxe/std/haxe/Int64.hx">
		<from>
			<icast><t path="haxe._Int64.__Int64"/></icast>
			<icast field="ofInt"><x path="Int"/></icast>
		</from>
		<this><t path="haxe._Int64.__Int64"/></this>
		<to><icast><t path="haxe._Int64.__Int64"/></icast></to>
		<haxe_doc>A cross-platform signed 64-bit integer.
	Int64 instances can be created from two 32-bit words using `Int64.make()`.</haxe_doc>
		<impl><class path="haxe._Int64.Int64_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/Int64.hx" private="1" module="haxe.Int64">
	<high public="1" get="accessor" set="null" static="1">
		<x path="haxe.Int32"/>
		<meta><m n=":impl"/></meta>
	</high>
	<low public="1" get="accessor" set="null" static="1">
		<x path="haxe.Int32"/>
		<meta><m n=":impl"/></meta>
	</low>
	<meta>
		<m n=":keep"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<typedef path="haxe._Int64.__Int64" params="" file="/usr/local/lib/haxe/std/haxe/Int64.hx" private="1" module="haxe.Int64">
		<c path="haxe._Int64.___Int64"/>
		<haxe_doc>* This typedef will fool @:coreApi into thinking that we are using
  * the same underlying type, even though it might be different on
  * specific platforms.</haxe_doc>
	</typedef>
	<class path="haxe._Int64.___Int64" params="" file="/usr/local/lib/haxe/std/haxe/Int64.hx" private="1" module="haxe.Int64">
		<high public="1"><x path="haxe.Int32"/></high>
		<low public="1"><x path="haxe.Int32"/></low>
		<new public="1" get="inline" set="null" line="459"><f a="high:low">
	<x path="haxe.Int32"/>
	<x path="haxe.Int32"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Json" params="" file="/usr/local/lib/haxe/std/js/_std/haxe/Json.hx" extern="1">
		<parse public="1" set="method" static="1">
			<f a="text">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[Parses given JSON-encoded `text` and returns the resulting object.

		JSON objects are parsed into anonymous structures and JSON arrays
		are parsed into `Array<Dynamic>`.

		If given `text` is not valid JSON, an exception will be thrown.

		@see https://haxe.org/manual/std-Json-parsing.html]]></haxe_doc>
		</parse>
		<stringify public="1" set="method" static="1">
			<f a="value:?replacer:?space">
				<d/>
				<f a="key:value">
					<d/>
					<d/>
					<d/>
				</f>
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Encodes the given `value` and returns the resulting JSON string.

		If `replacer` is given and is not null, it is used to retrieve the
		actual object to be encoded. The `replacer` function takes two parameters,
		the key and the value being encoded. Initial key value is an empty string.
		
		If `space` is given and is not null, the result will be pretty-printed.
		Successive levels will be indented by this string.

		@see https://haxe.org/manual/std-Json-encoding.html</haxe_doc>
		</stringify>
		<haxe_doc>Cross-platform JSON API: it will automatically use the optimized native API if available.
	Use `-D haxeJSON` to force usage of the Haxe implementation even if a native API is found:
	This will provide extra encoding features such as enums (replaced by their index) and StringMaps.

	@see https://haxe.org/manual/std-Json.html</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
			<m n=":native"><e>"JSON"</e></m>
		</meta>
	</class>
	<class path="haxe.Log" params="" file="/usr/local/lib/haxe/std/haxe/Log.hx">
		<formatOutput public="1" set="method" line="33" static="1">
			<f a="v:infos">
				<d/>
				<t path="haxe.PosInfos"/>
				<c path="String"/>
			</f>
			<haxe_doc>Format the output of `trace` before printing it.</haxe_doc>
		</formatOutput>
		<trace public="1" set="dynamic" line="60" static="1">
			<f a="v:?infos">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Outputs `v` in a platform-dependent way.

		The second parameter `infos` is injected by the compiler and contains
		information about the position where the `trace()` call was made.

		This method can be rebound to a custom function:
		
			var oldTrace = haxe.Log.trace; // store old function
			haxe.Log.trace = function(v, ?infos) {
			  // handle trace
			}
			...
			haxe.Log.trace = oldTrace;

		If it is bound to null, subsequent calls to `trace()` will cause an
		exception.</haxe_doc>
		</trace>
		<haxe_doc>Log primarily provides the `trace()` method, which is invoked upon a call to
	`trace()` in Haxe code.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<typedef path="haxe.PosInfos" params="" file="/usr/local/lib/haxe/std/haxe/PosInfos.hx">
		<a>
			<methodName><c path="String"/></methodName>
			<lineNumber><x path="Int"/></lineNumber>
			<fileName><c path="String"/></fileName>
			<customParams>
				<x path="Null"><c path="Array"><d/></c></x>
				<meta><m n=":optional"/></meta>
			</customParams>
			<className><c path="String"/></className>
		</a>
		<haxe_doc>PosInfos is a magic type which can be used to generate position information
	into the output for debugging use.

	If a function has a final optional argument of this type, i.e.
	(..., ?pos:haxe.PosInfos), each call to that function which does not assign
	a value to that argument has its position added as call argument.

	This can be used to track positions of calls in e.g. a unit testing
	framework.</haxe_doc>
	</typedef>
	<class path="haxe.Serializer" params="" file="/usr/local/lib/haxe/std/haxe/Serializer.hx">
		<USE_CACHE public="1" expr="false" line="56" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
			<haxe_doc>If the values you are serializing can contain circular references or
		objects repetitions, you should set `USE_CACHE` to true to prevent
		infinite loops.

		This may also reduce the size of serialization Strings at the expense of
		performance.

		This value can be changed for individual instances of Serializer by
		setting their useCache field.</haxe_doc>
		</USE_CACHE>
		<USE_ENUM_INDEX public="1" expr="false" line="68" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>false</e></m></meta>
			<haxe_doc>Use constructor indexes for enums instead of names.

		This may reduce the size of serialization Strings, but makes them less
		suited for long-term storage: If constructors are removed or added from
		the enum, the indices may no longer match.

		This value can be changed for individual instances of Serializer by
		setting their useEnumIndex field.</haxe_doc>
		</USE_ENUM_INDEX>
		<BASE64 expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:&quot;" line="70" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:"</e></m></meta>
		</BASE64>
		<BASE64_CODES expr="null" line="71" static="1">
			<x path="haxe.ds.Vector"><x path="Null"><x path="Int"/></x></x>
			<meta><m n=":value"><e>null</e></m></meta>
		</BASE64_CODES>
		<run public="1" set="method" line="565" static="1">
			<f a="v">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Serializes `v` and returns the String representation.

		This is a convenience function for creating a new instance of
		Serializer, serialize `v` into it and obtain the result through a call
		to toString().</haxe_doc>
		</run>
		<buf><c path="StringBuf"/></buf>
		<cache><c path="Array"><d/></c></cache>
		<shash><c path="haxe.ds.StringMap"><x path="Int"/></c></shash>
		<scount><x path="Int"/></scount>
		<useCache public="1">
			<x path="Bool"/>
			<haxe_doc>The individual cache setting for `this` Serializer instance.

		See USE_CACHE for a complete description.</haxe_doc>
		</useCache>
		<useEnumIndex public="1">
			<x path="Bool"/>
			<haxe_doc>The individual enum index setting for `this` Serializer instance.

		See USE_ENUM_INDEX for a complete description.</haxe_doc>
		</useEnumIndex>
		<toString public="1" set="method" line="117">
			<f a=""><c path="String"/></f>
			<haxe_doc>Return the String representation of `this` Serializer.

		The exact format specification can be found here:
		https://haxe.org/manual/serialization/format</haxe_doc>
		</toString>
		<serializeString set="method" line="154"><f a="s">
	<c path="String"/>
	<x path="Void"/>
</f></serializeString>
		<serializeRef set="method" line="173"><f a="v">
	<d/>
	<x path="Bool"/>
</f></serializeRef>
		<serializeFields set="method" line="210"><f a="v">
	<a/>
	<x path="Void"/>
</f></serializeFields>
		<serialize public="1" set="method" line="228">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Serializes `v`.

		All haxe-defined values and objects with the exception of functions can
		be serialized. Serialization of external/native objects is not
		guaranteed to work.

		The values of `this.useCache` and `this.useEnumIndex` may affect
		serialization output.</haxe_doc>
		</serialize>
		<new public="1" set="method" line="102">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Serializer instance.

		Subsequent calls to `this.serialize` will append values to the
		internal buffer of this String. Once complete, the contents can be
		retrieved through a call to `this.toString`.

		Each Serializer instance maintains its own cache if this.useCache` is
		true.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The Serializer class can be used to encode values and objects into a `String`,
	from which the `Unserializer` class can recreate the original representation.

	This class can be used in two ways:

	- create a `new Serializer()` instance, call its `serialize()` method with
		any argument and finally retrieve the String representation from
		`toString()`
	- call `Serializer.run()` to obtain the serialized representation of a
		single argument

	Serialization is guaranteed to work for all haxe-defined classes, but may
	or may not work for instances of external/native classes.

	The specification of the serialization format can be found here:
	<https://haxe.org/manual/std-serialization-format.html>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Timer" params="" file="/Users/joshua/Development/Haxe/lime/src/haxe/Timer.hx">
		<delay public="1" set="method" line="141" static="1">
			<f a="f:time_ms">
				<f a=""><x path="Void"/></f>
				<x path="Int"/>
				<c path="haxe.Timer"/>
			</f>
			<haxe_doc>Invokes `f` after `time_ms` milliseconds.

		This is a convenience function for creating a new Timer instance with
		`time_ms` as argument, binding its run() method to `f` and then stopping
		`this` Timer upon the first invocation.

		If `f` is null, the result is unspecified.</haxe_doc>
		</delay>
		<measure public="1" params="T" set="method" line="161" static="1">
			<f a="f:?pos">
				<f a=""><c path="measure.T"/></f>
				<t path="haxe.PosInfos"/>
				<c path="measure.T"/>
			</f>
			<haxe_doc>Measures the time it takes to execute `f`, in seconds with fractions.

		This is a convenience function for calculating the difference between
		Timer.stamp() before and after the invocation of `f`.

		The difference is passed as argument to Log.trace(), with "s" appended
		to denote the unit. The optional `pos` argument is passed through.

		If `f` is null, the result is unspecified.</haxe_doc>
		</measure>
		<stamp public="1" get="inline" set="null" line="174" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a timestamp, in seconds with fractions.

		The value itself might differ depending on platforms, only differences
		between two values make sense.</haxe_doc>
		</stamp>
		<id><x path="Null"><x path="Int"/></x></id>
		<stop public="1" set="method" line="93">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Stops `this` Timer.

		After calling this method, no additional invocations of `this.run`
		will occur.

		It is not possible to restart `this` Timer once stopped.</haxe_doc>
		</stop>
		<run public="1" set="dynamic" line="128">
			<f a=""><x path="Void"/></f>
			<haxe_doc>This method is invoked repeatedly on `this` Timer.

		It can be overridden in a subclass, or rebound directly to a custom
		function:
			var timer = new haxe.Timer(1000); // 1000ms delay
			timer.run = function() { ... }

		Once bound, it can still be rebound to different functions until `this`
		Timer is stopped through a call to `this.stop`.</haxe_doc>
		</run>
		<new public="1" set="method" line="65">
			<f a="time_ms">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>Creates a new timer that will run every `time_ms` milliseconds.

		After creating the Timer instance, it calls `this.run` repeatedly,
		with delays of `time_ms` milliseconds, until `this.stop` is called.

		The first invocation occurs after `time_ms` milliseconds, not
		immediately.

		The accuracy of this may be platform-dependent.</haxe_doc>
		</new>
		<haxe_doc>The Timer class allows you to create asynchronous timers on platforms that
	support events.

	The intended usage is to create an instance of the Timer class with a given
	interval, set its run() method to a custom function to be invoked and
	eventually call stop() to stop the Timer.

	Note that a running Timer may or may not prevent the program to exit
	automatically when main() returns.

	It is also possible to extend this class and override its run() method in
	the child class.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="haxe._Unserializer.DefaultResolver" params="" file="/usr/local/lib/haxe/std/haxe/Unserializer.hx" private="1" module="haxe.Unserializer">
		<resolveClass final="1" public="1" get="inline" set="null" line="479">
			<f a="name">
				<c path="String"/>
				<x path="Class"><d/></x>
			</f>
			<meta><m n=":final"/></meta>
		</resolveClass>
		<resolveEnum final="1" public="1" get="inline" set="null" line="480">
			<f a="name">
				<c path="String"/>
				<x path="Enum"><d/></x>
			</f>
			<meta><m n=":final"/></meta>
		</resolveEnum>
		<new public="1" set="method" line="478"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.Unserializer" params="" file="/usr/local/lib/haxe/std/haxe/Unserializer.hx">
		<DEFAULT_RESOLVER public="1" expr="new DefaultResolver()" line="65" static="1">
			<t path="haxe.TypeResolver"/>
			<meta><m n=":value"><e>new DefaultResolver()</e></m></meta>
			<haxe_doc><![CDATA[This value can be set to use custom type resolvers.

		A type resolver finds a `Class` or `Enum` instance from a given `String`.
		By default, the Haxe `Type` Api is used.

		A type resolver must provide two methods:

		1. `resolveClass(name:String):Class<Dynamic>` is called to determine a
				`Class` from a class name
		2. `resolveEnum(name:String):Enum<Dynamic>` is called to determine an
				`Enum` from an enum name

		This value is applied when a new `Unserializer` instance is created.
		Changing it afterwards has no effect on previously created instances.]]></haxe_doc>
		</DEFAULT_RESOLVER>
		<BASE64 expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:&quot;" line="67" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:"</e></m></meta>
		</BASE64>
		<CODES expr="null" line="70" static="1">
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":value"><e>null</e></m></meta>
		</CODES>
		<initCodes set="method" line="72" static="1"><f a=""><c path="Array"><x path="Int"/></c></f></initCodes>
		<run public="1" set="method" line="467" static="1">
			<f a="v">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Unserializes `v` and returns the according value.

		This is a convenience function for creating a new instance of
		Unserializer with `v` as buffer and calling its unserialize() method
		once.</haxe_doc>
		</run>
		<buf><c path="String"/></buf>
		<pos><x path="Int"/></pos>
		<length><x path="Int"/></length>
		<cache><c path="Array"><d/></c></cache>
		<scache><c path="Array"><c path="String"/></c></scache>
		<resolver><t path="haxe.TypeResolver"/></resolver>
		<readDigits set="method" line="149"><f a=""><x path="Int"/></f></readDigits>
		<readFloat set="method" line="174"><f a=""><x path="Float"/></f></readFloat>
		<unserializeObject set="method" line="188"><f a="o">
	<a/>
	<x path="Void"/>
</f></unserializeObject>
		<unserializeEnum params="T" set="method" line="203"><f a="edecl:tag">
	<x path="Enum"><c path="unserializeEnum.T"/></x>
	<c path="String"/>
	<c path="unserializeEnum.T"/>
</f></unserializeEnum>
		<unserialize public="1" set="method" line="235">
			<f a=""><d/></f>
			<haxe_doc>Unserializes the next part of `this` Unserializer instance and returns
		the according value.

		This function may call `this.resolver.resolveClass` to determine a
		Class from a String, and `this.resolver.resolveEnum` to determine an
		Enum from a String.

		If `this` Unserializer instance contains no more or invalid data, an
		exception is thrown.

		This operation may fail on structurally valid data if a type cannot be
		resolved or if a field cannot be set. This can happen when unserializing
		Strings that were serialized on a different Haxe target, in which the
		serialization side has to make sure not to include platform-specific
		data.

		Classes are created from `Type.createEmptyInstance`, which means their
		constructors are not called.</haxe_doc>
		</unserialize>
		<new public="1" set="method" line="104">
			<f a="buf">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Unserializer instance, with its internal buffer
		initialized to `buf`.

		This does not parse `buf` immediately. It is parsed only when calls to
		`this.unserialize` are made.

		Each Unserializer instance maintains its own cache.</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Unserializer` class is the complement to the `Serializer` class. It parses
	a serialization `String` and creates objects from the contained data.

	This class can be used in two ways:

	- create a `new Unserializer()` instance with a given serialization
		String, then call its `unserialize()` method until all values are
		extracted
	- call `Unserializer.run()`  to unserialize a single value from a given
		String

	The specification of the serialization format can be found here:
	<https://haxe.org/manual/serialization/format>]]></haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.io.Bytes" params="" file="/Users/joshua/Development/Haxe/lime/src/haxe/io/Bytes.hx">
		<alloc public="1" get="inline" set="null" line="754" static="1"><f a="length">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></alloc>
		<ofString public="1" set="method" line="758" static="1"><f a="s">
	<c path="String"/>
	<c path="haxe.io.Bytes"/>
</f></ofString>
		<ofData public="1" set="method" line="786" static="1">
			<f a="b">
				<t path="haxe.io.BytesData"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</ofData>
		<fastGet public="1" get="inline" set="null" line="792" static="1">
			<f a="b:pos">
				<t path="haxe.io.BytesData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</fastGet>
		<length public="1" set="null"><x path="Int"/></length>
		<b><c path="js.html.Uint8Array"/></b>
		<data><c path="js.html.DataView"/></data>
		<get public="1" get="inline" set="null" line="607"><f a="pos">
	<x path="Int"/>
	<x path="Int"/>
</f></get>
		<set public="1" get="inline" set="null" line="611"><f a="pos:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set>
		<blit public="1" set="method" line="615"><f a="pos:src:srcpos:len">
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blit>
		<fill public="1" set="method" line="623"><f a="pos:len:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></fill>
		<sub public="1" set="method" line="628"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></sub>
		<compare public="1" set="method" line="633"><f a="other">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
</f></compare>
		<initData get="inline" set="null" line="643"><f a=""><x path="Void"/></f></initData>
		<getDouble public="1" set="method" line="647"><f a="pos">
	<x path="Int"/>
	<x path="Float"/>
</f></getDouble>
		<getFloat public="1" set="method" line="652"><f a="pos">
	<x path="Int"/>
	<x path="Float"/>
</f></getFloat>
		<setDouble public="1" set="method" line="657"><f a="pos:v">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setDouble>
		<setFloat public="1" set="method" line="662"><f a="pos:v">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setFloat>
		<getUInt16 public="1" set="method" line="667"><f a="pos">
	<x path="Int"/>
	<x path="Int"/>
</f></getUInt16>
		<setUInt16 public="1" set="method" line="672"><f a="pos:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setUInt16>
		<getInt32 public="1" set="method" line="677"><f a="pos">
	<x path="Int"/>
	<x path="Int"/>
</f></getInt32>
		<setInt32 public="1" set="method" line="682"><f a="pos:v">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt32>
		<getInt64 public="1" set="method" line="687"><f a="pos">
	<x path="Int"/>
	<x path="haxe.Int64"/>
</f></getInt64>
		<setInt64 public="1" set="method" line="691"><f a="pos:v">
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Void"/>
</f></setInt64>
		<getString public="1" set="method" line="696"><f a="pos:len">
	<x path="Int"/>
	<x path="Int"/>
	<c path="String"/>
</f></getString>
		<readString public="1" get="inline" set="null" line="728">
			<f a="pos:len">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":deprecated"><e>"readString is deprecated, use getString instead"</e></m>
				<m n=":noCompletion"/>
			</meta>
		</readString>
		<toString public="1" set="method" line="732"><f a=""><c path="String"/></f></toString>
		<toHex public="1" set="method" line="736"><f a=""><c path="String"/></f></toHex>
		<getData public="1" get="inline" set="null" line="750">
			<f a=""><t path="haxe.io.BytesData"/></f>
			<meta><m n=":has_untyped"/></meta>
		</getData>
		<new set="method" line="597">
			<f a="data">
				<t path="haxe.io.BytesData"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":autoBuild"><e>lime._internal.macros.AssetsMacro.embedBytes()</e></m>
		</meta>
	</class>
	<class path="js.html.ArrayBufferView" params="" file="/usr/local/lib/haxe/std/js/html/ArrayBufferView.hx" extern="1">
		<buffer public="1" set="null"><c path="js.html.ArrayBuffer"/></buffer>
		<byteOffset public="1" set="null"><x path="Int"/></byteOffset>
		<byteLength public="1" set="null"><x path="Int"/></byteLength>
		<haxe_doc><![CDATA[`ArrayBufferView` is a helper type representing any of the following JavaScript `TypedArray` types:

	Documentation [ArrayBufferView](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView>]]></haxe_doc>
		<meta><m n=":native"><e>"ArrayBufferView"</e></m></meta>
	</class>
	<class path="js.html.Uint8Array" params="" file="/usr/local/lib/haxe/std/js/html/Uint8Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null"><x path="Int"/></length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads><set public="1" set="method"><f a="array:?offset">
	<c path="js.html.Uint8Array"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set></overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Uint8Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Uint8Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Uint8Array"</e></m>
		</meta>
	</class>
	<class path="haxe.crypto.BaseCode" params="" file="/usr/local/lib/haxe/std/haxe/crypto/BaseCode.hx">
		<base><c path="haxe.io.Bytes"/></base>
		<nbits><x path="Int"/></nbits>
		<encodeBytes public="1" set="method" line="44"><f a="b">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></encodeBytes>
		<new public="1" set="method" line="33"><f a="base">
	<c path="haxe.io.Bytes"/>
	<x path="Void"/>
</f></new>
		<haxe_doc>Allows one to encode/decode String and bytes using a power of two base dictionary.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.crypto.Sha1" params="" file="/usr/local/lib/haxe/std/haxe/crypto/Sha1.hx">
		<encode public="1" set="method" line="29" static="1"><f a="s">
	<c path="String"/>
	<c path="String"/>
</f></encode>
		<str2blks set="method" line="97" static="1"><f a="s">
	<c path="String"/>
	<c path="Array"><x path="Int"/></c>
</f></str2blks>
		<doEncode set="method" line="51"><f a="x">
	<c path="Array"><x path="Int"/></c>
	<c path="Array"><x path="Int"/></c>
</f></doEncode>
		<ft set="method" line="144">
			<f a="t:b:c:d">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Perform the appropriate triplet combination function for the current iteration</haxe_doc>
		</ft>
		<kt set="method" line="154">
			<f a="t">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Determine the appropriate additive constant for the current iteration</haxe_doc>
		</kt>
		<hex set="method" line="164"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<c path="String"/>
</f></hex>
		<new set="method" line="48"><f a=""><x path="Void"/></f></new>
		<haxe_doc>Creates a Sha1 of a String.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.ds.HashMap" params="K:V" file="/usr/local/lib/haxe/std/haxe/ds/HashMap.hx">
		<this><c path="haxe.ds._HashMap.HashMapData">
	<c path="haxe.ds.HashMap.K"/>
	<c path="haxe.ds.HashMap.V"/>
</c></this>
		<haxe_doc>HashMap allows mapping of hashable objects to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<impl><class path="haxe.ds._HashMap.HashMap_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/HashMap.hx" private="1" module="haxe.ds.HashMap"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.ds.IntMap" params="T" file="/usr/local/lib/haxe/std/js/_std/haxe/ds/IntMap.hx">
		<implements path="haxe.IMap">
			<x path="Int"/>
			<c path="haxe.ds.IntMap.T"/>
		</implements>
		<h><d/></h>
		<set public="1" get="inline" set="null" line="32">
			<f a="key:value">
				<x path="Int"/>
				<c path="haxe.ds.IntMap.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<exists public="1" get="inline" set="null" line="40">
			<f a="key">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="44">
			<f a="key">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="50">
			<f a=""><t path="Iterator"><x path="Int"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<iterator public="1" set="method" line="56">
			<f a=""><t path="Iterator"><c path="haxe.ds.IntMap.T"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.iterator`</haxe_doc>
		</iterator>
		<new public="1" get="inline" set="null" line="28">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new IntMap.</haxe_doc>
		</new>
		<haxe_doc>IntMap allows mapping of Int keys to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds.List" params="T" file="/usr/local/lib/haxe/std/haxe/ds/List.hx">
		<h><c path="haxe.ds._List.ListNode"><c path="haxe.ds.List.T"/></c></h>
		<q><c path="haxe.ds._List.ListNode"><c path="haxe.ds.List.T"/></c></q>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The length of `this` List.</haxe_doc>
		</length>
		<add public="1" set="method" line="53">
			<f a="item">
				<c path="haxe.ds.List.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds element `item` at the end of `this` List.

		`this.length` increases by 1.</haxe_doc>
		</add>
		<pop public="1" set="method" line="100">
			<f a=""><x path="Null"><c path="haxe.ds.List.T"/></x></f>
			<haxe_doc>Returns the first element of `this` List, or null if no elements exist.

		The element is removed from `this` List.</haxe_doc>
		</pop>
		<clear public="1" set="method" line="124">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Empties `this` List.

		This function does not traverse the elements, but simply sets the
		internal references to null and `this.length` to 0.</haxe_doc>
		</clear>
		<remove public="1" set="method" line="138">
			<f a="v">
				<c path="haxe.ds.List.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Removes the first occurrence of `v` in `this` List.

		If `v` is found by checking standard equality, it is removed from `this`
		List and the function returns true.

		Otherwise, false is returned.</haxe_doc>
		</remove>
		<new public="1" set="method" line="44">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new empty list.</haxe_doc>
		</new>
		<haxe_doc>A linked-list of elements. The list is composed of element container objects
	that are chained together. It is optimized so that adding or removing an
	element does not imply copying the whole list content every time.

	@see https://haxe.org/manual/std-List.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds._List.ListNode" params="T" file="/usr/local/lib/haxe/std/haxe/ds/List.hx" private="1" module="haxe.ds.List">
		<item public="1"><c path="haxe.ds._List.ListNode.T"/></item>
		<next public="1"><c path="haxe.ds._List.ListNode"><c path="haxe.ds._List.ListNode.T"/></c></next>
		<new public="1" set="method" line="256"><f a="item:next">
	<c path="haxe.ds._List.ListNode.T"/>
	<c path="haxe.ds._List.ListNode"><c path="haxe.ds._List.ListNode.T"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.ds.Map" params="K:V" file="/usr/local/lib/haxe/std/haxe/ds/Map.hx">
		<from>
			<icast field="fromStringMap"><c path="haxe.ds.StringMap"><c path="fromStringMap.V"/></c></icast>
			<icast field="fromIntMap"><c path="haxe.ds.IntMap"><c path="fromIntMap.V"/></c></icast>
			<icast field="fromObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="fromObjectMap.K"/>
	<c path="fromObjectMap.V"/>
</c></icast>
		</from>
		<this><c path="haxe.IMap">
	<c path="haxe.ds.Map.K"/>
	<c path="haxe.ds.Map.V"/>
</c></this>
		<to>
			<icast field="toStringMap"><c path="haxe.ds.StringMap"><c path="toStringMap.V"/></c></icast>
			<icast field="toIntMap"><c path="haxe.ds.IntMap"><c path="toIntMap.V"/></c></icast>
			<icast field="toEnumValueMapMap"><c path="haxe.ds.EnumValueMap">
	<c path="toEnumValueMapMap.K"/>
	<c path="toEnumValueMapMap.V"/>
</c></icast>
			<icast field="toObjectMap"><c path="haxe.ds.ObjectMap">
	<c path="toObjectMap.K"/>
	<c path="toObjectMap.V"/>
</c></icast>
		</to>
		<haxe_doc><![CDATA[Map allows key to value mapping for arbitrary value types, and many key
	types.

	This is a multi-type abstract, it is instantiated as one of its
	specialization types depending on its type parameters.

	A Map can be instantiated without explicit type parameters. Type inference
	will then determine the type parameters from the usage.

	Maps can also be created with `key1 => value1, key2 => value2` syntax.

	Map is an abstract type, it is not available at runtime.

	@see https://haxe.org/manual/std-Map.html]]></haxe_doc>
		<meta><m n=":multiType"><e>@:followWithAbstracts K</e></m></meta>
		<impl><class path="haxe.ds._Map.Map_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/Map.hx" private="1" module="haxe.ds.Map"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<class path="haxe.ds.ObjectMap" params="K:V" file="/usr/local/lib/haxe/std/js/_std/haxe/ds/ObjectMap.hx">
		<implements path="haxe.IMap">
			<c path="haxe.ds.ObjectMap.K"/>
			<c path="haxe.ds.ObjectMap.V"/>
		</implements>
		<count static="1"><x path="Int"/></count>
		<assignId get="inline" set="null" line="35" static="1">
			<f a="obj">
				<a/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</assignId>
		<getId get="inline" set="null" line="39" static="1">
			<f a="obj">
				<a/>
				<x path="Int"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getId>
		<h><a/></h>
		<set public="1" set="method" line="49">
			<f a="key:value">
				<c path="haxe.ds.ObjectMap.K"/>
				<c path="haxe.ds.ObjectMap.V"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<exists public="1" get="inline" set="null" line="59">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<remove public="1" set="method" line="63">
			<f a="key">
				<c path="haxe.ds.ObjectMap.K"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="71">
			<f a=""><t path="Iterator"><c path="haxe.ds.ObjectMap.K"/></t></f>
			<meta><m n=":has_untyped"/></meta>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<new public="1" set="method" line="45">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new ObjectMap.</haxe_doc>
		</new>
		<haxe_doc>ObjectMap allows mapping of object keys to arbitrary values.

	On static targets, the keys are considered to be strong references. Refer
	to `haxe.ds.WeakMap` for a weak reference version.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<class path="haxe.ds._StringMap.StringMapIterator" params="T" file="/usr/local/lib/haxe/std/js/_std/haxe/ds/StringMap.hx" private="1" module="haxe.ds.StringMap">
		<map><c path="haxe.ds.StringMap"><c path="haxe.ds._StringMap.StringMapIterator.T"/></c></map>
		<keys><c path="Array"><c path="String"/></c></keys>
		<index><x path="Int"/></index>
		<count><x path="Int"/></count>
		<hasNext public="1" get="inline" set="null" line="35"><f a=""><x path="Bool"/></f></hasNext>
		<next public="1" get="inline" set="null" line="38"><f a=""><x path="Null"><c path="haxe.ds._StringMap.StringMapIterator.T"/></x></f></next>
		<new public="1" get="inline" set="null" line="29"><f a="map:keys">
	<c path="haxe.ds.StringMap"><c path="haxe.ds._StringMap.StringMapIterator.T"/></c>
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.ds.StringMap" params="T" file="/usr/local/lib/haxe/std/js/_std/haxe/ds/StringMap.hx">
		<implements path="haxe.IMap">
			<c path="String"/>
			<c path="haxe.ds.StringMap.T"/>
		</implements>
		<h><d/></h>
		<rh><d/></rh>
		<set public="1" get="inline" set="null" line="56">
			<f a="key:value">
				<c path="String"/>
				<c path="haxe.ds.StringMap.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>See `Map.set`</haxe_doc>
		</set>
		<exists public="1" get="inline" set="null" line="69">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.exists`</haxe_doc>
		</exists>
		<setReserved set="method" line="75"><f a="key:value">
	<c path="String"/>
	<c path="haxe.ds.StringMap.T"/>
	<x path="Void"/>
</f></setReserved>
		<getReserved set="method" line="80"><f a="key">
	<c path="String"/>
	<x path="Null"><c path="haxe.ds.StringMap.T"/></x>
</f></getReserved>
		<existsReserved set="method" line="84"><f a="key">
	<c path="String"/>
	<x path="Bool"/>
</f></existsReserved>
		<remove public="1" set="method" line="89">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>See `Map.remove`</haxe_doc>
		</remove>
		<keys public="1" set="method" line="103">
			<f a=""><t path="Iterator"><c path="String"/></t></f>
			<haxe_doc>See `Map.keys`</haxe_doc>
		</keys>
		<arrayKeys set="method" line="107">
			<f a=""><c path="Array"><c path="String"/></c></f>
			<meta><m n=":has_untyped"/></meta>
		</arrayKeys>
		<new public="1" get="inline" set="null" line="48">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new StringMap.</haxe_doc>
		</new>
		<haxe_doc>StringMap allows mapping of String keys to arbitrary values.

	See `Map` for documentation details.

	@see https://haxe.org/manual/std-Map.html</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":coreApi"/>
		</meta>
	</class>
	<typedef path="haxe.ds._Vector.VectorData" params="T" file="/usr/local/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector"><c path="Array"><c path="haxe.ds._Vector.VectorData.T"/></c></typedef>
	<abstract path="haxe.ds.Vector" params="T" file="/usr/local/lib/haxe/std/haxe/ds/Vector.hx">
		<this><t path="haxe.ds._Vector.VectorData"><c path="haxe.ds.Vector.T"/></t></this>
		<haxe_doc>A Vector is a storage of fixed size. It can be faster than Array on some
	targets, and is never slower.

	@see https://haxe.org/manual/std-vector.html</haxe_doc>
		<impl><class path="haxe.ds._Vector.Vector_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/ds/Vector.hx" private="1" module="haxe.ds.Vector">
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the length of `this` Vector.</haxe_doc>
	</length>
	<meta>
		<m n=":keep"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<abstract path="haxe.extern.EitherType" params="T1:T2" file="/usr/local/lib/haxe/std/haxe/extern/EitherType.hx">
		<from>
			<icast><c path="haxe.extern.EitherType.T2"/></icast>
			<icast><c path="haxe.extern.EitherType.T1"/></icast>
		</from>
		<this><d/></this>
		<to>
			<icast><c path="haxe.extern.EitherType.T2"/></icast>
			<icast><c path="haxe.extern.EitherType.T1"/></icast>
		</to>
		<haxe_doc><![CDATA[An abstract type allowing values to be either of `T1` or `T2` type.
	Supports implicit casts from/to either types.

	It is useful for interfacing with external code on dynamic platforms
	such as JavaScript or Python.

	Otherwise, use of this type is discouraged.
	
	@see <https://haxe.org/manual/lf-externs.html>]]></haxe_doc>
		<impl><class path="haxe.extern._EitherType.EitherType_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/extern/EitherType.hx" private="1" module="haxe.extern.EitherType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<abstract path="haxe.extern.Rest" params="T" file="/usr/local/lib/haxe/std/haxe/extern/Rest.hx">
		<this><c path="Array"><c path="haxe.extern.Rest.T"/></c></this>
		<haxe_doc><![CDATA[A special abstract type that represents "rest" function argument.

	Should be used as a type for the last argument of an extern method,
	representing that arbitrary number of arguments of given type can be
	passed to that method.
	
	@see <https://haxe.org/manual/lf-externs.html>]]></haxe_doc>
		<impl><class path="haxe.extern._Rest.Rest_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/extern/Rest.hx" private="1" module="haxe.extern.Rest"><meta>
	<m n=":keep"/>
	<m n=":final"/>
</meta></class></impl>
	</abstract>
	<typedef path="haxe.io.BytesData" params="" file="/usr/local/lib/haxe/std/haxe/io/BytesData.hx"><c path="js.html.ArrayBuffer"/></typedef>
	<enum path="haxe.io.Error" params="" file="/usr/local/lib/haxe/std/haxe/io/Error.hx">
		<Blocked><haxe_doc>The IO is set into nonblocking mode and some data cannot be read or written</haxe_doc></Blocked>
		<Overflow><haxe_doc>An integer value is outside its allowed range</haxe_doc></Overflow>
		<OutsideBounds><haxe_doc>An operation on Bytes is outside of its valid range</haxe_doc></OutsideBounds>
		<Custom a="e">
			<d/>
			<haxe_doc>Other errors</haxe_doc>
		</Custom>
		<haxe_doc>The possible IO errors that can occur</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</enum>
	<class path="js.html.ArrayBuffer" params="" file="/usr/local/lib/haxe/std/js/html/ArrayBuffer.hx" extern="1">
		<isView public="1" set="method" static="1"><f a="value">
	<d/>
	<x path="Bool"/>
</f></isView>
		<byteLength public="1" set="null"><x path="Int"/></byteLength>
		<slice public="1" set="method"><f a="begin:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBuffer"/>
</f></slice>
		<new public="1" set="method">
			<f a="length">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"ArrayBuffer"</e></m>
		</meta>
	</class>
	<class path="js.html.DataView" params="" file="/usr/local/lib/haxe/std/js/html/DataView.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<getInt8 public="1" set="method"><f a="byteOffset">
	<x path="Int"/>
	<x path="Int"/>
</f></getInt8>
		<getUint8 public="1" set="method"><f a="byteOffset">
	<x path="Int"/>
	<x path="Int"/>
</f></getUint8>
		<getInt16 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getInt16>
		<getUint16 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getUint16>
		<getInt32 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getInt32>
		<getUint32 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getUint32>
		<getFloat32 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Float"/>
</f></getFloat32>
		<getFloat64 public="1" set="method"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Float"/>
</f></getFloat64>
		<setInt8 public="1" set="method"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt8>
		<setUint8 public="1" set="method"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setUint8>
		<setInt16 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setInt16>
		<setUint16 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setUint16>
		<setInt32 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setInt32>
		<setUint32 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setUint32>
		<setFloat32 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setFloat32>
		<setFloat64 public="1" set="method"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setFloat64>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?byteLength">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"DataView"</e></m>
		</meta>
	</class>
	<class path="haxe.io.FPHelper" params="" file="/usr/local/lib/haxe/std/haxe/io/FPHelper.hx">
		<i64tmp expr="Int64.ofInt(0)" line="35" static="1">
			<x path="haxe.Int64"/>
			<meta><m n=":value"><e>Int64.ofInt(0)</e></m></meta>
		</i64tmp>
		<haxe_doc>Helper that converts between floating point and binary representation.
	Always works in low-endian encoding.</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="haxe.io.Path" params="" file="/usr/local/lib/haxe/std/haxe/io/Path.hx">
		<withoutDirectory public="1" set="method" line="134" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String representation of `path` without the directory.

		If `path` is null, the result is unspecified.</haxe_doc>
		</withoutDirectory>
		<directory public="1" set="method" line="147" static="1">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the directory of `path`.

		If the directory is null, the empty String `""` is returned.

		If `path` is null, the result is unspecified.</haxe_doc>
		</directory>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>The directory.

		This is the leading part of the path that is not part of the file name
		and the extension.

		Does not end with a `/` or `\` separator.

		If the path has no directory, the value is null.</haxe_doc>
		</dir>
		<file public="1">
			<c path="String"/>
			<haxe_doc>The file name.

		This is the part of the part between the directory and the extension.

		If there is no file name, e.g. for ".htaccess" or "/dir/", the value
		is the empty String "".</haxe_doc>
		</file>
		<ext public="1">
			<c path="String"/>
			<haxe_doc>The file extension.

		It is separated from the file name by a dot. This dot is not part of
		the extension.

		If the path has no extension, the value is null.</haxe_doc>
		</ext>
		<backslash public="1">
			<x path="Bool"/>
			<haxe_doc>True if the last directory separator is a backslash, false otherwise.</haxe_doc>
		</backslash>
		<toString public="1" set="method" line="114">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a String representation of `this` path.

		If `this.backslash` is true, backslash is used as directory separator,
		otherwise slash is used. This only affects the separator between
		`this.dir` and `this.file`.

		If `this.directory` or `this.extension` is null, their representation
		is the empty String "".</haxe_doc>
		</toString>
		<new public="1" set="method" line="76">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Path instance by parsing `path`.

		Path information can be retrieved by accessing the dir, file and ext
		properties.</haxe_doc>
		</new>
		<haxe_doc>This class provides a convenient way of working with paths. It supports the
	common path formats:

	- directory1/directory2/filename.extension
	- directory1\directory2\filename.extension</haxe_doc>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<abstract path="haxe.macro.IncludePosition" params="" file="/usr/local/lib/haxe/std/haxe/macro/Compiler.hx" module="haxe.macro.Compiler">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="haxe.macro._Compiler.IncludePosition_Impl_" params="" file="/usr/local/lib/haxe/std/haxe/macro/Compiler.hx" private="1" module="haxe.macro.Compiler"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<typedef path="haxe.macro.Position" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<min>
				<x path="Int"/>
				<haxe_doc>Position of the first character.</haxe_doc>
			</min>
			<max>
				<x path="Int"/>
				<haxe_doc>Position of the last character.</haxe_doc>
			</max>
			<file>
				<c path="String"/>
				<haxe_doc>Reference to the filename.</haxe_doc>
			</file>
		</a>
		<haxe_doc>Represents a position in a file.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Expr" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the expression.</haxe_doc>
			</pos>
			<expr>
				<e path="haxe.macro.ExprDef"/>
				<haxe_doc>The expression kind.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a node in the AST.
	@see https://haxe.org/manual/macro-reification-expression.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ExprOf" params="T" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<t path="haxe.macro.Expr"/>
		<haxe_doc>Represents a AST node identical to `Expr`, but it allows constraining the
	type of accepted expressions.
	@see https://haxe.org/manual/macro-ExprOf.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Case" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<values>
				<c path="Array"><t path="haxe.macro.Expr"/></c>
				<haxe_doc>The value expressions of the case.</haxe_doc>
			</values>
			<guard>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional guard expressions of the case, if available.</haxe_doc>
			</guard>
			<expr>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<haxe_doc>The expression of the case, if available.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a switch case.
	@see https://haxe.org/manual/expression-switch.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Var" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<type>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<haxe_doc>The type-hint of the variable, if available.</haxe_doc>
			</type>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the variable.</haxe_doc>
			</name>
			<expr>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<haxe_doc>The expression of the variable, if available.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a variable in the AST.
	@see https://haxe.org/manual/expression-var.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Catch" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<type>
				<e path="haxe.macro.ComplexType"/>
				<haxe_doc>The type of the catch.</haxe_doc>
			</type>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the catch variable.</haxe_doc>
			</name>
			<expr>
				<t path="haxe.macro.Expr"/>
				<haxe_doc>The expression of the catch.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents a catch in the AST.
	@https://haxe.org/manual/expression-try-catch.html</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ObjectField" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<quotes>
				<x path="Null"><e path="haxe.macro.QuoteStatus"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>How the field name is quoted.</haxe_doc>
			</quotes>
			<field>
				<c path="String"/>
				<haxe_doc>The name of the field.</haxe_doc>
			</field>
			<expr>
				<t path="haxe.macro.Expr"/>
				<haxe_doc>The field expression.</haxe_doc>
			</expr>
		</a>
		<haxe_doc>Represents the field of an object declaration.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypePath" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<sub>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Sub is set on module sub-type access:
		`pack.Module.Type` has name = Module, sub = Type, if available.</haxe_doc>
			</sub>
			<params>
				<x path="Null"><c path="Array"><e path="haxe.macro.TypeParam"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Optional parameters of the type path.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>Represents the package of the type path.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type path.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents a type path in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeParamDecl" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional parameters of the type parameter.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type parameter.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The metadata of the type parameter.</haxe_doc>
			</meta>
			<constraints>
				<x path="Null"><c path="Array"><e path="haxe.macro.ComplexType"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional constraints of the type parameter.</haxe_doc>
			</constraints>
		</a>
		<haxe_doc>Represents a type parameter declaration in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Function" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<ret>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<haxe_doc>The return type-hint of the function, if available.</haxe_doc>
			</ret>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>An optional list of function parameter type declarations.</haxe_doc>
			</params>
			<expr>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<haxe_doc>The expression of the function body, if available.</haxe_doc>
			</expr>
			<args>
				<c path="Array"><t path="haxe.macro.FunctionArg"/></c>
				<haxe_doc>A list of function arguments.</haxe_doc>
			</args>
		</a>
		<haxe_doc>Represents a function in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.FunctionArg" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<value>
				<x path="Null"><t path="haxe.macro.Expr"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional value of the function argument, if available.</haxe_doc>
			</value>
			<type>
				<x path="Null"><e path="haxe.macro.ComplexType"/></x>
				<haxe_doc>The type-hint of the function argument, if available.</haxe_doc>
			</type>
			<opt>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the function argument is optional.</haxe_doc>
			</opt>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the function argument.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The metadata of the function argument.</haxe_doc>
			</meta>
		</a>
		<haxe_doc>Represents a function argument in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.MetadataEntry" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the metadata entry.</haxe_doc>
			</pos>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.Expr"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional parameters of the metadata entry.</haxe_doc>
			</params>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the metadata entry.</haxe_doc>
			</name>
		</a>
		<haxe_doc>Represents a metadata entry in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Metadata" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<c path="Array"><t path="haxe.macro.MetadataEntry"/></c>
		<haxe_doc>Represents metadata in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.Field" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position of the field.</haxe_doc>
			</pos>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the field.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional metadata of the field.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.FieldType"/>
				<haxe_doc>The kind of the field.</haxe_doc>
			</kind>
			<doc>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The documentation of the field, if available. If the field has no
		documentation, the value is `null`.</haxe_doc>
			</doc>
			<access>
				<x path="Null"><c path="Array"><e path="haxe.macro.Access"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The access modifiers of the field. By default fields have private access.
		@see https://haxe.org/manual/class-field-access-modifier.html</haxe_doc>
			</access>
		</a>
		<haxe_doc>Represents a field in the AST.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.TypeDefinition" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<pos>
				<t path="haxe.macro.Position"/>
				<haxe_doc>The position to the type definition.</haxe_doc>
			</pos>
			<params>
				<x path="Null"><c path="Array"><t path="haxe.macro.TypeParamDecl"/></c></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The parameter type declarations of the type definition.</haxe_doc>
			</params>
			<pack>
				<c path="Array"><c path="String"/></c>
				<haxe_doc>The package of the type definition.</haxe_doc>
			</pack>
			<name>
				<c path="String"/>
				<haxe_doc>The name of the type definition.</haxe_doc>
			</name>
			<meta>
				<x path="Null"><t path="haxe.macro.Metadata"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The optional metadata of the type definition.</haxe_doc>
			</meta>
			<kind>
				<e path="haxe.macro.TypeDefKind"/>
				<haxe_doc>The kind of the type definition.</haxe_doc>
			</kind>
			<isExtern>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether or not the type is extern.</haxe_doc>
			</isExtern>
			<fields>
				<c path="Array"><t path="haxe.macro.Field"/></c>
				<haxe_doc>The fields of the type definition.</haxe_doc>
			</fields>
			<doc>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The documentation of the type, if available. If the type has no
		documentation, the value is `null`.</haxe_doc>
			</doc>
		</a>
		<haxe_doc>Represents a type definition.</haxe_doc>
	</typedef>
	<typedef path="haxe.macro.ImportExpr" params="" file="/usr/local/lib/haxe/std/haxe/macro/Expr.hx" module="haxe.macro.Expr">
		<a>
			<path>
				<c path="Array"><a>
	<pos><t path="haxe.macro.Position"/></pos>
	<name><c path="String"/></name>
</a></c>
				<haxe_doc>The path to the import expression.</haxe_doc>
			</path>
			<mode>
				<e path="haxe.macro.ImportMode"/>
				<haxe_doc>The mode of the import expression.</haxe_doc>
			</mode>
		</a>
		<haxe_doc>Represents the import expression.</haxe_doc>
	</typedef>
	<class path="js.Error" params="" file="/usr/local/lib/haxe/std/js/Error.hx" extern="1">
		<message public="1"><c path="String"/></message>
		<name public="1"><c path="String"/></name>
		<stack public="1" set="null"><c path="String"/></stack>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Error"</e></m>
		</meta>
	</class>
	<class path="js.Object" params="" file="/usr/local/lib/haxe/std/js/Object.hx" extern="1">
		<assign public="1" params="T" set="method" static="1"><f a="target:sources">
	<c path="assign.T"/>
	<x path="haxe.extern.Rest"><a/></x>
	<c path="assign.T"/>
</f></assign>
		<create public="1" params="T" set="method" static="1"><f a="proto:?propertiesObject">
	<a/>
	<x path="haxe.DynamicAccess"><t path="js.ObjectPropertyDescriptor"/></x>
	<c path="create.T"/>
</f></create>
		<defineProperties public="1" params="T" set="method" static="1"><f a="obj:props">
	<c path="defineProperties.T"/>
	<x path="haxe.DynamicAccess"><t path="js.ObjectPropertyDescriptor"/></x>
	<c path="defineProperties.T"/>
</f></defineProperties>
		<defineProperty public="1" params="T" set="method" static="1"><f a="obj:prop:descriptor">
	<c path="defineProperty.T"/>
	<c path="String"/>
	<t path="js.ObjectPropertyDescriptor"/>
	<c path="defineProperty.T"/>
</f></defineProperty>
		<freeze public="1" params="T" set="method" static="1"><f a="obj">
	<c path="freeze.T"/>
	<c path="freeze.T"/>
</f></freeze>
		<getOwnPropertyDescriptor public="1" set="method" static="1"><f a="obj:prop">
	<a/>
	<c path="String"/>
	<x path="Null"><t path="js.ObjectPropertyDescriptor"/></x>
</f></getOwnPropertyDescriptor>
		<getOwnPropertyNames public="1" set="method" static="1"><f a="obj">
	<a/>
	<c path="Array"><c path="String"/></c>
</f></getOwnPropertyNames>
		<getOwnPropertySymbols public="1" set="method" static="1"><f a="obj">
	<a/>
	<c path="Array"><c path="js.Symbol"/></c>
</f></getOwnPropertySymbols>
		<getPrototypeOf public="1" params="TProto" set="method" static="1"><f a="obj">
	<a/>
	<x path="Null"><c path="getPrototypeOf.TProto"/></x>
</f></getPrototypeOf>
		<is public="1" params="T" set="method" static="1"><f a="value1:value2">
	<c path="is.T"/>
	<c path="is.T"/>
	<x path="Bool"/>
</f></is>
		<isExtensible public="1" set="method" static="1"><f a="obj">
	<a/>
	<x path="Bool"/>
</f></isExtensible>
		<isFrozen public="1" set="method" static="1"><f a="obj">
	<a/>
	<x path="Bool"/>
</f></isFrozen>
		<isSealed public="1" set="method" static="1"><f a="obj">
	<a/>
	<x path="Bool"/>
</f></isSealed>
		<keys public="1" set="method" static="1"><f a="obj">
	<a/>
	<c path="Array"><c path="String"/></c>
</f></keys>
		<preventExtensions public="1" params="T" set="method" static="1"><f a="obj">
	<c path="preventExtensions.T"/>
	<c path="preventExtensions.T"/>
</f></preventExtensions>
		<seal public="1" params="T" set="method" static="1"><f a="obj">
	<c path="seal.T"/>
	<c path="seal.T"/>
</f></seal>
		<setPrototypeOf public="1" params="T" set="method" static="1"><f a="obj:prototype">
	<c path="setPrototypeOf.T"/>
	<x path="Null"><a/></x>
	<c path="setPrototypeOf.T"/>
</f></setPrototypeOf>
		<prototype public="1" set="null" static="1"><t path="js.ObjectPrototype"/></prototype>
		<new public="1" set="method"><f a="?value">
	<x path="Any"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Object"</e></m>
		</meta>
	</class>
	<class path="js._Boot.HaxeError" params="" file="/usr/local/lib/haxe/std/js/Boot.hx" private="1" module="js.Boot">
		<extends path="js.Error"/>
		<wrap public="1" set="method" line="36" static="1"><f a="val">
	<d/>
	<c path="js.Error"/>
</f></wrap>
		<val><d/></val>
		<new public="1" set="method" line="30"><f a="val">
	<d/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="js.Boot" params="" file="/usr/local/lib/haxe/std/js/Boot.hx">
		<getClass set="method" line="56" static="1">
			<f a="o">
				<d/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</getClass>
		<__string_rec set="method" line="71" static="1">
			<f a="o:s">
				<a>
					<toString set="null"><f a=""><c path="String"/></f></toString>
					<length set="null"><x path="Int"/></length>
					<hasOwnProperty set="null"><f a="">
	<c path="String"/>
	<x path="Bool"/>
</f></hasOwnProperty>
					<_hx_index set="null"><x path="Int"/></_hx_index>
					<__enum__ set="null"><x path="Bool"/></__enum__>
				</a>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":ifFeature"><e>"has_enum"</e></m>
			</meta>
		</__string_rec>
		<__interfLoop set="method" line="159" static="1"><f a="cc:cl">
	<d/>
	<d/>
	<x path="Bool"/>
</f></__interfLoop>
		<__instanceof set="method" line="174" static="1">
			<f a="o:cl">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":ifFeature"><e>"typed_catch"</e></m>
			</meta>
		</__instanceof>
		<__cast set="method" line="217" static="1">
			<f a="o:t">
				<d/>
				<d/>
				<unknown/>
			</f>
			<meta><m n=":ifFeature"><e>"typed_cast"</e></m></meta>
		</__cast>
		<__toStr expr="untyped ({ }).toString" line="222" static="1">
			<a><call set="null"><f a="">
	<d/>
	<a><slice set="null"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<unknown/>
</f></slice></a>
</f></call></a>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>untyped ({ }).toString</e></m>
			</meta>
		</__toStr>
		<__nativeClassName set="method" line="224" static="1">
			<f a="o">
				<d/>
				<c path="String"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</__nativeClassName>
		<__isNativeObj set="method" line="234" static="1"><f a="o">
	<d/>
	<x path="Bool"/>
</f></__isNativeObj>
		<__resolveNativeClass set="method" line="239" static="1"><f a="name">
	<c path="String"/>
	<unknown/>
</f></__resolveNativeClass>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="js.Browser" params="" file="/usr/local/lib/haxe/std/js/Browser.hx">
		<window public="1" get="null" set="null" static="1">
			<c path="js.html.Window"/>
			<haxe_doc>The global window object.</haxe_doc>
		</window>
		<document public="1" get="null" set="null" static="1">
			<c path="js.html.HTMLDocument"/>
			<haxe_doc>Shortcut to Window.document.</haxe_doc>
		</document>
		<location public="1" get="null" set="null" static="1">
			<c path="js.html.Location"/>
			<haxe_doc>Shortcut to Window.location.</haxe_doc>
		</location>
		<navigator public="1" get="null" set="null" static="1">
			<c path="js.html.Navigator"/>
			<haxe_doc>Shortcut to Window.navigator.</haxe_doc>
		</navigator>
		<console public="1" get="null" set="null" static="1">
			<c path="js.html.Console"/>
			<haxe_doc>Shortcut to Window.console.</haxe_doc>
		</console>
		<supported public="1" get="null" set="null" static="1">
			<x path="Bool"/>
			<haxe_doc>* True if a window object exists, false otherwise.
	 *
	 * This can be used to check if the code is being executed in a non-browser
	 * environment such as node.js.</haxe_doc>
		</supported>
		<alert public="1" set="method" line="115" static="1">
			<f a="v">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Display an alert message box containing the given message. See also `Window.alert()`.</haxe_doc>
		</alert>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
		</meta>
	</class>
	<class path="js.Date" params="" file="/usr/local/lib/haxe/std/js/Date.hx" extern="1">
		<fromHaxeDate public="1" get="inline" set="null" line="40" static="1">
			<f a="date">
				<t path="_Date.HaxeDate"/>
				<c path="js.Date"/>
			</f>
			<haxe_doc>Cast Haxe's Date to js.Date.</haxe_doc>
		</fromHaxeDate>
		<toHaxeDate public="1" get="inline" set="null" line="47" static="1">
			<f a="date">
				<c path="js.Date"/>
				<t path="_Date.HaxeDate"/>
			</f>
			<haxe_doc>Cast js.Date to Haxe's Date.</haxe_doc>
		</toHaxeDate>
		<now public="1" set="method" static="1">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the numeric value corresponding to the current time - the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC, with leap seconds ignored</haxe_doc>
		</now>
		<parse public="1" set="method" static="1">
			<f a="str">
				<c path="String"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Parses a string representation of a date and returns the number of milliseconds since 1 January, 1970, 00:00:00, UTC, with leap seconds ignored.</haxe_doc>
		</parse>
		<UTC public="1" set="method" static="1">
			<f a="year:month:?day:?hours:?minutes:?seconds:?milliseconds">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Returns the number of milliseconds since January 1, 1970, 00:00:00 UTC, with leap seconds ignored.</haxe_doc>
		</UTC>
		<getDate public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the month (1-31) for the specified date according to local time.</haxe_doc>
		</getDate>
		<getDay public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the week (0-6) for the specified date according to local time.</haxe_doc>
		</getDay>
		<getFullYear public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the year (4 digits for 4-digit years) of the specified date according to local time.</haxe_doc>
		</getFullYear>
		<getHours public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the hour (0-23) in the specified date according to local time.</haxe_doc>
		</getHours>
		<getMilliseconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the milliseconds (0-999) in the specified date according to local time.</haxe_doc>
		</getMilliseconds>
		<getMinutes public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the minutes (0-59) in the specified date according to local time.</haxe_doc>
		</getMinutes>
		<getMonth public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the month (0-11) in the specified date according to local time.</haxe_doc>
		</getMonth>
		<getSeconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the seconds (0-59) in the specified date according to local time.</haxe_doc>
		</getSeconds>
		<getTime public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns the numeric value of the specified date as the number of milliseconds since January 1, 1970, 00:00:00 UTC (negative for prior times).</haxe_doc>
		</getTime>
		<getTimezoneOffset public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the time-zone offset in minutes for the current locale.</haxe_doc>
		</getTimezoneOffset>
		<getUTCDate public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day (date) of the month (1-31) in the specified date according to universal time.</haxe_doc>
		</getUTCDate>
		<getUTCDay public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the day of the week (0-6) in the specified date according to universal time.</haxe_doc>
		</getUTCDay>
		<getUTCFullYear public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the year (4 digits for 4-digit years) in the specified date according to universal time.</haxe_doc>
		</getUTCFullYear>
		<getUTCHours public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the hours (0-23) in the specified date according to universal time.</haxe_doc>
		</getUTCHours>
		<getUTCMilliseconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the milliseconds (0-999) in the specified date according to universal time.</haxe_doc>
		</getUTCMilliseconds>
		<getUTCMinutes public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the minutes (0-59) in the specified date according to universal time.</haxe_doc>
		</getUTCMinutes>
		<getUTCMonth public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the month (0-11) in the specified date according to universal time.</haxe_doc>
		</getUTCMonth>
		<getUTCSeconds public="1" set="method">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Returns the seconds (0-59) in the specified date according to universal time.</haxe_doc>
		</getUTCSeconds>
		<setDate public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the day of the month for a specified date according to local time.</haxe_doc>
		</setDate>
		<setFullYear public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the full year (e.g. 4 digits for 4-digit years) for a specified date according to local time.</haxe_doc>
		</setFullYear>
		<setHours public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the hours for a specified date according to local time.</haxe_doc>
		</setHours>
		<setMilliseconds public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the milliseconds for a specified date according to local time.</haxe_doc>
		</setMilliseconds>
		<setMinutes public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the minutes for a specified date according to local time.</haxe_doc>
		</setMinutes>
		<setMonth public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the month for a specified date according to local time.</haxe_doc>
		</setMonth>
		<setSeconds public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the seconds for a specified date according to local time.</haxe_doc>
		</setSeconds>
		<setTime public="1" set="method">
			<f a="value">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the Date object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC, allowing for negative numbers for times prior.</haxe_doc>
		</setTime>
		<setUTCDate public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the day of the month for a specified date according to universal time.</haxe_doc>
		</setUTCDate>
		<setUTCFullYear public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the full year (e.g. 4 digits for 4-digit years) for a specified date according to universal time.</haxe_doc>
		</setUTCFullYear>
		<setUTCHours public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the hour for a specified date according to universal time.</haxe_doc>
		</setUTCHours>
		<setUTCMilliseconds public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the milliseconds for a specified date according to universal time.</haxe_doc>
		</setUTCMilliseconds>
		<setUTCMinutes public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the minutes for a specified date according to universal time.</haxe_doc>
		</setUTCMinutes>
		<setUTCMonth public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the month for a specified date according to universal time.</haxe_doc>
		</setUTCMonth>
		<setUTCSeconds public="1" set="method">
			<f a="value">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the seconds for a specified date according to universal time.</haxe_doc>
		</setUTCSeconds>
		<toDateString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the "date" portion of the Date as a human-readable string.</haxe_doc>
		</toDateString>
		<toISOString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Converts a date to a string following the ISO 8601 Extended Format.</haxe_doc>
		</toISOString>
		<toJSON public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representing the Date using toISOString(). Intended for use by JSON.stringify().</haxe_doc>
		</toJSON>
		<toLocaleDateString public="1" set="method">
			<f a="?locales:?options">
				<c path="String"/>
				<d><d/></d>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string with a locality sensitive representation of the date portion of this date based on system settings.</haxe_doc>
		</toLocaleDateString>
		<toLocaleFormat public="1" set="method">
			<f a="format">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Converts a date to a string, using a format string.</haxe_doc>
		</toLocaleFormat>
		<toLocaleString public="1" set="method">
			<f a="?locales:?options">
				<c path="String"/>
				<d><d/></d>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string with a locality sensitive representation of this date. Overrides the Object.prototype.toLocaleString() method.</haxe_doc>
		</toLocaleString>
		<toLocaleTimeString public="1" set="method">
			<f a="?locales:?options">
				<c path="String"/>
				<d><d/></d>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a string with a locality sensitive representation of the time portion of this date based on system settings.</haxe_doc>
		</toLocaleTimeString>
		<toSource public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representing the source for an equivalent Date object; you can use this value to create a new object. Overrides the Object.prototype.toSource() method.</haxe_doc>
		</toSource>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representing the specified Date object. Overrides the Object.prototype.toString() method.</haxe_doc>
		</toString>
		<toTimeString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns the "time" portion of the Date as a human-readable string.</haxe_doc>
		</toTimeString>
		<toUTCString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Converts a date to a string using the UTC timezone.</haxe_doc>
		</toUTCString>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<overloads>
				<new public="1" set="method"><f a="value">
	<x path="Float"/>
	<x path="Void"/>
</f></new>
				<new public="1" set="method"><f a="dateString">
	<c path="String"/>
	<x path="Void"/>
</f></new>
				<new public="1" set="method"><f a="year:month:?day:?hours:?minutes:?seconds:?milliseconds">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
			</overloads>
		</new>
		<haxe_doc>Creates a JavaScript Date instance that represents a single moment in time. Date objects are based on a time value that is the number of milliseconds since 1 January 1970 UTC.</haxe_doc>
		<meta><m n=":native"><e>"Date"</e></m></meta>
	</class>
	<class path="js.EvalError" params="" file="/usr/local/lib/haxe/std/js/Error.hx" module="js.Error" extern="1">
		<extends path="js.Error"/>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"EvalError"</e></m></meta>
	</class>
	<class path="js.RangeError" params="" file="/usr/local/lib/haxe/std/js/Error.hx" module="js.Error" extern="1">
		<extends path="js.Error"/>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"RangeError"</e></m></meta>
	</class>
	<class path="js.ReferenceError" params="" file="/usr/local/lib/haxe/std/js/Error.hx" module="js.Error" extern="1">
		<extends path="js.Error"/>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"ReferenceError"</e></m></meta>
	</class>
	<class path="js.SyntaxError" params="" file="/usr/local/lib/haxe/std/js/Error.hx" module="js.Error" extern="1">
		<extends path="js.Error"/>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"SyntaxError"</e></m></meta>
	</class>
	<class path="js.TypeError" params="" file="/usr/local/lib/haxe/std/js/Error.hx" module="js.Error" extern="1">
		<extends path="js.Error"/>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"TypeError"</e></m></meta>
	</class>
	<class path="js.URIError" params="" file="/usr/local/lib/haxe/std/js/Error.hx" module="js.Error" extern="1">
		<extends path="js.Error"/>
		<new public="1" set="method"><f a="?message">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta><m n=":native"><e>"URIError"</e></m></meta>
	</class>
	<class path="js.Function" params="" file="/usr/local/lib/haxe/std/js/Function.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Specifies the number of arguments expected by the function.</haxe_doc>
		</length>
		<name public="1">
			<c path="String"/>
			<haxe_doc>The name of the function.</haxe_doc>
		</name>
		<apply public="1" set="method">
			<f a="thisArg:argsArray">
				<d/>
				<c path="Array"><d/></c>
				<d/>
			</f>
			<haxe_doc>Calls a function and sets its this to the provided value, arguments can be passed as an Array object.</haxe_doc>
		</apply>
		<call public="1" set="method">
			<f a="thisArg:args">
				<d/>
				<x path="haxe.extern.Rest"><d/></x>
				<d/>
			</f>
			<haxe_doc>Calls (executes) a function and sets its this to the provided value, arguments can be passed as they are.</haxe_doc>
		</call>
		<bind public="1" set="method">
			<f a="thisArg:args">
				<d/>
				<x path="haxe.extern.Rest"><d/></x>
				<c path="js.Function"/>
			</f>
			<haxe_doc>Creates a new function which, when called, has its this set to the provided value,
		with a given sequence of arguments preceding any provided when the new function was called.</haxe_doc>
		</bind>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string representing the source code of the function.</haxe_doc>
		</toString>
		<new public="1" set="method">
			<f a="arg:rest">
				<c path="String"/>
				<x path="haxe.extern.Rest"><c path="String"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new Function object.</haxe_doc>
		</new>
		<meta><m n=":native"><e>"Function"</e></m></meta>
	</class>
	<typedef path="js.ObjectPrototype" params="" file="/usr/local/lib/haxe/std/js/Object.hx" module="js.Object"><a>
	<valueOf set="null"><c path="js.Function"/></valueOf>
	<toString set="null"><c path="js.Function"/></toString>
	<toLocaleString set="null"><c path="js.Function"/></toLocaleString>
	<propertyIsEnumerable set="null"><c path="js.Function"/></propertyIsEnumerable>
	<isPrototypeOf set="null"><c path="js.Function"/></isPrototypeOf>
	<hasOwnProperty set="null"><c path="js.Function"/></hasOwnProperty>
</a></typedef>
	<typedef path="js.ObjectPropertyDescriptor" params="" file="/usr/local/lib/haxe/std/js/Object.hx" module="js.Object"><a>
	<writable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</writable>
	<value>
		<x path="Null"><x path="Any"/></x>
		<meta><m n=":optional"/></meta>
	</value>
	<set>
		<x path="Null"><f a="">
	<x path="Any"/>
	<x path="Void"/>
</f></x>
		<meta><m n=":optional"/></meta>
	</set>
	<get>
		<x path="Null"><f a=""><x path="Any"/></f></x>
		<meta><m n=":optional"/></meta>
	</get>
	<enumerable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</enumerable>
	<configurable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</configurable>
</a></typedef>
	<class path="js.Promise" params="T" file="/usr/local/lib/haxe/std/js/Promise.hx" extern="1">
		<resolve public="1" params="T" set="method" static="1">
			<f a="?value">
				<c path="resolve.T"/>
				<c path="js.Promise"><c path="resolve.T"/></c>
			</f>
			<overloads>
				<resolve public="1" params="T" set="method"><f a="promise">
	<c path="js.Promise"><c path="resolve.T"/></c>
	<c path="js.Promise"><c path="resolve.T"/></c>
</f></resolve>
				<resolve public="1" params="T" set="method"><f a="thenable">
	<t path="js.Thenable"><c path="resolve.T"/></t>
	<c path="js.Promise"><c path="resolve.T"/></c>
</f></resolve>
			</overloads>
		</resolve>
		<reject public="1" params="T" set="method" static="1"><f a="?value">
	<d/>
	<c path="js.Promise"><c path="reject.T"/></c>
</f></reject>
		<all public="1" set="method" static="1"><f a="iterable">
	<c path="Array"><d/></c>
	<c path="js.Promise"><c path="Array"><d/></c></c>
</f></all>
		<race public="1" set="method" static="1"><f a="iterable">
	<c path="Array"><d/></c>
	<c path="js.Promise"><d/></c>
</f></race>
		<then public="1" params="TOut" set="method"><f a="fulfillCallback:?rejectCallback">
	<x path="Null"><t path="js.PromiseCallback">
	<c path="js.Promise.T"/>
	<c path="then.TOut"/>
</t></x>
	<x path="haxe.extern.EitherType">
		<f a="">
			<d/>
			<x path="Void"/>
		</f>
		<t path="js.PromiseCallback">
			<d/>
			<c path="then.TOut"/>
		</t>
	</x>
	<c path="js.Promise"><c path="then.TOut"/></c>
</f></then>
		<catchError public="1" params="TOut" set="method">
			<f a="rejectCallback">
				<x path="haxe.extern.EitherType">
					<f a="">
						<d/>
						<x path="Void"/>
					</f>
					<t path="js.PromiseCallback">
						<d/>
						<c path="catchError.TOut"/>
					</t>
				</x>
				<c path="js.Promise"><c path="catchError.TOut"/></c>
			</f>
			<meta><m n=":native"><e>"catch"</e></m></meta>
		</catchError>
		<new public="1" set="method">
			<f a="init">
				<f a=":">
					<f a="">
						<c path="js.Promise.T"/>
						<x path="Void"/>
					</f>
					<f a="">
						<d/>
						<x path="Void"/>
					</f>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta><m n=":native"><e>"Promise"</e></m></meta>
	</class>
	<typedef path="js.PromiseCallback" params="T:TOut" file="/usr/local/lib/haxe/std/js/Promise.hx" module="js.Promise"><x path="haxe.extern.EitherType">
	<f a="">
		<c path="js.PromiseCallback.T"/>
		<c path="js.PromiseCallback.TOut"/>
	</f>
	<f a="">
		<c path="js.PromiseCallback.T"/>
		<c path="js.Promise"><c path="js.PromiseCallback.TOut"/></c>
	</f>
</x></typedef>
	<typedef path="js.Thenable" params="T" file="/usr/local/lib/haxe/std/js/Promise.hx" module="js.Promise"><a><then set="method"><f a="resolve:?reject">
	<f a="">
		<c path="js.Thenable.T"/>
		<x path="Void"/>
	</f>
	<f a="">
		<d/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></then></a></typedef>
	<class path="js.RegExpMatch" params="" file="/usr/local/lib/haxe/std/js/RegExp.hx" module="js.RegExp" extern="1">
		<extends path="Array"><c path="String"/></extends>
		<index public="1"><x path="Int"/></index>
		<input public="1"><c path="String"/></input>
	</class>
	<class path="js.Symbol" params="" file="/usr/local/lib/haxe/std/js/Symbol.hx" extern="1">
		<for_ public="1" set="method" static="1">
			<f a="key">
				<c path="String"/>
				<c path="js.Symbol"/>
			</f>
			<meta><m n=":native"><e>"for"</e></m></meta>
			<haxe_doc>Searches for existing symbols with the given key and returns it if found.
		Otherwise a new symbol gets created in the global symbol registry with this key.</haxe_doc>
		</for_>
		<keyFor public="1" set="method" static="1">
			<f a="sym">
				<c path="js.Symbol"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<haxe_doc>Retrieves a shared symbol key from the global symbol registry for the given symbol.</haxe_doc>
		</keyFor>
		<iterator public="1" set="null" static="1">
			<c path="js.Symbol"/>
			<haxe_doc>A method returning the default iterator for an object.</haxe_doc>
		</iterator>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string containing the description of the Symbol.</haxe_doc>
		</toString>
		<ofObject public="1" params="T" get="inline" set="null" line="60">
			<f a="object">
				<a/>
				<x path="Null"><c path="ofObject.T"/></x>
			</f>
			<haxe_doc>Retrieve symbol from a given `object`.

		NOTE: This is a Haxe-specific method that generates `object[symbol]` expression.</haxe_doc>
		</ofObject>
		<new public="1" set="method">
			<f a="?description">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":selfCall"/></meta>
			<haxe_doc>To create a new primitive symbol, you write `new Symbol()` with an optional string as its `description`.

		NOTE: Unlike plain JavaScript, in Haxe `new Symbol()` syntax is used, however `Symbol(...)` expression
		will be generated as required by JavaScript specification.</haxe_doc>
		</new>
		<meta><m n=":native"><e>"Symbol"</e></m></meta>
	</class>
	<class path="js.Syntax" params="" file="/usr/local/lib/haxe/std/js/Syntax.hx" extern="1">
		<code public="1" set="method" static="1">
			<f a="code:args">
				<c path="String"/>
				<x path="haxe.extern.Rest"><d/></x>
				<d/>
			</f>
			<haxe_doc>Inject `code` directly into generated source.

		`code` must be a string constant.

		Additional `args` are supported to provide code interpolation, for example:
		```
		Syntax.code("console.log({0}, {1})", "hi", 42);
		```
		will generate
		```
		console.log("hi", 42);
		```</haxe_doc>
		</code>
		<construct public="1" params="T" set="method" static="1">
			<f a="cl:args">
				<x path="Class"><c path="construct.T"/></x>
				<x path="haxe.extern.Rest"><d/></x>
				<c path="construct.T"/>
			</f>
			<haxe_doc>Generate `new cl(...args)` expression.</haxe_doc>
			<overloads><construct public="1" set="method">
	<f a="cl:args">
		<c path="String"/>
		<x path="haxe.extern.Rest"><d/></x>
		<d/>
	</f>
	<haxe_doc>Generate `new cl(...args)` expression.</haxe_doc>
</construct></overloads>
		</construct>
		<instanceof public="1" set="method" static="1">
			<f a="v:cl">
				<d/>
				<x path="Class"><d/></x>
				<x path="Bool"/>
			</f>
			<haxe_doc>Generate `v instanceof cl` expression.</haxe_doc>
		</instanceof>
		<typeof public="1" set="method" static="1">
			<f a="o">
				<d/>
				<c path="String"/>
			</f>
			<haxe_doc>Generate `typeof o` expression.</haxe_doc>
		</typeof>
		<strictEq public="1" set="method" static="1">
			<f a="a:b">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Genearte `a === b` expression.</haxe_doc>
		</strictEq>
		<strictNeq public="1" set="method" static="1">
			<f a="a:b">
				<d/>
				<d/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Genearte `a !== b` expression.</haxe_doc>
		</strictNeq>
		<delete public="1" set="method" static="1">
			<f a="o:f">
				<d/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Generate `delete o[f]` expression.</haxe_doc>
			<overloads><delete public="1" set="method">
	<f a="o:f">
		<d/>
		<x path="Int"/>
		<x path="Bool"/>
	</f>
	<haxe_doc>Generate `delete o[f]` expression.</haxe_doc>
</delete></overloads>
		</delete>
		<field public="1" get="inline" set="null" line="61" static="1">
			<f a="o:f">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>Generate `o[f]` expression</haxe_doc>
		</field>
		<haxe_doc>Generate JavaScript syntax not directly supported by Haxe.
	Use only at low-level when specific target-specific code-generation is required.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="js.html.AlignSetting" params="" file="/usr/local/lib/haxe/std/js/html/AlignSetting.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._AlignSetting.AlignSetting_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/AlignSetting.hx" private="1" module="js.html.AlignSetting"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.EventTarget" params="" file="/usr/local/lib/haxe/std/js/html/EventTarget.hx" extern="1">
		<addEventListener public="1" set="method">
			<f a="type:listener:?capture" v="::false">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ capture : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><addEventListener public="1" set="method">
	<f a="type:listener:?capture:?wantsUntrusted" v="::false:">
		<c path="String"/>
		<c path="js.html.EventListener"/>
		<x path="Bool"/>
		<x path="Bool"/>
		<x path="Void"/>
	</f>
	<meta><m n=":value"><e>{ capture : false }</e></m></meta>
	<haxe_doc>@throws DOMError</haxe_doc>
</addEventListener></overloads>
		</addEventListener>
		<removeEventListener public="1" set="method">
			<f a="type:listener:?capture" v="::false">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ capture : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><removeEventListener public="1" set="method">
	<f a="type:listener:?capture" v="::false">
		<c path="String"/>
		<c path="js.html.EventListener"/>
		<x path="Bool"/>
		<x path="Void"/>
	</f>
	<meta><m n=":value"><e>{ capture : false }</e></m></meta>
	<haxe_doc>@throws DOMError</haxe_doc>
</removeEventListener></overloads>
		</removeEventListener>
		<dispatchEvent public="1" set="method">
			<f a="event">
				<c path="js.html.Event"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</dispatchEvent>
		<haxe_doc><![CDATA[`EventTarget` is an interface implemented by objects that can receive events and may have listeners for them.

	Documentation [EventTarget](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/EventTarget>]]></haxe_doc>
		<meta><m n=":native"><e>"EventTarget"</e></m></meta>
	</class>
	<class path="js.html.Node" params="" file="/usr/local/lib/haxe/std/js/html/Node.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<ELEMENT_NODE public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ELEMENT_NODE>
		<ATTRIBUTE_NODE public="1" get="inline" set="null" expr="2" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</ATTRIBUTE_NODE>
		<TEXT_NODE public="1" get="inline" set="null" expr="3" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</TEXT_NODE>
		<CDATA_SECTION_NODE public="1" get="inline" set="null" expr="4" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</CDATA_SECTION_NODE>
		<ENTITY_REFERENCE_NODE public="1" get="inline" set="null" expr="5" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</ENTITY_REFERENCE_NODE>
		<ENTITY_NODE public="1" get="inline" set="null" expr="6" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</ENTITY_NODE>
		<PROCESSING_INSTRUCTION_NODE public="1" get="inline" set="null" expr="7" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</PROCESSING_INSTRUCTION_NODE>
		<COMMENT_NODE public="1" get="inline" set="null" expr="8" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</COMMENT_NODE>
		<DOCUMENT_NODE public="1" get="inline" set="null" expr="9" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</DOCUMENT_NODE>
		<DOCUMENT_TYPE_NODE public="1" get="inline" set="null" expr="10" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10</e></m></meta>
		</DOCUMENT_TYPE_NODE>
		<DOCUMENT_FRAGMENT_NODE public="1" get="inline" set="null" expr="11" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>11</e></m></meta>
		</DOCUMENT_FRAGMENT_NODE>
		<NOTATION_NODE public="1" get="inline" set="null" expr="12" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>12</e></m></meta>
		</NOTATION_NODE>
		<DOCUMENT_POSITION_DISCONNECTED public="1" get="inline" set="null" expr="1" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</DOCUMENT_POSITION_DISCONNECTED>
		<DOCUMENT_POSITION_PRECEDING public="1" get="inline" set="null" expr="2" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</DOCUMENT_POSITION_PRECEDING>
		<DOCUMENT_POSITION_FOLLOWING public="1" get="inline" set="null" expr="4" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</DOCUMENT_POSITION_FOLLOWING>
		<DOCUMENT_POSITION_CONTAINS public="1" get="inline" set="null" expr="8" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</DOCUMENT_POSITION_CONTAINS>
		<DOCUMENT_POSITION_CONTAINED_BY public="1" get="inline" set="null" expr="16" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>16</e></m></meta>
		</DOCUMENT_POSITION_CONTAINED_BY>
		<DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC public="1" get="inline" set="null" expr="32" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32</e></m></meta>
		</DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC>
		<nodeType public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns an <code>unsigned short</code> representing the type of the node. Possible values are:
		 <table class="standard-table">
		  
		   <tr>
		    Name
		    Value
		   </tr>
		   <tr>
		    <td><code>ELEMENT_NODE</code></td>
		    <td><code>1</code></td>
		   </tr>
		   <tr>
		    <td><code>ATTRIBUTE_NODE</code> <em>(deprecated)</em></td>
		    <td><code>2</code></td>
		   </tr>
		   <tr>
		    <td><code>TEXT_NODE</code></td>
		    <td><code>3</code></td>
		   </tr>
		   <tr>
		    <td><code>CDATA_SECTION_NODE</code> <em>(deprecated)</em></td>
		    <td><code>4</code></td>
		   </tr>
		   <tr>
		    <td><code>ENTITY_REFERENCE_NODE</code> <em>(deprecated)</em></td>
		    <td><code>5</code></td>
		   </tr>
		   <tr>
		    <td><code>ENTITY_NODE</code> <em>(deprecated)</em></td>
		    <td><code>6</code></td>
		   </tr>
		   <tr>
		    <td><code>PROCESSING_INSTRUCTION_NODE</code></td>
		    <td><code>7</code></td>
		   </tr>
		   <tr>
		    <td><code>COMMENT_NODE</code></td>
		    <td><code>8</code></td>
		   </tr>
		   <tr>
		    <td><code>DOCUMENT_NODE</code></td>
		    <td><code>9</code></td>
		   </tr>
		   <tr>
		    <td><code>DOCUMENT_TYPE_NODE</code></td>
		    <td><code>10</code></td>
		   </tr>
		   <tr>
		    <td><code>DOCUMENT_FRAGMENT_NODE</code></td>
		    <td><code>11</code></td>
		   </tr>
		   <tr>
		    <td><code>NOTATION_NODE</code> <em>(deprecated)</em></td>
		    <td><code>12</code></td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</nodeType>
		<nodeName public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` containing the name of the `Node`. The structure of the name will differ with the name type. E.g. An `HTMLElement` will contain the name of the corresponding tag, like `'audio'` for an `HTMLAudioElement`, a `Text` node will have the `'#text'` string, or a `Document` node will have the `'#document'` string.</haxe_doc>
		</nodeName>
		<baseURI public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the base URL. The concept of base URL changes from one language to another; in HTML, it corresponds to the protocol, the domain name and the directory structure, that is all until the last `'/'`.</haxe_doc>
		</baseURI>
		<ownerDocument public="1" set="null">
			<c path="js.html.HTMLDocument"/>
			<haxe_doc>Returns the `Document` that this node belongs to. If no document is associated with it, returns `null`.</haxe_doc>
		</ownerDocument>
		<parentNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` that is the parent of this node. If there is no such node, like if this node is the top of the tree or if doesn't participate in a tree, this property returns `null`.</haxe_doc>
		</parentNode>
		<parentElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns an `Element` that is the parent of this node. If the node has no parent, or if that parent is not an `Element`, this property returns `null`.</haxe_doc>
		</parentElement>
		<childNodes public="1" set="null">
			<c path="js.html.NodeList"/>
			<haxe_doc>Returns a live `NodeList` containing all the children of this node. `NodeList` being live means that if the children of the `Node` change, the `NodeList` object is automatically updated.</haxe_doc>
		</childNodes>
		<firstChild public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` representing the first direct child node of the node, or `null` if the node has no child.</haxe_doc>
		</firstChild>
		<lastChild public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` representing the last direct child node of the node, or `null` if the node has no child.</haxe_doc>
		</lastChild>
		<previousSibling public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` representing the previous node in the tree, or `null` if there isn't such node.</haxe_doc>
		</previousSibling>
		<nextSibling public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` representing the next node in the tree, or `null` if there isn't such node.</haxe_doc>
		</nextSibling>
		<nodeValue public="1">
			<c path="String"/>
			<haxe_doc>Returns / Sets the value of the current node</haxe_doc>
		</nodeValue>
		<textContent public="1">
			<c path="String"/>
			<haxe_doc>Returns / Sets the textual content of an element and all its descendants.</haxe_doc>
		</textContent>
		<namespaceURI public="1" set="null">
			<c path="String"/>
			<haxe_doc>The namespace URI of this node, or `null` if it is no namespace.
		 
		 Note: In Firefox 3.5 and earlier, HTML elements are in no namespace. In later versions, HTML elements are in the `https://www.w3.org/1999/xhtml/` namespace in both HTML and XML trees. `1.9.2`</haxe_doc>
		</namespaceURI>
		<prefix public="1" set="null">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the namespace prefix of the node, or `null` if no prefix is specified.</haxe_doc>
		</prefix>
		<localName public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the local part of the qualified name of an element.
		 
		 Note: In Firefox 3.5 and earlier, the property upper-cases the local name for HTML elements (but not XHTML elements). In later versions, this does not happen, so the property is in lower case for both HTML and XHTML. `1.9.2`</haxe_doc>
		</localName>
		<hasChildNodes public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>Returns a `Boolean` indicating if the element has any child nodes, or not.</haxe_doc>
		</hasChildNodes>
		<insertBefore public="1" set="method">
			<f a="node:child">
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertBefore>
		<appendChild public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</appendChild>
		<replaceChild public="1" set="method">
			<f a="node:child">
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</replaceChild>
		<removeChild public="1" set="method">
			<f a="child">
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeChild>
		<normalize public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Clean up all the text nodes under this element (merge adjacent, remove empty).</haxe_doc>
		</normalize>
		<cloneNode public="1" set="method">
			<f a="?deep" v="false">
				<x path="Bool"/>
				<c path="js.html.Node"/>
			</f>
			<meta><m n=":value"><e>{ deep : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</cloneNode>
		<isEqualNode public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns a `Boolean` which indicates whether or not two nodes are of the same type and all their defining data points match.</haxe_doc>
		</isEqualNode>
		<compareDocumentPosition public="1" set="method">
			<f a="other">
				<c path="js.html.Node"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the context objects root which optionally includes the shadow root if it is available. </haxe_doc>
		</compareDocumentPosition>
		<contains public="1" set="method">
			<f a="other">
				<c path="js.html.Node"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns the context objects root which optionally includes the shadow root if it is available. </haxe_doc>
		</contains>
		<lookupPrefix public="1" set="method">
			<f a="namespace_">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Clean up all the text nodes under this element (merge adjacent, remove empty).</haxe_doc>
		</lookupPrefix>
		<lookupNamespaceURI public="1" set="method">
			<f a="prefix">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Clean up all the text nodes under this element (merge adjacent, remove empty).</haxe_doc>
		</lookupNamespaceURI>
		<isDefaultNamespace public="1" set="method">
			<f a="namespace_">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns a `Boolean` which indicates whether or not two nodes are of the same type and all their defining data points match.</haxe_doc>
		</isDefaultNamespace>
		<haxe_doc><![CDATA[A `Node` is an interface from which a number of DOM types inherit, and allows these various types to be treated (or tested) similarly.

	Documentation [Node](https://developer.mozilla.org/en-US/docs/Web/API/Node) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Node$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Node>]]></haxe_doc>
		<meta><m n=":native"><e>"Node"</e></m></meta>
	</class>
	<class path="js.html.DOMElement" params="" file="/usr/local/lib/haxe/std/js/html/DOMElement.hx" extern="1">
		<extends path="js.html.Node"/>
		<tagName public="1" set="null"><c path="String"/></tagName>
		<id public="1"><c path="String"/></id>
		<className public="1"><c path="String"/></className>
		<classList public="1" set="null"><c path="js.html.DOMTokenList"/></classList>
		<attributes public="1" set="null"><c path="js.html.NamedNodeMap"/></attributes>
		<onwheel public="1"><x path="haxe.Function"/></onwheel>
		<title public="1"><c path="String"/></title>
		<lang public="1"><c path="String"/></lang>
		<dir public="1"><c path="String"/></dir>
		<dataset public="1" set="null"><c path="js.html.DOMStringMap"/></dataset>
		<innerText public="1"><c path="String"/></innerText>
		<itemScope public="1"><x path="Bool"/></itemScope>
		<itemType public="1" set="null"><c path="js.html.DOMTokenList"/></itemType>
		<itemId public="1"><c path="String"/></itemId>
		<itemRef public="1" set="null"><c path="js.html.DOMTokenList"/></itemRef>
		<itemProp public="1" set="null"><c path="js.html.DOMTokenList"/></itemProp>
		<properties public="1" set="null"><c path="js.html.HTMLPropertiesCollection"/></properties>
		<itemValue public="1"><d/></itemValue>
		<hidden public="1"><x path="Bool"/></hidden>
		<tabIndex public="1"><x path="Int"/></tabIndex>
		<accessKey public="1"><c path="String"/></accessKey>
		<accessKeyLabel public="1" set="null"><c path="String"/></accessKeyLabel>
		<draggable public="1"><x path="Bool"/></draggable>
		<contentEditable public="1"><c path="String"/></contentEditable>
		<isContentEditable public="1" set="null"><x path="Bool"/></isContentEditable>
		<contextMenu public="1" set="null"><c path="js.html.MenuElement"/></contextMenu>
		<spellcheck public="1"><x path="Bool"/></spellcheck>
		<style public="1" set="null"><c path="js.html.CSSStyleDeclaration"/></style>
		<oncopy public="1"><x path="haxe.Function"/></oncopy>
		<oncut public="1"><x path="haxe.Function"/></oncut>
		<onpaste public="1"><x path="haxe.Function"/></onpaste>
		<offsetParent public="1" set="null"><c path="js.html.Element"/></offsetParent>
		<offsetTop public="1" set="null"><x path="Int"/></offsetTop>
		<offsetLeft public="1" set="null"><x path="Int"/></offsetLeft>
		<offsetWidth public="1" set="null"><x path="Int"/></offsetWidth>
		<offsetHeight public="1" set="null"><x path="Int"/></offsetHeight>
		<scrollTop public="1"><x path="Int"/></scrollTop>
		<scrollLeft public="1"><x path="Int"/></scrollLeft>
		<scrollWidth public="1" set="null"><x path="Int"/></scrollWidth>
		<scrollHeight public="1" set="null"><x path="Int"/></scrollHeight>
		<clientTop public="1" set="null"><x path="Int"/></clientTop>
		<clientLeft public="1" set="null"><x path="Int"/></clientLeft>
		<clientWidth public="1" set="null"><x path="Int"/></clientWidth>
		<clientHeight public="1" set="null"><x path="Int"/></clientHeight>
		<scrollTopMax public="1" set="null"><x path="Int"/></scrollTopMax>
		<scrollLeftMax public="1" set="null"><x path="Int"/></scrollLeftMax>
		<innerHTML public="1"><c path="String"/></innerHTML>
		<outerHTML public="1"><c path="String"/></outerHTML>
		<shadowRoot public="1" set="null"><c path="js.html.ShadowRoot"/></shadowRoot>
		<onabort public="1"><x path="haxe.Function"/></onabort>
		<onblur public="1"><x path="haxe.Function"/></onblur>
		<onfocus public="1"><x path="haxe.Function"/></onfocus>
		<oncanplay public="1"><x path="haxe.Function"/></oncanplay>
		<oncanplaythrough public="1"><x path="haxe.Function"/></oncanplaythrough>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<onclick public="1"><x path="haxe.Function"/></onclick>
		<oncontextmenu public="1"><x path="haxe.Function"/></oncontextmenu>
		<ondblclick public="1"><x path="haxe.Function"/></ondblclick>
		<ondrag public="1"><x path="haxe.Function"/></ondrag>
		<ondragend public="1"><x path="haxe.Function"/></ondragend>
		<ondragenter public="1"><x path="haxe.Function"/></ondragenter>
		<ondragleave public="1"><x path="haxe.Function"/></ondragleave>
		<ondragover public="1"><x path="haxe.Function"/></ondragover>
		<ondragstart public="1"><x path="haxe.Function"/></ondragstart>
		<ondrop public="1"><x path="haxe.Function"/></ondrop>
		<ondurationchange public="1"><x path="haxe.Function"/></ondurationchange>
		<onemptied public="1"><x path="haxe.Function"/></onemptied>
		<onended public="1"><x path="haxe.Function"/></onended>
		<oninput public="1"><x path="haxe.Function"/></oninput>
		<oninvalid public="1"><x path="haxe.Function"/></oninvalid>
		<onkeydown public="1"><x path="haxe.Function"/></onkeydown>
		<onkeypress public="1"><x path="haxe.Function"/></onkeypress>
		<onkeyup public="1"><x path="haxe.Function"/></onkeyup>
		<onload public="1"><x path="haxe.Function"/></onload>
		<onloadeddata public="1"><x path="haxe.Function"/></onloadeddata>
		<onloadedmetadata public="1"><x path="haxe.Function"/></onloadedmetadata>
		<onloadstart public="1"><x path="haxe.Function"/></onloadstart>
		<onmousedown public="1"><x path="haxe.Function"/></onmousedown>
		<onmouseenter public="1"><x path="haxe.Function"/></onmouseenter>
		<onmouseleave public="1"><x path="haxe.Function"/></onmouseleave>
		<onmousemove public="1"><x path="haxe.Function"/></onmousemove>
		<onmouseout public="1"><x path="haxe.Function"/></onmouseout>
		<onmouseover public="1"><x path="haxe.Function"/></onmouseover>
		<onmouseup public="1"><x path="haxe.Function"/></onmouseup>
		<onpause public="1"><x path="haxe.Function"/></onpause>
		<onplay public="1"><x path="haxe.Function"/></onplay>
		<onplaying public="1"><x path="haxe.Function"/></onplaying>
		<onprogress public="1"><x path="haxe.Function"/></onprogress>
		<onratechange public="1"><x path="haxe.Function"/></onratechange>
		<onreset public="1"><x path="haxe.Function"/></onreset>
		<onresize public="1"><x path="haxe.Function"/></onresize>
		<onscroll public="1"><x path="haxe.Function"/></onscroll>
		<onseeked public="1"><x path="haxe.Function"/></onseeked>
		<onseeking public="1"><x path="haxe.Function"/></onseeking>
		<onselect public="1"><x path="haxe.Function"/></onselect>
		<onshow public="1"><x path="haxe.Function"/></onshow>
		<onstalled public="1"><x path="haxe.Function"/></onstalled>
		<onsubmit public="1"><x path="haxe.Function"/></onsubmit>
		<onsuspend public="1"><x path="haxe.Function"/></onsuspend>
		<ontimeupdate public="1"><x path="haxe.Function"/></ontimeupdate>
		<onvolumechange public="1"><x path="haxe.Function"/></onvolumechange>
		<onwaiting public="1"><x path="haxe.Function"/></onwaiting>
		<onpointercancel public="1"><x path="haxe.Function"/></onpointercancel>
		<onpointerdown public="1"><x path="haxe.Function"/></onpointerdown>
		<onpointerup public="1"><x path="haxe.Function"/></onpointerup>
		<onpointermove public="1"><x path="haxe.Function"/></onpointermove>
		<onpointerout public="1"><x path="haxe.Function"/></onpointerout>
		<onpointerover public="1"><x path="haxe.Function"/></onpointerover>
		<onpointerenter public="1"><x path="haxe.Function"/></onpointerenter>
		<onpointerleave public="1"><x path="haxe.Function"/></onpointerleave>
		<ongotpointercapture public="1"><x path="haxe.Function"/></ongotpointercapture>
		<onlostpointercapture public="1"><x path="haxe.Function"/></onlostpointercapture>
		<onfullscreenchange public="1"><x path="haxe.Function"/></onfullscreenchange>
		<onfullscreenerror public="1"><x path="haxe.Function"/></onfullscreenerror>
		<onpointerlockchange public="1"><x path="haxe.Function"/></onpointerlockchange>
		<onpointerlockerror public="1"><x path="haxe.Function"/></onpointerlockerror>
		<previousElementSibling public="1" set="null"><c path="js.html.Element"/></previousElementSibling>
		<nextElementSibling public="1" set="null"><c path="js.html.Element"/></nextElementSibling>
		<onerror public="1"><x path="haxe.Function"/></onerror>
		<children public="1" set="null"><c path="js.html.HTMLCollection"/></children>
		<firstElementChild public="1" set="null"><c path="js.html.Element"/></firstElementChild>
		<lastElementChild public="1" set="null"><c path="js.html.Element"/></lastElementChild>
		<childElementCount public="1" set="null"><x path="Int"/></childElementCount>
		<ontouchstart public="1"><x path="haxe.Function"/></ontouchstart>
		<ontouchend public="1"><x path="haxe.Function"/></ontouchend>
		<ontouchmove public="1"><x path="haxe.Function"/></ontouchmove>
		<ontouchcancel public="1"><x path="haxe.Function"/></ontouchcancel>
		<getAttributeNames public="1" set="method"><f a=""><c path="Array"><c path="String"/></c></f></getAttributeNames>
		<getAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="String"/>
</f></getAttribute>
		<getAttributeNS public="1" set="method"><f a="namespace_:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></getAttributeNS>
		<setAttribute public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setAttribute>
		<setAttributeNS public="1" set="method">
			<f a="namespace_:name:value">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setAttributeNS>
		<removeAttribute public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeAttribute>
		<removeAttributeNS public="1" set="method">
			<f a="namespace_:localName">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeAttributeNS>
		<hasAttribute public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttribute>
		<hasAttributeNS public="1" set="method"><f a="namespace_:localName">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></hasAttributeNS>
		<hasAttributes public="1" set="method"><f a=""><x path="Bool"/></f></hasAttributes>
		<closest public="1" set="method">
			<f a="selector">
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</closest>
		<matches public="1" set="method">
			<f a="selector">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</matches>
		<webkitMatchesSelector public="1" set="method">
			<f a="selector">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</webkitMatchesSelector>
		<getElementsByTagName public="1" set="method"><f a="localName">
	<c path="String"/>
	<c path="js.html.HTMLCollection"/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method">
			<f a="namespace_:localName">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.HTMLCollection"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getElementsByTagNameNS>
		<getElementsByClassName public="1" set="method"><f a="classNames">
	<c path="String"/>
	<c path="js.html.HTMLCollection"/>
</f></getElementsByClassName>
		<setPointerCapture public="1" set="method">
			<f a="pointerId">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setPointerCapture>
		<releasePointerCapture public="1" set="method">
			<f a="pointerId">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</releasePointerCapture>
		<setCapture public="1" set="method">
			<f a="?retargetToElement" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ retargetToElement : false }</e></m></meta>
		</setCapture>
		<releaseCapture public="1" set="method"><f a=""><x path="Void"/></f></releaseCapture>
		<requestPointerLock public="1" set="method"><f a=""><x path="Void"/></f></requestPointerLock>
		<getAttributeNode public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></getAttributeNode>
		<setAttributeNode public="1" set="method">
			<f a="newAttr">
				<c path="js.html.Attr"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setAttributeNode>
		<removeAttributeNode public="1" set="method">
			<f a="oldAttr">
				<c path="js.html.Attr"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeAttributeNode>
		<getAttributeNodeNS public="1" set="method"><f a="namespaceURI:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.Attr"/>
</f></getAttributeNodeNS>
		<setAttributeNodeNS public="1" set="method">
			<f a="newAttr">
				<c path="js.html.Attr"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setAttributeNodeNS>
		<click public="1" set="method"><f a=""><x path="Void"/></f></click>
		<focus public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</focus>
		<blur public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</blur>
		<getClientRects public="1" set="method"><f a=""><c path="js.html.DOMRectList"/></f></getClientRects>
		<getBoundingClientRect public="1" set="method"><f a=""><c path="js.html.DOMRect"/></f></getBoundingClientRect>
		<scrollIntoView public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollIntoViewOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scrollIntoView public="1" set="method"><f a="top">
	<x path="Bool"/>
	<x path="Void"/>
</f></scrollIntoView></overloads>
		</scrollIntoView>
		<scroll public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollToOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scroll public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scroll></overloads>
		</scroll>
		<scrollTo public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollToOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scrollTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scrollTo></overloads>
		</scrollTo>
		<scrollBy public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollToOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scrollBy public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scrollBy></overloads>
		</scrollBy>
		<insertAdjacentHTML public="1" set="method">
			<f a="position:text">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertAdjacentHTML>
		<querySelector public="1" set="method">
			<f a="selectors">
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</querySelector>
		<querySelectorAll public="1" set="method">
			<f a="selectors">
				<c path="String"/>
				<c path="js.html.NodeList"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</querySelectorAll>
		<createShadowRoot public="1" set="method">
			<f a=""><c path="js.html.ShadowRoot"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createShadowRoot>
		<getDestinationInsertionPoints public="1" set="method">
			<f a=""><c path="js.html.NodeList"/></f>
			<haxe_doc>…</haxe_doc>
		</getDestinationInsertionPoints>
		<requestFullscreen public="1" set="method">
			<f a="?options">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</requestFullscreen>
		<animate public="1" set="method">
			<f a="frames:?options">
				<d/>
				<x path="haxe.extern.EitherType">
					<x path="Float"/>
					<d/>
				</x>
				<c path="js.html.Animation"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</animate>
		<getAnimations public="1" set="method">
			<f a=""><c path="Array"><c path="js.html.Animation"/></c></f>
			<haxe_doc>Returns an array of Animation objects currently active on the element.</haxe_doc>
		</getAnimations>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<convertQuadFromNode public="1" set="method">
			<f a="quad:from:?options">
				<c path="js.html.DOMQuad"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMQuad"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertQuadFromNode>
		<convertRectFromNode public="1" set="method">
			<f a="rect:from:?options">
				<c path="js.html.DOMRectReadOnly"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMQuad"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertRectFromNode>
		<convertPointFromNode public="1" set="method">
			<f a="point:from:?options">
				<t path="js.html.DOMPointInit"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMPoint"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertPointFromNode>
		<haxe_doc><![CDATA[The `Element` interface represents an object of a `Document`. This interface describes methods and properties common to all kinds of elements. Specific behaviors are described in interfaces which inherit from `Element` but add additional functionality.

	Documentation [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Element$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Element>]]></haxe_doc>
		<meta><m n=":native"><e>"Element"</e></m></meta>
	</class>
	<class path="js.html.Element" params="" file="/usr/local/lib/haxe/std/js/html/Element.hx" extern="1">
		<extends path="js.html.DOMElement"/>
		<haxe_doc><![CDATA[The `HTMLElement` interface represents any HTML element. Some elements directly implement this interface, others implement it via an interface that inherits it.

	Documentation [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLElement"</e></m></meta>
	</class>
	<class path="js.html.AnchorElement" params="" file="/usr/local/lib/haxe/std/js/html/AnchorElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<target public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `target` HTML attribute, indicating where to display the linked resource.</haxe_doc>
		</target>
		<download public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it. The value is a URL with a scheme like `http:`, `file:`, `data:` or even `blob:` (created with `URL.createObjectURL`).</haxe_doc>
		</download>
		<ping public="1"><c path="String"/></ping>
		<rel public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `rel` HTML attribute, specifying the relationship of the target object to the linked object.</haxe_doc>
		</rel>
		<relList public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Returns a `DOMTokenList` that reflects the `rel` HTML attribute, as a list of tokens.</haxe_doc>
		</relList>
		<hreflang public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `hreflang` HTML attribute, indicating the language of the linked resource.</haxe_doc>
		</hreflang>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `type` HTML attribute, indicating the MIME type of the linked resource.</haxe_doc>
		</type>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` being a synonym for the `Node.textContent` property.</haxe_doc>
		</text>
		<coords public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing a comma-separated list of coordinates.</haxe_doc>
		</coords>
		<charset public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the character encoding of the linked resource.</haxe_doc>
		</charset>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the anchor name.</haxe_doc>
		</name>
		<rev public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing that the `rev` HTML attribute, specifying the relationship of the link object to the target object.</haxe_doc>
		</rev>
		<shape public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the shape of the active area.</haxe_doc>
		</shape>
		<href public="1"><c path="String"/></href>
		<origin public="1" set="null"><c path="String"/></origin>
		<protocol public="1"><c path="String"/></protocol>
		<username public="1"><c path="String"/></username>
		<password public="1"><c path="String"/></password>
		<host public="1"><c path="String"/></host>
		<hostname public="1"><c path="String"/></hostname>
		<port public="1"><c path="String"/></port>
		<pathname public="1"><c path="String"/></pathname>
		<search public="1"><c path="String"/></search>
		<hash public="1"><c path="String"/></hash>
		<haxe_doc><![CDATA[The `HTMLAnchorElement` interface represents hyperlink elements and provides special properties and methods (beyond those of the regular `HTMLElement` object interface they also have available to them by inheritance) for manipulating the layout and presentation of such elements.

	Documentation [HTMLAnchorElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAnchorElement"</e></m></meta>
	</class>
	<class path="js.html.Animation" params="" file="/usr/local/lib/haxe/std/js/html/Animation.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<id public="1">
			<c path="String"/>
			<haxe_doc>Gets and sets the `String` used to identify the animation.</haxe_doc>
		</id>
		<effect public="1" set="null">
			<c path="js.html.AnimationEffectReadOnly"/>
			<haxe_doc>Gets and sets the `AnimationEffectReadOnly` associated with this animation. This will usually be a `KeyframeEffect` object.</haxe_doc>
		</effect>
		<timeline public="1" set="null">
			<c path="js.html.AnimationTimeline"/>
			<haxe_doc>Gets or sets the `AnimationTimeline` associated with this animation.</haxe_doc>
		</timeline>
		<startTime public="1">
			<x path="Float"/>
			<haxe_doc>Gets or sets the scheduled time when an animation's playback should begin.</haxe_doc>
		</startTime>
		<currentTime public="1">
			<x path="Float"/>
			<haxe_doc>The current time value of the animation in milliseconds, whether running or paused. If the animation lacks a `AnimationTimeline`, is inactive or hasn't been played yet, its value is `null`.</haxe_doc>
		</currentTime>
		<playbackRate public="1">
			<x path="Float"/>
			<haxe_doc>Gets or sets the playback rate of the animation.</haxe_doc>
		</playbackRate>
		<playState public="1" set="null">
			<x path="js.html.AnimationPlayState"/>
			<haxe_doc>Returns an enumerated value describing the playback state of an animation.</haxe_doc>
		</playState>
		<ready public="1" set="null">
			<c path="js.Promise"><c path="js.html.Animation"/></c>
			<haxe_doc>Returns the current ready Promise for this animation.</haxe_doc>
		</ready>
		<finished public="1" set="null">
			<c path="js.Promise"><c path="js.html.Animation"/></c>
			<haxe_doc>Returns the current finished Promise for this animation.</haxe_doc>
		</finished>
		<onfinish public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Gets and sets the event handler for the `finish` event.</haxe_doc>
		</onfinish>
		<oncancel public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Gets and sets the event handler for the `cancel` event.</haxe_doc>
		</oncancel>
		<cancel public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Clears all `KeyframeEffect` caused by this animation and aborts its playback.</haxe_doc>
		</cancel>
		<finish public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</finish>
		<play public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</play>
		<pause public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</pause>
		<reverse public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</reverse>
		<new public="1" set="method">
			<f a="?effect:?timeline">
				<c path="js.html.KeyframeEffectReadOnly"/>
				<c path="js.html.AnimationTimeline"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Animation` interface of the Web Animations API represents a single animation player and provides playback controls and a timeline for an animation node or source.

	Documentation [Animation](https://developer.mozilla.org/en-US/docs/Web/API/Animation) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Animation$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Animation>]]></haxe_doc>
		<meta><m n=":native"><e>"Animation"</e></m></meta>
	</class>
	<class path="js.html.AnimationEffectReadOnly" params="" file="/usr/local/lib/haxe/std/js/html/AnimationEffectReadOnly.hx" extern="1">
		<timing public="1" set="null">
			<c path="js.html.AnimationEffectTimingReadOnly"/>
			<haxe_doc>The `AnimationEffectTimingReadOnly` object associated with the animation containing all the animation's timing values.</haxe_doc>
		</timing>
		<getComputedTiming public="1" set="method">
			<f a=""><t path="js.html.ComputedTimingProperties"/></f>
			<haxe_doc>Returns the calculated timing properties for this Animation Effect.</haxe_doc>
		</getComputedTiming>
		<haxe_doc><![CDATA[The `AnimationEffectReadOnly` interface of the Web Animations API defines current and future animation effects like `KeyframeEffect`, which can be passed to `Animation` objects for playing, and `KeyframeEffectReadOnly` (which is used by CSS Animations and Transitions).

	Documentation [AnimationEffectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly>]]></haxe_doc>
		<meta><m n=":native"><e>"AnimationEffectReadOnly"</e></m></meta>
	</class>
	<typedef path="js.html.AnimationEffectTimingProperties" params="" file="/usr/local/lib/haxe/std/js/html/AnimationEffectTimingProperties.hx"><a>
	<iterations>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</iterations>
	<iterationStart>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</iterationStart>
	<fill>
		<x path="Null"><x path="js.html.FillMode"/></x>
		<meta><m n=":optional"/></meta>
	</fill>
	<endDelay>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</endDelay>
	<easing>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</easing>
	<duration>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Float"/>
	<c path="String"/>
</x></x>
		<meta><m n=":optional"/></meta>
	</duration>
	<direction>
		<x path="Null"><x path="js.html.PlaybackDirection"/></x>
		<meta><m n=":optional"/></meta>
	</direction>
	<delay>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</delay>
</a></typedef>
	<class path="js.html.AnimationEffectTimingReadOnly" params="" file="/usr/local/lib/haxe/std/js/html/AnimationEffectTimingReadOnly.hx" extern="1">
		<delay public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The number of milliseconds to delay the start of the animation. Defaults to `0`.</haxe_doc>
		</delay>
		<endDelay public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation. Defaults to `0`.</haxe_doc>
		</endDelay>
		<fill public="1" set="null">
			<x path="js.html.FillMode"/>
			<haxe_doc>Dictates whether the animation's effects should be reflected by the element(s) state prior to playing (`backwards`), retained after the animation has completed playing (`forwards`), or `both`. Defaults to `none`.</haxe_doc>
		</fill>
		<iterationStart public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A number representing which repetition the animation begins at and its progress through it.</haxe_doc>
		</iterationStart>
		<iterations public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The number of times the animation should repeat. Defaults to `1`, and can also take a value of infinity to make it repeat infinitely.</haxe_doc>
		</iterations>
		<duration public="1" set="null">
			<x path="haxe.extern.EitherType">
				<x path="Float"/>
				<c path="String"/>
			</x>
			<haxe_doc>The number of milliseconds each iteration of the animation takes to complete. Defaults to `0`.</haxe_doc>
		</duration>
		<direction public="1" set="null">
			<x path="js.html.PlaybackDirection"/>
			<haxe_doc>Whether the animation runs forwards (`normal`), backwards (`reverse`), switches direction after each iteration (`alternate`), or runs backwards and switches direction after each iteration (`alternate-reverse`). Defaults to `normal`.</haxe_doc>
		</direction>
		<easing public="1" set="null">
			<c path="String"/>
			<haxe_doc>The rate of the animation's change over time. Accepts the pre-defined values `linear`, `ease`, `ease-in`, `ease-out`, and `ease-in-out`, or a custom cubic-bezier value like `cubic-bezier(0.42, 0, 0.58, 1)`. Defaults to `linear`.</haxe_doc>
		</easing>
		<haxe_doc><![CDATA[The `AnimationEffectTimingReadOnly` interface of the Web Animations API is comprised of timing properties.

	Documentation [AnimationEffectTimingReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingReadOnly) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingReadOnly$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingReadOnly>]]></haxe_doc>
		<meta><m n=":native"><e>"AnimationEffectTimingReadOnly"</e></m></meta>
	</class>
	<abstract path="js.html.AnimationPlayState" params="" file="/usr/local/lib/haxe/std/js/html/AnimationPlayState.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._AnimationPlayState.AnimationPlayState_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/AnimationPlayState.hx" private="1" module="js.html.AnimationPlayState"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.AnimationTimeline" params="" file="/usr/local/lib/haxe/std/js/html/AnimationTimeline.hx" extern="1">
		<currentTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns the time value in milliseconds for this timeline or `null` if this timeline is inactive.</haxe_doc>
		</currentTime>
		<haxe_doc><![CDATA[The `AnimationTimeline` interface of the Web Animations API represents the timeline of an animation. This interface exists to define timeline features (inherited by `DocumentTimeline` and future timeline types) and is not itself directly used by developers. Anywhere you see `AnimationTimeline`, you should use `DocumentTimeline` or any other timeline type instead.

	Documentation [AnimationTimeline](https://developer.mozilla.org/en-US/docs/Web/API/AnimationTimeline) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AnimationTimeline$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AnimationTimeline>]]></haxe_doc>
		<meta><m n=":native"><e>"AnimationTimeline"</e></m></meta>
	</class>
	<class path="js.html.AppletElement" params="" file="/usr/local/lib/haxe/std/js/html/AppletElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1"><c path="String"/></align>
		<alt public="1"><c path="String"/></alt>
		<archive public="1"><c path="String"/></archive>
		<code public="1"><c path="String"/></code>
		<codeBase public="1"><c path="String"/></codeBase>
		<height public="1"><c path="String"/></height>
		<hspace public="1"><x path="Int"/></hspace>
		<name public="1"><c path="String"/></name>
		<object public="1"><c path="String"/></object>
		<vspace public="1"><x path="Int"/></vspace>
		<width public="1"><c path="String"/></width>
		<meta><m n=":native"><e>"HTMLAppletElement"</e></m></meta>
	</class>
	<class path="js.html.AreaElement" params="" file="/usr/local/lib/haxe/std/js/html/AreaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<alt public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `alt` HTML attribute, containing alternative text for the element.</haxe_doc>
		</alt>
		<coords public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `coords` HTML attribute, containing coordinates to define the hot-spot region.</haxe_doc>
		</coords>
		<shape public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `shape` HTML attribute, indicating the shape of the hot-spot, limited to known values.</haxe_doc>
		</shape>
		<target public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `target` HTML attribute, indicating the browsing context in which to open the linked resource.</haxe_doc>
		</target>
		<download public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adapt it.</haxe_doc>
		</download>
		<ping public="1"><c path="String"/></ping>
		<rel public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `rel` HTML attribute, indicating relationships of the current document to the linked resource.</haxe_doc>
		</rel>
		<relList public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Returns a `DOMTokenList` that reflects the `rel` HTML attribute, indicating relationships of the current document to the linked resource, as a list of tokens.</haxe_doc>
		</relList>
		<noHref public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` flag indicating if the area is inactive (`true`) or active (`false`).</haxe_doc>
		</noHref>
		<href public="1"><c path="String"/></href>
		<origin public="1" set="null"><c path="String"/></origin>
		<protocol public="1"><c path="String"/></protocol>
		<username public="1"><c path="String"/></username>
		<password public="1"><c path="String"/></password>
		<host public="1"><c path="String"/></host>
		<hostname public="1"><c path="String"/></hostname>
		<port public="1"><c path="String"/></port>
		<pathname public="1"><c path="String"/></pathname>
		<search public="1"><c path="String"/></search>
		<hash public="1"><c path="String"/></hash>
		<haxe_doc><![CDATA[The `HTMLAreaElement` interface provides special properties and methods (beyond those of the regular object `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of area elements.

	Documentation [HTMLAreaElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLAreaElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAreaElement"</e></m></meta>
	</class>
	<class path="js.html.Attr" params="" file="/usr/local/lib/haxe/std/js/html/Attr.hx" extern="1">
		<extends path="js.html.Node"/>
		<value public="1"><c path="String"/></value>
		<name public="1" set="null"><c path="String"/></name>
		<specified public="1" set="null"><x path="Bool"/></specified>
		<ownerElement public="1" set="null"><c path="js.html.Element"/></ownerElement>
		<haxe_doc><![CDATA[This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., `Element.getAttribute()`, but certain functions (e.g., `Element.getAttributeNode()`) or means of iterating give `Attr` types.

	Documentation [Attr](https://developer.mozilla.org/en-US/docs/Web/API/Attr) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Attr$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Attr>]]></haxe_doc>
		<meta><m n=":native"><e>"Attr"</e></m></meta>
	</class>
	<class path="js.html.MediaElement" params="" file="/usr/local/lib/haxe/std/js/html/MediaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<NETWORK_EMPTY public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NETWORK_EMPTY>
		<NETWORK_IDLE public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</NETWORK_IDLE>
		<NETWORK_LOADING public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</NETWORK_LOADING>
		<NETWORK_NO_SOURCE public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</NETWORK_NO_SOURCE>
		<HAVE_NOTHING public="1" get="inline" set="null" expr="0" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</HAVE_NOTHING>
		<HAVE_METADATA public="1" get="inline" set="null" expr="1" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</HAVE_METADATA>
		<HAVE_CURRENT_DATA public="1" get="inline" set="null" expr="2" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</HAVE_CURRENT_DATA>
		<HAVE_FUTURE_DATA public="1" get="inline" set="null" expr="3" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</HAVE_FUTURE_DATA>
		<HAVE_ENOUGH_DATA public="1" get="inline" set="null" expr="4" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</HAVE_ENOUGH_DATA>
		<error public="1" set="null">
			<c path="js.html.MediaError"/>
			<haxe_doc>Returns a `MediaError` object for the most recent error, or `null` if there has not been an error.</haxe_doc>
		</error>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `src` HTML attribute, which contains the URL of a media resource to use.</haxe_doc>
		</src>
		<currentSrc public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` with the absolute URL of the chosen media resource.</haxe_doc>
		</currentSrc>
		<crossOrigin public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` indicating the CORS setting for this media element.</haxe_doc>
		</crossOrigin>
		<networkState public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `unsigned short` (enumeration) indicating the current state of fetching the media over the network.</haxe_doc>
		</networkState>
		<preload public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `preload` HTML attribute, indicating what data should be preloaded, if any. Possible values are: `none`, `metadata`, `auto`.</haxe_doc>
		</preload>
		<buffered public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>Returns a `TimeRanges` object that indicates the ranges of the media source that the browser has buffered (if any) at the moment the `buffered` property is accessed.</haxe_doc>
		</buffered>
		<readyState public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `unsigned short` (enumeration) indicating the readiness state of the media.</haxe_doc>
		</readyState>
		<seeking public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that indicates whether the media is in the process of seeking to a new position.</haxe_doc>
		</seeking>
		<currentTime public="1">
			<x path="Float"/>
			<haxe_doc>Is a `double` indicating the current playback time in seconds. Setting this value seeks the media to the new time.</haxe_doc>
		</currentTime>
		<duration public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` indicating the length of the media in seconds, or 0 if no media data is available.</haxe_doc>
		</duration>
		<paused public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that indicates whether the media element is paused.</haxe_doc>
		</paused>
		<defaultPlaybackRate public="1">
			<x path="Float"/>
			<haxe_doc>Is a `double` indicating the default playback rate for the media.</haxe_doc>
		</defaultPlaybackRate>
		<playbackRate public="1">
			<x path="Float"/>
			<haxe_doc>Is a `double` that indicates the rate at which the media is being played back. </haxe_doc>
		</playbackRate>
		<played public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>Returns a `TimeRanges` object that contains the ranges of the media source that the browser has played, if any.</haxe_doc>
		</played>
		<seekable public="1" set="null">
			<c path="js.html.TimeRanges"/>
			<haxe_doc>Returns a `TimeRanges` object that contains the time ranges that the user is able to seek to, if any.</haxe_doc>
		</seekable>
		<ended public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that indicates whether the media element has finished playing.</haxe_doc>
		</ended>
		<autoplay public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `autoplay` HTML attribute, indicating whether playback should automatically begin as soon as enough media is available to do so without interruption.</haxe_doc>
		</autoplay>
		<loop public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `loop` HTML attribute, which indicates whether the media element should start over when it reaches the end.</haxe_doc>
		</loop>
		<controls public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `controls` HTML attribute, indicating whether user interface items for controlling the resource should be displayed.</haxe_doc>
		</controls>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>Is a `double` indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).</haxe_doc>
		</volume>
		<muted public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that determines whether audio is muted. `true` if the audio is muted and `false` otherwise.</haxe_doc>
		</muted>
		<defaultMuted public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `muted` HTML attribute, which indicates whether the media element's audio output should be muted by default.</haxe_doc>
		</defaultMuted>
		<audioTracks public="1" set="null">
			<c path="js.html.AudioTrackList"/>
			<haxe_doc>Is a `AudioTrackList` that lists the `AudioTrack` objects contained in the element.</haxe_doc>
		</audioTracks>
		<videoTracks public="1" set="null">
			<c path="js.html.VideoTrackList"/>
			<haxe_doc>Returns the list of `VideoTrack` objects contained in the element.
		 
		 Note: Gecko supports only single track playback, and the parsing of tracks' metadata is only available for media with the Ogg container format.</haxe_doc>
		</videoTracks>
		<textTracks public="1" set="null">
			<c path="js.html.TextTrackList"/>
			<haxe_doc>Returns the list of `TextTrack` objects contained in the element.</haxe_doc>
		</textTracks>
		<srcObject public="1">
			<c path="js.html.MediaStream"/>
			<haxe_doc>Is a `MediaStream` representing the media to play or that has played in the current `HTMLMediaElement`.</haxe_doc>
		</srcObject>
		<load public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Resets the media element and restarts the media resource. Any pending events are discarded. How much media data is fetched is still affected by the `preload` attribute. This method can be useful for releasing resources after any `src` attribute and `source` element descendants have been removed. Otherwise, it is usually unnecessary to use this method, unless required to rescan `source` element children after dynamic changes.</haxe_doc>
		</load>
		<canPlayType public="1" set="method">
			<f a="type">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Determines whether the specified media type can be played back.</haxe_doc>
		</canPlayType>
		<fastSeek public="1" set="method">
			<f a="time">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</fastSeek>
		<play public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</play>
		<pause public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</pause>
		<addTextTrack public="1" set="method">
			<f a="kind:?label:?language" v=":&quot;&quot;:&quot;&quot;">
				<x path="js.html.TextTrackKind"/>
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.TextTrack"/>
			</f>
			<meta><m n=":value"><e>{ language : "", label : "" }</e></m></meta>
			<haxe_doc>Adds a text track (such as a track for subtitles) to a media element.</haxe_doc>
		</addTextTrack>
		<haxe_doc><![CDATA[The `HTMLMediaElement` interface adds to `HTMLElement` the properties and methods needed to support basic media-related capabilities that are common to audio and video. The `HTMLVideoElement` and `HTMLAudioElement` elements both inherit this interface.

	Documentation [HTMLMediaElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMediaElement"</e></m></meta>
	</class>
	<class path="js.html.AudioElement" params="" file="/usr/local/lib/haxe/std/js/html/AudioElement.hx" extern="1">
		<extends path="js.html.MediaElement"/>
		<haxe_doc><![CDATA[The `HTMLAudioElement` interface provides access to the properties of `audio` elements, as well as methods to manipulate them. It derives from the `HTMLMediaElement` interface.

	Documentation [HTMLAudioElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLAudioElement"</e></m></meta>
	</class>
	<class path="js.html.Audio" params="" file="/usr/local/lib/haxe/std/js/html/Audio.hx" extern="1">
		<extends path="js.html.AudioElement"/>
		<new public="1" set="method">
			<f a="?src">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Audio"</e></m>
		</meta>
	</class>
	<abstract path="js.html.AudioChannel" params="" file="/usr/local/lib/haxe/std/js/html/AudioChannel.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._AudioChannel.AudioChannel_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/AudioChannel.hx" private="1" module="js.html.AudioChannel"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.AudioContextState" params="" file="/usr/local/lib/haxe/std/js/html/AudioContextState.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._AudioContextState.AudioContextState_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/AudioContextState.hx" private="1" module="js.html.AudioContextState"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.MediaStreamTrack" params="" file="/usr/local/lib/haxe/std/js/html/MediaStreamTrack.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<kind public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` set to `"audio"` if the track is an audio track and to `"video"`, if it is a video track. It doesn't change if the track is deassociated from its source.</haxe_doc>
		</kind>
		<id public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` containing a unique identifier (GUID) for the track; it is generated by the browser.</haxe_doc>
		</id>
		<label public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` containing a user agent-assigned label that identifies the track source, as in `"internal microphone"`. The string may be left empty and is empty as long as no source has been connected. When the track is deassociated from its source, the label is not changed.</haxe_doc>
		</label>
		<enabled public="1">
			<x path="Bool"/>
			<haxe_doc>A Boolean value with a value of `true` if the track is enabled, that is allowed to render the media source stream; or `false` if it is disabled, that is not rendering the media source stream but silence and blackness. If the track has been disconnected, this value can be changed but has no more effect.</haxe_doc>
		</enabled>
		<stop public="1" set="method"><f a=""><x path="Void"/></f></stop>
		<applyConstraints public="1" set="method">
			<f a="?constraints">
				<t path="js.html.MediaTrackConstraints"/>
				<c path="js.Promise"><x path="Void"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</applyConstraints>
		<haxe_doc><![CDATA[The `MediaStreamTrack` interface represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.

	Documentation [MediaStreamTrack](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaStreamTrack"</e></m></meta>
	</class>
	<class path="js.html.AudioStreamTrack" params="" file="/usr/local/lib/haxe/std/js/html/AudioStreamTrack.hx" extern="1">
		<extends path="js.html.MediaStreamTrack"/>
		<meta><m n=":native"><e>"AudioStreamTrack"</e></m></meta>
	</class>
	<class path="js.html.AudioTrack" params="" file="/usr/local/lib/haxe/std/js/html/AudioTrack.hx" extern="1">
		<id public="1" set="null"><c path="String"/></id>
		<kind public="1" set="null"><c path="String"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<language public="1" set="null"><c path="String"/></language>
		<enabled public="1"><x path="Bool"/></enabled>
		<meta><m n=":native"><e>"AudioTrack"</e></m></meta>
	</class>
	<class path="js.html.AudioTrackList" params="" file="/usr/local/lib/haxe/std/js/html/AudioTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<onaddtrack public="1"><x path="haxe.Function"/></onaddtrack>
		<onremovetrack public="1"><x path="haxe.Function"/></onremovetrack>
		<getTrackById public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="js.html.AudioTrack"/>
</f></getTrackById>
		<meta><m n=":native"><e>"AudioTrackList"</e></m></meta>
	</class>
	<class path="js.html.BRElement" params="" file="/usr/local/lib/haxe/std/js/html/BRElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<clear public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` indicating the flow of text around floating objects.</haxe_doc>
		</clear>
		<haxe_doc><![CDATA[The `HTMLBRElement` interface represents a HTML line break element (`br`). It inherits from `HTMLElement`.

	Documentation [HTMLBRElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLBRElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBRElement"</e></m></meta>
	</class>
	<class path="js.html.BarProp" params="" file="/usr/local/lib/haxe/std/js/html/BarProp.hx" extern="1">
		<visible public="1"><x path="Bool"/></visible>
		<meta><m n=":native"><e>"BarProp"</e></m></meta>
	</class>
	<class path="js.html.BaseElement" params="" file="/usr/local/lib/haxe/std/js/html/BaseElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<href public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `href` HTML attribute, containing a base URL for relative URLs in the document.</haxe_doc>
		</href>
		<target public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `target` HTML attribute, containing a default target browsing context or frame for elements that do not have a target reference specified.</haxe_doc>
		</target>
		<haxe_doc><![CDATA[The `HTMLBaseElement` interface contains the base URI for a document. This object inherits all of the properties and methods as described in the `HTMLElement` interface.

	Documentation [HTMLBaseElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBaseElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBaseElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLBaseElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBaseElement"</e></m></meta>
	</class>
	<class path="js.html.BatteryManager" params="" file="/usr/local/lib/haxe/std/js/html/BatteryManager.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<charging public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A Boolean value indicating whether or not the battery is currently being charged.</haxe_doc>
		</charging>
		<chargingTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A number representing the remaining time in seconds until the battery is fully charged, or 0 if the battery is already fully charged.</haxe_doc>
		</chargingTime>
		<dischargingTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A number representing the remaining time in seconds until the battery is completely discharged and the system will suspend.</haxe_doc>
		</dischargingTime>
		<level public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A number representing the system's battery charge level scaled to a value between 0.0 and 1.0.</haxe_doc>
		</level>
		<onchargingchange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>A handler for the `chargingchange` event; This event is sent when the battery charging state is updated.</haxe_doc>
		</onchargingchange>
		<onchargingtimechange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>A handler for the `chargingtimechange` event; This event is sent when the battery charging time is updated</haxe_doc>
		</onchargingtimechange>
		<ondischargingtimechange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>A handler for the `dischargingtimechange` event; This event is sent when the battery discharging time is updated.</haxe_doc>
		</ondischargingtimechange>
		<onlevelchange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>A handler for the `levelchange` event; This event is sent when the battery level is updated.</haxe_doc>
		</onlevelchange>
		<haxe_doc><![CDATA[The `BatteryManager` interface provides ways to get information about the system's battery charge level.

	Documentation [BatteryManager](https://developer.mozilla.org/en-US/docs/Web/API/BatteryManager) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/BatteryManager$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/BatteryManager>]]></haxe_doc>
		<meta><m n=":native"><e>"BatteryManager"</e></m></meta>
	</class>
	<class path="js.html.Blob" params="" file="/usr/local/lib/haxe/std/js/html/Blob.hx" extern="1">
		<size public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The size, in bytes, of the data contained in the `Blob` object.</haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>A string indicating the MIME type of the data contained in the `Blob`. If the type is unknown, this string is empty.</haxe_doc>
		</type>
		<slice public="1" set="method">
			<f a="?start:?end:?contentType" v="::&quot;&quot;">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<c path="js.html.Blob"/>
			</f>
			<meta><m n=":value"><e>{ contentType : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</slice>
		<new public="1" set="method">
			<f a="blobParts:?options">
				<c path="Array"><x path="haxe.extern.EitherType">
	<c path="js.html.ArrayBuffer"/>
	<x path="haxe.extern.EitherType">
		<c path="js.html.ArrayBufferView"/>
		<x path="haxe.extern.EitherType">
			<c path="js.html.Blob"/>
			<c path="String"/>
		</x>
	</x>
</x></c>
				<t path="js.html.BlobPropertyBag"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[A `Blob` object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The `File` interface is based on `Blob`, inheriting blob functionality and expanding it to support files on the user's system.

	Documentation [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Blob$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Blob>]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Blob"</e></m>
		</meta>
	</class>
	<typedef path="js.html.BlobPropertyBag" params="" file="/usr/local/lib/haxe/std/js/html/BlobPropertyBag.hx"><a>
	<type>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</type>
	<endings>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</endings>
</a></typedef>
	<class path="js.html.BodyElement" params="" file="/usr/local/lib/haxe/std/js/html/BodyElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the foreground color of text.</haxe_doc>
		</text>
		<link public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the color of unvisited links.</haxe_doc>
		</link>
		<vLink public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the color of visited links.</haxe_doc>
		</vLink>
		<aLink public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the color of active hyperlinks.</haxe_doc>
		</aLink>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the background color for the document.</haxe_doc>
		</bgColor>
		<background public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the description of the location of the background image resource. Note that this is not an URI, though some older version of some browsers do expect it.</haxe_doc>
		</background>
		<onafterprint public="1"><x path="haxe.Function"/></onafterprint>
		<onbeforeprint public="1"><x path="haxe.Function"/></onbeforeprint>
		<onbeforeunload public="1"><f a="">
	<c path="js.html.Event"/>
	<c path="String"/>
</f></onbeforeunload>
		<onhashchange public="1"><x path="haxe.Function"/></onhashchange>
		<onlanguagechange public="1"><x path="haxe.Function"/></onlanguagechange>
		<onmessage public="1"><x path="haxe.Function"/></onmessage>
		<onoffline public="1"><x path="haxe.Function"/></onoffline>
		<ononline public="1"><x path="haxe.Function"/></ononline>
		<onpagehide public="1"><x path="haxe.Function"/></onpagehide>
		<onpageshow public="1"><x path="haxe.Function"/></onpageshow>
		<onpopstate public="1"><x path="haxe.Function"/></onpopstate>
		<onstorage public="1"><x path="haxe.Function"/></onstorage>
		<onunload public="1"><x path="haxe.Function"/></onunload>
		<haxe_doc><![CDATA[The `HTMLBodyElement` interface provides special properties (beyond those of the regular `HTMLElement` interface they also inherit) for manipulating body elements.

	Documentation [HTMLBodyElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLBodyElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLBodyElement"</e></m></meta>
	</class>
	<class path="js.html.ButtonElement" params="" file="/usr/local/lib/haxe/std/js/html/ButtonElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating whether or not the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified.</haxe_doc>
		</autofocus>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating whether or not the control is disabled, meaning that it does not accept any clicks.</haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>Is a `HTMLFormElement` reflecting the form that this button is associated with. If the button is a descendant of a form element, then this attribute is the ID of that form element.
		
		 If the button is not a descendant of a form element, then the attribute can be the ID of any form element in the same document it is related to, or the `null` value if none matches.</haxe_doc>
		</form>
		<formAction public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the URI of a resource that processes information submitted by the button. If specified, this attribute overrides the `action` attribute of the `form` element that owns this element.</haxe_doc>
		</formAction>
		<formEnctype public="1"><c path="String"/></formEnctype>
		<formMethod public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the HTTP method that the browser uses to submit the form. If specified, this attribute overrides the `method` attribute of the `form` element that owns this element.</haxe_doc>
		</formMethod>
		<formNoValidate public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating that the form is not to be validated when it is submitted. If specified, this attribute overrides the `novalidate` attribute of the `form` element that owns this element.</haxe_doc>
		</formNoValidate>
		<formTarget public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting a name or keyword indicating where to display the response that is received after submitting the form. If specified, this attribute overrides the `target` attribute of the `form` element that owns this element.</haxe_doc>
		</formTarget>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the name of the object when submitted with a form. {{HTMLVersionInline(5)}} If specified, it must not be the empty string.</haxe_doc>
		</name>
		<type public="1">
			<c path="String"/>
			<haxe_doc><![CDATA[Is a `DOMString` indicating the behavior of the button. This is an enumerated attribute with the following possible values:
		 
		  `"submit"`: The button submits the form. This is the default value if the attribute is not specified, {{HTMLVersionInline(5)}} or if it is dynamically changed to an empty or invalid value.
		  `"reset"`: The button resets the form.
		  `"button"`: The button does nothing.
		  `"menu"`: The button displays a menu. <em>(experimental)</em>]]></haxe_doc>
		</type>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the current form control value of the button.</haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating whether the button is a candidate for constraint validation. It is `false` if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>Is a `ValidityState` representing the validity states that this button is in.</haxe_doc>
		</validity>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (`willValidate` is `false`), or it satisfies its constraints.</haxe_doc>
		</validationMessage>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[The `HTMLButtonElement` interface provides properties and methods (beyond the `button` object interface it also has available to them by inheritance) for manipulating the layout and presentation of button elements.

	Documentation [HTMLButtonElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLButtonElement"</e></m></meta>
	</class>
	<class path="js.html.CharacterData" params="" file="/usr/local/lib/haxe/std/js/html/CharacterData.hx" extern="1">
		<extends path="js.html.Node"/>
		<data public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the textual data contained in this object.</haxe_doc>
		</data>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an `unsigned long` representing the size of the string contained in `CharacterData.data`.</haxe_doc>
		</length>
		<previousElementSibling public="1" set="null"><c path="js.html.Element"/></previousElementSibling>
		<nextElementSibling public="1" set="null"><c path="js.html.Element"/></nextElementSibling>
		<substringData public="1" set="method">
			<f a="offset:count">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</substringData>
		<appendData public="1" set="method">
			<f a="data">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</appendData>
		<insertData public="1" set="method">
			<f a="offset:data">
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertData>
		<deleteData public="1" set="method">
			<f a="offset:count">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteData>
		<replaceData public="1" set="method">
			<f a="offset:count:data">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</replaceData>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<haxe_doc><![CDATA[The `CharacterData` abstract interface represents a `Node` object that contains characters. This is an abstract interface, meaning there aren't any object of type `CharacterData`: it is implemented by other interfaces, like `Text`, `Comment`, or `ProcessingInstruction` which aren't abstract.

	Documentation [CharacterData](https://developer.mozilla.org/en-US/docs/Web/API/CharacterData) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CharacterData$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CharacterData>]]></haxe_doc>
		<meta><m n=":native"><e>"CharacterData"</e></m></meta>
	</class>
	<class path="js.html.Text" params="" file="/usr/local/lib/haxe/std/js/html/Text.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<wholeText public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` containing the text of all `Text` nodes logically adjacent to this `Node`, concatenated in document order.</haxe_doc>
		</wholeText>
		<splitText public="1" set="method">
			<f a="offset">
				<x path="Int"/>
				<c path="js.html.Text"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</splitText>
		<convertQuadFromNode public="1" set="method">
			<f a="quad:from:?options">
				<c path="js.html.DOMQuad"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMQuad"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertQuadFromNode>
		<convertRectFromNode public="1" set="method">
			<f a="rect:from:?options">
				<c path="js.html.DOMRectReadOnly"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMQuad"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertRectFromNode>
		<convertPointFromNode public="1" set="method">
			<f a="point:from:?options">
				<t path="js.html.DOMPointInit"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMPoint"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertPointFromNode>
		<new public="1" set="method">
			<f a="?data" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ data : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Text` interface represents the textual content of `Element` or `Attr`.  If an element has no markup within its content, it has a single child implementing `Text` that contains the element's text.  However, if the element contains markup, it is parsed into information items and `Text` nodes that form its children.

	Documentation [Text](https://developer.mozilla.org/en-US/docs/Web/API/Text) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Text$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Text>]]></haxe_doc>
		<meta><m n=":native"><e>"Text"</e></m></meta>
	</class>
	<class path="js.html.CDATASection" params="" file="/usr/local/lib/haxe/std/js/html/CDATASection.hx" extern="1">
		<extends path="js.html.Text"/>
		<haxe_doc><![CDATA[The `CDATASection` interface represents a CDATA section that can be used within XML to include extended portions of unescaped text, such that the symbols  and &amp; do not need escaping as they normally do within XML when used as text.

	Documentation [CDATASection](https://developer.mozilla.org/en-US/docs/Web/API/CDATASection) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CDATASection$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CDATASection>]]></haxe_doc>
		<meta><m n=":native"><e>"CDATASection"</e></m></meta>
	</class>
	<class path="js.html.CSSPseudoElement" params="" file="/usr/local/lib/haxe/std/js/html/CSSPseudoElement.hx" extern="1">
		<type public="1" set="null"><c path="String"/></type>
		<parentElement public="1" set="null"><c path="js.html.Element"/></parentElement>
		<animate public="1" set="method">
			<f a="frames:?options">
				<d/>
				<x path="haxe.extern.EitherType">
					<x path="Float"/>
					<d/>
				</x>
				<c path="js.html.Animation"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</animate>
		<getAnimations public="1" set="method"><f a=""><c path="Array"><c path="js.html.Animation"/></c></f></getAnimations>
		<meta><m n=":native"><e>"CSSPseudoElement"</e></m></meta>
	</class>
	<class path="js.html.CSSRule" params="" file="/usr/local/lib/haxe/std/js/html/CSSRule.hx" extern="1">
		<UNKNOWN_RULE public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</UNKNOWN_RULE>
		<STYLE_RULE public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</STYLE_RULE>
		<CHARSET_RULE public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</CHARSET_RULE>
		<IMPORT_RULE public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</IMPORT_RULE>
		<MEDIA_RULE public="1" get="inline" set="null" expr="4" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</MEDIA_RULE>
		<FONT_FACE_RULE public="1" get="inline" set="null" expr="5" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</FONT_FACE_RULE>
		<PAGE_RULE public="1" get="inline" set="null" expr="6" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</PAGE_RULE>
		<type public="1" set="null"><x path="Int"/></type>
		<cssText public="1"><c path="String"/></cssText>
		<parentStyleSheet public="1" set="null"><c path="js.html.CSSStyleSheet"/></parentStyleSheet>
		<parentRule public="1" set="null"><c path="js.html.CSSRule"/></parentRule>
		<haxe_doc><![CDATA[The `CSSRule` interface represents a single CSS rule. There are several types of rules, listed in the Type constants section below.

	Documentation [CSSRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSRule) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CSSRule$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CSSRule>]]></haxe_doc>
		<meta><m n=":native"><e>"CSSRule"</e></m></meta>
	</class>
	<class path="js.html.CSSRuleList" params="" file="/usr/local/lib/haxe/std/js/html/CSSRuleList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.CSSRule"/>
</f></item>
		<haxe_doc><![CDATA[A `CSSRuleList` is an (indirect-modify only) array-like object containing an ordered collection of `CSSRule` objects.

	Documentation [CSSRuleList](https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CSSRuleList>]]></haxe_doc>
		<meta><m n=":native"><e>"CSSRuleList"</e></m></meta>
	</class>
	<class path="js.html.CSSStyleDeclaration" params="" file="/usr/local/lib/haxe/std/js/html/CSSStyleDeclaration.hx" extern="1">
		<cssText public="1"><c path="String"/></cssText>
		<length public="1" set="null"><x path="Int"/></length>
		<parentRule public="1" set="null"><c path="js.html.CSSRule"/></parentRule>
		<alignContent public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "align-content" CSS property.</haxe_doc>
		</alignContent>
		<alignItems public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "align-items" CSS property.</haxe_doc>
		</alignItems>
		<alignSelf public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "align-self" CSS property.</haxe_doc>
		</alignSelf>
		<alignmentAdjust public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "alignment-adjust" CSS property.</haxe_doc>
		</alignmentAdjust>
		<alignmentBaseline public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "alignment-baseline" CSS property.</haxe_doc>
		</alignmentBaseline>
		<all public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "all" CSS property.</haxe_doc>
		</all>
		<anchorPoint public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "anchor-point" CSS property.</haxe_doc>
		</anchorPoint>
		<animation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation" CSS property.</haxe_doc>
		</animation>
		<animationDelay public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-delay" CSS property.</haxe_doc>
		</animationDelay>
		<animationDirection public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-direction" CSS property.</haxe_doc>
		</animationDirection>
		<animationDuration public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-duration" CSS property.</haxe_doc>
		</animationDuration>
		<animationFillMode public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-fill-mode" CSS property.</haxe_doc>
		</animationFillMode>
		<animationIterationCount public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-iteration-count" CSS property.</haxe_doc>
		</animationIterationCount>
		<animationName public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-name" CSS property.</haxe_doc>
		</animationName>
		<animationPlayState public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-play-state" CSS property.</haxe_doc>
		</animationPlayState>
		<animationTimingFunction public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "animation-timing-function" CSS property.</haxe_doc>
		</animationTimingFunction>
		<azimuth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "azimuth" CSS property.</haxe_doc>
		</azimuth>
		<backfaceVisibility public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "backface-visibility" CSS property.</haxe_doc>
		</backfaceVisibility>
		<background public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background" CSS property.</haxe_doc>
		</background>
		<backgroundAttachment public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-attachment" CSS property.</haxe_doc>
		</backgroundAttachment>
		<backgroundClip public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-clip" CSS property.</haxe_doc>
		</backgroundClip>
		<backgroundColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-color" CSS property.</haxe_doc>
		</backgroundColor>
		<backgroundImage public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-image" CSS property.</haxe_doc>
		</backgroundImage>
		<backgroundOrigin public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-origin" CSS property.</haxe_doc>
		</backgroundOrigin>
		<backgroundPosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-position" CSS property.</haxe_doc>
		</backgroundPosition>
		<backgroundRepeat public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-repeat" CSS property.</haxe_doc>
		</backgroundRepeat>
		<backgroundSize public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "background-size" CSS property.</haxe_doc>
		</backgroundSize>
		<baselineShift public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "baseline-shift" CSS property.</haxe_doc>
		</baselineShift>
		<binding public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "binding" CSS property.</haxe_doc>
		</binding>
		<bleed public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "bleed" CSS property.</haxe_doc>
		</bleed>
		<bookmarkLabel public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "bookmark-label" CSS property.</haxe_doc>
		</bookmarkLabel>
		<bookmarkLevel public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "bookmark-level" CSS property.</haxe_doc>
		</bookmarkLevel>
		<bookmarkState public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "bookmark-state" CSS property.</haxe_doc>
		</bookmarkState>
		<border public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border" CSS property.</haxe_doc>
		</border>
		<borderBottom public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-bottom" CSS property.</haxe_doc>
		</borderBottom>
		<borderBottomColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-bottom-color" CSS property.</haxe_doc>
		</borderBottomColor>
		<borderBottomLeftRadius public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-bottom-left-radius" CSS property.</haxe_doc>
		</borderBottomLeftRadius>
		<borderBottomRightRadius public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-bottom-right-radius" CSS property.</haxe_doc>
		</borderBottomRightRadius>
		<borderBottomStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-bottom-style" CSS property.</haxe_doc>
		</borderBottomStyle>
		<borderBottomWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-bottom-width" CSS property.</haxe_doc>
		</borderBottomWidth>
		<borderCollapse public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-collapse" CSS property.</haxe_doc>
		</borderCollapse>
		<borderColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-color" CSS property.</haxe_doc>
		</borderColor>
		<borderImage public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-image" CSS property.</haxe_doc>
		</borderImage>
		<borderImageOutset public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-image-outset" CSS property.</haxe_doc>
		</borderImageOutset>
		<borderImageRepeat public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-image-repeat" CSS property.</haxe_doc>
		</borderImageRepeat>
		<borderImageSlice public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-image-slice" CSS property.</haxe_doc>
		</borderImageSlice>
		<borderImageSource public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-image-source" CSS property.</haxe_doc>
		</borderImageSource>
		<borderImageWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-image-width" CSS property.</haxe_doc>
		</borderImageWidth>
		<borderLeft public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-left" CSS property.</haxe_doc>
		</borderLeft>
		<borderLeftColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-left-color" CSS property.</haxe_doc>
		</borderLeftColor>
		<borderLeftStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-left-style" CSS property.</haxe_doc>
		</borderLeftStyle>
		<borderLeftWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-left-width" CSS property.</haxe_doc>
		</borderLeftWidth>
		<borderRadius public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-radius" CSS property.</haxe_doc>
		</borderRadius>
		<borderRight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-right" CSS property.</haxe_doc>
		</borderRight>
		<borderRightColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-right-color" CSS property.</haxe_doc>
		</borderRightColor>
		<borderRightStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-right-style" CSS property.</haxe_doc>
		</borderRightStyle>
		<borderRightWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-right-width" CSS property.</haxe_doc>
		</borderRightWidth>
		<borderSpacing public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-spacing" CSS property.</haxe_doc>
		</borderSpacing>
		<borderStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-style" CSS property.</haxe_doc>
		</borderStyle>
		<borderTop public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-top" CSS property.</haxe_doc>
		</borderTop>
		<borderTopColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-top-color" CSS property.</haxe_doc>
		</borderTopColor>
		<borderTopLeftRadius public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-top-left-radius" CSS property.</haxe_doc>
		</borderTopLeftRadius>
		<borderTopRightRadius public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-top-right-radius" CSS property.</haxe_doc>
		</borderTopRightRadius>
		<borderTopStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-top-style" CSS property.</haxe_doc>
		</borderTopStyle>
		<borderTopWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-top-width" CSS property.</haxe_doc>
		</borderTopWidth>
		<borderWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "border-width" CSS property.</haxe_doc>
		</borderWidth>
		<bottom public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "bottom" CSS property.</haxe_doc>
		</bottom>
		<boxDecorationBreak public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "box-decoration-break" CSS property.</haxe_doc>
		</boxDecorationBreak>
		<boxShadow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "box-shadow" CSS property.</haxe_doc>
		</boxShadow>
		<boxSizing public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "box-sizing" CSS property.</haxe_doc>
		</boxSizing>
		<boxSnap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "box-snap" CSS property.</haxe_doc>
		</boxSnap>
		<boxSuppress public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "box-suppress" CSS property.</haxe_doc>
		</boxSuppress>
		<breakAfter public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "break-after" CSS property.</haxe_doc>
		</breakAfter>
		<breakBefore public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "break-before" CSS property.</haxe_doc>
		</breakBefore>
		<breakInside public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "break-inside" CSS property.</haxe_doc>
		</breakInside>
		<captionSide public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "caption-side" CSS property.</haxe_doc>
		</captionSide>
		<chains public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "chains" CSS property.</haxe_doc>
		</chains>
		<clear public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "clear" CSS property.</haxe_doc>
		</clear>
		<clip public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "clip" CSS property.</haxe_doc>
		</clip>
		<clipPath public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "clip-path" CSS property.</haxe_doc>
		</clipPath>
		<clipRule public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "clip-rule" CSS property.</haxe_doc>
		</clipRule>
		<color public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "color" CSS property.</haxe_doc>
		</color>
		<colorInterpolationFilters public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "color-interpolation-filters" CSS property.</haxe_doc>
		</colorInterpolationFilters>
		<columnCount public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-count" CSS property.</haxe_doc>
		</columnCount>
		<columnFill public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-fill" CSS property.</haxe_doc>
		</columnFill>
		<columnGap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-gap" CSS property.</haxe_doc>
		</columnGap>
		<columnRule public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-rule" CSS property.</haxe_doc>
		</columnRule>
		<columnRuleColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-rule-color" CSS property.</haxe_doc>
		</columnRuleColor>
		<columnRuleStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-rule-style" CSS property.</haxe_doc>
		</columnRuleStyle>
		<columnRuleWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-rule-width" CSS property.</haxe_doc>
		</columnRuleWidth>
		<columnSpan public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-span" CSS property.</haxe_doc>
		</columnSpan>
		<columnWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "column-width" CSS property.</haxe_doc>
		</columnWidth>
		<columns public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "columns" CSS property.</haxe_doc>
		</columns>
		<contain public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "contain" CSS property.</haxe_doc>
		</contain>
		<content public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "content" CSS property.</haxe_doc>
		</content>
		<counterIncrement public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "counter-increment" CSS property.</haxe_doc>
		</counterIncrement>
		<counterReset public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "counter-reset" CSS property.</haxe_doc>
		</counterReset>
		<counterSet public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "counter-set" CSS property.</haxe_doc>
		</counterSet>
		<crop public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "crop" CSS property.</haxe_doc>
		</crop>
		<cue public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "cue" CSS property.</haxe_doc>
		</cue>
		<cueAfter public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "cue-after" CSS property.</haxe_doc>
		</cueAfter>
		<cueBefore public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "cue-before" CSS property.</haxe_doc>
		</cueBefore>
		<cursor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "cursor" CSS property.</haxe_doc>
		</cursor>
		<direction public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "direction" CSS property.</haxe_doc>
		</direction>
		<display public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "display" CSS property.</haxe_doc>
		</display>
		<displayInside public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "display-inside" CSS property.</haxe_doc>
		</displayInside>
		<displayList public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "display-list" CSS property.</haxe_doc>
		</displayList>
		<displayOutside public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "display-outside" CSS property.</haxe_doc>
		</displayOutside>
		<dominantBaseline public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "dominant-baseline" CSS property.</haxe_doc>
		</dominantBaseline>
		<elevation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "elevation" CSS property.</haxe_doc>
		</elevation>
		<emptyCells public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "empty-cells" CSS property.</haxe_doc>
		</emptyCells>
		<filter public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "filter" CSS property.</haxe_doc>
		</filter>
		<flex public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex" CSS property.</haxe_doc>
		</flex>
		<flexBasis public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex-basis" CSS property.</haxe_doc>
		</flexBasis>
		<flexDirection public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex-direction" CSS property.</haxe_doc>
		</flexDirection>
		<flexFlow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex-flow" CSS property.</haxe_doc>
		</flexFlow>
		<flexGrow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex-grow" CSS property.</haxe_doc>
		</flexGrow>
		<flexShrink public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex-shrink" CSS property.</haxe_doc>
		</flexShrink>
		<flexWrap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flex-wrap" CSS property.</haxe_doc>
		</flexWrap>
		<float public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "float" CSS property.</haxe_doc>
		</float>
		<floatOffset public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "float-offset" CSS property.</haxe_doc>
		</floatOffset>
		<floodColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flood-color" CSS property.</haxe_doc>
		</floodColor>
		<floodOpacity public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flood-opacity" CSS property.</haxe_doc>
		</floodOpacity>
		<flowFrom public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flow-from" CSS property.</haxe_doc>
		</flowFrom>
		<flowInto public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "flow-into" CSS property.</haxe_doc>
		</flowInto>
		<font public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font" CSS property.</haxe_doc>
		</font>
		<fontFamily public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-family" CSS property.</haxe_doc>
		</fontFamily>
		<fontFeatureSettings public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-feature-settings" CSS property.</haxe_doc>
		</fontFeatureSettings>
		<fontKerning public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-kerning" CSS property.</haxe_doc>
		</fontKerning>
		<fontLanguageOverride public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-language-override" CSS property.</haxe_doc>
		</fontLanguageOverride>
		<fontSize public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-size" CSS property.</haxe_doc>
		</fontSize>
		<fontSizeAdjust public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-size-adjust" CSS property.</haxe_doc>
		</fontSizeAdjust>
		<fontStretch public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-stretch" CSS property.</haxe_doc>
		</fontStretch>
		<fontStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-style" CSS property.</haxe_doc>
		</fontStyle>
		<fontSynthesis public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-synthesis" CSS property.</haxe_doc>
		</fontSynthesis>
		<fontVariant public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant" CSS property.</haxe_doc>
		</fontVariant>
		<fontVariantAlternates public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant-alternates" CSS property.</haxe_doc>
		</fontVariantAlternates>
		<fontVariantCaps public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant-caps" CSS property.</haxe_doc>
		</fontVariantCaps>
		<fontVariantEastAsian public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant-east-asian" CSS property.</haxe_doc>
		</fontVariantEastAsian>
		<fontVariantLigatures public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant-ligatures" CSS property.</haxe_doc>
		</fontVariantLigatures>
		<fontVariantNumeric public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant-numeric" CSS property.</haxe_doc>
		</fontVariantNumeric>
		<fontVariantPosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-variant-position" CSS property.</haxe_doc>
		</fontVariantPosition>
		<fontWeight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "font-weight" CSS property.</haxe_doc>
		</fontWeight>
		<grid public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid" CSS property.</haxe_doc>
		</grid>
		<gridArea public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-area" CSS property.</haxe_doc>
		</gridArea>
		<gridAutoColumns public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-auto-columns" CSS property.</haxe_doc>
		</gridAutoColumns>
		<gridAutoFlow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-auto-flow" CSS property.</haxe_doc>
		</gridAutoFlow>
		<gridAutoRows public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-auto-rows" CSS property.</haxe_doc>
		</gridAutoRows>
		<gridColumn public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-column" CSS property.</haxe_doc>
		</gridColumn>
		<gridColumnEnd public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-column-end" CSS property.</haxe_doc>
		</gridColumnEnd>
		<gridColumnStart public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-column-start" CSS property.</haxe_doc>
		</gridColumnStart>
		<gridRow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-row" CSS property.</haxe_doc>
		</gridRow>
		<gridRowEnd public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-row-end" CSS property.</haxe_doc>
		</gridRowEnd>
		<gridRowStart public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-row-start" CSS property.</haxe_doc>
		</gridRowStart>
		<gridTemplate public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-template" CSS property.</haxe_doc>
		</gridTemplate>
		<gridTemplateAreas public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-template-areas" CSS property.</haxe_doc>
		</gridTemplateAreas>
		<gridTemplateColumns public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-template-columns" CSS property.</haxe_doc>
		</gridTemplateColumns>
		<gridTemplateRows public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "grid-template-rows" CSS property.</haxe_doc>
		</gridTemplateRows>
		<hangingPunctuation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "hanging-punctuation" CSS property.</haxe_doc>
		</hangingPunctuation>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "height" CSS property.</haxe_doc>
		</height>
		<hyphens public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "hyphens" CSS property.</haxe_doc>
		</hyphens>
		<icon public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "icon" CSS property.</haxe_doc>
		</icon>
		<imageOrientation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "image-orientation" CSS property.</haxe_doc>
		</imageOrientation>
		<imageResolution public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "image-resolution" CSS property.</haxe_doc>
		</imageResolution>
		<imeMode public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "ime-mode" CSS property.</haxe_doc>
		</imeMode>
		<initialLetters public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "initial-letters" CSS property.</haxe_doc>
		</initialLetters>
		<inlineBoxAlign public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "inline-box-align" CSS property.</haxe_doc>
		</inlineBoxAlign>
		<justifyContent public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "justify-content" CSS property.</haxe_doc>
		</justifyContent>
		<justifyItems public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "justify-items" CSS property.</haxe_doc>
		</justifyItems>
		<justifySelf public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "justify-self" CSS property.</haxe_doc>
		</justifySelf>
		<left public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "left" CSS property.</haxe_doc>
		</left>
		<letterSpacing public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "letter-spacing" CSS property.</haxe_doc>
		</letterSpacing>
		<lightingColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "lighting-color" CSS property.</haxe_doc>
		</lightingColor>
		<lineBoxContain public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-box-contain" CSS property.</haxe_doc>
		</lineBoxContain>
		<lineBreak public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-break" CSS property.</haxe_doc>
		</lineBreak>
		<lineGrid public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-grid" CSS property.</haxe_doc>
		</lineGrid>
		<lineHeight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-height" CSS property.</haxe_doc>
		</lineHeight>
		<lineSnap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-snap" CSS property.</haxe_doc>
		</lineSnap>
		<lineStacking public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-stacking" CSS property.</haxe_doc>
		</lineStacking>
		<lineStackingRuby public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-stacking-ruby" CSS property.</haxe_doc>
		</lineStackingRuby>
		<lineStackingShift public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-stacking-shift" CSS property.</haxe_doc>
		</lineStackingShift>
		<lineStackingStrategy public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "line-stacking-strategy" CSS property.</haxe_doc>
		</lineStackingStrategy>
		<listStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "list-style" CSS property.</haxe_doc>
		</listStyle>
		<listStyleImage public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "list-style-image" CSS property.</haxe_doc>
		</listStyleImage>
		<listStylePosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "list-style-position" CSS property.</haxe_doc>
		</listStylePosition>
		<listStyleType public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "list-style-type" CSS property.</haxe_doc>
		</listStyleType>
		<margin public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "margin" CSS property.</haxe_doc>
		</margin>
		<marginBottom public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "margin-bottom" CSS property.</haxe_doc>
		</marginBottom>
		<marginLeft public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "margin-left" CSS property.</haxe_doc>
		</marginLeft>
		<marginRight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "margin-right" CSS property.</haxe_doc>
		</marginRight>
		<marginTop public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "margin-top" CSS property.</haxe_doc>
		</marginTop>
		<markerOffset public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "marker-offset" CSS property.</haxe_doc>
		</markerOffset>
		<markerSide public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "marker-side" CSS property.</haxe_doc>
		</markerSide>
		<marks public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "marks" CSS property.</haxe_doc>
		</marks>
		<mask public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask" CSS property.</haxe_doc>
		</mask>
		<maskBox public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-box" CSS property.</haxe_doc>
		</maskBox>
		<maskBoxOutset public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-box-outset" CSS property.</haxe_doc>
		</maskBoxOutset>
		<maskBoxRepeat public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-box-repeat" CSS property.</haxe_doc>
		</maskBoxRepeat>
		<maskBoxSlice public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-box-slice" CSS property.</haxe_doc>
		</maskBoxSlice>
		<maskBoxSource public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-box-source" CSS property.</haxe_doc>
		</maskBoxSource>
		<maskBoxWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-box-width" CSS property.</haxe_doc>
		</maskBoxWidth>
		<maskClip public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-clip" CSS property.</haxe_doc>
		</maskClip>
		<maskImage public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-image" CSS property.</haxe_doc>
		</maskImage>
		<maskOrigin public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-origin" CSS property.</haxe_doc>
		</maskOrigin>
		<maskPosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-position" CSS property.</haxe_doc>
		</maskPosition>
		<maskRepeat public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-repeat" CSS property.</haxe_doc>
		</maskRepeat>
		<maskSize public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-size" CSS property.</haxe_doc>
		</maskSize>
		<maskSourceType public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-source-type" CSS property.</haxe_doc>
		</maskSourceType>
		<maskType public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "mask-type" CSS property.</haxe_doc>
		</maskType>
		<maxHeight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "max-height" CSS property.</haxe_doc>
		</maxHeight>
		<maxLines public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "max-lines" CSS property.</haxe_doc>
		</maxLines>
		<maxWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "max-width" CSS property.</haxe_doc>
		</maxWidth>
		<minHeight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "min-height" CSS property.</haxe_doc>
		</minHeight>
		<minWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "min-width" CSS property.</haxe_doc>
		</minWidth>
		<moveTo public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "move-to" CSS property.</haxe_doc>
		</moveTo>
		<navDown public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "nav-down" CSS property.</haxe_doc>
		</navDown>
		<navIndex public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "nav-index" CSS property.</haxe_doc>
		</navIndex>
		<navLeft public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "nav-left" CSS property.</haxe_doc>
		</navLeft>
		<navRight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "nav-right" CSS property.</haxe_doc>
		</navRight>
		<navUp public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "nav-up" CSS property.</haxe_doc>
		</navUp>
		<objectFit public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "object-fit" CSS property.</haxe_doc>
		</objectFit>
		<objectPosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "object-position" CSS property.</haxe_doc>
		</objectPosition>
		<opacity public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "opacity" CSS property.</haxe_doc>
		</opacity>
		<order public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "order" CSS property.</haxe_doc>
		</order>
		<orphans public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "orphans" CSS property.</haxe_doc>
		</orphans>
		<outline public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "outline" CSS property.</haxe_doc>
		</outline>
		<outlineColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "outline-color" CSS property.</haxe_doc>
		</outlineColor>
		<outlineOffset public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "outline-offset" CSS property.</haxe_doc>
		</outlineOffset>
		<outlineStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "outline-style" CSS property.</haxe_doc>
		</outlineStyle>
		<outlineWidth public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "outline-width" CSS property.</haxe_doc>
		</outlineWidth>
		<overflow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "overflow" CSS property.</haxe_doc>
		</overflow>
		<overflowWrap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "overflow-wrap" CSS property.</haxe_doc>
		</overflowWrap>
		<overflowX public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "overflow-x" CSS property.</haxe_doc>
		</overflowX>
		<overflowY public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "overflow-y" CSS property.</haxe_doc>
		</overflowY>
		<padding public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "padding" CSS property.</haxe_doc>
		</padding>
		<paddingBottom public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "padding-bottom" CSS property.</haxe_doc>
		</paddingBottom>
		<paddingLeft public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "padding-left" CSS property.</haxe_doc>
		</paddingLeft>
		<paddingRight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "padding-right" CSS property.</haxe_doc>
		</paddingRight>
		<paddingTop public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "padding-top" CSS property.</haxe_doc>
		</paddingTop>
		<page public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "page" CSS property.</haxe_doc>
		</page>
		<pageBreakAfter public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "page-break-after" CSS property.</haxe_doc>
		</pageBreakAfter>
		<pageBreakBefore public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "page-break-before" CSS property.</haxe_doc>
		</pageBreakBefore>
		<pageBreakInside public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "page-break-inside" CSS property.</haxe_doc>
		</pageBreakInside>
		<pagePolicy public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "page-policy" CSS property.</haxe_doc>
		</pagePolicy>
		<pause public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "pause" CSS property.</haxe_doc>
		</pause>
		<pauseAfter public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "pause-after" CSS property.</haxe_doc>
		</pauseAfter>
		<pauseBefore public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "pause-before" CSS property.</haxe_doc>
		</pauseBefore>
		<perspective public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "perspective" CSS property.</haxe_doc>
		</perspective>
		<perspectiveOrigin public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "perspective-origin" CSS property.</haxe_doc>
		</perspectiveOrigin>
		<pitch public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "pitch" CSS property.</haxe_doc>
		</pitch>
		<pitchRange public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "pitch-range" CSS property.</haxe_doc>
		</pitchRange>
		<playDuring public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "play-during" CSS property.</haxe_doc>
		</playDuring>
		<position public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "position" CSS property.</haxe_doc>
		</position>
		<presentationLevel public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "presentation-level" CSS property.</haxe_doc>
		</presentationLevel>
		<quotes public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "quotes" CSS property.</haxe_doc>
		</quotes>
		<regionFragment public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "region-fragment" CSS property.</haxe_doc>
		</regionFragment>
		<resize public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "resize" CSS property.</haxe_doc>
		</resize>
		<rest public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "rest" CSS property.</haxe_doc>
		</rest>
		<restAfter public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "rest-after" CSS property.</haxe_doc>
		</restAfter>
		<restBefore public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "rest-before" CSS property.</haxe_doc>
		</restBefore>
		<richness public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "richness" CSS property.</haxe_doc>
		</richness>
		<right public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "right" CSS property.</haxe_doc>
		</right>
		<rotation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "rotation" CSS property.</haxe_doc>
		</rotation>
		<rotationPoint public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "rotation-point" CSS property.</haxe_doc>
		</rotationPoint>
		<rubyAlign public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "ruby-align" CSS property.</haxe_doc>
		</rubyAlign>
		<rubyMerge public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "ruby-merge" CSS property.</haxe_doc>
		</rubyMerge>
		<rubyPosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "ruby-position" CSS property.</haxe_doc>
		</rubyPosition>
		<shapeImageThreshold public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "shape-image-threshold" CSS property.</haxe_doc>
		</shapeImageThreshold>
		<shapeOutside public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "shape-outside" CSS property.</haxe_doc>
		</shapeOutside>
		<shapeMargin public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "shape-margin" CSS property.</haxe_doc>
		</shapeMargin>
		<size public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "size" CSS property.</haxe_doc>
		</size>
		<speak public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "speak" CSS property.</haxe_doc>
		</speak>
		<speakAs public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "speak-as" CSS property.</haxe_doc>
		</speakAs>
		<speakHeader public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "speak-header" CSS property.</haxe_doc>
		</speakHeader>
		<speakNumeral public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "speak-numeral" CSS property.</haxe_doc>
		</speakNumeral>
		<speakPunctuation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "speak-punctuation" CSS property.</haxe_doc>
		</speakPunctuation>
		<speechRate public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "speech-rate" CSS property.</haxe_doc>
		</speechRate>
		<stress public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "stress" CSS property.</haxe_doc>
		</stress>
		<stringSet public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "string-set" CSS property.</haxe_doc>
		</stringSet>
		<tabSize public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "tab-size" CSS property.</haxe_doc>
		</tabSize>
		<tableLayout public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "table-layout" CSS property.</haxe_doc>
		</tableLayout>
		<textAlign public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-align" CSS property.</haxe_doc>
		</textAlign>
		<textAlignLast public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-align-last" CSS property.</haxe_doc>
		</textAlignLast>
		<textCombineUpright public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-combine-upright" CSS property.</haxe_doc>
		</textCombineUpright>
		<textDecoration public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-decoration" CSS property.</haxe_doc>
		</textDecoration>
		<textDecorationColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-decoration-color" CSS property.</haxe_doc>
		</textDecorationColor>
		<textDecorationLine public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-decoration-line" CSS property.</haxe_doc>
		</textDecorationLine>
		<textDecorationSkip public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-decoration-skip" CSS property.</haxe_doc>
		</textDecorationSkip>
		<textDecorationStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-decoration-style" CSS property.</haxe_doc>
		</textDecorationStyle>
		<textEmphasis public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-emphasis" CSS property.</haxe_doc>
		</textEmphasis>
		<textEmphasisColor public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-emphasis-color" CSS property.</haxe_doc>
		</textEmphasisColor>
		<textEmphasisPosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-emphasis-position" CSS property.</haxe_doc>
		</textEmphasisPosition>
		<textEmphasisStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-emphasis-style" CSS property.</haxe_doc>
		</textEmphasisStyle>
		<textHeight public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-height" CSS property.</haxe_doc>
		</textHeight>
		<textIndent public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-indent" CSS property.</haxe_doc>
		</textIndent>
		<textJustify public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-justify" CSS property.</haxe_doc>
		</textJustify>
		<textOrientation public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-orientation" CSS property.</haxe_doc>
		</textOrientation>
		<textOverflow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-overflow" CSS property.</haxe_doc>
		</textOverflow>
		<textShadow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-shadow" CSS property.</haxe_doc>
		</textShadow>
		<textSpaceCollapse public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-space-collapse" CSS property.</haxe_doc>
		</textSpaceCollapse>
		<textTransform public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-transform" CSS property.</haxe_doc>
		</textTransform>
		<textUnderlinePosition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-underline-position" CSS property.</haxe_doc>
		</textUnderlinePosition>
		<textWrap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "text-wrap" CSS property.</haxe_doc>
		</textWrap>
		<top public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "top" CSS property.</haxe_doc>
		</top>
		<transform public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transform" CSS property.</haxe_doc>
		</transform>
		<transformOrigin public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transform-origin" CSS property.</haxe_doc>
		</transformOrigin>
		<transformStyle public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transform-style" CSS property.</haxe_doc>
		</transformStyle>
		<transition public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transition" CSS property.</haxe_doc>
		</transition>
		<transitionDelay public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transition-delay" CSS property.</haxe_doc>
		</transitionDelay>
		<transitionDuration public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transition-duration" CSS property.</haxe_doc>
		</transitionDuration>
		<transitionProperty public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transition-property" CSS property.</haxe_doc>
		</transitionProperty>
		<transitionTimingFunction public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "transition-timing-function" CSS property.</haxe_doc>
		</transitionTimingFunction>
		<unicodeBidi public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "unicode-bidi" CSS property.</haxe_doc>
		</unicodeBidi>
		<verticalAlign public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "vertical-align" CSS property.</haxe_doc>
		</verticalAlign>
		<visibility public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "visibility" CSS property.</haxe_doc>
		</visibility>
		<voiceBalance public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-balance" CSS property.</haxe_doc>
		</voiceBalance>
		<voiceDuration public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-duration" CSS property.</haxe_doc>
		</voiceDuration>
		<voiceFamily public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-family" CSS property.</haxe_doc>
		</voiceFamily>
		<voicePitch public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-pitch" CSS property.</haxe_doc>
		</voicePitch>
		<voiceRange public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-range" CSS property.</haxe_doc>
		</voiceRange>
		<voiceRate public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-rate" CSS property.</haxe_doc>
		</voiceRate>
		<voiceStress public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-stress" CSS property.</haxe_doc>
		</voiceStress>
		<voiceVolume public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "voice-volume" CSS property.</haxe_doc>
		</voiceVolume>
		<volume public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "volume" CSS property.</haxe_doc>
		</volume>
		<whiteSpace public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "white-space" CSS property.</haxe_doc>
		</whiteSpace>
		<widows public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "widows" CSS property.</haxe_doc>
		</widows>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "width" CSS property.</haxe_doc>
		</width>
		<willChange public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "will-change" CSS property.</haxe_doc>
		</willChange>
		<wordBreak public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "word-break" CSS property.</haxe_doc>
		</wordBreak>
		<wordSpacing public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "word-spacing" CSS property.</haxe_doc>
		</wordSpacing>
		<wordWrap public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "word-wrap" CSS property.</haxe_doc>
		</wordWrap>
		<wrapFlow public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "wrap-flow" CSS property.</haxe_doc>
		</wrapFlow>
		<wrapThrough public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "wrap-through" CSS property.</haxe_doc>
		</wrapThrough>
		<writingMode public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "writing-mode" CSS property.</haxe_doc>
		</writingMode>
		<zIndex public="1">
			<c path="String"/>
			<haxe_doc>Shorthand for the "z-index" CSS property.</haxe_doc>
		</zIndex>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<getPropertyValue public="1" set="method">
			<f a="property">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getPropertyValue>
		<getPropertyCSSValue public="1" set="method">
			<f a="property">
				<c path="String"/>
				<c path="js.html.CSSValue"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getPropertyCSSValue>
		<getPropertyPriority public="1" set="method"><f a="property">
	<c path="String"/>
	<c path="String"/>
</f></getPropertyPriority>
		<setProperty public="1" set="method">
			<f a="property:value:?priority" v="::&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setProperty>
		<removeProperty public="1" set="method">
			<f a="property">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeProperty>
		<haxe_doc><![CDATA[`CSSStyleDeclaration` represents a collection of CSS property-value pairs. It is used in a few APIs:

	Documentation [CSSStyleDeclaration](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration>]]></haxe_doc>
		<meta><m n=":native"><e>"CSSStyleDeclaration"</e></m></meta>
	</class>
	<class path="js.html.StyleSheet" params="" file="/usr/local/lib/haxe/std/js/html/StyleSheet.hx" extern="1">
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the style sheet language for this style sheet.</haxe_doc>
		</type>
		<href public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the location of the stylesheet.</haxe_doc>
		</href>
		<ownerNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` associating this style sheet with the current document.</haxe_doc>
		</ownerNode>
		<parentStyleSheet public="1" set="null">
			<c path="js.html.StyleSheet"/>
			<haxe_doc>Returns a `StyleSheet` including this one, if any; returns `null` if there aren't any.</haxe_doc>
		</parentStyleSheet>
		<title public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the advisory title of the current style sheet.</haxe_doc>
		</title>
		<media public="1" set="null">
			<c path="js.html.MediaList"/>
			<haxe_doc>Returns a `MediaList` representing the intended destination medium for style information.</haxe_doc>
		</media>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` representing whether the current stylesheet has been applied or not.</haxe_doc>
		</disabled>
		<haxe_doc><![CDATA[An object implementing the `StyleSheet` interface represents a single style sheet. CSS style sheets will further implement the more specialized `CSSStyleSheet` interface.

	Documentation [StyleSheet](https://developer.mozilla.org/en-US/docs/Web/API/StyleSheet) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/StyleSheet$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/StyleSheet>]]></haxe_doc>
		<meta><m n=":native"><e>"StyleSheet"</e></m></meta>
	</class>
	<class path="js.html.CSSStyleSheet" params="" file="/usr/local/lib/haxe/std/js/html/CSSStyleSheet.hx" extern="1">
		<extends path="js.html.StyleSheet"/>
		<ownerRule public="1" set="null"><c path="js.html.CSSRule"/></ownerRule>
		<cssRules public="1" set="null"><c path="js.html.CSSRuleList"/></cssRules>
		<insertRule public="1" set="method">
			<f a="rule:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertRule>
		<deleteRule public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteRule>
		<haxe_doc><![CDATA[The `CSSStyleSheet` interface represents a single CSS style sheet. It inherits properties and methods from its parent, `StyleSheet`.

	Documentation [CSSStyleSheet](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet>]]></haxe_doc>
		<meta><m n=":native"><e>"CSSStyleSheet"</e></m></meta>
	</class>
	<class path="js.html.CSSValue" params="" file="/usr/local/lib/haxe/std/js/html/CSSValue.hx" extern="1">
		<CSS_INHERIT public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</CSS_INHERIT>
		<CSS_PRIMITIVE_VALUE public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</CSS_PRIMITIVE_VALUE>
		<CSS_VALUE_LIST public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</CSS_VALUE_LIST>
		<CSS_CUSTOM public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</CSS_CUSTOM>
		<cssText public="1">
			<c path="String"/>
			<haxe_doc>A `DOMString` representing the current value.</haxe_doc>
		</cssText>
		<cssValueType public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[An <code>unsigned short</code> representing a code defining the type of the value. Possible values are:
		 <table class="standard-table">
		  
		   <tr>
		    <td class="header">Constant</td>
		    <td class="header">Description</td>
		   </tr>
		   <tr>
		    <td><code>CSS_CUSTOM</code></td>
		    <td>The value is a custom value.</td>
		   </tr>
		   <tr>
		    <td><code>CSS_INHERIT</code></td>
		    <td>The value is inherited and the <code>cssText</code> contains <code>"inherit"</code>.</td>
		   </tr>
		   <tr>
		    <td><code>CSS_PRIMITIVE_VALUE</code></td>
		    <td>The value is a primitive value and an instance of the <code>CSSPrimitiveValue</code> interface can be obtained by using binding-specific casting methods on this instance of the <code>CSSValue</code> interface.</td>
		   </tr>
		   <tr>
		    <td><code>CSS_VALUE_LIST</code></td>
		    <td>The value is a <code>CSSValue</code> list and an instance of the <code>CSSValueList</code> interface can be obtained by using binding-specific casting methods on this instance of the <code>CSSValue</code> interface.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</cssValueType>
		<haxe_doc><![CDATA[The `CSSValue` interface represents the current computed value of a CSS property.

	Documentation [CSSValue](https://developer.mozilla.org/en-US/docs/Web/API/CSSValue) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CSSValue$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CSSValue>]]></haxe_doc>
		<meta><m n=":native"><e>"CSSValue"</e></m></meta>
	</class>
	<class path="js.html.CanvasElement" params="" file="/usr/local/lib/haxe/std/js/html/CanvasElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>Is a positive `integer` reflecting the `width` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `300` is used.</haxe_doc>
		</width>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>Is a positive `integer` reflecting the `height` HTML attribute of the `canvas` element interpreted in CSS pixels. When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of `150` is used.</haxe_doc>
		</height>
		<getContext public="1" set="method">
			<f a="contextId:?contextOptions">
				<c path="String"/>
				<d/>
				<d/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getContext>
		<toDataURL public="1" set="method">
			<f a="?type:?encoderOptions" v="&quot;&quot;:">
				<c path="String"/>
				<d/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ type : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</toDataURL>
		<toBlob public="1" set="method">
			<f a="callback:?type:?encoderOptions" v=":&quot;&quot;:">
				<f a="">
					<c path="js.html.Blob"/>
					<x path="Void"/>
				</f>
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</toBlob>
		<getContext2d public="1" get="inline" set="null" line="68">
			<f a="?attribs">
				<a/>
				<c path="js.html.CanvasRenderingContext2D"/>
			</f>
			<haxe_doc>Shorthand for getting a CanvasRenderingContext2D.</haxe_doc>
		</getContext2d>
		<getContextWebGL public="1" get="inline" set="null" line="72">
			<f a="?attribs">
				<t path="js.html.webgl.ContextAttributes"/>
				<c path="js.html.webgl.RenderingContext"/>
			</f>
			<haxe_doc>Shorthand for getting a js.html.webgl.RenderingContext.</haxe_doc>
		</getContextWebGL>
		<haxe_doc><![CDATA[The `HTMLCanvasElement` interface provides properties and methods for manipulating the layout and presentation of canvas elements. The `HTMLCanvasElement` interface also inherits the properties and methods of the `HTMLElement` interface.

	Documentation [HTMLCanvasElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement>]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"HTMLCanvasElement"</e></m>
		</meta>
	</class>
	<class path="js.html.CanvasGradient" params="" file="/usr/local/lib/haxe/std/js/html/CanvasGradient.hx" extern="1">
		<addColorStop public="1" set="method">
			<f a="offset:color">
				<x path="Float"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</addColorStop>
		<haxe_doc><![CDATA[The `CanvasGradient` interface represents an opaque object describing a gradient. It is returned by the methods `CanvasRenderingContext2D.createLinearGradient()` or `CanvasRenderingContext2D.createRadialGradient()`.

	Documentation [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient>]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasGradient"</e></m></meta>
	</class>
	<class path="js.html.CanvasPattern" params="" file="/usr/local/lib/haxe/std/js/html/CanvasPattern.hx" extern="1">
		<setTransform public="1" set="method">
			<f a="matrix">
				<c path="js.html.svg.Matrix"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Applies an `SVGMatrix` representing a linear transform to the pattern.</haxe_doc>
		</setTransform>
		<haxe_doc><![CDATA[The `CanvasPattern` interface represents an opaque object describing a pattern, based on an image, a canvas or a video, created by the `CanvasRenderingContext2D.createPattern()` method.

	Documentation [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern>]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasPattern"</e></m></meta>
	</class>
	<class path="js.html.CanvasRenderingContext2D" params="" file="/usr/local/lib/haxe/std/js/html/CanvasRenderingContext2D.hx" extern="1">
		<canvas public="1" set="null"><c path="js.html.CanvasElement"/></canvas>
		<globalAlpha public="1"><x path="Float"/></globalAlpha>
		<globalCompositeOperation public="1"><c path="String"/></globalCompositeOperation>
		<strokeStyle public="1"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="js.html.CanvasGradient"/>
		<c path="js.html.CanvasPattern"/>
	</x>
</x></strokeStyle>
		<fillStyle public="1"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="js.html.CanvasGradient"/>
		<c path="js.html.CanvasPattern"/>
	</x>
</x></fillStyle>
		<shadowOffsetX public="1"><x path="Float"/></shadowOffsetX>
		<shadowOffsetY public="1"><x path="Float"/></shadowOffsetY>
		<shadowBlur public="1"><x path="Float"/></shadowBlur>
		<shadowColor public="1"><c path="String"/></shadowColor>
		<filter public="1"><c path="String"/></filter>
		<imageSmoothingEnabled public="1"><x path="Bool"/></imageSmoothingEnabled>
		<lineWidth public="1"><x path="Float"/></lineWidth>
		<lineCap public="1"><c path="String"/></lineCap>
		<lineJoin public="1"><c path="String"/></lineJoin>
		<miterLimit public="1"><x path="Float"/></miterLimit>
		<lineDashOffset public="1"><x path="Float"/></lineDashOffset>
		<font public="1"><c path="String"/></font>
		<textAlign public="1"><c path="String"/></textAlign>
		<textBaseline public="1"><c path="String"/></textBaseline>
		<save public="1" set="method"><f a=""><x path="Void"/></f></save>
		<restore public="1" set="method"><f a=""><x path="Void"/></f></restore>
		<scale public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</scale>
		<rotate public="1" set="method">
			<f a="angle">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</rotate>
		<translate public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</translate>
		<transform public="1" set="method">
			<f a="a:b:c:d:e:f">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</transform>
		<setTransform public="1" set="method">
			<f a="a:b:c:d:e:f">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setTransform>
		<resetTransform public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</resetTransform>
		<createLinearGradient public="1" set="method"><f a="x0:y0:x1:y1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.CanvasGradient"/>
</f></createLinearGradient>
		<createRadialGradient public="1" set="method">
			<f a="x0:y0:r0:x1:y1:r1">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.CanvasGradient"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createRadialGradient>
		<createPattern public="1" set="method">
			<f a="image:repetition">
				<x path="haxe.extern.EitherType">
					<c path="js.html.ImageElement"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.CanvasElement"/>
						<x path="haxe.extern.EitherType">
							<c path="js.html.VideoElement"/>
							<c path="js.html.ImageBitmap"/>
						</x>
					</x>
				</x>
				<c path="String"/>
				<c path="js.html.CanvasPattern"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createPattern>
		<clearRect public="1" set="method"><f a="x:y:w:h">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearRect>
		<fillRect public="1" set="method"><f a="x:y:w:h">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></fillRect>
		<strokeRect public="1" set="method"><f a="x:y:w:h">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></strokeRect>
		<beginPath public="1" set="method"><f a=""><x path="Void"/></f></beginPath>
		<fill public="1" set="method">
			<f a="path:?winding" v=":&quot;nonzero&quot;">
				<c path="js.html.Path2D"/>
				<x path="js.html.CanvasWindingRule"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ winding : "nonzero" }</e></m></meta>
			<overloads><fill public="1" set="method">
	<f a="?winding" v="&quot;nonzero&quot;">
		<x path="js.html.CanvasWindingRule"/>
		<x path="Void"/>
	</f>
	<meta><m n=":value"><e>{ winding : "nonzero" }</e></m></meta>
</fill></overloads>
		</fill>
		<stroke public="1" set="method">
			<f a="path">
				<c path="js.html.Path2D"/>
				<x path="Void"/>
			</f>
			<overloads><stroke public="1" set="method"><f a=""><x path="Void"/></f></stroke></overloads>
		</stroke>
		<drawFocusIfNeeded public="1" set="method">
			<f a="element">
				<c path="js.html.Element"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</drawFocusIfNeeded>
		<drawCustomFocusRing public="1" set="method"><f a="element">
	<c path="js.html.Element"/>
	<x path="Bool"/>
</f></drawCustomFocusRing>
		<clip public="1" set="method">
			<f a="path:?winding" v=":&quot;nonzero&quot;">
				<c path="js.html.Path2D"/>
				<x path="js.html.CanvasWindingRule"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ winding : "nonzero" }</e></m></meta>
			<overloads><clip public="1" set="method">
	<f a="?winding" v="&quot;nonzero&quot;">
		<x path="js.html.CanvasWindingRule"/>
		<x path="Void"/>
	</f>
	<meta><m n=":value"><e>{ winding : "nonzero" }</e></m></meta>
</clip></overloads>
		</clip>
		<isPointInPath public="1" set="method">
			<f a="path:x:y:?winding" v=":::&quot;nonzero&quot;">
				<c path="js.html.Path2D"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="js.html.CanvasWindingRule"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ winding : "nonzero" }</e></m></meta>
			<overloads><isPointInPath public="1" set="method">
	<f a="x:y:?winding" v="::&quot;nonzero&quot;">
		<x path="Float"/>
		<x path="Float"/>
		<x path="js.html.CanvasWindingRule"/>
		<x path="Bool"/>
	</f>
	<meta><m n=":value"><e>{ winding : "nonzero" }</e></m></meta>
</isPointInPath></overloads>
		</isPointInPath>
		<isPointInStroke public="1" set="method">
			<f a="path:x:y">
				<c path="js.html.Path2D"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<overloads><isPointInStroke public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Bool"/>
</f></isPointInStroke></overloads>
		</isPointInStroke>
		<fillText public="1" set="method">
			<f a="text:x:y:?maxWidth">
				<c path="String"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</fillText>
		<strokeText public="1" set="method">
			<f a="text:x:y:?maxWidth">
				<c path="String"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</strokeText>
		<measureText public="1" set="method">
			<f a="text">
				<c path="String"/>
				<c path="js.html.TextMetrics"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</measureText>
		<drawImage public="1" set="method">
			<f a="image:sx:sy:sw:sh:dx:dy:dw:dh">
				<x path="haxe.extern.EitherType">
					<c path="js.html.ImageElement"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.CanvasElement"/>
						<x path="haxe.extern.EitherType">
							<c path="js.html.VideoElement"/>
							<c path="js.html.ImageBitmap"/>
						</x>
					</x>
				</x>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<drawImage public="1" set="method">
					<f a="image:dx:dy">
						<x path="haxe.extern.EitherType">
							<c path="js.html.ImageElement"/>
							<x path="haxe.extern.EitherType">
								<c path="js.html.CanvasElement"/>
								<x path="haxe.extern.EitherType">
									<c path="js.html.VideoElement"/>
									<c path="js.html.ImageBitmap"/>
								</x>
							</x>
						</x>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</drawImage>
				<drawImage public="1" set="method">
					<f a="image:dx:dy:dw:dh">
						<x path="haxe.extern.EitherType">
							<c path="js.html.ImageElement"/>
							<x path="haxe.extern.EitherType">
								<c path="js.html.CanvasElement"/>
								<x path="haxe.extern.EitherType">
									<c path="js.html.VideoElement"/>
									<c path="js.html.ImageBitmap"/>
								</x>
							</x>
						</x>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Float"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</drawImage>
			</overloads>
		</drawImage>
		<addHitRegion public="1" set="method">
			<f a="?options">
				<t path="js.html.HitRegionOptions"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</addHitRegion>
		<removeHitRegion public="1" set="method"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></removeHitRegion>
		<clearHitRegions public="1" set="method"><f a=""><x path="Void"/></f></clearHitRegions>
		<createImageData public="1" set="method">
			<f a="imagedata">
				<c path="js.html.ImageData"/>
				<c path="js.html.ImageData"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><createImageData public="1" set="method">
	<f a="sw:sh">
		<x path="Float"/>
		<x path="Float"/>
		<c path="js.html.ImageData"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</createImageData></overloads>
		</createImageData>
		<getImageData public="1" set="method">
			<f a="sx:sy:sw:sh">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.ImageData"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getImageData>
		<putImageData public="1" set="method">
			<f a="imagedata:dx:dy:dirtyX:dirtyY:dirtyWidth:dirtyHeight">
				<c path="js.html.ImageData"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><putImageData public="1" set="method">
	<f a="imagedata:dx:dy">
		<c path="js.html.ImageData"/>
		<x path="Float"/>
		<x path="Float"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</putImageData></overloads>
		</putImageData>
		<setLineDash public="1" set="method">
			<f a="segments">
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setLineDash>
		<getLineDash public="1" set="method"><f a=""><c path="Array"><x path="Float"/></c></f></getLineDash>
		<closePath public="1" set="method"><f a=""><x path="Void"/></f></closePath>
		<moveTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<lineTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<quadraticCurveTo public="1" set="method"><f a="cpx:cpy:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></quadraticCurveTo>
		<bezierCurveTo public="1" set="method"><f a="cp1x:cp1y:cp2x:cp2y:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bezierCurveTo>
		<arcTo public="1" set="method">
			<f a="x1:y1:x2:y2:radius">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</arcTo>
		<rect public="1" set="method"><f a="x:y:w:h">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rect>
		<arc public="1" set="method">
			<f a="x:y:radius:startAngle:endAngle:?anticlockwise" v=":::::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ anticlockwise : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</arc>
		<ellipse public="1" set="method">
			<f a="x:y:radiusX:radiusY:rotation:startAngle:endAngle:?anticlockwise" v=":::::::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ anticlockwise : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</ellipse>
		<haxe_doc><![CDATA[To get an object of this interface, call `getContext()` on a `canvas element`, supplying "2d" as the argument:

	Documentation [CanvasRenderingContext2D](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D>]]></haxe_doc>
		<meta><m n=":native"><e>"CanvasRenderingContext2D"</e></m></meta>
	</class>
	<abstract path="js.html.CanvasWindingRule" params="" file="/usr/local/lib/haxe/std/js/html/CanvasWindingRule.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._CanvasWindingRule.CanvasWindingRule_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/CanvasWindingRule.hx" private="1" module="js.html.CanvasWindingRule"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.CaretPosition" params="" file="/usr/local/lib/haxe/std/js/html/CaretPosition.hx" extern="1">
		<offsetNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` containing the found node at the caret's position.</haxe_doc>
		</offsetNode>
		<offset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `long` representing the character offset in the caret position node.</haxe_doc>
		</offset>
		<getClientRect public="1" set="method"><f a=""><c path="js.html.DOMRect"/></f></getClientRect>
		<haxe_doc><![CDATA[The `CaretPosition` interface represents the caret postion, an indicator for the text insertion point. You can get a `CaretPosition` using the `document.caretPositionFromPoint` method.

	Documentation [CaretPosition](https://developer.mozilla.org/en-US/docs/Web/API/CaretPosition) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CaretPosition$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CaretPosition>]]></haxe_doc>
		<meta><m n=":native"><e>"CaretPosition"</e></m></meta>
	</class>
	<typedef path="js.html.ChromeFilePropertyBag" params="" file="/usr/local/lib/haxe/std/js/html/ChromeFilePropertyBag.hx"><a>
	<type>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</type>
	<temporary>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</temporary>
	<name>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</name>
	<lastModified>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</lastModified>
</a></typedef>
	<class path="js.html.Event" params="" file="/usr/local/lib/haxe/std/js/html/Event.hx" extern="1">
		<NONE public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<CAPTURING_PHASE public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</CAPTURING_PHASE>
		<AT_TARGET public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</AT_TARGET>
		<BUBBLING_PHASE public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</BUBBLING_PHASE>
		<ALT_MASK public="1" get="inline" set="null" expr="1" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ALT_MASK>
		<CONTROL_MASK public="1" get="inline" set="null" expr="2" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</CONTROL_MASK>
		<SHIFT_MASK public="1" get="inline" set="null" expr="4" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</SHIFT_MASK>
		<META_MASK public="1" get="inline" set="null" expr="8" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</META_MASK>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of the event (case-insensitive).</haxe_doc>
		</type>
		<target public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>A reference to the target to which the event was originally dispatched.</haxe_doc>
		</target>
		<currentTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>A reference to the currently registered target for the event. This is the object to which the event is currently slated to be sent to; it's possible this has been changed along the way through retargeting.</haxe_doc>
		</currentTarget>
		<eventPhase public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Indicates which phase of the event flow is being processed.</haxe_doc>
		</eventPhase>
		<bubbles public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A Boolean indicating whether the event bubbles up through the DOM or not.</haxe_doc>
		</bubbles>
		<cancelable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A Boolean indicating whether the event is cancelable.</haxe_doc>
		</cancelable>
		<defaultPrevented public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether or not `event.preventDefault()` has been called on the event.</haxe_doc>
		</defaultPrevented>
		<isTrusted public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Indicates whether or not the event was initiated by the browser (after a user click for instance) or by a script (using an event creation method, like event.initEvent)</haxe_doc>
		</isTrusted>
		<timeStamp public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The time at which the event was created, in milliseconds. By specification, this value is time since epoch, but in reality browsers' definitions vary; in addition, work is underway to change this to be a `DOMHighResTimeStamp` instead.</haxe_doc>
		</timeStamp>
		<originalTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>The original target of the event, before any retargetings (Mozilla-specific).</haxe_doc>
		</originalTarget>
		<explicitOriginalTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>The explicit original target of the event (Mozilla-specific).</haxe_doc>
		</explicitOriginalTarget>
		<stopPropagation public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Stops the propagation of events further along in the DOM.</haxe_doc>
		</stopPropagation>
		<stopImmediatePropagation public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>For this particular event, no other listener will be called. Neither those attached on the same element, nor those attached on elements which will be traversed later (in capture phase, for instance)</haxe_doc>
		</stopImmediatePropagation>
		<preventDefault public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Cancels the event (if it is cancelable).</haxe_doc>
		</preventDefault>
		<initEvent public="1" set="method">
			<f a="type:bubbles:cancelable">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Initializes the value of an Event created. If the event has already being dispatched, this method does nothing.</haxe_doc>
		</initEvent>
		<getPreventDefault public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>Non-standard. Returns the value of `Event.defaultPrevented`. Use `Event.defaultPrevented` instead.</haxe_doc>
		</getPreventDefault>
		<new public="1" set="method">
			<f a="type:?eventInitDict">
				<c path="String"/>
				<t path="js.html.EventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Event` interface represents any event which takes place in the DOM; some are user-generated (such as mouse or keyboard events), while others are generated by APIs (such as events that indicate an animation has finished running, a video has been paused, and so forth). There are many types of event, some of which use are other interfaces based on the main `Event` interface. `Event` itself contains the properties and methods which are common to all events.

	Documentation [Event](https://developer.mozilla.org/en-US/docs/Web/API/Event) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Event$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Event>]]></haxe_doc>
		<meta><m n=":native"><e>"Event"</e></m></meta>
	</class>
	<class path="js.html.ClipboardEvent" params="" file="/usr/local/lib/haxe/std/js/html/ClipboardEvent.hx" extern="1">
		<extends path="js.html.Event"/>
		<clipboardData public="1" set="null">
			<c path="js.html.DataTransfer"/>
			<haxe_doc>Is a `DataTransfer` object containing the data affected by the user-initiated `cut`, `copy`, or `paste` operation, along with its MIME type.</haxe_doc>
		</clipboardData>
		<new public="1" set="method">
			<f a="type:?eventInitDict">
				<c path="String"/>
				<t path="js.html.ClipboardEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `ClipboardEvent` interface represents events providing information related to modification of the clipboard, that is `cut`, `copy`, and `paste` events.

	Documentation [ClipboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"ClipboardEvent"</e></m></meta>
	</class>
	<typedef path="js.html.ClipboardEventInit" params="" file="/usr/local/lib/haxe/std/js/html/ClipboardEventInit.hx"><a>
	<dataType>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</dataType>
	<data>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</data>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
</a></typedef>
	<class path="js.html.Comment" params="" file="/usr/local/lib/haxe/std/js/html/Comment.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<new public="1" set="method">
			<f a="?data" v="&quot;&quot;">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ data : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Comment` interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. Comments are represented in HTML and XML as content between '`!--`' and '`--`'. In XML, the character sequence '`--`' cannot be used within a comment.

	Documentation [Comment](https://developer.mozilla.org/en-US/docs/Web/API/Comment) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Comment$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Comment>]]></haxe_doc>
		<meta><m n=":native"><e>"Comment"</e></m></meta>
	</class>
	<abstract path="js.html.CompositeOperation" params="" file="/usr/local/lib/haxe/std/js/html/CompositeOperation.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._CompositeOperation.CompositeOperation_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/CompositeOperation.hx" private="1" module="js.html.CompositeOperation"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<typedef path="js.html.ComputedTimingProperties" params="" file="/usr/local/lib/haxe/std/js/html/ComputedTimingProperties.hx"><a>
	<progress>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</progress>
	<localTime>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</localTime>
	<iterations>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</iterations>
	<iterationStart>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</iterationStart>
	<fill>
		<x path="Null"><x path="js.html.FillMode"/></x>
		<meta><m n=":optional"/></meta>
	</fill>
	<endTime>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</endTime>
	<endDelay>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</endDelay>
	<easing>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</easing>
	<duration>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Float"/>
	<c path="String"/>
</x></x>
		<meta><m n=":optional"/></meta>
	</duration>
	<direction>
		<x path="Null"><x path="js.html.PlaybackDirection"/></x>
		<meta><m n=":optional"/></meta>
	</direction>
	<delay>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</delay>
	<currentIteration>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</currentIteration>
	<activeDuration>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</activeDuration>
</a></typedef>
	<class path="js.html.Console" params="" file="/usr/local/lib/haxe/std/js/html/Console.hx" extern="1">
		<log public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>For general output of logging information. You may use string substitution and additional arguments with this method.</haxe_doc>
		</log>
		<info public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Informative logging information. You may use string substitution and additional arguments with this method.</haxe_doc>
		</info>
		<warn public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Outputs a warning message. You may use string substitution and additional arguments with this method.</haxe_doc>
		</warn>
		<error public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Outputs an error message. You may use string substitution and additional arguments with this method.</haxe_doc>
		</error>
		<exception public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>An alias for `error()`</haxe_doc>
		</exception>
		<debug public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>An alias for `log()`</haxe_doc>
		</debug>
		<table public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Displays tabular data as a table.</haxe_doc>
		</table>
		<trace public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Outputs a stack trace.</haxe_doc>
		</trace>
		<dir public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Displays an interactive listing of the properties of a specified JavaScript object. This listing lets you use disclosure triangles to examine the contents of child objects.</haxe_doc>
		</dir>
		<dirxml public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Displays an XML/HTML Element representation of the specified object if possible or the JavaScript Object view if it is not.</haxe_doc>
		</dirxml>
		<group public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new inline group, indenting all following output by another level. To move back out a level, call `groupEnd()`.</haxe_doc>
		</group>
		<groupCollapsed public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Creates a new inline group, indenting all following output by another level; unlike `group()`, this starts with the inline group collapsed, requiring the use of a disclosure button to expand it. To move back out a level, call `groupEnd()`.</haxe_doc>
		</groupCollapsed>
		<groupEnd public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Exits the current inline group.</haxe_doc>
		</groupEnd>
		<time public="1" set="method">
			<f a="?time">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Starts a timer with a name specified as an input parameter. Up to 10,000 simultaneous timers can run on a given page.</haxe_doc>
		</time>
		<timeEnd public="1" set="method">
			<f a="?time">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Stops the specified timer and logs the elapsed time in seconds since its start.</haxe_doc>
		</timeEnd>
		<timeStamp public="1" set="method">
			<f a="?data">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds a marker to the browser's Timeline or Waterfall tool.</haxe_doc>
		</timeStamp>
		<profile public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Starts the browser's build-in profiler (for example, the Firefox performance tool). You can specify an optional name for the profile.</haxe_doc>
		</profile>
		<profileEnd public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Stops the profiler. You can see the resulting profile in the browser's performance tool (for example, the Firefox performance tool).</haxe_doc>
		</profileEnd>
		<assert public="1" set="method">
			<f a="condition:data">
				<x path="Bool"/>
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Log a message and stack trace to console if first argument is `false`.</haxe_doc>
		</assert>
		<count public="1" set="method">
			<f a="data">
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>Log the number of times this line has been called with the given label.</haxe_doc>
		</count>
		<clear public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Clear the console.</haxe_doc>
		</clear>
		<markTimeline public="1" set="method"><f a=""><x path="Void"/></f></markTimeline>
		<timeline public="1" set="method"><f a=""><x path="Void"/></f></timeline>
		<timelineEnd public="1" set="method"><f a=""><x path="Void"/></f></timelineEnd>
		<haxe_doc><![CDATA[The `Console` object provides access to the browser's debugging console (e.g., the Web Console in Firefox). The specifics of how it works vary from browser to browser, but there is a de facto set of features that are typically provided.

	Documentation [Console](https://developer.mozilla.org/en-US/docs/Web/API/Console) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Console$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Console>]]></haxe_doc>
		<meta><m n=":native"><e>"Console"</e></m></meta>
	</class>
	<class path="js.html.ContentElement" params="" file="/usr/local/lib/haxe/std/js/html/ContentElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<select public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `select` HTML attribute. The value is a comma-separated list of CSS selectors that select the content to insert in place of the `content` element.</haxe_doc>
		</select>
		<getDistributedNodes public="1" set="method">
			<f a=""><c path="js.html.NodeList"/></f>
			<haxe_doc>Returns a static `NodeList` of the `distributed nodes` associated with this `content` element. </haxe_doc>
		</getDistributedNodes>
		<haxe_doc><![CDATA[The `HTMLContentElement` interface represents a `content` HTML Element, which is used in Shadow DOM.

	Documentation [HTMLContentElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLContentElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLContentElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLContentElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLContentElement"</e></m></meta>
	</class>
	<typedef path="js.html.ConvertCoordinateOptions" params="" file="/usr/local/lib/haxe/std/js/html/ConvertCoordinateOptions.hx"><a>
	<toBox>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</toBox>
	<fromBox>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</fromBox>
</a></typedef>
	<class path="js.html.Coordinates" params="" file="/usr/local/lib/haxe/std/js/html/Coordinates.hx" extern="1">
		<latitude public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the position's latitude in decimal degrees.</haxe_doc>
		</latitude>
		<longitude public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the position's longitude in decimal degrees.</haxe_doc>
		</longitude>
		<altitude public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the position's altitude in metres, relative to sea level. This value can be `null` if the implementation cannot provide the data.</haxe_doc>
		</altitude>
		<accuracy public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the accuracy of the `latitude` and `longitude` properties, expressed in meters.</haxe_doc>
		</accuracy>
		<altitudeAccuracy public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the accuracy of the `altitude` expressed in meters. This value can be `null`.</haxe_doc>
		</altitudeAccuracy>
		<heading public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the direction in which the device is traveling. This value, specified in degrees, indicates how far off from heading true north the device is. `0` degrees represents true north, and the direction is determined clockwise (which means that east is `90` degrees and west is `270` degrees). If `speed` is `0`, `heading` is `NaN`. If the device is unable to provide `heading` information, this value is `null`.</haxe_doc>
		</heading>
		<speed public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` representing the velocity of the device in meters per second. This value can be `null`.</haxe_doc>
		</speed>
		<haxe_doc><![CDATA[The `Coordinates` interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.

	Documentation [Coordinates](https://developer.mozilla.org/en-US/docs/Web/API/Coordinates) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Coordinates$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Coordinates>]]></haxe_doc>
		<meta><m n=":native"><e>"Coordinates"</e></m></meta>
	</class>
	<class path="js.html.Crypto" params="" file="/usr/local/lib/haxe/std/js/html/Crypto.hx" extern="1">
		<subtle public="1" set="null">
			<c path="js.html.SubtleCrypto"/>
			<haxe_doc>Returns a `SubtleCrypto` object providing access to common cryptographic primitives, like hashing, signing, encryption or decryption.</haxe_doc>
		</subtle>
		<getRandomValues public="1" set="method">
			<f a="array">
				<c path="js.html.ArrayBufferView"/>
				<c path="js.html.ArrayBufferView"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getRandomValues>
		<haxe_doc><![CDATA[The `Crypto` interface represents basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives.

	Documentation [Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Crypto) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Crypto$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Crypto>]]></haxe_doc>
		<meta><m n=":native"><e>"Crypto"</e></m></meta>
	</class>
	<class path="js.html.CryptoKey" params="" file="/usr/local/lib/haxe/std/js/html/CryptoKey.hx" extern="1">
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns an enumerated value representing the type of the key, a secret key (for symmetric algorithm), a public or a private key (for an asymmetric algorithm)</haxe_doc>
		</type>
		<extractable public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` indicating if the raw information may be exported to the application or not.</haxe_doc>
		</extractable>
		<algorithm public="1" set="null">
			<d/>
			<haxe_doc>Returns an opaque object representing a particular cipher the key has to be used with.</haxe_doc>
		</algorithm>
		<usages public="1" set="null">
			<c path="Array"><c path="String"/></c>
			<haxe_doc>Returns an array of enumerated values indicating what the key can be used for.</haxe_doc>
		</usages>
		<haxe_doc><![CDATA[The `CryptoKey` interface represents a cryptographic key derived from a specific key algorithm.

	Documentation [CryptoKey](https://developer.mozilla.org/en-US/docs/Web/API/CryptoKey) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/CryptoKey$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/CryptoKey>]]></haxe_doc>
		<meta><m n=":native"><e>"CryptoKey"</e></m></meta>
	</class>
	<class path="js.html.DListElement" params="" file="/usr/local/lib/haxe/std/js/html/DListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating that spacing between list items should be reduced.</haxe_doc>
		</compact>
		<haxe_doc><![CDATA[The `HTMLDListElement` interface provides special properties (beyond those of the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating definition list elements.

	Documentation [HTMLDListElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDListElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDListElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLDListElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDListElement"</e></m></meta>
	</class>
	<class path="js.html.DOMError" params="" file="/usr/local/lib/haxe/std/js/html/DOMError.hx" extern="1">
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing one of the error type names (see below).</haxe_doc>
		</name>
		<message public="1" set="null"><c path="String"/></message>
		<new public="1" set="method">
			<f a="name:?message" v=":&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `DOMError` interface describes an error object that contains an error name.

	Documentation [DOMError](https://developer.mozilla.org/en-US/docs/Web/API/DOMError) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMError$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMError>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMError"</e></m></meta>
	</class>
	<class path="js.html.DOMImplementation" params="" file="/usr/local/lib/haxe/std/js/html/DOMImplementation.hx" extern="1">
		<hasFeature public="1" set="method">
			<f a="feature:version">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns a `Boolean` indicating if a given feature is supported or not. This function is unreliable and kept for compatibility purpose alone: except for SVG-related queries, it always returns `true`. Old browsers are very inconsistent in their behavior.</haxe_doc>
		</hasFeature>
		<createDocumentType public="1" set="method">
			<f a="qualifiedName:publicId:systemId">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.DocumentType"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createDocumentType>
		<createDocument public="1" set="method">
			<f a="namespace_:qualifiedName:?doctype">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.DocumentType"/>
				<c path="js.html.HTMLDocument"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createDocument>
		<createHTMLDocument public="1" set="method">
			<f a="?title">
				<c path="String"/>
				<c path="js.html.HTMLDocument"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createHTMLDocument>
		<haxe_doc><![CDATA[The `DOMImplementation` interface represent an object providing methods which are not dependent on any particular document. Such an object is returned by the `Document.implementation` property.

	Documentation [DOMImplementation](https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMImplementation"</e></m></meta>
	</class>
	<class path="js.html.DOMPointReadOnly" params="" file="/usr/local/lib/haxe/std/js/html/DOMPointReadOnly.hx" extern="1">
		<x public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The x coordinate of the `DOMPoint`.</haxe_doc>
		</x>
		<y public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The y coordinate of the `DOMPoint`.</haxe_doc>
		</y>
		<z public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The z coordinate of the `DOMPoint`.</haxe_doc>
		</z>
		<w public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The perspective value of the `DOMPoint`.</haxe_doc>
		</w>
		<haxe_doc><![CDATA[The `DOMPointReadOnly` interface specifies the standard properties used by `DOMPoint` to define a 2D or 3D point in a coordinate system.

	Documentation [DOMPointReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMPointReadOnly) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMPointReadOnly$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMPointReadOnly>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMPointReadOnly"</e></m></meta>
	</class>
	<class path="js.html.DOMPoint" params="" file="/usr/local/lib/haxe/std/js/html/DOMPoint.hx" extern="1">
		<extends path="js.html.DOMPointReadOnly"/>
		<new public="1" set="method">
			<f a="x:y:?z:?w" v="::0.0:1.0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ w : 1.0, z : 0.0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a="?point">
		<t path="js.html.DOMPointInit"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[A `DOMPoint` represents a 2D or 3D point in a coordinate system.

	Documentation [DOMPoint](https://developer.mozilla.org/en-US/docs/Web/API/DOMPoint) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMPoint$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMPoint>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMPoint"</e></m></meta>
	</class>
	<typedef path="js.html.DOMPointInit" params="" file="/usr/local/lib/haxe/std/js/html/DOMPointInit.hx"><a>
	<z>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</z>
	<y>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</y>
	<x>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</x>
	<w>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</w>
</a></typedef>
	<class path="js.html.DOMQuad" params="" file="/usr/local/lib/haxe/std/js/html/DOMQuad.hx" extern="1">
		<p1 public="1" set="null"><c path="js.html.DOMPoint"/></p1>
		<p2 public="1" set="null"><c path="js.html.DOMPoint"/></p2>
		<p3 public="1" set="null"><c path="js.html.DOMPoint"/></p3>
		<p4 public="1" set="null"><c path="js.html.DOMPoint"/></p4>
		<bounds public="1" set="null"><c path="js.html.DOMRectReadOnly"/></bounds>
		<new public="1" set="method">
			<f a="rect">
				<c path="js.html.DOMRectReadOnly"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a="?p1:?p2:?p3:?p4">
		<t path="js.html.DOMPointInit"/>
		<t path="js.html.DOMPointInit"/>
		<t path="js.html.DOMPointInit"/>
		<t path="js.html.DOMPointInit"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<meta><m n=":native"><e>"DOMQuad"</e></m></meta>
	</class>
	<class path="js.html.DOMRectReadOnly" params="" file="/usr/local/lib/haxe/std/js/html/DOMRectReadOnly.hx" extern="1">
		<x public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The x coordinate of the `DOMRect`'s origin.</haxe_doc>
		</x>
		<y public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The y coordinate of the `DOMRect`'s origin.</haxe_doc>
		</y>
		<width public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The width of the `DOMRect`.</haxe_doc>
		</width>
		<height public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The height of the `DOMRect`.</haxe_doc>
		</height>
		<top public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns the top coordinate value of the `DOMRect` (usually the same as `y`.)</haxe_doc>
		</top>
		<right public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns the right coordinate value of the `DOMRect` (usually the same as `x + width`).</haxe_doc>
		</right>
		<bottom public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns the bottom coordinate value of the `DOMRect` (usually the same as y + height).</haxe_doc>
		</bottom>
		<left public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns the left coordinate value of the `DOMRect` (usually the same as `x`).</haxe_doc>
		</left>
		<haxe_doc><![CDATA[The `DOMRectReadOnly` interface specifies the standard properties used by `DOMRect` to define a rectangle.

	Documentation [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMRectReadOnly"</e></m></meta>
	</class>
	<class path="js.html.DOMRect" params="" file="/usr/local/lib/haxe/std/js/html/DOMRect.hx" extern="1">
		<extends path="js.html.DOMRectReadOnly"/>
		<new public="1" set="method">
			<f a="x:y:width:height">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[A `DOMRect` represents a rectangle.

	Documentation [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMRect>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMRect"</e></m></meta>
	</class>
	<class path="js.html.DOMRectList" params="" file="/usr/local/lib/haxe/std/js/html/DOMRectList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.DOMRect"/>
</f></item>
		<meta><m n=":native"><e>"DOMRectList"</e></m></meta>
	</class>
	<class path="js.html.DOMStringList" params="" file="/usr/local/lib/haxe/std/js/html/DOMStringList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the length of the list,</haxe_doc>
		</length>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns a `DOMString`.</haxe_doc>
		</item>
		<contains public="1" set="method">
			<f a="string">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns `Boolean` indicating if the given string is in the list</haxe_doc>
		</contains>
		<haxe_doc><![CDATA[A type returned by some APIs which contains a list of DOMString (strings).

	Documentation [DOMStringList](https://developer.mozilla.org/en-US/docs/Web/API/DOMStringList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMStringList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMStringList>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMStringList"</e></m></meta>
	</class>
	<class path="js.html.DOMStringMap" params="" file="/usr/local/lib/haxe/std/js/html/DOMStringMap.hx" extern="1">
		<haxe_doc><![CDATA[Used by the `dataset` HTML attribute to represent data for custom attributes added to elements.

	Documentation [DOMStringMap](https://developer.mozilla.org/en-US/docs/Web/API/DOMStringMap) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMStringMap$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMStringMap>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMStringMap"</e></m></meta>
		<haxe_dynamic><c path="String"/></haxe_dynamic>
	</class>
	<class path="js.html.DOMTokenList" params="" file="/usr/local/lib/haxe/std/js/html/DOMTokenList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `integer` representing the number of objects stored in the object.</haxe_doc>
		</length>
		<value public="1"><c path="String"/></value>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns an item in the list by its index (or undefined if the number is greater than or equal to the length of the list, prior to `7.0` returned null)</haxe_doc>
		</item>
		<contains public="1" set="method">
			<f a="token">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</contains>
		<add public="1" set="method">
			<f a="tokens">
				<x path="haxe.extern.Rest"><c path="String"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</add>
		<remove public="1" set="method">
			<f a="tokens">
				<x path="haxe.extern.Rest"><c path="String"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</remove>
		<toggle public="1" set="method">
			<f a="token:?force">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</toggle>
		<haxe_doc><![CDATA[The `DOMTokenList` interface represents a set of space-separated tokens. Such a set is returned by `Element.classList`, `HTMLLinkElement.relList`, `HTMLAnchorElement.relList` or `HTMLAreaElement.relList`. It is indexed beginning with `0` as with JavaScript `Array` objects. `DOMTokenList` is always case-sensitive.

	Documentation [DOMTokenList](https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList>]]></haxe_doc>
		<meta><m n=":native"><e>"DOMTokenList"</e></m></meta>
	</class>
	<class path="js.html.DataListElement" params="" file="/usr/local/lib/haxe/std/js/html/DataListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<options public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Is a `HTMLCollection` representing a collection of the contained option elements.</haxe_doc>
		</options>
		<haxe_doc><![CDATA[The `HTMLDataListElement` interface provides special properties (beyond the `HTMLElement` object interface it also has available to it by inheritance) to manipulate `datalist` elements and their content.

	Documentation [HTMLDataListElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDataListElement"</e></m></meta>
	</class>
	<class path="js.html.DataTransfer" params="" file="/usr/local/lib/haxe/std/js/html/DataTransfer.hx" extern="1">
		<dropEffect public="1">
			<c path="String"/>
			<haxe_doc>Gets the type of drag-and-drop operation currently selected or sets the operation to a new type. The value must be `none`, `copy`, `link` or `move`.</haxe_doc>
		</dropEffect>
		<effectAllowed public="1">
			<c path="String"/>
			<haxe_doc>Provides all of the types of operations that are possible. Must be one of `none`, `copy`, `copyLink`, `copyMove`, `link`, `linkMove`, `move`, `all` or `uninitialized`.</haxe_doc>
		</effectAllowed>
		<types public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc>An array of `DOMString` giving the formats that were set in the `dragstart` event.</haxe_doc>
		</types>
		<files public="1" set="null">
			<c path="js.html.FileList"/>
			<haxe_doc>Contains a list of all the local files available on the data transfer. If the drag operation doesn't involve dragging files, this property is an empty list.</haxe_doc>
		</files>
		<setDragImage public="1" set="method">
			<f a="image:x:y">
				<c path="js.html.Element"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setDragImage>
		<getData public="1" set="method">
			<f a="format">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getData>
		<setData public="1" set="method">
			<f a="format:data">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setData>
		<clearData public="1" set="method">
			<f a="?format">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</clearData>
		<addElement public="1" set="method">
			<f a="element">
				<c path="js.html.Element"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</addElement>
		<new public="1" set="method">
			<f a="eventType:isExternal">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `DataTransfer` object is used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API.

	Documentation [DataTransfer](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer>]]></haxe_doc>
		<meta><m n=":native"><e>"DataTransfer"</e></m></meta>
	</class>
	<class path="js.html.DeviceAcceleration" params="" file="/usr/local/lib/haxe/std/js/html/DeviceAcceleration.hx" extern="1">
		<x public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The amount of acceleration along the X axis. Read only.</haxe_doc>
		</x>
		<y public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The amount of acceleration along the Y axis. Read only.</haxe_doc>
		</y>
		<z public="1" set="null">
			<x path="Float"/>
			<haxe_doc>The amount of acceleration along the Z axis. Read only.</haxe_doc>
		</z>
		<haxe_doc><![CDATA[A `DeviceAcceleration` object provides information about the amount of acceleration the device is experiencing along all three axes.

	Documentation [DeviceAcceleration](https://developer.mozilla.org/en-US/docs/Web/API/DeviceAcceleration) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DeviceAcceleration$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DeviceAcceleration>]]></haxe_doc>
		<meta><m n=":native"><e>"DeviceAcceleration"</e></m></meta>
	</class>
	<typedef path="js.html.DeviceAccelerationInit" params="" file="/usr/local/lib/haxe/std/js/html/DeviceAccelerationInit.hx"><a>
	<z>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</z>
	<y>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</y>
	<x>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</x>
</a></typedef>
	<class path="js.html.DeviceMotionEvent" params="" file="/usr/local/lib/haxe/std/js/html/DeviceMotionEvent.hx" extern="1">
		<extends path="js.html.Event"/>
		<acceleration public="1" set="null">
			<c path="js.html.DeviceAcceleration"/>
			<haxe_doc>An object giving the acceleration of the device on the three axis X, Y and Z. Acceleration is expressed in m/s2.</haxe_doc>
		</acceleration>
		<accelerationIncludingGravity public="1" set="null">
			<c path="js.html.DeviceAcceleration"/>
			<haxe_doc>An object giving the acceleration of the device on the three axis X, Y and Z with the effect of gravity. Acceleration is expressed in m/s2.</haxe_doc>
		</accelerationIncludingGravity>
		<rotationRate public="1" set="null">
			<c path="js.html.DeviceRotationRate"/>
			<haxe_doc>An object giving the rate of change of the device's orientation on the three orientation axis alpha, beta and gamma. Rotation rate is express in degrees per seconds.</haxe_doc>
		</rotationRate>
		<interval public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A number representing the interval of time, in milliseconds, at which data is obtained from the device.</haxe_doc>
		</interval>
		<initDeviceMotionEvent public="1" set="method"><f a="type:canBubble:cancelable:acceleration:accelerationIncludingGravity:rotationRate:interval">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<t path="js.html.DeviceAccelerationInit"/>
	<t path="js.html.DeviceAccelerationInit"/>
	<t path="js.html.DeviceRotationRateInit"/>
	<x path="Float"/>
	<x path="Void"/>
</f></initDeviceMotionEvent>
		<new public="1" set="method">
			<f a="type:?eventInitDict">
				<c path="String"/>
				<t path="js.html.DeviceMotionEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `DeviceMotionEvent` provides web developers with information about the speed of changes for the device's position and orientation.

	Documentation [DeviceMotionEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"DeviceMotionEvent"</e></m></meta>
	</class>
	<typedef path="js.html.DeviceMotionEventInit" params="" file="/usr/local/lib/haxe/std/js/html/DeviceMotionEventInit.hx"><a>
	<rotationRate>
		<x path="Null"><t path="js.html.DeviceRotationRateInit"/></x>
		<meta><m n=":optional"/></meta>
	</rotationRate>
	<interval>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</interval>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
	<accelerationIncludingGravity>
		<x path="Null"><t path="js.html.DeviceAccelerationInit"/></x>
		<meta><m n=":optional"/></meta>
	</accelerationIncludingGravity>
	<acceleration>
		<x path="Null"><t path="js.html.DeviceAccelerationInit"/></x>
		<meta><m n=":optional"/></meta>
	</acceleration>
</a></typedef>
	<class path="js.html.DeviceRotationRate" params="" file="/usr/local/lib/haxe/std/js/html/DeviceRotationRate.hx" extern="1">
		<alpha public="1" set="null"><x path="Float"/></alpha>
		<beta public="1" set="null"><x path="Float"/></beta>
		<gamma public="1" set="null"><x path="Float"/></gamma>
		<haxe_doc><![CDATA[A `DeviceRotationRate` object provides information about the rate at which the device is rotating around all three axes.

	Documentation [DeviceRotationRate](https://developer.mozilla.org/en-US/docs/Web/API/DeviceRotationRate) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DeviceRotationRate$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DeviceRotationRate>]]></haxe_doc>
		<meta><m n=":native"><e>"DeviceRotationRate"</e></m></meta>
	</class>
	<typedef path="js.html.DeviceRotationRateInit" params="" file="/usr/local/lib/haxe/std/js/html/DeviceRotationRateInit.hx"><a>
	<gamma>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</gamma>
	<beta>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</beta>
	<alpha>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</alpha>
</a></typedef>
	<abstract path="js.html.DirectionSetting" params="" file="/usr/local/lib/haxe/std/js/html/DirectionSetting.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._DirectionSetting.DirectionSetting_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/DirectionSetting.hx" private="1" module="js.html.DirectionSetting"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.DirectoryElement" params="" file="/usr/local/lib/haxe/std/js/html/DirectoryElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1"><x path="Bool"/></compact>
		<meta><m n=":native"><e>"HTMLDirectoryElement"</e></m></meta>
	</class>
	<class path="js.html.DivElement" params="" file="/usr/local/lib/haxe/std/js/html/DivElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, `"justify"`, and `"center"`.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[The `HTMLDivElement` interface provides special properties (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating div elements.

	Documentation [HTMLDivElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLDivElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDivElement"</e></m></meta>
	</class>
	<class path="js.html.Document" params="" file="/usr/local/lib/haxe/std/js/html/Document.hx" extern="1">
		<extends path="js.html.Node"/>
		<implementation public="1" set="null">
			<c path="js.html.DOMImplementation"/>
			<haxe_doc>Returns the DOM implementation associated with the current document.</haxe_doc>
		</implementation>
		<URL public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the document location as a string.</haxe_doc>
		</URL>
		<documentURI public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the document location as a string.</haxe_doc>
		</documentURI>
		<compatMode public="1" set="null">
			<c path="String"/>
			<haxe_doc>Indicates whether the document is rendered in quirks or strict mode.</haxe_doc>
		</compatMode>
		<characterSet public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the character set being used by the document.</haxe_doc>
		</characterSet>
		<charset public="1" set="null">
			<c path="String"/>
			<haxe_doc>Alias of `Document.characterSet`. Use this property instead.</haxe_doc>
		</charset>
		<inputEncoding public="1" set="null">
			<c path="String"/>
			<haxe_doc>Alias of `Document.characterSet`. Use this property instead.</haxe_doc>
		</inputEncoding>
		<contentType public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the Content-Type from the MIME Header of the current document.</haxe_doc>
		</contentType>
		<doctype public="1" set="null">
			<c path="js.html.DocumentType"/>
			<haxe_doc>Returns the Document Type Definition (DTD) of the current document.</haxe_doc>
		</doctype>
		<documentElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the `Element` that is a direct child of the document. For HTML documents, this is normally the `html` element.</haxe_doc>
		</documentElement>
		<location public="1" set="null">
			<c path="js.html.Location"/>
			<haxe_doc>Returns the URI of the current document.</haxe_doc>
		</location>
		<referrer public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the URI of the page that linked to this page.</haxe_doc>
		</referrer>
		<lastModified public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the date on which the document was last modified.</haxe_doc>
		</lastModified>
		<readyState public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns loading status of the document.</haxe_doc>
		</readyState>
		<title public="1">
			<c path="String"/>
			<haxe_doc>Sets or gets title of the current document.</haxe_doc>
		</title>
		<dir public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets directionality (rtl/ltr) of the document.</haxe_doc>
		</dir>
		<defaultView public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a reference to the window object.</haxe_doc>
		</defaultView>
		<activeElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the currently focused element.</haxe_doc>
		</activeElement>
		<onreadystatechange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `readystatechange` event.</haxe_doc>
		</onreadystatechange>
		<onwheel public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `wheel` event.</haxe_doc>
		</onwheel>
		<oncopy public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `copy` event.</haxe_doc>
		</oncopy>
		<oncut public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `cut` event.</haxe_doc>
		</oncut>
		<onpaste public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `paste` event.</haxe_doc>
		</onpaste>
		<onbeforescriptexecute public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `beforescriptexecute` event.</haxe_doc>
		</onbeforescriptexecute>
		<onafterscriptexecute public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `afterscriptexecute` event.</haxe_doc>
		</onafterscriptexecute>
		<currentScript public="1" set="null"><c path="js.html.Element"/></currentScript>
		<fullscreenEnabled public="1" set="null"><x path="Bool"/></fullscreenEnabled>
		<fullscreenElement public="1" set="null"><c path="js.html.Element"/></fullscreenElement>
		<pointerLockElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the element set as the target for mouse events while the pointer is locked. `null` if lock is pending, pointer is unlocked, or if the target is in another document.</haxe_doc>
		</pointerLockElement>
		<hidden public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>…</haxe_doc>
		</hidden>
		<visibilityState public="1" set="null">
			<x path="js.html.VisibilityState"/>
			<haxe_doc>Returns a `string` denoting the visibility state of the document. Possible values are `visible`,  `hidden`,  `prerender`, and `unloaded`.</haxe_doc>
		</visibilityState>
		<styleSheets public="1" set="null">
			<c path="js.html.StyleSheetList"/>
			<haxe_doc>Returns a list of the style sheet objects on the current document.</haxe_doc>
		</styleSheets>
		<selectedStyleSheetSet public="1">
			<c path="String"/>
			<haxe_doc>Returns which style sheet set is currently in use.</haxe_doc>
		</selectedStyleSheetSet>
		<lastStyleSheetSet public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the name of the style sheet set that was last enabled. Has the value `null` until the style sheet is changed by setting the value of `document.selectedStyleSheetSet`.</haxe_doc>
		</lastStyleSheetSet>
		<preferredStyleSheetSet public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the preferred style sheet set as specified by the page author.</haxe_doc>
		</preferredStyleSheetSet>
		<styleSheetSets public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc>Returns a list of the style sheet sets available on the document.</haxe_doc>
		</styleSheetSets>
		<timeline public="1" set="null">
			<c path="js.html.DocumentTimeline"/>
			<haxe_doc>…</haxe_doc>
		</timeline>
		<fonts public="1" set="null"><c path="js.html.FontFaceSet"/></fonts>
		<onabort public="1"><x path="haxe.Function"/></onabort>
		<onblur public="1"><x path="haxe.Function"/></onblur>
		<onfocus public="1"><x path="haxe.Function"/></onfocus>
		<oncanplay public="1"><x path="haxe.Function"/></oncanplay>
		<oncanplaythrough public="1"><x path="haxe.Function"/></oncanplaythrough>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<onclick public="1"><x path="haxe.Function"/></onclick>
		<oncontextmenu public="1"><x path="haxe.Function"/></oncontextmenu>
		<ondblclick public="1"><x path="haxe.Function"/></ondblclick>
		<ondrag public="1"><x path="haxe.Function"/></ondrag>
		<ondragend public="1"><x path="haxe.Function"/></ondragend>
		<ondragenter public="1"><x path="haxe.Function"/></ondragenter>
		<ondragleave public="1"><x path="haxe.Function"/></ondragleave>
		<ondragover public="1"><x path="haxe.Function"/></ondragover>
		<ondragstart public="1"><x path="haxe.Function"/></ondragstart>
		<ondrop public="1"><x path="haxe.Function"/></ondrop>
		<ondurationchange public="1"><x path="haxe.Function"/></ondurationchange>
		<onemptied public="1"><x path="haxe.Function"/></onemptied>
		<onended public="1"><x path="haxe.Function"/></onended>
		<oninput public="1"><x path="haxe.Function"/></oninput>
		<oninvalid public="1"><x path="haxe.Function"/></oninvalid>
		<onkeydown public="1"><x path="haxe.Function"/></onkeydown>
		<onkeypress public="1"><x path="haxe.Function"/></onkeypress>
		<onkeyup public="1"><x path="haxe.Function"/></onkeyup>
		<onload public="1"><x path="haxe.Function"/></onload>
		<onloadeddata public="1"><x path="haxe.Function"/></onloadeddata>
		<onloadedmetadata public="1"><x path="haxe.Function"/></onloadedmetadata>
		<onloadstart public="1"><x path="haxe.Function"/></onloadstart>
		<onmousedown public="1"><x path="haxe.Function"/></onmousedown>
		<onmouseenter public="1"><x path="haxe.Function"/></onmouseenter>
		<onmouseleave public="1"><x path="haxe.Function"/></onmouseleave>
		<onmousemove public="1"><x path="haxe.Function"/></onmousemove>
		<onmouseout public="1"><x path="haxe.Function"/></onmouseout>
		<onmouseover public="1"><x path="haxe.Function"/></onmouseover>
		<onmouseup public="1"><x path="haxe.Function"/></onmouseup>
		<onpause public="1"><x path="haxe.Function"/></onpause>
		<onplay public="1"><x path="haxe.Function"/></onplay>
		<onplaying public="1"><x path="haxe.Function"/></onplaying>
		<onprogress public="1"><x path="haxe.Function"/></onprogress>
		<onratechange public="1"><x path="haxe.Function"/></onratechange>
		<onreset public="1"><x path="haxe.Function"/></onreset>
		<onresize public="1"><x path="haxe.Function"/></onresize>
		<onscroll public="1"><x path="haxe.Function"/></onscroll>
		<onseeked public="1"><x path="haxe.Function"/></onseeked>
		<onseeking public="1"><x path="haxe.Function"/></onseeking>
		<onselect public="1"><x path="haxe.Function"/></onselect>
		<onshow public="1"><x path="haxe.Function"/></onshow>
		<onstalled public="1"><x path="haxe.Function"/></onstalled>
		<onsubmit public="1"><x path="haxe.Function"/></onsubmit>
		<onsuspend public="1"><x path="haxe.Function"/></onsuspend>
		<ontimeupdate public="1"><x path="haxe.Function"/></ontimeupdate>
		<onvolumechange public="1"><x path="haxe.Function"/></onvolumechange>
		<onwaiting public="1"><x path="haxe.Function"/></onwaiting>
		<onpointercancel public="1"><x path="haxe.Function"/></onpointercancel>
		<onpointerdown public="1"><x path="haxe.Function"/></onpointerdown>
		<onpointerup public="1"><x path="haxe.Function"/></onpointerup>
		<onpointermove public="1"><x path="haxe.Function"/></onpointermove>
		<onpointerout public="1"><x path="haxe.Function"/></onpointerout>
		<onpointerover public="1"><x path="haxe.Function"/></onpointerover>
		<onpointerenter public="1"><x path="haxe.Function"/></onpointerenter>
		<onpointerleave public="1"><x path="haxe.Function"/></onpointerleave>
		<ongotpointercapture public="1"><x path="haxe.Function"/></ongotpointercapture>
		<onlostpointercapture public="1"><x path="haxe.Function"/></onlostpointercapture>
		<onfullscreenchange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Is an `EventHandler` representing the code to be called when the `fullscreenchange` event is raised.</haxe_doc>
		</onfullscreenchange>
		<onfullscreenerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Is an `EventHandler` representing the code to be called when the `fullscreenerror` event is raised.</haxe_doc>
		</onfullscreenerror>
		<onpointerlockchange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the event handling code for the `pointerlockchange` event.</haxe_doc>
		</onpointerlockchange>
		<onpointerlockerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represetnts the event handling code for the `pointerlockerror` event.</haxe_doc>
		</onpointerlockerror>
		<onerror public="1"><x path="haxe.Function"/></onerror>
		<children public="1" set="null"><c path="js.html.HTMLCollection"/></children>
		<firstElementChild public="1" set="null"><c path="js.html.Element"/></firstElementChild>
		<lastElementChild public="1" set="null"><c path="js.html.Element"/></lastElementChild>
		<childElementCount public="1" set="null"><x path="Int"/></childElementCount>
		<ontouchstart public="1"><x path="haxe.Function"/></ontouchstart>
		<ontouchend public="1"><x path="haxe.Function"/></ontouchend>
		<ontouchmove public="1"><x path="haxe.Function"/></ontouchmove>
		<ontouchcancel public="1"><x path="haxe.Function"/></ontouchcancel>
		<getElementsByTagName public="1" set="method">
			<f a="localName">
				<c path="String"/>
				<c path="js.html.HTMLCollection"/>
			</f>
			<haxe_doc>Returns a list of elements with the given tag name.</haxe_doc>
		</getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method">
			<f a="namespace_:localName">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.HTMLCollection"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getElementsByTagNameNS>
		<getElementsByClassName public="1" set="method">
			<f a="classNames">
				<c path="String"/>
				<c path="js.html.HTMLCollection"/>
			</f>
			<haxe_doc>Returns a list of elements with the given class name.</haxe_doc>
		</getElementsByClassName>
		<getElementById public="1" set="method"><f a="elementId">
	<c path="String"/>
	<c path="js.html.Element"/>
</f></getElementById>
		<createElement public="1" set="method">
			<f a="localName:typeExtension">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><createElement public="1" set="method">
	<f a="localName">
		<c path="String"/>
		<c path="js.html.Element"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</createElement></overloads>
		</createElement>
		<createElementNS public="1" set="method">
			<f a="namespace_:qualifiedName:typeExtension">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><createElementNS public="1" set="method">
	<f a="namespace_:qualifiedName">
		<c path="String"/>
		<c path="String"/>
		<c path="js.html.Element"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</createElementNS></overloads>
		</createElementNS>
		<createDocumentFragment public="1" set="method">
			<f a=""><c path="js.html.DocumentFragment"/></f>
			<haxe_doc>Creates a new document fragment.</haxe_doc>
		</createDocumentFragment>
		<createTextNode public="1" set="method">
			<f a="data">
				<c path="String"/>
				<c path="js.html.Text"/>
			</f>
			<haxe_doc>Creates a text node.</haxe_doc>
		</createTextNode>
		<createComment public="1" set="method">
			<f a="data">
				<c path="String"/>
				<c path="js.html.Comment"/>
			</f>
			<haxe_doc>Creates a new comment node and returns it.</haxe_doc>
		</createComment>
		<createProcessingInstruction public="1" set="method">
			<f a="target:data">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.ProcessingInstruction"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createProcessingInstruction>
		<importNode public="1" set="method">
			<f a="node:?deep" v=":false">
				<c path="js.html.Node"/>
				<x path="Bool"/>
				<c path="js.html.Node"/>
			</f>
			<meta><m n=":value"><e>{ deep : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</importNode>
		<adoptNode public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</adoptNode>
		<createEvent public="1" set="method">
			<f a="interface_">
				<c path="String"/>
				<c path="js.html.Event"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createEvent>
		<createRange public="1" set="method">
			<f a=""><c path="js.html.Range"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createRange>
		<createNodeIterator public="1" set="method">
			<f a="root:?whatToShow:?filter" v=":cast 4294967295:">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<c path="js.html.NodeFilter"/>
				<c path="js.html.NodeIterator"/>
			</f>
			<meta><m n=":value"><e>{ whatToShow : cast 4294967295 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createNodeIterator>
		<createTreeWalker public="1" set="method">
			<f a="root:?whatToShow:?filter" v=":cast 4294967295:">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<c path="js.html.NodeFilter"/>
				<c path="js.html.TreeWalker"/>
			</f>
			<meta><m n=":value"><e>{ whatToShow : cast 4294967295 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createTreeWalker>
		<createCDATASection public="1" set="method">
			<f a="data">
				<c path="String"/>
				<c path="js.html.CDATASection"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createCDATASection>
		<createAttribute public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createAttribute>
		<createAttributeNS public="1" set="method">
			<f a="namespace_:name">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createAttributeNS>
		<hasFocus public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</hasFocus>
		<releaseCapture public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Releases the current mouse capture if it's on an element in this document.</haxe_doc>
		</releaseCapture>
		<exitFullscreen public="1" set="method"><f a=""><x path="Void"/></f></exitFullscreen>
		<exitPointerLock public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Release the pointer lock.</haxe_doc>
		</exitPointerLock>
		<registerElement public="1" set="method">
			<f a="name:?options">
				<c path="String"/>
				<t path="js.html.ElementRegistrationOptions"/>
				<d/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</registerElement>
		<enableStyleSheetsForSet public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Enables the style sheets for the specified style sheet set.</haxe_doc>
		</enableStyleSheetsForSet>
		<elementFromPoint public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>Returns the topmost element at the specified coordinates. </haxe_doc>
		</elementFromPoint>
		<elementsFromPoint public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<c path="Array"><c path="js.html.Element"/></c>
			</f>
			<haxe_doc>Returns an array of all elements at the specified coordinates.</haxe_doc>
		</elementsFromPoint>
		<caretPositionFromPoint public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.CaretPosition"/>
			</f>
			<haxe_doc>Gets the `CaretPosition` at or near the specified coordinates.</haxe_doc>
		</caretPositionFromPoint>
		<querySelector public="1" set="method">
			<f a="selectors">
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</querySelector>
		<querySelectorAll public="1" set="method">
			<f a="selectors">
				<c path="String"/>
				<c path="js.html.NodeList"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</querySelectorAll>
		<getAnimations public="1" set="method">
			<f a=""><c path="Array"><c path="js.html.Animation"/></c></f>
			<haxe_doc>Returns an array of all `Animation` objects currently in effect whose target elements are descendants of the `document`.</haxe_doc>
		</getAnimations>
		<createTouch public="1" set="method">
			<f a="?view:?target:?identifier:?pageX:?pageY:?screenX:?screenY:?clientX:?clientY:?radiusX:?radiusY:?rotationAngle:?force" v="::0:0:0:0:0:0:0:0:0:0.0:0.0">
				<c path="js.html.Window"/>
				<c path="js.html.EventTarget"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.Touch"/>
			</f>
			<meta><m n=":value"><e>{ force : 0.0, rotationAngle : 0.0, radiusY : 0, radiusX : 0, clientY : 0, clientX : 0, screenY : 0, screenX : 0, pageY : 0, pageX : 0, identifier : 0 }</e></m></meta>
			<haxe_doc>Creates a `Touch` object.</haxe_doc>
		</createTouch>
		<createTouchList public="1" set="method">
			<f a="touches">
				<c path="Array"><c path="js.html.Touch"/></c>
				<c path="js.html.TouchList"/>
			</f>
			<overloads>
				<createTouchList public="1" set="method"><f a="touch:touches">
	<c path="js.html.Touch"/>
	<x path="haxe.extern.Rest"><c path="js.html.Touch"/></x>
	<c path="js.html.TouchList"/>
</f></createTouchList>
				<createTouchList public="1" set="method"><f a=""><c path="js.html.TouchList"/></f></createTouchList>
			</overloads>
		</createTouchList>
		<convertQuadFromNode public="1" set="method">
			<f a="quad:from:?options">
				<c path="js.html.DOMQuad"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMQuad"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertQuadFromNode>
		<convertRectFromNode public="1" set="method">
			<f a="rect:from:?options">
				<c path="js.html.DOMRectReadOnly"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMQuad"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertRectFromNode>
		<convertPointFromNode public="1" set="method">
			<f a="point:from:?options">
				<t path="js.html.DOMPointInit"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Text"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Element"/>
						<c path="js.html.HTMLDocument"/>
					</x>
				</x>
				<t path="js.html.ConvertCoordinateOptions"/>
				<c path="js.html.DOMPoint"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</convertPointFromNode>
		<createExpression public="1" set="method">
			<f a="expression:resolver">
				<c path="String"/>
				<c path="js.html.XPathNSResolver"/>
				<c path="js.html.XPathExpression"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createExpression>
		<createNSResolver public="1" set="method"><f a="nodeResolver">
	<c path="js.html.Node"/>
	<c path="js.html.Node"/>
</f></createNSResolver>
		<evaluate public="1" set="method">
			<f a="expression:contextNode:resolver:type:result">
				<c path="String"/>
				<c path="js.html.Node"/>
				<c path="js.html.XPathNSResolver"/>
				<x path="Int"/>
				<d/>
				<c path="js.html.XPathResult"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</evaluate>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Document` interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree. The DOM tree includes elements such as `body` and `table`, among many others. It provides functionality global to the document, like how to obtain the page's URL and create new elements in the document.

	Documentation [Document](https://developer.mozilla.org/en-US/docs/Web/API/Document) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Document$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Document>]]></haxe_doc>
		<meta><m n=":native"><e>"Document"</e></m></meta>
	</class>
	<class path="js.html.DocumentFragment" params="" file="/usr/local/lib/haxe/std/js/html/DocumentFragment.hx" extern="1">
		<extends path="js.html.Node"/>
		<children public="1" set="null"><c path="js.html.HTMLCollection"/></children>
		<firstElementChild public="1" set="null"><c path="js.html.Element"/></firstElementChild>
		<lastElementChild public="1" set="null"><c path="js.html.Element"/></lastElementChild>
		<childElementCount public="1" set="null"><x path="Int"/></childElementCount>
		<getElementById public="1" set="method">
			<f a="elementId">
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>Returns the first `Element` node within the DocumentFragment`, in document order, that matches the specified ID.</haxe_doc>
		</getElementById>
		<querySelector public="1" set="method">
			<f a="selectors">
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</querySelector>
		<querySelectorAll public="1" set="method">
			<f a="selectors">
				<c path="String"/>
				<c path="js.html.NodeList"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</querySelectorAll>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `DocumentFragment` interface represents a minimal document object that has no parent. It is used as a light-weight version of `Document` to store well-formed or potentially non-well-formed fragments of XML.

	Documentation [DocumentFragment](https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment>]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentFragment"</e></m></meta>
	</class>
	<class path="js.html.DocumentTimeline" params="" file="/usr/local/lib/haxe/std/js/html/DocumentTimeline.hx" extern="1">
		<extends path="js.html.AnimationTimeline"/>
		<haxe_doc><![CDATA[The `DocumentTimeline` interface of the the Web Animations API represents animation timelines, including the default document timeline (accessed via `Document.timeline`).

	Documentation [DocumentTimeline](https://developer.mozilla.org/en-US/docs/Web/API/DocumentTimeline) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DocumentTimeline$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DocumentTimeline>]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentTimeline"</e></m></meta>
	</class>
	<class path="js.html.DocumentType" params="" file="/usr/local/lib/haxe/std/js/html/DocumentType.hx" extern="1">
		<extends path="js.html.Node"/>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>...</haxe_doc>
		</name>
		<publicId public="1" set="null">
			<c path="String"/>
			<haxe_doc>...</haxe_doc>
		</publicId>
		<systemId public="1" set="null">
			<c path="String"/>
			<haxe_doc>...</haxe_doc>
		</systemId>
		<remove public="1" set="method"><f a=""><x path="Void"/></f></remove>
		<haxe_doc><![CDATA[The `DocumentType` interface represents a `Node` containing a doctype.

	Documentation [DocumentType](https://developer.mozilla.org/en-US/docs/Web/API/DocumentType) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DocumentType$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DocumentType>]]></haxe_doc>
		<meta><m n=":native"><e>"DocumentType"</e></m></meta>
	</class>
	<typedef path="js.html.ElementRegistrationOptions" params="" file="/usr/local/lib/haxe/std/js/html/ElementRegistrationOptions.hx"><a>
	<prototype>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</prototype>
	<extends_>
		<x path="Null"><c path="String"/></x>
		<meta>
			<m n=":native"><e>"extends"</e></m>
			<m n=":optional"/>
		</meta>
	</extends_>
</a></typedef>
	<class path="js.html.EmbedElement" params="" file="/usr/local/lib/haxe/std/js/html/EmbedElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `src` HTML attribute, containing the address of the resource.</haxe_doc>
		</src>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `type` HTML attribute, containing the type of the resource.</haxe_doc>
		</type>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `width` HTML attribute, containing the displayed width of the resource.</haxe_doc>
		</width>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, `"center"`, and `"justify"`.</haxe_doc>
		</height>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `height` HTML attribute, containing the displayed height of the resource.</haxe_doc>
		</align>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the name of the embedded object.</haxe_doc>
		</name>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.HTMLDocument"/></f></getSVGDocument>
		<haxe_doc><![CDATA[The `HTMLEmbedElement` interface, which provides special properties (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating `embed` elements.

	Documentation [HTMLEmbedElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLEmbedElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLEmbedElement"</e></m></meta>
	</class>
	<typedef path="js.html.EventInit" params="" file="/usr/local/lib/haxe/std/js/html/EventInit.hx"><a>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
</a></typedef>
	<class path="js.html.EventListener" params="" file="/usr/local/lib/haxe/std/js/html/EventListener.hx" extern="1">
		<handleEvent public="1" set="method"><f a="event">
	<c path="js.html.Event"/>
	<x path="Void"/>
</f></handleEvent>
		<haxe_doc><![CDATA[This method is called whenever an event occurs of the type for which the `EventListener` interface was registered.

	Documentation [EventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventListener) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/EventListener$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/EventListener>]]></haxe_doc>
		<meta><m n=":native"><e>"EventListener"</e></m></meta>
	</class>
	<typedef path="js.html.EventModifierInit" params="" file="/usr/local/lib/haxe/std/js/html/EventModifierInit.hx"><a>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<shiftKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</shiftKey>
	<modifierSymbolLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbolLock>
	<modifierSymbol>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbol>
	<modifierScrollLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierScrollLock>
	<modifierOS>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierOS>
	<modifierNumLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierNumLock>
	<modifierFnLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFnLock>
	<modifierFn>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFn>
	<modifierCapsLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierCapsLock>
	<modifierAltGraph>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierAltGraph>
	<metaKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</metaKey>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<ctrlKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</ctrlKey>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
	<altKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</altKey>
</a></typedef>
	<class path="js.html.FieldSetElement" params="" file="/usr/local/lib/haxe/std/js/html/FieldSetElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1"><x path="Bool"/></disabled>
		<form public="1" set="null"><c path="js.html.FormElement"/></form>
		<name public="1"><c path="String"/></name>
		<type public="1" set="null"><c path="String"/></type>
		<elements public="1" set="null"><c path="js.html.HTMLCollection"/></elements>
		<willValidate public="1" set="null"><x path="Bool"/></willValidate>
		<validity public="1" set="null"><c path="js.html.ValidityState"/></validity>
		<validationMessage public="1" set="null"><c path="String"/></validationMessage>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[The `HTMLFieldSetElement` interface has special properties and methods (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of field-set elements.

	Documentation [HTMLFieldSetElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFieldSetElement"</e></m></meta>
	</class>
	<class path="js.html.File" params="" file="/usr/local/lib/haxe/std/js/html/File.hx" extern="1">
		<extends path="js.html.Blob"/>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the name of the file referenced by the `File` object.</haxe_doc>
		</name>
		<lastModified public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the last modified time of the file, in millisecond since the UNIX epoch (January 1st, 1970 at Midnight).</haxe_doc>
		</lastModified>
		<lastModifiedDate public="1" set="null">
			<c path="js.Date"/>
			<haxe_doc>Returns the last modified `Date` of the file referenced by the `File` object.</haxe_doc>
		</lastModifiedDate>
		<new public="1" set="method">
			<f a="fileBits:?options">
				<c path="String"/>
				<t path="js.html.ChromeFilePropertyBag"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="fileBits:fileName:?options">
						<c path="Array"><x path="haxe.extern.EitherType">
	<c path="js.html.ArrayBuffer"/>
	<x path="haxe.extern.EitherType">
		<c path="js.html.ArrayBufferView"/>
		<x path="haxe.extern.EitherType">
			<c path="js.html.Blob"/>
			<c path="String"/>
		</x>
	</x>
</x></c>
						<c path="String"/>
						<t path="js.html.FilePropertyBag"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="fileBits:?options">
						<c path="js.html.Blob"/>
						<t path="js.html.ChromeFilePropertyBag"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="fileBits:?options">
						<d/>
						<t path="js.html.ChromeFilePropertyBag"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[The `File` interface provides information about files and allows JavaScript in a web page to access their content.

	Documentation [File](https://developer.mozilla.org/en-US/docs/Web/API/File) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/File$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/File>]]></haxe_doc>
		<meta><m n=":native"><e>"File"</e></m></meta>
	</class>
	<class path="js.html.FileList" params="" file="/usr/local/lib/haxe/std/js/html/FileList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.File"/>
</f></item>
		<haxe_doc><![CDATA[An object of this type is returned by the `files` property of the HTML `input` element; this lets you access the list of files selected with the `input type="file"` element. It's also used for a list of files dropped into web content when using the drag and drop API; see the `DataTransfer` object for details on this usage.

	Documentation [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/FileList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/FileList>]]></haxe_doc>
		<meta><m n=":native"><e>"FileList"</e></m></meta>
	</class>
	<typedef path="js.html.FilePropertyBag" params="" file="/usr/local/lib/haxe/std/js/html/FilePropertyBag.hx"><a>
	<type>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</type>
	<lastModified>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</lastModified>
</a></typedef>
	<abstract path="js.html.FillMode" params="" file="/usr/local/lib/haxe/std/js/html/FillMode.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._FillMode.FillMode_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/FillMode.hx" private="1" module="js.html.FillMode"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Float32Array" params="" file="/usr/local/lib/haxe/std/js/html/Float32Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null"><x path="Int"/></length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Float"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads><set public="1" set="method"><f a="array:?offset">
	<c path="js.html.Float32Array"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set></overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Float32Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Float"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<meta><m n=":native"><e>"Float32Array"</e></m></meta>
	</class>
	<class path="js.html.UIEvent" params="" file="/usr/local/lib/haxe/std/js/html/UIEvent.hx" extern="1">
		<extends path="js.html.Event"/>
		<SCROLL_PAGE_UP public="1" get="inline" set="null" expr="-32768" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-32768</e></m></meta>
		</SCROLL_PAGE_UP>
		<SCROLL_PAGE_DOWN public="1" get="inline" set="null" expr="32768" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32768</e></m></meta>
		</SCROLL_PAGE_DOWN>
		<view public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a `WindowProxy` that contains the view that generated the event.</haxe_doc>
		</view>
		<detail public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `long` with details about the event, depending on the event type.</haxe_doc>
		</detail>
		<layerX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the horizontal coordinate of the event relative to the current layer.</haxe_doc>
		</layerX>
		<layerY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the vertical coordinate of the event relative to the current layer.</haxe_doc>
		</layerY>
		<pageX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the horizontal coordinate of the event relative to the whole document.</haxe_doc>
		</pageX>
		<pageY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the vertical coordinate of the event relative to the whole document.</haxe_doc>
		</pageY>
		<which public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the numeric `keyCode` of the key pressed, or the character code (`charCode`) for an alphanumeric key pressed.</haxe_doc>
		</which>
		<rangeParent public="1" set="null"><c path="js.html.Node"/></rangeParent>
		<rangeOffset public="1" set="null"><x path="Int"/></rangeOffset>
		<cancelBubble public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating whether the bubbling of the event has been canceled or not.</haxe_doc>
		</cancelBubble>
		<isChar public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` indicating whether the event produced a key character or not.</haxe_doc>
		</isChar>
		<initUIEvent public="1" set="method">
			<f a="aType:aCanBubble:aCancelable:aView:aDetail">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="js.html.Window"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Initializes a `UIEvent` object. If the event has already being dispatched, this method does nothing.</haxe_doc>
		</initUIEvent>
		<new public="1" set="method">
			<f a="type:?eventInitDict">
				<c path="String"/>
				<t path="js.html.UIEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `UIEvent` interface represents simple user interface events.

	Documentation [UIEvent](https://developer.mozilla.org/en-US/docs/Web/API/UIEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/UIEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/UIEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"UIEvent"</e></m></meta>
	</class>
	<class path="js.html.FocusEvent" params="" file="/usr/local/lib/haxe/std/js/html/FocusEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<relatedTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>Is an `EventTarget` representing a secondary target for this event. As in some cases (like when tabbing in or out a page), this property may be set to `null` for security reasons.</haxe_doc>
		</relatedTarget>
		<new public="1" set="method">
			<f a="typeArg:?focusEventInitDict">
				<c path="String"/>
				<t path="js.html.FocusEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `FocusEvent` interface represents focus-related events like `focus`, `blur`, `focusin`, or `focusout`.

	Documentation [FocusEvent](https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"FocusEvent"</e></m></meta>
	</class>
	<typedef path="js.html.FocusEventInit" params="" file="/usr/local/lib/haxe/std/js/html/FocusEventInit.hx"><a>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<relatedTarget>
		<x path="Null"><c path="js.html.EventTarget"/></x>
		<meta><m n=":optional"/></meta>
	</relatedTarget>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
</a></typedef>
	<class path="js.html.FontElement" params="" file="/usr/local/lib/haxe/std/js/html/FontElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<color public="1"><c path="String"/></color>
		<face public="1"><c path="String"/></face>
		<size public="1"><c path="String"/></size>
		<meta><m n=":native"><e>"HTMLFontElement"</e></m></meta>
	</class>
	<class path="js.html.FontFace" params="" file="/usr/local/lib/haxe/std/js/html/FontFace.hx" extern="1">
		<family public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the family of the font. It is equivalent to the `@font-face/family` descriptor.</haxe_doc>
		</family>
		<style public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the style of the font. It is equivalent to the `@font-face/style` descriptor.</haxe_doc>
		</style>
		<weight public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the weight of the font. It is equivalent to the `@font-face/weight` descriptor.</haxe_doc>
		</weight>
		<stretch public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains how the font stretches. It is equivalent to the `@font-face/stretch` descriptor.</haxe_doc>
		</stretch>
		<unicodeRange public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the range of code encompassed the font. It is equivalent to the `@font-face/unicode-range` descriptor.</haxe_doc>
		</unicodeRange>
		<variant public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the variant of the font. It is equivalent to the `@font-face/range` descriptor.</haxe_doc>
		</variant>
		<featureSettings public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the features of the font. It is equivalent to the `@font-face/feature-settings` descriptor.</haxe_doc>
		</featureSettings>
		<status public="1" set="null">
			<x path="js.html.FontFaceLoadStatus"/>
			<haxe_doc>Returns an enumerated value indicating the status of the font. It can be one of the following: `"unloaded"`, `"loading"`, `"loaded"`, or `"error"`.</haxe_doc>
		</status>
		<loaded public="1" set="null">
			<c path="js.Promise"><c path="js.html.FontFace"/></c>
			<haxe_doc>Returns a `Promise` to a `FontFace` that fulfills when the font is completely loaded and rejects when an error happens.</haxe_doc>
		</loaded>
		<load public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.FontFace"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</load>
		<new public="1" set="method">
			<f a="family:source:?descriptors">
				<c path="String"/>
				<x path="haxe.extern.EitherType">
					<c path="String"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.ArrayBuffer"/>
						<c path="js.html.ArrayBufferView"/>
					</x>
				</x>
				<t path="js.html.FontFaceDescriptors"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `FontFace` interface represents a single usable font face. It allows control of the source of the font face, being a URL to an external resource, or a buffer; it also allows control of when the font face is loaded and its current status.

	Documentation [FontFace](https://developer.mozilla.org/en-US/docs/Web/API/FontFace) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/FontFace$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/FontFace>]]></haxe_doc>
		<meta><m n=":native"><e>"FontFace"</e></m></meta>
	</class>
	<typedef path="js.html.FontFaceDescriptors" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceDescriptors.hx"><a>
	<weight>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</weight>
	<variant>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</variant>
	<unicodeRange>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</unicodeRange>
	<style>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</style>
	<stretch>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</stretch>
	<featureSettings>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</featureSettings>
	<display>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</display>
</a></typedef>
	<abstract path="js.html.FontFaceLoadStatus" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceLoadStatus.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._FontFaceLoadStatus.FontFaceLoadStatus_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceLoadStatus.hx" private="1" module="js.html.FontFaceLoadStatus"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.FontFaceSet" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceSet.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<size public="1" set="null"><x path="Int"/></size>
		<onloading public="1">
			<x path="haxe.Function"/>
			<haxe_doc>An `EventListener` property called whenever an event of type `loading` is fired, indicating that a font face set has started to load.</haxe_doc>
		</onloading>
		<onloadingdone public="1">
			<x path="haxe.Function"/>
			<haxe_doc>An `EventListener` property called whenever an event of type `loadingdone` is fired, indicating that a font face set has finished loading.</haxe_doc>
		</onloadingdone>
		<onloadingerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>An `EventListener` property called whenever an event of type `loadingerror` is fired, indicating that an error occurred during the loading of a font face set.</haxe_doc>
		</onloadingerror>
		<ready public="1" set="null"><c path="js.Promise"><x path="Void"/></c></ready>
		<status public="1" set="null">
			<x path="js.html.FontFaceSetLoadStatus"/>
			<haxe_doc>Indicates the font face's loading status. It will be one of `'loading'` or `'loaded'`.</haxe_doc>
		</status>
		<add public="1" set="method">
			<f a="font">
				<c path="js.html.FontFace"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</add>
		<has public="1" set="method"><f a="font">
	<c path="js.html.FontFace"/>
	<x path="Bool"/>
</f></has>
		<delete_ public="1" set="method">
			<f a="font">
				<c path="js.html.FontFace"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":native"><e>"delete"</e></m></meta>
		</delete_>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<entries public="1" set="method"><f a=""><c path="js.html.FontFaceSetIterator"/></f></entries>
		<values public="1" set="method"><f a=""><c path="js.html.FontFaceSetIterator"/></f></values>
		<forEach public="1" set="method">
			<f a="cb:?thisArg">
				<f a="::">
					<c path="js.html.FontFace"/>
					<c path="js.html.FontFace"/>
					<c path="js.html.FontFaceSet"/>
					<x path="Void"/>
				</f>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</forEach>
		<load public="1" set="method">
			<f a="font:?text" v=":&quot; &quot;">
				<c path="String"/>
				<c path="String"/>
				<c path="js.Promise"><c path="Array"><c path="js.html.FontFace"/></c></c>
			</f>
			<meta><m n=":value"><e>{ text : " " }</e></m></meta>
		</load>
		<check public="1" set="method">
			<f a="font:?text" v=":&quot; &quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ text : " " }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</check>
		<haxe_doc><![CDATA[The `FontFaceSet` interface of the CSS Font Loading API is an interface for loading font faces and checking their download statuses.

	Documentation [FontFaceSet](https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet>]]></haxe_doc>
		<meta><m n=":native"><e>"FontFaceSet"</e></m></meta>
	</class>
	<class path="js.html.FontFaceSetIterator" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceSetIterator.hx" extern="1">
		<next public="1" set="method">
			<f a=""><t path="js.html.FontFaceSetIteratorResult"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</next>
		<meta><m n=":native"><e>"FontFaceSetIterator"</e></m></meta>
	</class>
	<typedef path="js.html.FontFaceSetIteratorResult" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceSetIteratorResult.hx"><a>
	<value><d/></value>
	<done><x path="Bool"/></done>
</a></typedef>
	<abstract path="js.html.FontFaceSetLoadStatus" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceSetLoadStatus.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._FontFaceSetLoadStatus.FontFaceSetLoadStatus_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/FontFaceSetLoadStatus.hx" private="1" module="js.html.FontFaceSetLoadStatus"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.FormData" params="" file="/usr/local/lib/haxe/std/js/html/FormData.hx" extern="1">
		<append public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><append public="1" set="method">
	<f a="name:value:?filename">
		<c path="String"/>
		<c path="js.html.Blob"/>
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</append></overloads>
		</append>
		<delete_ public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"delete"</e></m></meta>
		</delete_>
		<get public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Blob"/>
					<c path="String"/>
				</x>
			</f>
			<haxe_doc>Returns the first value associated with a given key from within a `FormData` object.</haxe_doc>
		</get>
		<getAll public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="Array"><x path="haxe.extern.EitherType">
	<c path="js.html.Blob"/>
	<c path="String"/>
</x></c>
			</f>
			<haxe_doc>Returns an array of all the values associated with a given key from within a `FormData`.</haxe_doc>
		</getAll>
		<has public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns a boolean stating whether a `FormData` object contains a certain key/value pair.</haxe_doc>
		</has>
		<set public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><set public="1" set="method">
	<f a="name:value:?filename">
		<c path="String"/>
		<c path="js.html.Blob"/>
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</set></overloads>
		</set>
		<entries public="1" set="method">
			<f a=""><c path="js.html.FormDataIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</entries>
		<keys public="1" set="method">
			<f a=""><c path="js.html.FormDataIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</keys>
		<values public="1" set="method">
			<f a=""><c path="js.html.FormDataIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</values>
		<forEach public="1" set="method">
			<f a="callback:?thisArg">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</forEach>
		<new public="1" set="method">
			<f a="?form">
				<c path="js.html.FormElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `FormData` interface provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the `XMLHttpRequest.send()` method. It uses the same format a form would use if the encoding type were set to `"multipart/form-data"`.

	Documentation [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/FormData$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/FormData>]]></haxe_doc>
		<meta><m n=":native"><e>"FormData"</e></m></meta>
	</class>
	<class path="js.html.FormDataIterator" params="" file="/usr/local/lib/haxe/std/js/html/FormDataIterator.hx" extern="1">
		<next public="1" set="method">
			<f a=""><d/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</next>
		<meta><m n=":native"><e>"FormDataIterator"</e></m></meta>
	</class>
	<class path="js.html.FormElement" params="" file="/usr/local/lib/haxe/std/js/html/FormElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<acceptCharset public="1"><c path="String"/></acceptCharset>
		<action public="1"><c path="String"/></action>
		<autocomplete public="1"><c path="String"/></autocomplete>
		<enctype public="1"><c path="String"/></enctype>
		<encoding public="1"><c path="String"/></encoding>
		<method public="1"><c path="String"/></method>
		<name public="1"><c path="String"/></name>
		<noValidate public="1"><x path="Bool"/></noValidate>
		<target public="1"><c path="String"/></target>
		<elements public="1" set="null"><c path="js.html.HTMLCollection"/></elements>
		<length public="1" set="null"><x path="Int"/></length>
		<submit public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</submit>
		<reset public="1" set="method"><f a=""><x path="Void"/></f></reset>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<haxe_doc><![CDATA[The `HTMLFormElement` interface provides methods to create and modify `form` elements.
		document.forms - returns an array of HTMLFormElement objects referencing all forms on the page.
		document.forms[index] - returns an HTMLFormElement object referencing the form at the specified index.
		document.forms['id'] - returns an HTMLFormElement object referencing the form with the specified id.
		document.forms['name'] - returns an HTMLFormElement object referencing the form with the specified name.

	Documentation [HTMLFormElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFormElement"</e></m></meta>
	</class>
	<class path="js.html.FrameElement" params="" file="/usr/local/lib/haxe/std/js/html/FrameElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<name public="1"><c path="String"/></name>
		<scrolling public="1"><c path="String"/></scrolling>
		<src public="1"><c path="String"/></src>
		<frameBorder public="1"><c path="String"/></frameBorder>
		<longDesc public="1"><c path="String"/></longDesc>
		<noResize public="1"><x path="Bool"/></noResize>
		<contentDocument public="1" set="null"><c path="js.html.HTMLDocument"/></contentDocument>
		<contentWindow public="1" set="null"><c path="js.html.Window"/></contentWindow>
		<marginHeight public="1"><c path="String"/></marginHeight>
		<marginWidth public="1"><c path="String"/></marginWidth>
		<meta><m n=":native"><e>"HTMLFrameElement"</e></m></meta>
	</class>
	<class path="js.html.FrameSetElement" params="" file="/usr/local/lib/haxe/std/js/html/FrameSetElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cols public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the foreground color of text.</haxe_doc>
		</cols>
		<rows public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the color of visited links.</haxe_doc>
		</rows>
		<onafterprint public="1"><x path="haxe.Function"/></onafterprint>
		<onbeforeprint public="1"><x path="haxe.Function"/></onbeforeprint>
		<onbeforeunload public="1"><f a="">
	<c path="js.html.Event"/>
	<c path="String"/>
</f></onbeforeunload>
		<onhashchange public="1"><x path="haxe.Function"/></onhashchange>
		<onlanguagechange public="1"><x path="haxe.Function"/></onlanguagechange>
		<onmessage public="1"><x path="haxe.Function"/></onmessage>
		<onoffline public="1"><x path="haxe.Function"/></onoffline>
		<ononline public="1"><x path="haxe.Function"/></ononline>
		<onpagehide public="1"><x path="haxe.Function"/></onpagehide>
		<onpageshow public="1"><x path="haxe.Function"/></onpageshow>
		<onpopstate public="1"><x path="haxe.Function"/></onpopstate>
		<onstorage public="1"><x path="haxe.Function"/></onstorage>
		<onunload public="1"><x path="haxe.Function"/></onunload>
		<haxe_doc><![CDATA[The `HTMLFrameSetElement` interface provides special properties (beyond those of the regular `HTMLElement` interface they also inherit) for manipulating `frameset` elements.

	Documentation [HTMLFrameSetElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFrameSetElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFrameSetElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLFrameSetElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLFrameSetElement"</e></m></meta>
	</class>
	<class path="js.html.Gamepad" params="" file="/usr/local/lib/haxe/std/js/html/Gamepad.hx" extern="1">
		<id public="1" set="null">
			<c path="String"/>
			<haxe_doc>A `DOMString` containing identifying information about the controller.</haxe_doc>
		</id>
		<index public="1" set="null">
			<x path="Int"/>
			<haxe_doc>An integer that is auto-incremented to be unique for each device currently connected to the system.</haxe_doc>
		</index>
		<mapping public="1" set="null">
			<x path="js.html.GamepadMappingType"/>
			<haxe_doc>A string indicating whether the browser has remapped the controls on the device to a known layout.</haxe_doc>
		</mapping>
		<connected public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A boolean indicating whether the gamepad is still connected to the system.</haxe_doc>
		</connected>
		<buttons public="1" set="null">
			<c path="Array"><c path="js.html.GamepadButton"/></c>
			<haxe_doc>An array of `gamepadButton` objects representing the buttons present on the device.</haxe_doc>
		</buttons>
		<axes public="1" set="null">
			<c path="Array"><x path="Float"/></c>
			<haxe_doc>An array representing the controls with axes present on the device (e.g. analog thumb sticks).</haxe_doc>
		</axes>
		<timestamp public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A `DOMHighResTimeStamp` representing the last time the data for this gamepad was updated. Note that this property is not currently supported anywhere.</haxe_doc>
		</timestamp>
		<haxe_doc><![CDATA[The `Gamepad` interface of the Gamepad API defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.

	Documentation [Gamepad](https://developer.mozilla.org/en-US/docs/Web/API/Gamepad) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Gamepad$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Gamepad>]]></haxe_doc>
		<meta><m n=":native"><e>"Gamepad"</e></m></meta>
	</class>
	<class path="js.html.GamepadButton" params="" file="/usr/local/lib/haxe/std/js/html/GamepadButton.hx" extern="1">
		<pressed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A boolean value indicating whether the button is currently pressed (`true`) or unpressed (`false`).</haxe_doc>
		</pressed>
		<value public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A double value used to represent the current state of analog buttons, such as the triggers on many modern gamepads. The values are normalized to the range 0.0 —1.0, with 0.0 representing a button that is not pressed, and 1.0 representing a button that is fully pressed.</haxe_doc>
		</value>
		<haxe_doc><![CDATA[The `GamepadButton` interface defines an individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.

	Documentation [GamepadButton](https://developer.mozilla.org/en-US/docs/Web/API/GamepadButton) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/GamepadButton$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/GamepadButton>]]></haxe_doc>
		<meta><m n=":native"><e>"GamepadButton"</e></m></meta>
	</class>
	<abstract path="js.html.GamepadMappingType" params="" file="/usr/local/lib/haxe/std/js/html/GamepadMappingType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._GamepadMappingType.GamepadMappingType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/GamepadMappingType.hx" private="1" module="js.html.GamepadMappingType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Geolocation" params="" file="/usr/local/lib/haxe/std/js/html/Geolocation.hx" extern="1">
		<getCurrentPosition public="1" set="method">
			<f a="successCallback:?errorCallback:?options">
				<f a="">
					<c path="js.html.Position"/>
					<x path="Void"/>
				</f>
				<f a="">
					<c path="js.html.PositionError"/>
					<x path="Void"/>
				</f>
				<t path="js.html.PositionOptions"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getCurrentPosition>
		<watchPosition public="1" set="method">
			<f a="successCallback:?errorCallback:?options">
				<f a="">
					<c path="js.html.Position"/>
					<x path="Void"/>
				</f>
				<f a="">
					<c path="js.html.PositionError"/>
					<x path="Void"/>
				</f>
				<t path="js.html.PositionOptions"/>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</watchPosition>
		<clearWatch public="1" set="method">
			<f a="watchId">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes the particular handler previously installed using `watchPosition()`.</haxe_doc>
		</clearWatch>
		<haxe_doc><![CDATA[The `Geolocation` interface represents an object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user's location.

	Documentation [Geolocation](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Geolocation$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Geolocation>]]></haxe_doc>
		<meta><m n=":native"><e>"Geolocation"</e></m></meta>
	</class>
	<class path="js.html.HRElement" params="" file="/usr/local/lib/haxe/std/js/html/HRElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1"><c path="String"/></align>
		<color public="1"><c path="String"/></color>
		<noShade public="1"><x path="Bool"/></noShade>
		<size public="1"><c path="String"/></size>
		<width public="1"><c path="String"/></width>
		<haxe_doc><![CDATA[The `HTMLHRElement` interface provides special properties (beyond those of the `HTMLElement` interface it also has available to it by inheritance) for manipulating `hr` elements.

	Documentation [HTMLHRElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHRElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHRElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLHRElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHRElement"</e></m></meta>
	</class>
	<class path="js.html.HTMLAllCollection" params="" file="/usr/local/lib/haxe/std/js/html/HTMLAllCollection.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Node"/>
					<c path="js.html.HTMLCollection"/>
				</x>
			</f>
			<overloads><item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Node"/>
</f></item></overloads>
		</item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="js.html.Node"/>
		<c path="js.html.HTMLCollection"/>
	</x>
</f></namedItem>
		<meta><m n=":native"><e>"HTMLAllCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLCollection" params="" file="/usr/local/lib/haxe/std/js/html/HTMLCollection.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of items in the collection.</haxe_doc>
		</length>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>Returns the specific node at the given zero-based `index` into the list. Returns `null` if the `index` is out of range.</haxe_doc>
		</item>
		<namedItem public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>Returns the specific node whose ID or, as a fallback, name matches the string specified by `name`. Matching by name is only done as a last resort, only in HTML, and only if the referenced element supports the `name` attribute. Returns `null` if no node exists by the given name.</haxe_doc>
		</namedItem>
		<haxe_doc><![CDATA[The `HTMLCollection` interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list.

	Documentation [HTMLCollection](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLDocument" params="" file="/usr/local/lib/haxe/std/js/html/HTMLDocument.hx" extern="1">
		<extends path="js.html.Document"/>
		<domain public="1"><c path="String"/></domain>
		<cookie public="1"><c path="String"/></cookie>
		<body public="1"><c path="js.html.BodyElement"/></body>
		<head public="1" set="null"><c path="js.html.HeadElement"/></head>
		<images public="1" set="null"><c path="js.html.HTMLCollection"/></images>
		<embeds public="1" set="null"><c path="js.html.HTMLCollection"/></embeds>
		<plugins public="1" set="null"><c path="js.html.HTMLCollection"/></plugins>
		<links public="1" set="null"><c path="js.html.HTMLCollection"/></links>
		<forms public="1" set="null"><c path="js.html.HTMLCollection"/></forms>
		<scripts public="1" set="null"><c path="js.html.HTMLCollection"/></scripts>
		<designMode public="1"><c path="String"/></designMode>
		<fgColor public="1"><c path="String"/></fgColor>
		<linkColor public="1"><c path="String"/></linkColor>
		<vlinkColor public="1"><c path="String"/></vlinkColor>
		<alinkColor public="1"><c path="String"/></alinkColor>
		<bgColor public="1"><c path="String"/></bgColor>
		<anchors public="1" set="null"><c path="js.html.HTMLCollection"/></anchors>
		<applets public="1" set="null"><c path="js.html.HTMLCollection"/></applets>
		<all public="1" set="null"><c path="js.html.HTMLAllCollection"/></all>
		<getElementsByName public="1" set="method"><f a="elementName">
	<c path="String"/>
	<c path="js.html.NodeList"/>
</f></getElementsByName>
		<getItems public="1" set="method">
			<f a="?typeNames" v="&quot;&quot;">
				<c path="String"/>
				<c path="js.html.NodeList"/>
			</f>
			<meta><m n=":value"><e>{ typeNames : "" }</e></m></meta>
		</getItems>
		<open public="1" set="method">
			<f a="url:name:features:?replace" v=":::false">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<c path="js.html.Window"/>
			</f>
			<meta><m n=":value"><e>{ replace : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><open public="1" set="method">
	<f a="?type:?replace" v="&quot;text/html&quot;:&quot;&quot;">
		<c path="String"/>
		<c path="String"/>
		<c path="js.html.HTMLDocument"/>
	</f>
	<meta><m n=":value"><e>{ replace : "", type : "text/html" }</e></m></meta>
	<haxe_doc>@throws DOMError</haxe_doc>
</open></overloads>
		</open>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</close>
		<write public="1" set="method">
			<f a="text">
				<x path="haxe.extern.Rest"><c path="String"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</write>
		<writeln public="1" set="method">
			<f a="text">
				<x path="haxe.extern.Rest"><c path="String"/></x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</writeln>
		<execCommand public="1" set="method">
			<f a="commandId:?showUI:?value" v=":false:&quot;&quot;">
				<c path="String"/>
				<x path="Bool"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ value : "", showUI : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</execCommand>
		<queryCommandEnabled public="1" set="method">
			<f a="commandId">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</queryCommandEnabled>
		<queryCommandIndeterm public="1" set="method">
			<f a="commandId">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</queryCommandIndeterm>
		<queryCommandState public="1" set="method">
			<f a="commandId">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</queryCommandState>
		<queryCommandSupported public="1" set="method"><f a="commandId">
	<c path="String"/>
	<x path="Bool"/>
</f></queryCommandSupported>
		<queryCommandValue public="1" set="method">
			<f a="commandId">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</queryCommandValue>
		<clear public="1" set="method"><f a=""><x path="Void"/></f></clear>
		<getSelection public="1" set="method">
			<f a=""><c path="js.html.Selection"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getSelection>
		<captureEvents public="1" set="method"><f a=""><x path="Void"/></f></captureEvents>
		<releaseEvents public="1" set="method"><f a=""><x path="Void"/></f></releaseEvents>
		<createTableCellElement public="1" get="inline" set="null" line="85">
			<f a=""><c path="js.html.TableCellElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<td>` element.]]></haxe_doc>
		</createTableCellElement>
		<createHRElement public="1" get="inline" set="null" line="87">
			<f a=""><c path="js.html.HRElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<hr>` element.]]></haxe_doc>
		</createHRElement>
		<createSelectElement public="1" get="inline" set="null" line="89">
			<f a=""><c path="js.html.SelectElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<select>` element.]]></haxe_doc>
		</createSelectElement>
		<createMapElement public="1" get="inline" set="null" line="91">
			<f a=""><c path="js.html.MapElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<map>` element.]]></haxe_doc>
		</createMapElement>
		<createFormElement public="1" get="inline" set="null" line="93">
			<f a=""><c path="js.html.FormElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<form>` element.]]></haxe_doc>
		</createFormElement>
		<createOptionElement public="1" get="inline" set="null" line="95">
			<f a=""><c path="js.html.OptionElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<option>` element.]]></haxe_doc>
		</createOptionElement>
		<createLabelElement public="1" get="inline" set="null" line="97">
			<f a=""><c path="js.html.LabelElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<label>` element.]]></haxe_doc>
		</createLabelElement>
		<createMetaElement public="1" get="inline" set="null" line="99">
			<f a=""><c path="js.html.MetaElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<meta>` element.]]></haxe_doc>
		</createMetaElement>
		<createImageElement public="1" get="inline" set="null" line="101">
			<f a=""><c path="js.html.ImageElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<img>` element.]]></haxe_doc>
		</createImageElement>
		<createDListElement public="1" get="inline" set="null" line="103">
			<f a=""><c path="js.html.DListElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<dl>` element.]]></haxe_doc>
		</createDListElement>
		<createFrameElement public="1" get="inline" set="null" line="105">
			<f a=""><c path="js.html.FrameElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<frame>` element.]]></haxe_doc>
		</createFrameElement>
		<createModElement public="1" get="inline" set="null" line="107">
			<f a=""><c path="js.html.ModElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<mod>` element.]]></haxe_doc>
		</createModElement>
		<createUListElement public="1" get="inline" set="null" line="109">
			<f a=""><c path="js.html.UListElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<ul>` element.]]></haxe_doc>
		</createUListElement>
		<createOutputElement public="1" get="inline" set="null" line="111">
			<f a=""><c path="js.html.OutputElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<output>` element.]]></haxe_doc>
		</createOutputElement>
		<createOListElement public="1" get="inline" set="null" line="113">
			<f a=""><c path="js.html.OListElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<ol>` element.]]></haxe_doc>
		</createOListElement>
		<createShadowElement public="1" get="inline" set="null" line="115">
			<f a=""><c path="js.html.ShadowElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<shadow>` element.]]></haxe_doc>
		</createShadowElement>
		<createLIElement public="1" get="inline" set="null" line="117">
			<f a=""><c path="js.html.LIElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<li>` element.]]></haxe_doc>
		</createLIElement>
		<createDataListElement public="1" get="inline" set="null" line="119">
			<f a=""><c path="js.html.DataListElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<datalist>` element.]]></haxe_doc>
		</createDataListElement>
		<createParamElement public="1" get="inline" set="null" line="121">
			<f a=""><c path="js.html.ParamElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<param>` element.]]></haxe_doc>
		</createParamElement>
		<createFontElement public="1" get="inline" set="null" line="123">
			<f a=""><c path="js.html.FontElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<font>` element.]]></haxe_doc>
		</createFontElement>
		<createTrackElement public="1" get="inline" set="null" line="125">
			<f a=""><c path="js.html.TrackElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<track>` element.]]></haxe_doc>
		</createTrackElement>
		<createAppletElement public="1" get="inline" set="null" line="127">
			<f a=""><c path="js.html.AppletElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<applet>` element.]]></haxe_doc>
		</createAppletElement>
		<createAreaElement public="1" get="inline" set="null" line="129">
			<f a=""><c path="js.html.AreaElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<area>` element.]]></haxe_doc>
		</createAreaElement>
		<createLinkElement public="1" get="inline" set="null" line="131">
			<f a=""><c path="js.html.LinkElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<link>` element.]]></haxe_doc>
		</createLinkElement>
		<createDivElement public="1" get="inline" set="null" line="133">
			<f a=""><c path="js.html.DivElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<div>` element.]]></haxe_doc>
		</createDivElement>
		<createTitleElement public="1" get="inline" set="null" line="135">
			<f a=""><c path="js.html.TitleElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<title>` element.]]></haxe_doc>
		</createTitleElement>
		<createStyleElement public="1" get="inline" set="null" line="137">
			<f a=""><c path="js.html.StyleElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<style>` element.]]></haxe_doc>
		</createStyleElement>
		<createProgressElement public="1" get="inline" set="null" line="139">
			<f a=""><c path="js.html.ProgressElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<progress>` element.]]></haxe_doc>
		</createProgressElement>
		<createButtonElement public="1" get="inline" set="null" line="141">
			<f a=""><c path="js.html.ButtonElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<button>` element.]]></haxe_doc>
		</createButtonElement>
		<createFieldSetElement public="1" get="inline" set="null" line="143">
			<f a=""><c path="js.html.FieldSetElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<fieldset>` element.]]></haxe_doc>
		</createFieldSetElement>
		<createAnchorElement public="1" get="inline" set="null" line="145">
			<f a=""><c path="js.html.AnchorElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<a>` element.]]></haxe_doc>
		</createAnchorElement>
		<createIFrameElement public="1" get="inline" set="null" line="147">
			<f a=""><c path="js.html.IFrameElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<iframe>` element.]]></haxe_doc>
		</createIFrameElement>
		<createSpanElement public="1" get="inline" set="null" line="149">
			<f a=""><c path="js.html.SpanElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<span>` element.]]></haxe_doc>
		</createSpanElement>
		<createBodyElement public="1" get="inline" set="null" line="151">
			<f a=""><c path="js.html.BodyElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<body>` element.]]></haxe_doc>
		</createBodyElement>
		<createInputElement public="1" get="inline" set="null" line="153">
			<f a=""><c path="js.html.InputElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<input>` element.]]></haxe_doc>
		</createInputElement>
		<createEmbedElement public="1" get="inline" set="null" line="155">
			<f a=""><c path="js.html.EmbedElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<embed>` element.]]></haxe_doc>
		</createEmbedElement>
		<createMeterElement public="1" get="inline" set="null" line="157">
			<f a=""><c path="js.html.MeterElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<meter>` element.]]></haxe_doc>
		</createMeterElement>
		<createPictureElement public="1" get="inline" set="null" line="159">
			<f a=""><c path="js.html.PictureElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<picture>` element.]]></haxe_doc>
		</createPictureElement>
		<createPreElement public="1" get="inline" set="null" line="161">
			<f a=""><c path="js.html.PreElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<pre>` element.]]></haxe_doc>
		</createPreElement>
		<createTableSectionElement public="1" get="inline" set="null" line="163">
			<f a=""><c path="js.html.TableSectionElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<thead>` element.]]></haxe_doc>
		</createTableSectionElement>
		<createHeadElement public="1" get="inline" set="null" line="165">
			<f a=""><c path="js.html.HeadElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<head>` element.]]></haxe_doc>
		</createHeadElement>
		<createBaseElement public="1" get="inline" set="null" line="167">
			<f a=""><c path="js.html.BaseElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<base>` element.]]></haxe_doc>
		</createBaseElement>
		<createOptGroupElement public="1" get="inline" set="null" line="169">
			<f a=""><c path="js.html.OptGroupElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<optgroup>` element.]]></haxe_doc>
		</createOptGroupElement>
		<createQuoteElement public="1" get="inline" set="null" line="171">
			<f a=""><c path="js.html.QuoteElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<quote>` element.]]></haxe_doc>
		</createQuoteElement>
		<createAudioElement public="1" get="inline" set="null" line="173">
			<f a=""><c path="js.html.AudioElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<audio>` element.]]></haxe_doc>
		</createAudioElement>
		<createVideoElement public="1" get="inline" set="null" line="175">
			<f a=""><c path="js.html.VideoElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<video>` element.]]></haxe_doc>
		</createVideoElement>
		<createLegendElement public="1" get="inline" set="null" line="177">
			<f a=""><c path="js.html.LegendElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<legend>` element.]]></haxe_doc>
		</createLegendElement>
		<createMenuElement public="1" get="inline" set="null" line="179">
			<f a=""><c path="js.html.MenuElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<menu>` element.]]></haxe_doc>
		</createMenuElement>
		<createFrameSetElement public="1" get="inline" set="null" line="181">
			<f a=""><c path="js.html.FrameSetElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<frameset>` element.]]></haxe_doc>
		</createFrameSetElement>
		<createCanvasElement public="1" get="inline" set="null" line="183">
			<f a=""><c path="js.html.CanvasElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<canvas>` element.]]></haxe_doc>
		</createCanvasElement>
		<createParagraphElement public="1" get="inline" set="null" line="185">
			<f a=""><c path="js.html.ParagraphElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<p>` element.]]></haxe_doc>
		</createParagraphElement>
		<createTableColElement public="1" get="inline" set="null" line="187">
			<f a=""><c path="js.html.TableColElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<col>` element.]]></haxe_doc>
		</createTableColElement>
		<createDirectoryElement public="1" get="inline" set="null" line="189">
			<f a=""><c path="js.html.DirectoryElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<dir>` element.]]></haxe_doc>
		</createDirectoryElement>
		<createTableElement public="1" get="inline" set="null" line="191">
			<f a=""><c path="js.html.TableElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<table>` element.]]></haxe_doc>
		</createTableElement>
		<createTableRowElement public="1" get="inline" set="null" line="193">
			<f a=""><c path="js.html.TableRowElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<tr>` element.]]></haxe_doc>
		</createTableRowElement>
		<createScriptElement public="1" get="inline" set="null" line="195">
			<f a=""><c path="js.html.ScriptElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<script>` element.]]></haxe_doc>
		</createScriptElement>
		<createSourceElement public="1" get="inline" set="null" line="197">
			<f a=""><c path="js.html.SourceElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<source>` element.]]></haxe_doc>
		</createSourceElement>
		<createContentElement public="1" get="inline" set="null" line="199">
			<f a=""><c path="js.html.ContentElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<content>` element.]]></haxe_doc>
		</createContentElement>
		<createBRElement public="1" get="inline" set="null" line="201">
			<f a=""><c path="js.html.BRElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<br>` element.]]></haxe_doc>
		</createBRElement>
		<createHtmlElement public="1" get="inline" set="null" line="203">
			<f a=""><c path="js.html.HtmlElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<html>` element.]]></haxe_doc>
		</createHtmlElement>
		<createTextAreaElement public="1" get="inline" set="null" line="205">
			<f a=""><c path="js.html.TextAreaElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<textarea>` element.]]></haxe_doc>
		</createTextAreaElement>
		<createMediaElement public="1" get="inline" set="null" line="207">
			<f a=""><c path="js.html.MediaElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<media>` element.]]></haxe_doc>
		</createMediaElement>
		<createObjectElement public="1" get="inline" set="null" line="209">
			<f a=""><c path="js.html.ObjectElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<object>` element.]]></haxe_doc>
		</createObjectElement>
		<createTableCaptionElement public="1" get="inline" set="null" line="211">
			<f a=""><c path="js.html.TableCaptionElement"/></f>
			<haxe_doc><![CDATA[Shorthand for creating an HTML `<caption>` element.]]></haxe_doc>
		</createTableCaptionElement>
		<haxe_doc><![CDATA[`HTMLDocument` is an abstract interface of the DOM which provides access to special properties and methods not present by default on a regular (XML) document.

	Documentation [HTMLDocument](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLDocument"</e></m></meta>
	</class>
	<class path="js.html.HTMLOptionsCollection" params="" file="/usr/local/lib/haxe/std/js/html/HTMLOptionsCollection.hx" extern="1">
		<extends path="js.html.HTMLCollection"/>
		<selectedIndex public="1"><x path="Int"/></selectedIndex>
		<add public="1" set="method">
			<f a="element:?before">
				<x path="haxe.extern.EitherType">
					<c path="js.html.OptionElement"/>
					<c path="js.html.OptGroupElement"/>
				</x>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Element"/>
					<x path="Int"/>
				</x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</add>
		<remove public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</remove>
		<haxe_doc><![CDATA[`HTMLOptionsCollection` is an interface representing a collection of HTML option elements (in document order) and offers methods and properties for traversing the list as well as optionally altering its items. This type is returned solely by the "options" property of select.

	Documentation [HTMLOptionsCollection](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionsCollection) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionsCollection$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionsCollection>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptionsCollection"</e></m></meta>
	</class>
	<class path="js.html.HTMLPropertiesCollection" params="" file="/usr/local/lib/haxe/std/js/html/HTMLPropertiesCollection.hx" extern="1">
		<extends path="js.html.HTMLCollection"/>
		<names public="1" set="null"><c path="js.html.DOMStringList"/></names>
		<meta><m n=":native"><e>"HTMLPropertiesCollection"</e></m></meta>
	</class>
	<class path="js.html.HeadElement" params="" file="/usr/local/lib/haxe/std/js/html/HeadElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<haxe_doc><![CDATA[The `HTMLHeadElement` interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the `HTMLElement` interface.

	Documentation [HTMLHeadElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLHeadElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHeadElement"</e></m></meta>
	</class>
	<class path="js.html.Headers" params="" file="/usr/local/lib/haxe/std/js/html/Headers.hx" extern="1">
		<append public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</append>
		<delete_ public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"delete"</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</delete_>
		<get public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</get>
		<getAll public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getAll>
		<has public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</has>
		<set public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</set>
		<entries public="1" set="method">
			<f a=""><c path="js.html.HeadersIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</entries>
		<keys public="1" set="method">
			<f a=""><c path="js.html.HeadersIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</keys>
		<values public="1" set="method">
			<f a=""><c path="js.html.HeadersIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</values>
		<forEach public="1" set="method">
			<f a="callback:?thisArg">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</forEach>
		<new public="1" set="method">
			<f a="?init">
				<x path="haxe.extern.EitherType">
					<c path="js.html.Headers"/>
					<x path="haxe.extern.EitherType">
						<c path="Array"><c path="Array"><c path="String"/></c></c>
						<d/>
					</x>
				</x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Headers` interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A `Headers` object has an associated header list, which is initially empty and consists of zero or more name and value pairs.  You can add to this using methods like `append()` (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence.

	Documentation [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Headers$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Headers>]]></haxe_doc>
		<meta><m n=":native"><e>"Headers"</e></m></meta>
	</class>
	<class path="js.html.HeadersIterator" params="" file="/usr/local/lib/haxe/std/js/html/HeadersIterator.hx" extern="1">
		<next public="1" set="method">
			<f a=""><d/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</next>
		<meta><m n=":native"><e>"HeadersIterator"</e></m></meta>
	</class>
	<class path="js.html.History" params="" file="/usr/local/lib/haxe/std/js/html/History.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an `Integer` representing the number of elements in the session history, including the currently loaded page. For example, for a page loaded in a new tab this property returns `1`.</haxe_doc>
		</length>
		<scrollRestoration public="1">
			<x path="js.html.ScrollRestoration"/>
			<haxe_doc>Allows web applications to explicitly set default scroll restoration behavior on history navigation. This property can be either `auto` or `manual`.</haxe_doc>
		</scrollRestoration>
		<state public="1" set="null">
			<d/>
			<haxe_doc>Returns an `any` value representing the state at the top of the history stack. This is a way to look at the state without having to wait for a `popstate` event.</haxe_doc>
		</state>
		<go public="1" set="method">
			<f a="?delta" v="0">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ delta : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</go>
		<back public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</back>
		<forward public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</forward>
		<pushState public="1" set="method">
			<f a="data:title:?url">
				<d/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</pushState>
		<replaceState public="1" set="method">
			<f a="data:title:?url">
				<d/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</replaceState>
		<haxe_doc><![CDATA[The `History` interface allows to manipulate the browser session history, that is the pages visited in the tab or frame that the current page is loaded in.

	Documentation [History](https://developer.mozilla.org/en-US/docs/Web/API/History) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/History$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/History>]]></haxe_doc>
		<meta><m n=":native"><e>"History"</e></m></meta>
	</class>
	<typedef path="js.html.HitRegionOptions" params="" file="/usr/local/lib/haxe/std/js/html/HitRegionOptions.hx"><a>
	<path>
		<x path="Null"><c path="js.html.Path2D"/></x>
		<meta><m n=":optional"/></meta>
	</path>
	<id>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</id>
	<control>
		<x path="Null"><c path="js.html.Element"/></x>
		<meta><m n=":optional"/></meta>
	</control>
</a></typedef>
	<class path="js.html.HtmlElement" params="" file="/usr/local/lib/haxe/std/js/html/HtmlElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<version public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the version of the HTML Document Type Definition (DTD) that governs this document. This property should not be used any more as it is non-conforming. Simply omit it.</haxe_doc>
		</version>
		<haxe_doc><![CDATA[The `HTMLHtmlElement` interface serves as the root node for a given HTML document.  This object inherits the properties and methods described in the `HTMLElement` interface.

	Documentation [HTMLHtmlElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLHtmlElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLHtmlElement"</e></m></meta>
	</class>
	<class path="js.html.IFrameElement" params="" file="/usr/local/lib/haxe/std/js/html/IFrameElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `src` HTML attribute, containing the address of the content to be embedded.</haxe_doc>
		</src>
		<srcdoc public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that represents the content to display in the frame.</haxe_doc>
		</srcdoc>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `name` HTML attribute, containing a name by which to refer to the frame.</haxe_doc>
		</name>
		<sandbox public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Is a `DOMSettableTokenList` that reflects the `sandbox` HTML attribute, indicating extra restrictions on the behavior of the nested content.</haxe_doc>
		</sandbox>
		<allowFullscreen public="1"><x path="Bool"/></allowFullscreen>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `width` HTML attribute, indicating the width of the frame.</haxe_doc>
		</width>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `height` HTML attribute, indicating the height of the frame.</haxe_doc>
		</height>
		<contentDocument public="1" set="null">
			<c path="js.html.HTMLDocument"/>
			<haxe_doc>Returns a `Document`, the active document in the inline frame's nested browsing context.</haxe_doc>
		</contentDocument>
		<contentWindow public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a `WindowProxy`, the window proxy for the nested browsing context.</haxe_doc>
		</contentWindow>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that specifies the alignment of the frame with respect to the surrounding context.</haxe_doc>
		</align>
		<scrolling public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that indicates whether the browser should provide scrollbars for the frame.</haxe_doc>
		</scrolling>
		<frameBorder public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that indicates whether to create borders between frames.</haxe_doc>
		</frameBorder>
		<longDesc public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that contains the URI of a long description of the frame.</haxe_doc>
		</longDesc>
		<marginHeight public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` being the height of the frame margin.</haxe_doc>
		</marginHeight>
		<marginWidth public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` being the width of the frame margin.</haxe_doc>
		</marginWidth>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.HTMLDocument"/></f></getSVGDocument>
		<haxe_doc><![CDATA[The `HTMLIFrameElement` interface provides special properties and methods (beyond those of the `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements.

	Documentation [HTMLIFrameElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLIFrameElement"</e></m></meta>
	</class>
	<class path="js.html.ImageElement" params="" file="/usr/local/lib/haxe/std/js/html/ImageElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<alt public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `alt` HTML attribute,  thus indicating fallback context for the image.</haxe_doc>
		</alt>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `src` HTML attribute, containing the full URL of the image including base URI.</haxe_doc>
		</src>
		<srcset public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `srcset` HTML attribute, containing a list of candidate images, separated by a comma (`',', U+002C COMMA`). A candidate image is a URL followed by a `'w'` with the width of the images, or an `'x'` followed by the pixel density.</haxe_doc>
		</srcset>
		<crossOrigin public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the CORS setting for this image element. See CORS settings attributes for further details.</haxe_doc>
		</crossOrigin>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `usemap` HTML attribute, containing a partial URL of a map element.</haxe_doc>
		</useMap>
		<isMap public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `ismap` HTML attribute, indicating that the image is part of a server-side image map.</haxe_doc>
		</isMap>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>Is a `unsigned long` that reflects the `width` HTML attribute, indicating the rendered width of the image in CSS pixels.</haxe_doc>
		</width>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>Is a `unsigned long` that reflects the `height` HTML attribute, indicating the rendered height of the image in CSS pixels.</haxe_doc>
		</height>
		<naturalWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `unsigned long` representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show `0`.</haxe_doc>
		</naturalWidth>
		<naturalHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `unsigned long` representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows `0`.</haxe_doc>
		</naturalHeight>
		<complete public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no `HTMLImageElement.src` value.</haxe_doc>
		</complete>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the name of the element.</haxe_doc>
		</name>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` indicating the alignment of the image with respect to the surrounding context.</haxe_doc>
		</align>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` representing the space on either side of the image.</haxe_doc>
		</hspace>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` representing the space above and below the image.</haxe_doc>
		</vspace>
		<longDesc public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the URI of a long description of the image.</haxe_doc>
		</longDesc>
		<border public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that is responsible for the width of the border surrounding the image. This is now deprecated and the CSS `border` property should be used instead.</haxe_doc>
		</border>
		<sizes public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `sizes` HTML attribute.</haxe_doc>
		</sizes>
		<currentSrc public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the URL to the currently displayed image (which may change, for example in response to media queries).</haxe_doc>
		</currentSrc>
		<lowsrc public="1"><c path="String"/></lowsrc>
		<x public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `long` representing the horizontal offset from the nearest layer. This property mimics an old Netscape 4 behavior.</haxe_doc>
		</x>
		<y public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `long` representing the vertical offset from the nearest layer. This property is also similar to behavior of an old Netscape 4.</haxe_doc>
		</y>
		<haxe_doc><![CDATA[The `HTMLImageElement` interface provides special properties and methods  for manipulating the layout and presentation of `img` elements.

	Documentation [HTMLImageElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLImageElement"</e></m></meta>
	</class>
	<class path="js.html.Image" params="" file="/usr/local/lib/haxe/std/js/html/Image.hx" extern="1">
		<extends path="js.html.ImageElement"/>
		<new public="1" set="method">
			<f a="?width:?height">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Image"</e></m>
		</meta>
	</class>
	<class path="js.html.ImageBitmap" params="" file="/usr/local/lib/haxe/std/js/html/ImageBitmap.hx" extern="1">
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned` `long` representing the width, in CSS pixels, of the `ImageData`.</haxe_doc>
		</width>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned` `long` representing the height, in CSS pixels, of the `ImageData`.</haxe_doc>
		</height>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Disposes of all graphical resources associated with an `ImageBitmap`.</haxe_doc>
		</close>
		<haxe_doc><![CDATA[The `ImageBitmap` interface represents a bitmap image which can be drawn to a `canvas` without undue latency. It can be created from a variety of source objects using the `createImageBitmap()` factory method. `ImageBitmap` provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL.

	Documentation [ImageBitmap](https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap>]]></haxe_doc>
		<meta><m n=":native"><e>"ImageBitmap"</e></m></meta>
	</class>
	<class path="js.html.ImageData" params="" file="/usr/local/lib/haxe/std/js/html/ImageData.hx" extern="1">
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned` `long` representing the actual width, in pixels, of the `ImageData`.</haxe_doc>
		</width>
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned` `long` representing the actual height, in pixels, of the `ImageData`.</haxe_doc>
		</height>
		<data public="1" set="null">
			<c path="js.html.Uint8ClampedArray"/>
			<haxe_doc>Is a `Uint8ClampedArray` representing a one-dimensional array containing the data in the RGBA order, with integer values between `0` and `255` (included).</haxe_doc>
		</data>
		<new public="1" set="method">
			<f a="data:sw:?sh">
				<c path="js.html.Uint8ClampedArray"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a="sw:sh">
		<x path="Int"/>
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[The `ImageData` interface represents the underlying pixel data of an area of a `canvas` element. It is created using the `ImageData()` constructor or creator methods on the `CanvasRenderingContext2D` object associated with a canvas: `createImageData()` and `getImageData()`. It can also be used to set a part of the canvas by using `putImageData()`.

	Documentation [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ImageData$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ImageData>]]></haxe_doc>
		<meta><m n=":native"><e>"ImageData"</e></m></meta>
	</class>
	<class path="js.html.InputElement" params="" file="/usr/local/lib/haxe/std/js/html/InputElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<accept public="1"><c path="String"/></accept>
		<alt public="1"><c path="String"/></alt>
		<autocomplete public="1"><c path="String"/></autocomplete>
		<autofocus public="1"><x path="Bool"/></autofocus>
		<defaultChecked public="1"><x path="Bool"/></defaultChecked>
		<checked public="1"><x path="Bool"/></checked>
		<disabled public="1"><x path="Bool"/></disabled>
		<form public="1" set="null"><c path="js.html.FormElement"/></form>
		<files public="1" set="null"><c path="js.html.FileList"/></files>
		<formAction public="1"><c path="String"/></formAction>
		<formEnctype public="1"><c path="String"/></formEnctype>
		<formMethod public="1"><c path="String"/></formMethod>
		<formNoValidate public="1"><x path="Bool"/></formNoValidate>
		<formTarget public="1"><c path="String"/></formTarget>
		<height public="1"><x path="Int"/></height>
		<indeterminate public="1"><x path="Bool"/></indeterminate>
		<list public="1" set="null"><c path="js.html.Element"/></list>
		<max public="1"><c path="String"/></max>
		<maxLength public="1"><x path="Int"/></maxLength>
		<min public="1"><c path="String"/></min>
		<multiple public="1"><x path="Bool"/></multiple>
		<name public="1"><c path="String"/></name>
		<pattern public="1"><c path="String"/></pattern>
		<placeholder public="1"><c path="String"/></placeholder>
		<readOnly public="1"><x path="Bool"/></readOnly>
		<required public="1"><x path="Bool"/></required>
		<size public="1"><x path="Int"/></size>
		<src public="1"><c path="String"/></src>
		<step public="1"><c path="String"/></step>
		<type public="1"><c path="String"/></type>
		<defaultValue public="1"><c path="String"/></defaultValue>
		<value public="1"><c path="String"/></value>
		<valueAsNumber public="1"><x path="Float"/></valueAsNumber>
		<width public="1"><x path="Int"/></width>
		<willValidate public="1" set="null"><x path="Bool"/></willValidate>
		<validity public="1" set="null"><c path="js.html.ValidityState"/></validity>
		<validationMessage public="1" set="null"><c path="String"/></validationMessage>
		<selectionStart public="1"><x path="Int"/></selectionStart>
		<selectionEnd public="1"><x path="Int"/></selectionEnd>
		<selectionDirection public="1"><c path="String"/></selectionDirection>
		<align public="1">
			<c path="String"/>
			<haxe_doc>`string:` represents the alignment of the element. Use CSS instead.</haxe_doc>
		</align>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc>`string:` represents a client-side image map.</haxe_doc>
		</useMap>
		<textLength public="1" set="null"><x path="Int"/></textLength>
		<stepUp public="1" set="method">
			<f a="?n" v="1">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ n : 1 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</stepUp>
		<stepDown public="1" set="method">
			<f a="?n" v="1">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ n : 1 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</stepDown>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<select public="1" set="method"><f a=""><x path="Void"/></f></select>
		<setRangeText public="1" set="method">
			<f a="replacement:start:end:?selectionMode" v=":::&quot;preserve&quot;">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="js.html.SelectionMode"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ selectionMode : "preserve" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><setRangeText public="1" set="method">
	<f a="replacement">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</setRangeText></overloads>
		</setRangeText>
		<setSelectionRange public="1" set="method">
			<f a="start:end:?direction">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setSelectionRange>
		<haxe_doc><![CDATA[The `HTMLInputElement` interface provides special properties and methods for manipulating the layout and presentation of input elements.

	Documentation [HTMLInputElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLInputElement"</e></m></meta>
	</class>
	<class path="js.html.InputEvent" params="" file="/usr/local/lib/haxe/std/js/html/InputEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<isComposing public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` value indicating if the event is fired after `compositionstart` and before `compositionend`.</haxe_doc>
		</isComposing>
		<new public="1" set="method">
			<f a="type:?eventInitDict">
				<c path="String"/>
				<t path="js.html.InputEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `InputEvent` interface represents an event notifying of editable content change.

	Documentation [InputEvent](https://developer.mozilla.org/en-US/docs/Web/API/InputEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/InputEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/InputEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"InputEvent"</e></m></meta>
	</class>
	<typedef path="js.html.InputEventInit" params="" file="/usr/local/lib/haxe/std/js/html/InputEventInit.hx"><a>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<isComposing>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</isComposing>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
</a></typedef>
	<class path="js.html.Int32Array" params="" file="/usr/local/lib/haxe/std/js/html/Int32Array.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null"><x path="Int"/></length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads><set public="1" set="method"><f a="array:?offset">
	<c path="js.html.Int32Array"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set></overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Int32Array"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Int32Array"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<meta><m n=":native"><e>"Int32Array"</e></m></meta>
	</class>
	<abstract path="js.html.IterationCompositeOperation" params="" file="/usr/local/lib/haxe/std/js/html/IterationCompositeOperation.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._IterationCompositeOperation.IterationCompositeOperation_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/IterationCompositeOperation.hx" private="1" module="js.html.IterationCompositeOperation"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.KeyboardEvent" params="" file="/usr/local/lib/haxe/std/js/html/KeyboardEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<DOM_KEY_LOCATION_STANDARD public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</DOM_KEY_LOCATION_STANDARD>
		<DOM_KEY_LOCATION_LEFT public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</DOM_KEY_LOCATION_LEFT>
		<DOM_KEY_LOCATION_RIGHT public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</DOM_KEY_LOCATION_RIGHT>
		<DOM_KEY_LOCATION_NUMPAD public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</DOM_KEY_LOCATION_NUMPAD>
		<DOM_VK_CANCEL public="1" get="inline" set="null" expr="3" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</DOM_VK_CANCEL>
		<DOM_VK_HELP public="1" get="inline" set="null" expr="6" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</DOM_VK_HELP>
		<DOM_VK_BACK_SPACE public="1" get="inline" set="null" expr="8" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</DOM_VK_BACK_SPACE>
		<DOM_VK_TAB public="1" get="inline" set="null" expr="9" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</DOM_VK_TAB>
		<DOM_VK_CLEAR public="1" get="inline" set="null" expr="12" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>12</e></m></meta>
		</DOM_VK_CLEAR>
		<DOM_VK_RETURN public="1" get="inline" set="null" expr="13" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>13</e></m></meta>
		</DOM_VK_RETURN>
		<DOM_VK_SHIFT public="1" get="inline" set="null" expr="16" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>16</e></m></meta>
		</DOM_VK_SHIFT>
		<DOM_VK_CONTROL public="1" get="inline" set="null" expr="17" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>17</e></m></meta>
		</DOM_VK_CONTROL>
		<DOM_VK_ALT public="1" get="inline" set="null" expr="18" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>18</e></m></meta>
		</DOM_VK_ALT>
		<DOM_VK_PAUSE public="1" get="inline" set="null" expr="19" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>19</e></m></meta>
		</DOM_VK_PAUSE>
		<DOM_VK_CAPS_LOCK public="1" get="inline" set="null" expr="20" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>20</e></m></meta>
		</DOM_VK_CAPS_LOCK>
		<DOM_VK_KANA public="1" get="inline" set="null" expr="21" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>21</e></m></meta>
		</DOM_VK_KANA>
		<DOM_VK_HANGUL public="1" get="inline" set="null" expr="21" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>21</e></m></meta>
		</DOM_VK_HANGUL>
		<DOM_VK_EISU public="1" get="inline" set="null" expr="22" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>22</e></m></meta>
		</DOM_VK_EISU>
		<DOM_VK_JUNJA public="1" get="inline" set="null" expr="23" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>23</e></m></meta>
		</DOM_VK_JUNJA>
		<DOM_VK_FINAL public="1" get="inline" set="null" expr="24" line="56" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>24</e></m></meta>
		</DOM_VK_FINAL>
		<DOM_VK_HANJA public="1" get="inline" set="null" expr="25" line="57" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>25</e></m></meta>
		</DOM_VK_HANJA>
		<DOM_VK_KANJI public="1" get="inline" set="null" expr="25" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>25</e></m></meta>
		</DOM_VK_KANJI>
		<DOM_VK_ESCAPE public="1" get="inline" set="null" expr="27" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>27</e></m></meta>
		</DOM_VK_ESCAPE>
		<DOM_VK_CONVERT public="1" get="inline" set="null" expr="28" line="60" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>28</e></m></meta>
		</DOM_VK_CONVERT>
		<DOM_VK_NONCONVERT public="1" get="inline" set="null" expr="29" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>29</e></m></meta>
		</DOM_VK_NONCONVERT>
		<DOM_VK_ACCEPT public="1" get="inline" set="null" expr="30" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>30</e></m></meta>
		</DOM_VK_ACCEPT>
		<DOM_VK_MODECHANGE public="1" get="inline" set="null" expr="31" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>31</e></m></meta>
		</DOM_VK_MODECHANGE>
		<DOM_VK_SPACE public="1" get="inline" set="null" expr="32" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32</e></m></meta>
		</DOM_VK_SPACE>
		<DOM_VK_PAGE_UP public="1" get="inline" set="null" expr="33" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33</e></m></meta>
		</DOM_VK_PAGE_UP>
		<DOM_VK_PAGE_DOWN public="1" get="inline" set="null" expr="34" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34</e></m></meta>
		</DOM_VK_PAGE_DOWN>
		<DOM_VK_END public="1" get="inline" set="null" expr="35" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35</e></m></meta>
		</DOM_VK_END>
		<DOM_VK_HOME public="1" get="inline" set="null" expr="36" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36</e></m></meta>
		</DOM_VK_HOME>
		<DOM_VK_LEFT public="1" get="inline" set="null" expr="37" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37</e></m></meta>
		</DOM_VK_LEFT>
		<DOM_VK_UP public="1" get="inline" set="null" expr="38" line="70" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>38</e></m></meta>
		</DOM_VK_UP>
		<DOM_VK_RIGHT public="1" get="inline" set="null" expr="39" line="71" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>39</e></m></meta>
		</DOM_VK_RIGHT>
		<DOM_VK_DOWN public="1" get="inline" set="null" expr="40" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>40</e></m></meta>
		</DOM_VK_DOWN>
		<DOM_VK_SELECT public="1" get="inline" set="null" expr="41" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>41</e></m></meta>
		</DOM_VK_SELECT>
		<DOM_VK_PRINT public="1" get="inline" set="null" expr="42" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>42</e></m></meta>
		</DOM_VK_PRINT>
		<DOM_VK_EXECUTE public="1" get="inline" set="null" expr="43" line="75" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>43</e></m></meta>
		</DOM_VK_EXECUTE>
		<DOM_VK_PRINTSCREEN public="1" get="inline" set="null" expr="44" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>44</e></m></meta>
		</DOM_VK_PRINTSCREEN>
		<DOM_VK_INSERT public="1" get="inline" set="null" expr="45" line="77" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>45</e></m></meta>
		</DOM_VK_INSERT>
		<DOM_VK_DELETE public="1" get="inline" set="null" expr="46" line="78" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>46</e></m></meta>
		</DOM_VK_DELETE>
		<DOM_VK_0 public="1" get="inline" set="null" expr="48" line="79" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>48</e></m></meta>
		</DOM_VK_0>
		<DOM_VK_1 public="1" get="inline" set="null" expr="49" line="80" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>49</e></m></meta>
		</DOM_VK_1>
		<DOM_VK_2 public="1" get="inline" set="null" expr="50" line="81" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>50</e></m></meta>
		</DOM_VK_2>
		<DOM_VK_3 public="1" get="inline" set="null" expr="51" line="82" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>51</e></m></meta>
		</DOM_VK_3>
		<DOM_VK_4 public="1" get="inline" set="null" expr="52" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>52</e></m></meta>
		</DOM_VK_4>
		<DOM_VK_5 public="1" get="inline" set="null" expr="53" line="84" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>53</e></m></meta>
		</DOM_VK_5>
		<DOM_VK_6 public="1" get="inline" set="null" expr="54" line="85" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>54</e></m></meta>
		</DOM_VK_6>
		<DOM_VK_7 public="1" get="inline" set="null" expr="55" line="86" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>55</e></m></meta>
		</DOM_VK_7>
		<DOM_VK_8 public="1" get="inline" set="null" expr="56" line="87" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>56</e></m></meta>
		</DOM_VK_8>
		<DOM_VK_9 public="1" get="inline" set="null" expr="57" line="88" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>57</e></m></meta>
		</DOM_VK_9>
		<DOM_VK_COLON public="1" get="inline" set="null" expr="58" line="89" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>58</e></m></meta>
		</DOM_VK_COLON>
		<DOM_VK_SEMICOLON public="1" get="inline" set="null" expr="59" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>59</e></m></meta>
		</DOM_VK_SEMICOLON>
		<DOM_VK_LESS_THAN public="1" get="inline" set="null" expr="60" line="91" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>60</e></m></meta>
		</DOM_VK_LESS_THAN>
		<DOM_VK_EQUALS public="1" get="inline" set="null" expr="61" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>61</e></m></meta>
		</DOM_VK_EQUALS>
		<DOM_VK_GREATER_THAN public="1" get="inline" set="null" expr="62" line="93" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>62</e></m></meta>
		</DOM_VK_GREATER_THAN>
		<DOM_VK_QUESTION_MARK public="1" get="inline" set="null" expr="63" line="94" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>63</e></m></meta>
		</DOM_VK_QUESTION_MARK>
		<DOM_VK_AT public="1" get="inline" set="null" expr="64" line="95" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>64</e></m></meta>
		</DOM_VK_AT>
		<DOM_VK_A public="1" get="inline" set="null" expr="65" line="96" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>65</e></m></meta>
		</DOM_VK_A>
		<DOM_VK_B public="1" get="inline" set="null" expr="66" line="97" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>66</e></m></meta>
		</DOM_VK_B>
		<DOM_VK_C public="1" get="inline" set="null" expr="67" line="98" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>67</e></m></meta>
		</DOM_VK_C>
		<DOM_VK_D public="1" get="inline" set="null" expr="68" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>68</e></m></meta>
		</DOM_VK_D>
		<DOM_VK_E public="1" get="inline" set="null" expr="69" line="100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>69</e></m></meta>
		</DOM_VK_E>
		<DOM_VK_F public="1" get="inline" set="null" expr="70" line="101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>70</e></m></meta>
		</DOM_VK_F>
		<DOM_VK_G public="1" get="inline" set="null" expr="71" line="102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>71</e></m></meta>
		</DOM_VK_G>
		<DOM_VK_H public="1" get="inline" set="null" expr="72" line="103" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>72</e></m></meta>
		</DOM_VK_H>
		<DOM_VK_I public="1" get="inline" set="null" expr="73" line="104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>73</e></m></meta>
		</DOM_VK_I>
		<DOM_VK_J public="1" get="inline" set="null" expr="74" line="105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>74</e></m></meta>
		</DOM_VK_J>
		<DOM_VK_K public="1" get="inline" set="null" expr="75" line="106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>75</e></m></meta>
		</DOM_VK_K>
		<DOM_VK_L public="1" get="inline" set="null" expr="76" line="107" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>76</e></m></meta>
		</DOM_VK_L>
		<DOM_VK_M public="1" get="inline" set="null" expr="77" line="108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>77</e></m></meta>
		</DOM_VK_M>
		<DOM_VK_N public="1" get="inline" set="null" expr="78" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>78</e></m></meta>
		</DOM_VK_N>
		<DOM_VK_O public="1" get="inline" set="null" expr="79" line="110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>79</e></m></meta>
		</DOM_VK_O>
		<DOM_VK_P public="1" get="inline" set="null" expr="80" line="111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>80</e></m></meta>
		</DOM_VK_P>
		<DOM_VK_Q public="1" get="inline" set="null" expr="81" line="112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>81</e></m></meta>
		</DOM_VK_Q>
		<DOM_VK_R public="1" get="inline" set="null" expr="82" line="113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>82</e></m></meta>
		</DOM_VK_R>
		<DOM_VK_S public="1" get="inline" set="null" expr="83" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>83</e></m></meta>
		</DOM_VK_S>
		<DOM_VK_T public="1" get="inline" set="null" expr="84" line="115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>84</e></m></meta>
		</DOM_VK_T>
		<DOM_VK_U public="1" get="inline" set="null" expr="85" line="116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>85</e></m></meta>
		</DOM_VK_U>
		<DOM_VK_V public="1" get="inline" set="null" expr="86" line="117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>86</e></m></meta>
		</DOM_VK_V>
		<DOM_VK_W public="1" get="inline" set="null" expr="87" line="118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>87</e></m></meta>
		</DOM_VK_W>
		<DOM_VK_X public="1" get="inline" set="null" expr="88" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>88</e></m></meta>
		</DOM_VK_X>
		<DOM_VK_Y public="1" get="inline" set="null" expr="89" line="120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>89</e></m></meta>
		</DOM_VK_Y>
		<DOM_VK_Z public="1" get="inline" set="null" expr="90" line="121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>90</e></m></meta>
		</DOM_VK_Z>
		<DOM_VK_WIN public="1" get="inline" set="null" expr="91" line="122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>91</e></m></meta>
		</DOM_VK_WIN>
		<DOM_VK_CONTEXT_MENU public="1" get="inline" set="null" expr="93" line="123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>93</e></m></meta>
		</DOM_VK_CONTEXT_MENU>
		<DOM_VK_SLEEP public="1" get="inline" set="null" expr="95" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>95</e></m></meta>
		</DOM_VK_SLEEP>
		<DOM_VK_NUMPAD0 public="1" get="inline" set="null" expr="96" line="125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>96</e></m></meta>
		</DOM_VK_NUMPAD0>
		<DOM_VK_NUMPAD1 public="1" get="inline" set="null" expr="97" line="126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>97</e></m></meta>
		</DOM_VK_NUMPAD1>
		<DOM_VK_NUMPAD2 public="1" get="inline" set="null" expr="98" line="127" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>98</e></m></meta>
		</DOM_VK_NUMPAD2>
		<DOM_VK_NUMPAD3 public="1" get="inline" set="null" expr="99" line="128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>99</e></m></meta>
		</DOM_VK_NUMPAD3>
		<DOM_VK_NUMPAD4 public="1" get="inline" set="null" expr="100" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>100</e></m></meta>
		</DOM_VK_NUMPAD4>
		<DOM_VK_NUMPAD5 public="1" get="inline" set="null" expr="101" line="130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>101</e></m></meta>
		</DOM_VK_NUMPAD5>
		<DOM_VK_NUMPAD6 public="1" get="inline" set="null" expr="102" line="131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>102</e></m></meta>
		</DOM_VK_NUMPAD6>
		<DOM_VK_NUMPAD7 public="1" get="inline" set="null" expr="103" line="132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>103</e></m></meta>
		</DOM_VK_NUMPAD7>
		<DOM_VK_NUMPAD8 public="1" get="inline" set="null" expr="104" line="133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>104</e></m></meta>
		</DOM_VK_NUMPAD8>
		<DOM_VK_NUMPAD9 public="1" get="inline" set="null" expr="105" line="134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>105</e></m></meta>
		</DOM_VK_NUMPAD9>
		<DOM_VK_MULTIPLY public="1" get="inline" set="null" expr="106" line="135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>106</e></m></meta>
		</DOM_VK_MULTIPLY>
		<DOM_VK_ADD public="1" get="inline" set="null" expr="107" line="136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>107</e></m></meta>
		</DOM_VK_ADD>
		<DOM_VK_SEPARATOR public="1" get="inline" set="null" expr="108" line="137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>108</e></m></meta>
		</DOM_VK_SEPARATOR>
		<DOM_VK_SUBTRACT public="1" get="inline" set="null" expr="109" line="138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>109</e></m></meta>
		</DOM_VK_SUBTRACT>
		<DOM_VK_DECIMAL public="1" get="inline" set="null" expr="110" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>110</e></m></meta>
		</DOM_VK_DECIMAL>
		<DOM_VK_DIVIDE public="1" get="inline" set="null" expr="111" line="140" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>111</e></m></meta>
		</DOM_VK_DIVIDE>
		<DOM_VK_F1 public="1" get="inline" set="null" expr="112" line="141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>112</e></m></meta>
		</DOM_VK_F1>
		<DOM_VK_F2 public="1" get="inline" set="null" expr="113" line="142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>113</e></m></meta>
		</DOM_VK_F2>
		<DOM_VK_F3 public="1" get="inline" set="null" expr="114" line="143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>114</e></m></meta>
		</DOM_VK_F3>
		<DOM_VK_F4 public="1" get="inline" set="null" expr="115" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>115</e></m></meta>
		</DOM_VK_F4>
		<DOM_VK_F5 public="1" get="inline" set="null" expr="116" line="145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>116</e></m></meta>
		</DOM_VK_F5>
		<DOM_VK_F6 public="1" get="inline" set="null" expr="117" line="146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>117</e></m></meta>
		</DOM_VK_F6>
		<DOM_VK_F7 public="1" get="inline" set="null" expr="118" line="147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>118</e></m></meta>
		</DOM_VK_F7>
		<DOM_VK_F8 public="1" get="inline" set="null" expr="119" line="148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>119</e></m></meta>
		</DOM_VK_F8>
		<DOM_VK_F9 public="1" get="inline" set="null" expr="120" line="149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>120</e></m></meta>
		</DOM_VK_F9>
		<DOM_VK_F10 public="1" get="inline" set="null" expr="121" line="150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>121</e></m></meta>
		</DOM_VK_F10>
		<DOM_VK_F11 public="1" get="inline" set="null" expr="122" line="151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>122</e></m></meta>
		</DOM_VK_F11>
		<DOM_VK_F12 public="1" get="inline" set="null" expr="123" line="152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>123</e></m></meta>
		</DOM_VK_F12>
		<DOM_VK_F13 public="1" get="inline" set="null" expr="124" line="153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>124</e></m></meta>
		</DOM_VK_F13>
		<DOM_VK_F14 public="1" get="inline" set="null" expr="125" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>125</e></m></meta>
		</DOM_VK_F14>
		<DOM_VK_F15 public="1" get="inline" set="null" expr="126" line="155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>126</e></m></meta>
		</DOM_VK_F15>
		<DOM_VK_F16 public="1" get="inline" set="null" expr="127" line="156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>127</e></m></meta>
		</DOM_VK_F16>
		<DOM_VK_F17 public="1" get="inline" set="null" expr="128" line="157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>128</e></m></meta>
		</DOM_VK_F17>
		<DOM_VK_F18 public="1" get="inline" set="null" expr="129" line="158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>129</e></m></meta>
		</DOM_VK_F18>
		<DOM_VK_F19 public="1" get="inline" set="null" expr="130" line="159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>130</e></m></meta>
		</DOM_VK_F19>
		<DOM_VK_F20 public="1" get="inline" set="null" expr="131" line="160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>131</e></m></meta>
		</DOM_VK_F20>
		<DOM_VK_F21 public="1" get="inline" set="null" expr="132" line="161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>132</e></m></meta>
		</DOM_VK_F21>
		<DOM_VK_F22 public="1" get="inline" set="null" expr="133" line="162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>133</e></m></meta>
		</DOM_VK_F22>
		<DOM_VK_F23 public="1" get="inline" set="null" expr="134" line="163" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>134</e></m></meta>
		</DOM_VK_F23>
		<DOM_VK_F24 public="1" get="inline" set="null" expr="135" line="164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>135</e></m></meta>
		</DOM_VK_F24>
		<DOM_VK_NUM_LOCK public="1" get="inline" set="null" expr="144" line="165" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>144</e></m></meta>
		</DOM_VK_NUM_LOCK>
		<DOM_VK_SCROLL_LOCK public="1" get="inline" set="null" expr="145" line="166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>145</e></m></meta>
		</DOM_VK_SCROLL_LOCK>
		<DOM_VK_WIN_OEM_FJ_JISHO public="1" get="inline" set="null" expr="146" line="167" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>146</e></m></meta>
		</DOM_VK_WIN_OEM_FJ_JISHO>
		<DOM_VK_WIN_OEM_FJ_MASSHOU public="1" get="inline" set="null" expr="147" line="168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>147</e></m></meta>
		</DOM_VK_WIN_OEM_FJ_MASSHOU>
		<DOM_VK_WIN_OEM_FJ_TOUROKU public="1" get="inline" set="null" expr="148" line="169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>148</e></m></meta>
		</DOM_VK_WIN_OEM_FJ_TOUROKU>
		<DOM_VK_WIN_OEM_FJ_LOYA public="1" get="inline" set="null" expr="149" line="170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>149</e></m></meta>
		</DOM_VK_WIN_OEM_FJ_LOYA>
		<DOM_VK_WIN_OEM_FJ_ROYA public="1" get="inline" set="null" expr="150" line="171" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>150</e></m></meta>
		</DOM_VK_WIN_OEM_FJ_ROYA>
		<DOM_VK_CIRCUMFLEX public="1" get="inline" set="null" expr="160" line="172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>160</e></m></meta>
		</DOM_VK_CIRCUMFLEX>
		<DOM_VK_EXCLAMATION public="1" get="inline" set="null" expr="161" line="173" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>161</e></m></meta>
		</DOM_VK_EXCLAMATION>
		<DOM_VK_DOUBLE_QUOTE public="1" get="inline" set="null" expr="162" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>162</e></m></meta>
		</DOM_VK_DOUBLE_QUOTE>
		<DOM_VK_HASH public="1" get="inline" set="null" expr="163" line="175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>163</e></m></meta>
		</DOM_VK_HASH>
		<DOM_VK_DOLLAR public="1" get="inline" set="null" expr="164" line="176" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>164</e></m></meta>
		</DOM_VK_DOLLAR>
		<DOM_VK_PERCENT public="1" get="inline" set="null" expr="165" line="177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>165</e></m></meta>
		</DOM_VK_PERCENT>
		<DOM_VK_AMPERSAND public="1" get="inline" set="null" expr="166" line="178" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>166</e></m></meta>
		</DOM_VK_AMPERSAND>
		<DOM_VK_UNDERSCORE public="1" get="inline" set="null" expr="167" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>167</e></m></meta>
		</DOM_VK_UNDERSCORE>
		<DOM_VK_OPEN_PAREN public="1" get="inline" set="null" expr="168" line="180" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>168</e></m></meta>
		</DOM_VK_OPEN_PAREN>
		<DOM_VK_CLOSE_PAREN public="1" get="inline" set="null" expr="169" line="181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>169</e></m></meta>
		</DOM_VK_CLOSE_PAREN>
		<DOM_VK_ASTERISK public="1" get="inline" set="null" expr="170" line="182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>170</e></m></meta>
		</DOM_VK_ASTERISK>
		<DOM_VK_PLUS public="1" get="inline" set="null" expr="171" line="183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>171</e></m></meta>
		</DOM_VK_PLUS>
		<DOM_VK_PIPE public="1" get="inline" set="null" expr="172" line="184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>172</e></m></meta>
		</DOM_VK_PIPE>
		<DOM_VK_HYPHEN_MINUS public="1" get="inline" set="null" expr="173" line="185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>173</e></m></meta>
		</DOM_VK_HYPHEN_MINUS>
		<DOM_VK_OPEN_CURLY_BRACKET public="1" get="inline" set="null" expr="174" line="186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>174</e></m></meta>
		</DOM_VK_OPEN_CURLY_BRACKET>
		<DOM_VK_CLOSE_CURLY_BRACKET public="1" get="inline" set="null" expr="175" line="187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>175</e></m></meta>
		</DOM_VK_CLOSE_CURLY_BRACKET>
		<DOM_VK_TILDE public="1" get="inline" set="null" expr="176" line="188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>176</e></m></meta>
		</DOM_VK_TILDE>
		<DOM_VK_VOLUME_MUTE public="1" get="inline" set="null" expr="181" line="189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>181</e></m></meta>
		</DOM_VK_VOLUME_MUTE>
		<DOM_VK_VOLUME_DOWN public="1" get="inline" set="null" expr="182" line="190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>182</e></m></meta>
		</DOM_VK_VOLUME_DOWN>
		<DOM_VK_VOLUME_UP public="1" get="inline" set="null" expr="183" line="191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>183</e></m></meta>
		</DOM_VK_VOLUME_UP>
		<DOM_VK_COMMA public="1" get="inline" set="null" expr="188" line="192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>188</e></m></meta>
		</DOM_VK_COMMA>
		<DOM_VK_PERIOD public="1" get="inline" set="null" expr="190" line="193" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>190</e></m></meta>
		</DOM_VK_PERIOD>
		<DOM_VK_SLASH public="1" get="inline" set="null" expr="191" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>191</e></m></meta>
		</DOM_VK_SLASH>
		<DOM_VK_BACK_QUOTE public="1" get="inline" set="null" expr="192" line="195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>192</e></m></meta>
		</DOM_VK_BACK_QUOTE>
		<DOM_VK_OPEN_BRACKET public="1" get="inline" set="null" expr="219" line="196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>219</e></m></meta>
		</DOM_VK_OPEN_BRACKET>
		<DOM_VK_BACK_SLASH public="1" get="inline" set="null" expr="220" line="197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>220</e></m></meta>
		</DOM_VK_BACK_SLASH>
		<DOM_VK_CLOSE_BRACKET public="1" get="inline" set="null" expr="221" line="198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>221</e></m></meta>
		</DOM_VK_CLOSE_BRACKET>
		<DOM_VK_QUOTE public="1" get="inline" set="null" expr="222" line="199" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>222</e></m></meta>
		</DOM_VK_QUOTE>
		<DOM_VK_META public="1" get="inline" set="null" expr="224" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>224</e></m></meta>
		</DOM_VK_META>
		<DOM_VK_ALTGR public="1" get="inline" set="null" expr="225" line="201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>225</e></m></meta>
		</DOM_VK_ALTGR>
		<DOM_VK_WIN_ICO_HELP public="1" get="inline" set="null" expr="227" line="202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>227</e></m></meta>
		</DOM_VK_WIN_ICO_HELP>
		<DOM_VK_WIN_ICO_00 public="1" get="inline" set="null" expr="228" line="203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>228</e></m></meta>
		</DOM_VK_WIN_ICO_00>
		<DOM_VK_WIN_ICO_CLEAR public="1" get="inline" set="null" expr="230" line="204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>230</e></m></meta>
		</DOM_VK_WIN_ICO_CLEAR>
		<DOM_VK_WIN_OEM_RESET public="1" get="inline" set="null" expr="233" line="205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>233</e></m></meta>
		</DOM_VK_WIN_OEM_RESET>
		<DOM_VK_WIN_OEM_JUMP public="1" get="inline" set="null" expr="234" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>234</e></m></meta>
		</DOM_VK_WIN_OEM_JUMP>
		<DOM_VK_WIN_OEM_PA1 public="1" get="inline" set="null" expr="235" line="207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>235</e></m></meta>
		</DOM_VK_WIN_OEM_PA1>
		<DOM_VK_WIN_OEM_PA2 public="1" get="inline" set="null" expr="236" line="208" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>236</e></m></meta>
		</DOM_VK_WIN_OEM_PA2>
		<DOM_VK_WIN_OEM_PA3 public="1" get="inline" set="null" expr="237" line="209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>237</e></m></meta>
		</DOM_VK_WIN_OEM_PA3>
		<DOM_VK_WIN_OEM_WSCTRL public="1" get="inline" set="null" expr="238" line="210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>238</e></m></meta>
		</DOM_VK_WIN_OEM_WSCTRL>
		<DOM_VK_WIN_OEM_CUSEL public="1" get="inline" set="null" expr="239" line="211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>239</e></m></meta>
		</DOM_VK_WIN_OEM_CUSEL>
		<DOM_VK_WIN_OEM_ATTN public="1" get="inline" set="null" expr="240" line="212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>240</e></m></meta>
		</DOM_VK_WIN_OEM_ATTN>
		<DOM_VK_WIN_OEM_FINISH public="1" get="inline" set="null" expr="241" line="213" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>241</e></m></meta>
		</DOM_VK_WIN_OEM_FINISH>
		<DOM_VK_WIN_OEM_COPY public="1" get="inline" set="null" expr="242" line="214" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>242</e></m></meta>
		</DOM_VK_WIN_OEM_COPY>
		<DOM_VK_WIN_OEM_AUTO public="1" get="inline" set="null" expr="243" line="215" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>243</e></m></meta>
		</DOM_VK_WIN_OEM_AUTO>
		<DOM_VK_WIN_OEM_ENLW public="1" get="inline" set="null" expr="244" line="216" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>244</e></m></meta>
		</DOM_VK_WIN_OEM_ENLW>
		<DOM_VK_WIN_OEM_BACKTAB public="1" get="inline" set="null" expr="245" line="217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>245</e></m></meta>
		</DOM_VK_WIN_OEM_BACKTAB>
		<DOM_VK_ATTN public="1" get="inline" set="null" expr="246" line="218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>246</e></m></meta>
		</DOM_VK_ATTN>
		<DOM_VK_CRSEL public="1" get="inline" set="null" expr="247" line="219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>247</e></m></meta>
		</DOM_VK_CRSEL>
		<DOM_VK_EXSEL public="1" get="inline" set="null" expr="248" line="220" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>248</e></m></meta>
		</DOM_VK_EXSEL>
		<DOM_VK_EREOF public="1" get="inline" set="null" expr="249" line="221" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>249</e></m></meta>
		</DOM_VK_EREOF>
		<DOM_VK_PLAY public="1" get="inline" set="null" expr="250" line="222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>250</e></m></meta>
		</DOM_VK_PLAY>
		<DOM_VK_ZOOM public="1" get="inline" set="null" expr="251" line="223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>251</e></m></meta>
		</DOM_VK_ZOOM>
		<DOM_VK_PA1 public="1" get="inline" set="null" expr="253" line="224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>253</e></m></meta>
		</DOM_VK_PA1>
		<DOM_VK_WIN_OEM_CLEAR public="1" get="inline" set="null" expr="254" line="225" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>254</e></m></meta>
		</DOM_VK_WIN_OEM_CLEAR>
		<charCode public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `Number` representing the Unicode reference number of the key; this attribute is used only by the `keypress` event. For keys whose `char` attribute contains multiple characters, this is the Unicode value of the first character in that attribute. In Firefox 26 this returns codes for printable characters.
		 Warning: This attribute is deprecated; you should use `KeyboardEvent.key` instead, if available.</haxe_doc>
		</charCode>
		<keyCode public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `Number` representing a system and implementation dependent numerical code identifying the unmodified value of the pressed key.
		 Warning: This attribute is deprecated; you should use `KeyboardEvent.key` instead, if available.</haxe_doc>
		</keyCode>
		<altKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the Alt ( Option or ⌥ on OS X) key was active when the key event was generated.</haxe_doc>
		</altKey>
		<ctrlKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the Ctrl key was active when the key event was generated.</haxe_doc>
		</ctrlKey>
		<shiftKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the Shift key was active when the key event was generated.</haxe_doc>
		</shiftKey>
		<metaKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the Meta key (on Mac keyboards, the ⌘ Command key; on Windows keyboards, the Windows key (⊞)) was active when the key event was generated.</haxe_doc>
		</metaKey>
		<location public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `Number` representing the location of the key on the keyboard or other input device.</haxe_doc>
		</location>
		<repeat public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the key is being held down such that it is automatically repeating.</haxe_doc>
		</repeat>
		<isComposing public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that is `true` if the event is fired between after `compositionstart` and before `compositionend`.</haxe_doc>
		</isComposing>
		<key public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing the key value of the key represented by the event.</haxe_doc>
		</key>
		<getModifierState public="1" set="method">
			<f a="key">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns a `Boolean` indicating if the modifier key, like Alt, Shift, Ctrl, or Meta, was pressed when the event was created.</haxe_doc>
		</getModifierState>
		<initKeyEvent public="1" set="method">
			<f a="type:canBubble:cancelable:view:ctrlKey:altKey:shiftKey:metaKey:keyCode:charCode">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="js.html.Window"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Initializes a `KeyboardEvent` object. This has only been implemented by Gecko (others used `KeyboardEvent.initKeyboardEvent()`) and should not be used any more. The standard modern way is to use the `KeyboardEvent.KeyboardEvent` constructor.</haxe_doc>
		</initKeyEvent>
		<new public="1" set="method">
			<f a="typeArg:?keyboardEventInitDict">
				<c path="String"/>
				<t path="js.html.KeyboardEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[`KeyboardEvent` objects describe a user interaction with the keyboard. Each event describes a key; the event type (`keydown`, `keypress`, or `keyup`) identifies what kind of activity was performed.

	Documentation [KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"KeyboardEvent"</e></m></meta>
	</class>
	<typedef path="js.html.KeyboardEventInit" params="" file="/usr/local/lib/haxe/std/js/html/KeyboardEventInit.hx"><a>
	<which>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</which>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<shiftKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</shiftKey>
	<repeat>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</repeat>
	<modifierSymbolLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbolLock>
	<modifierSymbol>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbol>
	<modifierScrollLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierScrollLock>
	<modifierOS>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierOS>
	<modifierNumLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierNumLock>
	<modifierFnLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFnLock>
	<modifierFn>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFn>
	<modifierCapsLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierCapsLock>
	<modifierAltGraph>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierAltGraph>
	<metaKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</metaKey>
	<location>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</location>
	<keyCode>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</keyCode>
	<key>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</key>
	<isComposing>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</isComposing>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<ctrlKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</ctrlKey>
	<code>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</code>
	<charCode>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</charCode>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
	<altKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</altKey>
</a></typedef>
	<class path="js.html.KeyframeEffectReadOnly" params="" file="/usr/local/lib/haxe/std/js/html/KeyframeEffectReadOnly.hx" extern="1">
		<extends path="js.html.AnimationEffectReadOnly"/>
		<target public="1" set="null">
			<x path="haxe.extern.EitherType">
				<c path="js.html.Element"/>
				<c path="js.html.CSSPseudoElement"/>
			</x>
			<haxe_doc>The element or pseudo-element being animated by this object. This may be `null` for animations that do not target a specific element.</haxe_doc>
		</target>
		<iterationComposite public="1" set="null">
			<x path="js.html.IterationCompositeOperation"/>
			<haxe_doc>The iteration composite operation for resolving the property value changes of this keyframe effect.</haxe_doc>
		</iterationComposite>
		<composite public="1" set="null">
			<x path="js.html.CompositeOperation"/>
			<haxe_doc>The composite operation property for resolving the property value changes between this and other keyframe effects.</haxe_doc>
		</composite>
		<spacing public="1" set="null">
			<c path="String"/>
			<haxe_doc>The temporal spacing of the keyframe effect's iterations</haxe_doc>
		</spacing>
		<getFrames public="1" set="method">
			<f a=""><c path="Array"><d/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getFrames>
		<new public="1" set="method">
			<f a="target:frames:?options">
				<x path="haxe.extern.EitherType">
					<c path="js.html.Element"/>
					<c path="js.html.CSSPseudoElement"/>
				</x>
				<d/>
				<x path="haxe.extern.EitherType">
					<x path="Float"/>
					<d/>
				</x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `KeyframeEffectReadOnly` interface of the Web Animations API describes sets of animatable properties and values that can be played using the `Animation.Animation()` constructor, and which are inherited by `KeyframeEffect`.

	Documentation [KeyframeEffectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly>]]></haxe_doc>
		<meta><m n=":native"><e>"KeyframeEffectReadOnly"</e></m></meta>
	</class>
	<class path="js.html.LIElement" params="" file="/usr/local/lib/haxe/std/js/html/LIElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<value public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` indicating the ordinal position of the list element inside a given `ol`. It reflects the `value` attribute of the HTML `li` element, and can be smaller than `0`. If the `li` element is not a child of an `ol` element, the property has no meaning.</haxe_doc>
		</value>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the type of the bullets, `"disc"`, `"square"` or `"circle"`. As the standard way of defining the list type is via the CSS `list-style-type` property, use the CSSOM methods to set it via a script.</haxe_doc>
		</type>
		<haxe_doc><![CDATA[The `HTMLLIElement` interface expose specific properties and methods (beyond those defined by regular `HTMLElement` interface it also has available to it by inheritance) for manipulating list elements.

	Documentation [HTMLLIElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLLIElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLIElement"</e></m></meta>
	</class>
	<class path="js.html.LabelElement" params="" file="/usr/local/lib/haxe/std/js/html/LabelElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>Is a `HTMLFormElement` object representing the form with which the labeled control is associated, or `null` if there is no associated control, or if that control isn't associated with a form. In other words, this is just a shortcut for `HTMLLabelElement.control.form`.</haxe_doc>
		</form>
		<htmlFor public="1">
			<c path="String"/>
			<haxe_doc>Is a string containing the ID of the labeled control. This reflects the `for` attribute.</haxe_doc>
		</htmlFor>
		<control public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Is a `HTMLElement` representing the control with which the label is associated.</haxe_doc>
		</control>
		<haxe_doc><![CDATA[The `HTMLLabelElement` interface gives access to properties specific to `label` elements. It inherits methods and properties from the base `HTMLElement` interface.

	Documentation [HTMLLabelElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLabelElement"</e></m></meta>
	</class>
	<class path="js.html.LegendElement" params="" file="/usr/local/lib/haxe/std/js/html/LegendElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<form public="1" set="null"><c path="js.html.FormElement"/></form>
		<align public="1"><c path="String"/></align>
		<haxe_doc><![CDATA[The `HTMLLegendElement` is an interface allowing to access properties of the `legend` elements. It inherits properties and methods from the `HTMLElement` interface.

	Documentation [HTMLLegendElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLLegendElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLegendElement"</e></m></meta>
	</class>
	<class path="js.html.LinkElement" params="" file="/usr/local/lib/haxe/std/js/html/LinkElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` which represents whether the link is disabled; currently only used with style sheet links.</haxe_doc>
		</disabled>
		<href public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the URI for the target resource.</haxe_doc>
		</href>
		<crossOrigin public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that corresponds to the CORS setting for this link element. See CORS settings attributes for details.</haxe_doc>
		</crossOrigin>
		<rel public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the forward relationship of the linked resource from the document to the resource.</haxe_doc>
		</rel>
		<relList public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Is a `DOMTokenList` that reflects the `rel` HTML attribute, as a list of tokens.</haxe_doc>
		</relList>
		<media public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing a list of one or more media formats to which the resource applies.</haxe_doc>
		</media>
		<hreflang public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the language code for the linked resource.</haxe_doc>
		</hreflang>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the MIME type of the linked resource.</haxe_doc>
		</type>
		<sizes public="1" set="null">
			<c path="js.html.DOMTokenList"/>
			<haxe_doc>Is a `DOMSettableTokenList` that reflects the `sizes` HTML attribute, as a list of tokens.</haxe_doc>
		</sizes>
		<charset public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the character encoding for the target resource.</haxe_doc>
		</charset>
		<rev public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the reverse relationship of the linked resource from the resource to the document.</haxe_doc>
		</rev>
		<target public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the name of the target frame to which the resource applies.</haxe_doc>
		</target>
		<import_ public="1" set="null">
			<c path="js.html.HTMLDocument"/>
			<meta><m n=":native"><e>"import"</e></m></meta>
		</import_>
		<integrity public="1"><c path="String"/></integrity>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<haxe_doc><![CDATA[The `HTMLLinkElement` interface represents reference information for external resources and the relationship of those resources to a document and vice-versa. This object inherits all of the properties and methods of the `HTMLElement` interface.

	Documentation [HTMLLinkElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLLinkElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLLinkElement"</e></m></meta>
	</class>
	<class path="js.html.Location" params="" file="/usr/local/lib/haxe/std/js/html/Location.hx" extern="1">
		<href public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the entire URL. If changed, the associated document navigates to the new page. It can be set from a different origin than the associated document.</haxe_doc>
		</href>
		<origin public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` containing the canonical form of the origin of the specific location.</haxe_doc>
		</origin>
		<protocol public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the protocol scheme of the URL, including the final `':'`.</haxe_doc>
		</protocol>
		<host public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the host, that is the hostname, a `':'`, and the port of the URL.</haxe_doc>
		</host>
		<hostname public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the domain of the URL.</haxe_doc>
		</hostname>
		<port public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the port number of the URL.</haxe_doc>
		</port>
		<pathname public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing an initial `'/'` followed by the path of the URL.</haxe_doc>
		</pathname>
		<search public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a `'?'` followed by the parameters of the URL. Also known as "querystring".</haxe_doc>
		</search>
		<hash public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a `'#'` followed by the fragment identifier of the URL.</haxe_doc>
		</hash>
		<assign public="1" set="method">
			<f a="url">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</assign>
		<replace public="1" set="method">
			<f a="url">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</replace>
		<reload public="1" set="method">
			<f a="?forceget" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ forceget : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</reload>
		<toString public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>Returns a string containing the whole URL.</haxe_doc>
		</toString>
		<haxe_doc><![CDATA[The `Location` interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the `Document` and `Window` interface have such a linked `Location`, accessible via `Document.location` and `Window.location` respectively.

	Documentation [Location](https://developer.mozilla.org/en-US/docs/Web/API/Location) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Location$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Location>]]></haxe_doc>
		<meta><m n=":native"><e>"Location"</e></m></meta>
	</class>
	<class path="js.html.MapElement" params="" file="/usr/local/lib/haxe/std/js/html/MapElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the `map` element for referencing it other context. If the `id` attribute is set, this must have the same value; and it cannot be `null` or empty.</haxe_doc>
		</name>
		<areas public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Is a live `HTMLCollection` representing the `area` elements associated to this `map`.</haxe_doc>
		</areas>
		<haxe_doc><![CDATA[The `HTMLMapElement` interface provides special properties and methods (beyond those of the regular object `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements.

	Documentation [HTMLMapElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMapElement"</e></m></meta>
	</class>
	<class path="js.html.MediaError" params="" file="/usr/local/lib/haxe/std/js/html/MediaError.hx" extern="1">
		<MEDIA_ERR_ABORTED public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</MEDIA_ERR_ABORTED>
		<MEDIA_ERR_NETWORK public="1" get="inline" set="null" expr="2" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</MEDIA_ERR_NETWORK>
		<MEDIA_ERR_DECODE public="1" get="inline" set="null" expr="3" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</MEDIA_ERR_DECODE>
		<MEDIA_ERR_SRC_NOT_SUPPORTED public="1" get="inline" set="null" expr="4" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</MEDIA_ERR_SRC_NOT_SUPPORTED>
		<code public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[An <code>unsigned short </code> that represents the error:
		 <table class="standard-table">
		  
		   <tr>
		    Name
		    Value
		    Description
		   </tr>
		  
		  
		   <tr>
		    <td><code>MEDIA_ERR_ABORTED</code></td>
		    <td><code>1</code></td>
		    <td>The fetching of the associated ressource has been aborted by the user</td>
		   </tr>
		   <tr>
		    <td><code>MEDIA_ERR_NETWORK</code></td>
		    <td><code>2</code></td>
		    <td>A network error caused the ressource to stop being fetched.</td>
		   </tr>
		   <tr>
		    <td><code>MEDIA_ERR_DECODE</code></td>
		    <td><code>3</code></td>
		    <td>A decoding error caused the ressource to stop being fetched.</td>
		   </tr>
		   <tr>
		    <td><code>MEDIA_ERR_SRC_NOT_SUPPORTED</code></td>
		    <td><code>4</code></td>
		    <td>The associated ressource has been detected to be not suitable.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</code>
		<haxe_doc><![CDATA[The `MediaError` interface represents an error associated to a media, like a `HTMLMediaElement`.

	Documentation [MediaError](https://developer.mozilla.org/en-US/docs/Web/API/MediaError) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaError$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaError>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaError"</e></m></meta>
	</class>
	<class path="js.html.MediaList" params="" file="/usr/local/lib/haxe/std/js/html/MediaList.hx" extern="1">
		<mediaText public="1"><c path="String"/></mediaText>
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="String"/>
</f></item>
		<deleteMedium public="1" set="method">
			<f a="oldMedium">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteMedium>
		<appendMedium public="1" set="method">
			<f a="newMedium">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</appendMedium>
		<meta><m n=":native"><e>"MediaList"</e></m></meta>
	</class>
	<class path="js.html.MediaQueryList" params="" file="/usr/local/lib/haxe/std/js/html/MediaQueryList.hx" extern="1">
		<media public="1" set="null"><c path="String"/></media>
		<matches public="1" set="null"><x path="Bool"/></matches>
		<addListener public="1" set="method"><f a="listener">
	<f a="">
		<c path="js.html.MediaQueryList"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></addListener>
		<removeListener public="1" set="method"><f a="listener">
	<f a="">
		<c path="js.html.MediaQueryList"/>
		<x path="Void"/>
	</f>
	<x path="Void"/>
</f></removeListener>
		<haxe_doc><![CDATA[A `MediaQueryList` object maintains a list of media queries on a `document`, and handles sending notifications to listeners when the media queries on the document change.

	Documentation [MediaQueryList](https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaQueryList"</e></m></meta>
	</class>
	<class path="js.html.MediaStream" params="" file="/usr/local/lib/haxe/std/js/html/MediaStream.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<id public="1" set="null">
			<c path="String"/>
			<haxe_doc>A `DOMString` containing 36 characters denoting a universally unique identifier (UUID) for the object.</haxe_doc>
		</id>
		<currentTime public="1" set="null"><x path="Float"/></currentTime>
		<getAudioTracks public="1" set="method"><f a=""><c path="Array"><c path="js.html.AudioStreamTrack"/></c></f></getAudioTracks>
		<getVideoTracks public="1" set="method">
			<f a=""><c path="Array"><c path="js.html.VideoStreamTrack"/></c></f>
			<haxe_doc>Returns a list of the `MediaStreamTrack` objects stored in the `MediaStream` object that have their `kind` attribute set to `"video"`. The order is not defined, and may not only vary from one browser to another, but also from one call to another.</haxe_doc>
		</getVideoTracks>
		<getTracks public="1" set="method">
			<f a=""><c path="Array"><c path="js.html.MediaStreamTrack"/></c></f>
			<haxe_doc>Returns a list of all `MediaStreamTrack` objects stored in the `MediaStream` object, regardless of the value of the `kind` attribute. The order is not defined, and may not only vary from one browser to another, but also from one call to another.</haxe_doc>
		</getTracks>
		<addTrack public="1" set="method">
			<f a="track">
				<c path="js.html.MediaStreamTrack"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Stores a copy of the `MediaStreamTrack` given as argument. If the track has already been added to the `MediaStream` object, nothing happens.</haxe_doc>
		</addTrack>
		<removeTrack public="1" set="method">
			<f a="track">
				<c path="js.html.MediaStreamTrack"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes the `MediaStreamTrack` given as argument. If the track is not part of the MediaStream` object, nothing happens.</haxe_doc>
		</removeTrack>
		<new public="1" set="method">
			<f a="tracks">
				<c path="Array"><c path="js.html.MediaStreamTrack"/></c>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="stream">
						<c path="js.html.MediaStream"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[The `MediaStream` interface represents a stream of media content. A stream consists of several tracks such as video or audio tracks. Each track is specified as an instance of `MediaStreamTrack`.

	Documentation [MediaStream](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaStream$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaStream>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaStream"</e></m></meta>
	</class>
	<typedef path="js.html.MediaTrackConstraintSet" params="" file="/usr/local/lib/haxe/std/js/html/MediaTrackConstraintSet.hx"><a>
	<width>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</width>
	<viewportWidth>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</viewportWidth>
	<viewportOffsetY>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</viewportOffsetY>
	<viewportOffsetX>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</viewportOffsetX>
	<viewportHeight>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</viewportHeight>
	<scrollWithPage>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</scrollWithPage>
	<mediaSource>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</mediaSource>
	<height>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</height>
	<frameRate>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Float"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</frameRate>
	<facingMode>
		<x path="Null"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="Array"><c path="String"/></c>
		<d/>
	</x>
</x></x>
		<meta><m n=":optional"/></meta>
	</facingMode>
	<echoCancellation>
		<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Bool"/>
	<d/>
</x></x>
		<meta><m n=":optional"/></meta>
	</echoCancellation>
	<deviceId>
		<x path="Null"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="Array"><c path="String"/></c>
		<d/>
	</x>
</x></x>
		<meta><m n=":optional"/></meta>
	</deviceId>
	<browserWindow>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</browserWindow>
</a></typedef>
	<typedef path="js.html.MediaTrackConstraints" params="" file="/usr/local/lib/haxe/std/js/html/MediaTrackConstraints.hx">
		<a>
			<width>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</width>
			<viewportWidth>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</viewportWidth>
			<viewportOffsetY>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</viewportOffsetY>
			<viewportOffsetX>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</viewportOffsetX>
			<viewportHeight>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</viewportHeight>
			<scrollWithPage>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
			</scrollWithPage>
			<mediaSource>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
			</mediaSource>
			<height>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</height>
			<frameRate>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Float"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</frameRate>
			<facingMode>
				<x path="Null"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="Array"><c path="String"/></c>
		<d/>
	</x>
</x></x>
				<meta><m n=":optional"/></meta>
			</facingMode>
			<echoCancellation>
				<x path="Null"><x path="haxe.extern.EitherType">
	<x path="Bool"/>
	<d/>
</x></x>
				<meta><m n=":optional"/></meta>
			</echoCancellation>
			<deviceId>
				<x path="Null"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<x path="haxe.extern.EitherType">
		<c path="Array"><c path="String"/></c>
		<d/>
	</x>
</x></x>
				<meta><m n=":optional"/></meta>
			</deviceId>
			<browserWindow>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
			</browserWindow>
			<advanced>
				<x path="Null"><c path="Array"><t path="js.html.MediaTrackConstraintSet"/></c></x>
				<meta><m n=":optional"/></meta>
			</advanced>
		</a>
		<haxe_doc><![CDATA[The `MediaTrackConstraints` dictionary is used to describe a set of capabilities and the value or values each can take on. A constraints dictionary is passed into `applyConstraints()` to allow a script to establish a set of exact (required) values or ranges and/or preferred values or ranges of values for the track, and the most recently-requested set of custom constraints can be retrieved by calling `getConstraints()`.

	Documentation [MediaTrackConstraints](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints>]]></haxe_doc>
	</typedef>
	<class path="js.html.MenuElement" params="" file="/usr/local/lib/haxe/std/js/html/MenuElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<type public="1"><c path="String"/></type>
		<label public="1"><c path="String"/></label>
		<compact public="1"><x path="Bool"/></compact>
		<meta><m n=":native"><e>"HTMLMenuElement"</e></m></meta>
	</class>
	<class path="js.html.MetaElement" params="" file="/usr/local/lib/haxe/std/js/html/MetaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<name public="1"><c path="String"/></name>
		<httpEquiv public="1"><c path="String"/></httpEquiv>
		<content public="1"><c path="String"/></content>
		<scheme public="1"><c path="String"/></scheme>
		<haxe_doc><![CDATA[The `HTMLMetaElement` interface contains descriptive metadata about a document. It inherits all of the properties and methods described in the `HTMLElement` interface.

	Documentation [HTMLMetaElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMetaElement"</e></m></meta>
	</class>
	<class path="js.html.MeterElement" params="" file="/usr/local/lib/haxe/std/js/html/MeterElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<value public="1"><x path="Float"/></value>
		<min public="1"><x path="Float"/></min>
		<max public="1"><x path="Float"/></max>
		<low public="1"><x path="Float"/></low>
		<high public="1"><x path="Float"/></high>
		<optimum public="1"><x path="Float"/></optimum>
		<haxe_doc><![CDATA[The HTML `meter` elements expose the `HTMLMeterElement` interface, which provides special properties and methods (beyond the `HTMLElement` object interface they also have available to them by inheritance) for manipulating the layout and presentation of `meter` elements.

	Documentation [HTMLMeterElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLMeterElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLMeterElement"</e></m></meta>
	</class>
	<class path="js.html.MimeType" params="" file="/usr/local/lib/haxe/std/js/html/MimeType.hx" extern="1">
		<description public="1" set="null"><c path="String"/></description>
		<enabledPlugin public="1" set="null"><c path="js.html.Plugin"/></enabledPlugin>
		<suffixes public="1" set="null"><c path="String"/></suffixes>
		<type public="1" set="null"><c path="String"/></type>
		<meta><m n=":native"><e>"MimeType"</e></m></meta>
	</class>
	<class path="js.html.MimeTypeArray" params="" file="/usr/local/lib/haxe/std/js/html/MimeTypeArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.MimeType"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.MimeType"/>
</f></namedItem>
		<meta><m n=":native"><e>"MimeTypeArray"</e></m></meta>
	</class>
	<class path="js.html.ModElement" params="" file="/usr/local/lib/haxe/std/js/html/ModElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cite public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `cite` HTML attribute, containing a URI of a resource explaining the change.</haxe_doc>
		</cite>
		<dateTime public="1"><c path="String"/></dateTime>
		<haxe_doc><![CDATA[The `HTMLModElement` interface provides special properties (beyond the regular methods and properties available through the `HTMLElement` interface they also have available to them by inheritance) for manipulating modification elements, that is `del` and `ins`.

	Documentation [HTMLModElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLModElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLModElement"</e></m></meta>
	</class>
	<class path="js.html.MouseEvent" params="" file="/usr/local/lib/haxe/std/js/html/MouseEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<screenX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The X coordinate of the mouse pointer in global (screen) coordinates.</haxe_doc>
		</screenX>
		<screenY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The Y coordinate of the mouse pointer in global (screen) coordinates.</haxe_doc>
		</screenY>
		<clientX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The X coordinate of the mouse pointer in local (DOM content) coordinates.</haxe_doc>
		</clientX>
		<clientY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The Y coordinate of the mouse pointer in local (DOM content) coordinates.</haxe_doc>
		</clientY>
		<offsetX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The X coordinate of the mouse pointer relative to the position of the padding edge of the target node.</haxe_doc>
		</offsetX>
		<offsetY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The Y coordinate of the mouse pointer relative to the position of the padding edge of the target node.</haxe_doc>
		</offsetY>
		<ctrlKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns `true` if the control key was down when the mouse event was fired.</haxe_doc>
		</ctrlKey>
		<shiftKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns `true` if the shift key was down when the mouse event was fired.</haxe_doc>
		</shiftKey>
		<altKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns `true` if the alt key was down when the mouse event was fired.</haxe_doc>
		</altKey>
		<metaKey public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns `true` if the meta key was down when the mouse event was fired.</haxe_doc>
		</metaKey>
		<button public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The button number that was pressed when the mouse event was fired. </haxe_doc>
		</button>
		<buttons public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The buttons being pressed when the mouse event was fired</haxe_doc>
		</buttons>
		<relatedTarget public="1" set="null">
			<c path="js.html.EventTarget"/>
			<haxe_doc>The secondary target for the event, if there is one.</haxe_doc>
		</relatedTarget>
		<region public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the id of the hit region affected by the event. If no hit region is affected, `null` is returned.</haxe_doc>
		</region>
		<movementX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The X coordinate of the mouse pointer relative to the position of the last `mousemove` event.</haxe_doc>
		</movementX>
		<movementY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The Y coordinate of the mouse pointer relative to the position of the last `mousemove` event.</haxe_doc>
		</movementY>
		<initMouseEvent public="1" set="method">
			<f a="typeArg:canBubbleArg:cancelableArg:viewArg:detailArg:screenXArg:screenYArg:clientXArg:clientYArg:ctrlKeyArg:altKeyArg:shiftKeyArg:metaKeyArg:buttonArg:relatedTargetArg">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<c path="js.html.Window"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Int"/>
				<c path="js.html.EventTarget"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Initializes the value of a `MouseEvent` created. If the event has already being dispatched, this method does nothing.</haxe_doc>
		</initMouseEvent>
		<getModifierState public="1" set="method">
			<f a="keyArg">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns the current state of the specified modifier key. See the `KeyboardEvent.getModifierState`() for details.</haxe_doc>
		</getModifierState>
		<initNSMouseEvent public="1" set="method"><f a="typeArg:canBubbleArg:cancelableArg:viewArg:detailArg:screenXArg:screenYArg:clientXArg:clientYArg:ctrlKeyArg:altKeyArg:shiftKeyArg:metaKeyArg:buttonArg:relatedTargetArg:pressure:inputSourceArg">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.Window"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Int"/>
	<c path="js.html.EventTarget"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></initNSMouseEvent>
		<new public="1" set="method">
			<f a="typeArg:?mouseEventInitDict">
				<c path="String"/>
				<t path="js.html.MouseEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `MouseEvent` interface represents events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include `click`, `dblclick`, `mouseup`, `mousedown`.

	Documentation [MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"MouseEvent"</e></m></meta>
	</class>
	<typedef path="js.html.MouseEventInit" params="" file="/usr/local/lib/haxe/std/js/html/MouseEventInit.hx"><a>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<shiftKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</shiftKey>
	<screenY>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</screenY>
	<screenX>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</screenX>
	<relatedTarget>
		<x path="Null"><c path="js.html.EventTarget"/></x>
		<meta><m n=":optional"/></meta>
	</relatedTarget>
	<movementY>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</movementY>
	<movementX>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</movementX>
	<modifierSymbolLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbolLock>
	<modifierSymbol>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbol>
	<modifierScrollLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierScrollLock>
	<modifierOS>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierOS>
	<modifierNumLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierNumLock>
	<modifierFnLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFnLock>
	<modifierFn>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFn>
	<modifierCapsLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierCapsLock>
	<modifierAltGraph>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierAltGraph>
	<metaKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</metaKey>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<ctrlKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</ctrlKey>
	<clientY>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</clientY>
	<clientX>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</clientX>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<buttons>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</buttons>
	<button>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</button>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
	<altKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</altKey>
</a></typedef>
	<class path="js.html.NamedNodeMap" params="" file="/usr/local/lib/haxe/std/js/html/NamedNodeMap.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the amount of objects in the map.</haxe_doc>
		</length>
		<getNamedItem public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>Returns a `Attr`, corresponding to the given name.</haxe_doc>
		</getNamedItem>
		<setNamedItem public="1" set="method">
			<f a="arg">
				<c path="js.html.Attr"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setNamedItem>
		<removeNamedItem public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeNamedItem>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>Returns the `Attr` at the given index, or `null` if the index is higher or equal to the number of nodes.</haxe_doc>
		</item>
		<getNamedItemNS public="1" set="method">
			<f a="namespaceURI:localName">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>Returns a `Attr` identified by a namespace and related local name.</haxe_doc>
		</getNamedItemNS>
		<setNamedItemNS public="1" set="method">
			<f a="arg">
				<c path="js.html.Attr"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setNamedItemNS>
		<removeNamedItemNS public="1" set="method">
			<f a="namespaceURI:localName">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.Attr"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeNamedItemNS>
		<haxe_doc><![CDATA[The `NamedNodeMap` interface represents a collection of `Attr` objects. Objects inside a `NamedNodeMap` are not in any particular order, unlike `NodeList`, although they may be accessed by an index as in an array.

	Documentation [NamedNodeMap](https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap>]]></haxe_doc>
		<meta><m n=":native"><e>"NamedNodeMap"</e></m></meta>
	</class>
	<class path="js.html.Navigator" params="" file="/usr/local/lib/haxe/std/js/html/Navigator.hx" extern="1">
		<permissions public="1" set="null">
			<c path="js.html.Permissions"/>
			<haxe_doc>Returns a `Permissions` object that can be used to query and update permission status of APIs covered by the Permissions API.</haxe_doc>
		</permissions>
		<mimeTypes public="1" set="null"><c path="js.html.MimeTypeArray"/></mimeTypes>
		<plugins public="1" set="null"><c path="js.html.PluginArray"/></plugins>
		<doNotTrack public="1" set="null">
			<c path="String"/>
			<haxe_doc>Reports the value of the user's do-not-track preference. When this value is "yes", your web site or application should not track the user.</haxe_doc>
		</doNotTrack>
		<battery public="1" set="null">
			<c path="js.html.BatteryManager"/>
			<haxe_doc>Returns a `BatteryManager` object you can use to get information about the battery charging status.</haxe_doc>
		</battery>
		<maxTouchPoints public="1" set="null"><x path="Int"/></maxTouchPoints>
		<oscpu public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a string that represents the current operating system.</haxe_doc>
		</oscpu>
		<vendor public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the vendor name of the current browser (e.g., "Netscape6").</haxe_doc>
		</vendor>
		<vendorSub public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the vendor version number (e.g. "6.1").</haxe_doc>
		</vendorSub>
		<productSub public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the build number of the current browser (e.g., "20060909").</haxe_doc>
		</productSub>
		<cookieEnabled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a boolean indicating whether cookies are enabled in the browser or not.</haxe_doc>
		</cookieEnabled>
		<buildID public="1" set="null"><c path="String"/></buildID>
		<hardwareConcurrency public="1" set="null"><x path="Int"/></hardwareConcurrency>
		<geolocation public="1" set="null">
			<c path="js.html.Geolocation"/>
			<haxe_doc>Returns a `Geolocation` object allowing accessing the location of the device.</haxe_doc>
		</geolocation>
		<appCodeName public="1" set="null"><c path="String"/></appCodeName>
		<appName public="1" set="null"><c path="String"/></appName>
		<appVersion public="1" set="null"><c path="String"/></appVersion>
		<platform public="1" set="null"><c path="String"/></platform>
		<userAgent public="1" set="null"><c path="String"/></userAgent>
		<product public="1" set="null"><c path="String"/></product>
		<language public="1" set="null"><c path="String"/></language>
		<languages public="1" set="null"><c path="Array"><c path="String"/></c></languages>
		<onLine public="1" set="null"><x path="Bool"/></onLine>
		<getBattery public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.BatteryManager"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getBattery>
		<vibrate public="1" set="method">
			<f a="pattern">
				<c path="Array"><x path="Int"/></c>
				<x path="Bool"/>
			</f>
			<overloads><vibrate public="1" set="method"><f a="duration">
	<x path="Int"/>
	<x path="Bool"/>
</f></vibrate></overloads>
		</vibrate>
		<javaEnabled public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</javaEnabled>
		<getGamepads public="1" set="method">
			<f a=""><c path="Array"><c path="js.html.Gamepad"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getGamepads>
		<sendBeacon public="1" set="method">
			<f a="url:?data">
				<c path="String"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Blob"/>
						<x path="haxe.extern.EitherType">
							<c path="String"/>
							<c path="js.html.FormData"/>
						</x>
					</x>
				</x>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</sendBeacon>
		<registerProtocolHandler public="1" set="method">
			<f a="scheme:url:title">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</registerProtocolHandler>
		<registerContentHandler public="1" set="method">
			<f a="mimeType:url:title">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</registerContentHandler>
		<taintEnabled public="1" set="method"><f a=""><x path="Bool"/></f></taintEnabled>
		<haxe_doc><![CDATA[The `Navigator` interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.

	Documentation [Navigator](https://developer.mozilla.org/en-US/docs/Web/API/Navigator) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Navigator$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Navigator>]]></haxe_doc>
		<meta><m n=":native"><e>"Navigator"</e></m></meta>
	</class>
	<class path="js.html.NodeFilter" params="" file="/usr/local/lib/haxe/std/js/html/NodeFilter.hx" extern="1">
		<FILTER_ACCEPT public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</FILTER_ACCEPT>
		<FILTER_REJECT public="1" get="inline" set="null" expr="2" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</FILTER_REJECT>
		<FILTER_SKIP public="1" get="inline" set="null" expr="3" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</FILTER_SKIP>
		<SHOW_ALL public="1" get="inline" set="null" expr="cast 4294967295" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>cast 4294967295</e></m></meta>
		</SHOW_ALL>
		<SHOW_ELEMENT public="1" get="inline" set="null" expr="1" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</SHOW_ELEMENT>
		<SHOW_ATTRIBUTE public="1" get="inline" set="null" expr="2" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</SHOW_ATTRIBUTE>
		<SHOW_TEXT public="1" get="inline" set="null" expr="4" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</SHOW_TEXT>
		<SHOW_CDATA_SECTION public="1" get="inline" set="null" expr="8" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</SHOW_CDATA_SECTION>
		<SHOW_ENTITY_REFERENCE public="1" get="inline" set="null" expr="16" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>16</e></m></meta>
		</SHOW_ENTITY_REFERENCE>
		<SHOW_ENTITY public="1" get="inline" set="null" expr="32" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32</e></m></meta>
		</SHOW_ENTITY>
		<SHOW_PROCESSING_INSTRUCTION public="1" get="inline" set="null" expr="64" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>64</e></m></meta>
		</SHOW_PROCESSING_INSTRUCTION>
		<SHOW_COMMENT public="1" get="inline" set="null" expr="128" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>128</e></m></meta>
		</SHOW_COMMENT>
		<SHOW_DOCUMENT public="1" get="inline" set="null" expr="256" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>256</e></m></meta>
		</SHOW_DOCUMENT>
		<SHOW_DOCUMENT_TYPE public="1" get="inline" set="null" expr="512" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>512</e></m></meta>
		</SHOW_DOCUMENT_TYPE>
		<SHOW_DOCUMENT_FRAGMENT public="1" get="inline" set="null" expr="1024" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1024</e></m></meta>
		</SHOW_DOCUMENT_FRAGMENT>
		<SHOW_NOTATION public="1" get="inline" set="null" expr="2048" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2048</e></m></meta>
		</SHOW_NOTATION>
		<acceptNode public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<x path="Int"/>
			</f>
			<haxe_doc><![CDATA[Returns an <code>unsigned short</code> that will be used to tell if a given <code>Node</code> must be accepted or not by the <code>NodeIterator</code> or <code>TreeWalker</code> iteration algorithm. This method is expected to be written by the user of a <code>NodeFilter</code>. Possible return values are:
		 <table class="standard-table">
		  
		   <tr>
		    <td class="header">Constant</td>
		    <td class="header">Description</td>
		   </tr>
		   <tr>
		    <td><code>FILTER_ACCEPT</code></td>
		    <td>Value returned by the <code>NodeFilter.acceptNode()</code> method when a node should be accepted.</td>
		   </tr>
		   <tr>
		    <td><code>FILTER_REJECT</code></td>
		    <td>Value to be returned by the <code>NodeFilter.acceptNode()</code> method when a node should be rejected. For <code>TreeWalker</code>, child nodes are also rejected. For <code>NodeIterator</code>, this flag is synonymous with FILTER_SKIP.</td>
		   </tr>
		   <tr>
		    <td><code>FILTER_SKIP</code></td>
		    <td>Value to be returned by <code>NodeFilter.acceptNode()</code> for nodes to be skipped by the <code>NodeIterator</code> or <code>TreeWalker</code> object. The children of skipped nodes are still considered. This is treated as "skip this node but not its children".</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</acceptNode>
		<haxe_doc><![CDATA[A `NodeFilter` interface represents an object used to filter the nodes in a `NodeIterator` or `TreeWalker`. They don't know anything about the DOM or how to traverse nodes; they just know how to evaluate a single node against the provided filter.

	Documentation [NodeFilter](https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter>]]></haxe_doc>
		<meta><m n=":native"><e>"NodeFilter"</e></m></meta>
	</class>
	<class path="js.html.NodeIterator" params="" file="/usr/local/lib/haxe/std/js/html/NodeIterator.hx" extern="1">
		<root public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` representing the root node as specified when the `NodeIterator` was created.</haxe_doc>
		</root>
		<referenceNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the `Node` to which the iterator is anchored.</haxe_doc>
		</referenceNode>
		<pointerBeforeReferenceNode public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` flag that indicates whether the `NodeIterator` is anchored before, the flag being `true`, or after, the flag being `false`, the anchor node.</haxe_doc>
		</pointerBeforeReferenceNode>
		<whatToShow public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns an <code>unsigned long</code> being a bitmask made of constants describing the types of <code>Node</code> that must to be presented. Non-matching nodes are skipped, but their children may be included, if relevant. The possible values are:
		 <table class="standard-table">
		  
		   <tr>
		    <td class="header">Constant</td>
		    <td class="header">Numerical value</td>
		    <td class="header">Description</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ALL</code></td>
		    <td><code>-1</code> (that is the max value of <code>unsigned long</code>)</td>
		    <td>Shows all nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ATTRIBUTE</code> <em>(deprecated)</em></td>
		    <td><code>2</code></td>
		    <td>Shows attribute <code>Attr</code> nodes. This is meaningful only when creating a <code>NodeIterator</code> with an <code>Attr</code> node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_CDATA_SECTION</code> <em>(deprecated)</em></td>
		    <td><code>8</code></td>
		    <td>Shows <code>CDATASection</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_COMMENT</code></td>
		    <td><code>128</code></td>
		    <td>Shows <code>Comment</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_DOCUMENT</code></td>
		    <td><code>256</code></td>
		    <td>Shows <code>Document</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_DOCUMENT_FRAGMENT</code></td>
		    <td><code>1024</code></td>
		    <td>Shows <code>DocumentFragment</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_DOCUMENT_TYPE</code></td>
		    <td><code>512</code></td>
		    <td>Shows <code>DocumentType</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ELEMENT</code></td>
		    <td><code>1</code></td>
		    <td>Shows <code>Element</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ENTITY</code> <em>(deprecated)</em></td>
		    <td><code>32</code></td>
		    <td>Shows <code>Entity</code> nodes. This is meaningful only when creating a <code>NodeIterator</code> with an <code>Entity</code> node as its root; in this case, it means that the <code>Entity</code> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ENTITY_REFERENCE</code> <em>(deprecated)</em></td>
		    <td><code>16</code></td>
		    <td>Shows <code>EntityReference</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_NOTATION</code> <em>(deprecated)</em></td>
		    <td><code>2048</code></td>
		    <td>Shows <code>Notation</code> nodes. This is meaningful only when creating a <code>NodeIterator</code> with a <code>Notation</code> node as its root; in this case, it means that the <code>Notation</code> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_PROCESSING_INSTRUCTION</code></td>
		    <td><code>64</code></td>
		    <td>Shows <code>ProcessingInstruction</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_TEXT</code></td>
		    <td><code>4</code></td>
		    <td>Shows <code>Text</code> nodes.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</whatToShow>
		<filter public="1" set="null">
			<c path="js.html.NodeFilter"/>
			<haxe_doc>Returns a `NodeFilter` used to select the relevant nodes.</haxe_doc>
		</filter>
		<nextNode public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</nextNode>
		<previousNode public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</previousNode>
		<detach public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>This operation is a no-op. It doesn't do anything. Previously it was telling the engine that the `NodeIterator` was no more used, but this is now useless.</haxe_doc>
		</detach>
		<haxe_doc><![CDATA[The `NodeIterator` interface represents an iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order.

	Documentation [NodeIterator](https://developer.mozilla.org/en-US/docs/Web/API/NodeIterator) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/NodeIterator$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/NodeIterator>]]></haxe_doc>
		<meta><m n=":native"><e>"NodeIterator"</e></m></meta>
	</class>
	<class path="js.html.NodeList" params="" file="/usr/local/lib/haxe/std/js/html/NodeList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of nodes in the `NodeList`.</haxe_doc>
		</length>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>Returns an item in the list by its index, or `null` if the index is out-of-bounds; can be used as an alternative to simply accessing `nodeList[idx]` (which instead returns  `undefined` when `idx` is out-of-bounds).</haxe_doc>
		</item>
		<haxe_doc><![CDATA[`NodeList` objects are collections of nodes such as those returned by `Node.childNodes` and the `document.querySelectorAll` method.

	Documentation [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/NodeList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/NodeList>]]></haxe_doc>
		<meta><m n=":native"><e>"NodeList"</e></m></meta>
	</class>
	<class path="js.html.OListElement" params="" file="/usr/local/lib/haxe/std/js/html/OListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<reversed public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` value reflecting the `reversed` and defining if the numbering is descending, that is its value is `true`, or ascending (`false`).</haxe_doc>
		</reversed>
		<start public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` value reflecting the `start` and defining the value of the first number of the first element of the list.</haxe_doc>
		</start>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` value reflecting the `type` and defining the kind of marker to be used to display. It can have the following values:
		 
		  `'1'` meaning that decimal numbers are used: `1`, `2`, `3`, `4`, `5`, …
		  `'a'` meaning that the lowercase latin alphabet is used:  `a`, `b`, `c`, `d`, `e`, …
		  `'A'` meaning that the uppercase latin alphabet is used: `A`, `B`, `C`, `D`, `E`, …
		  `'i'` meaning that the lowercase latin numerals are used: `i`, `ii`, `iii`, `iv`, `v`, …
		  `'I'` meaning that the uppercase latin numerals are used: `I`, `II`, `III`, `IV`, `V`, …</haxe_doc>
		</type>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating that spacing between list items should be reduced. This property reflects the `compact` attribute only, it doesn't consider the `line-height` CSS property used for that behavior in modern pages.</haxe_doc>
		</compact>
		<haxe_doc><![CDATA[The `HTMLOListElement` interface provides special properties (beyond those defined on the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating ordered list elements.

	Documentation [HTMLOListElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLOListElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOListElement"</e></m></meta>
	</class>
	<class path="js.html.ObjectElement" params="" file="/usr/local/lib/haxe/std/js/html/ObjectElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<data public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `data` HTML attribute, specifying the address of a resource's data.</haxe_doc>
		</data>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `type` HTML attribute, specifying the MIME type of the resource.</haxe_doc>
		</type>
		<typeMustMatch public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `typeMustMatch` HTML attribute, indicating if the resource specified by `data` must only be played if it matches the `type` attribute.</haxe_doc>
		</typeMustMatch>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `name` HTML attribute, specifying the name of the browsing context.</haxe_doc>
		</name>
		<useMap public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `usemap` HTML attribute, specifying a `map` element to use.</haxe_doc>
		</useMap>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>Retuns a `HTMLFormElement` representing the object element's form owner, or null if there isn't one.</haxe_doc>
		</form>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `width` HTML attribute, specifying the displayed width of the resource in CSS pixels.</haxe_doc>
		</width>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `height` HTML attribute, specifying the displayed height of the resource in CSS pixels.</haxe_doc>
		</height>
		<contentDocument public="1" set="null">
			<c path="js.html.HTMLDocument"/>
			<haxe_doc>Returns a `Document` representing the active document of the object element's nested browsing context, if any; otherwise `null`.</haxe_doc>
		</contentDocument>
		<contentWindow public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a `WindowProxy` representing the window proxy of the object element's nested browsing context, if any; otherwise `null`.</haxe_doc>
		</contentWindow>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` that indicates whether the element is a candidate for constraint validation. Always `false` for `HTMLObjectElement` objects.</haxe_doc>
		</willValidate>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>Returns a `ValidityState` with the validity states that this element is in.</haxe_doc>
		</validity>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` representing a localized message that describes the validation constraints that the control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (`willValidate` is `false`), or it satisfies its constraints.</haxe_doc>
		</validationMessage>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing an enumerated property indicating alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, `"justify"`, and `"center"`.</haxe_doc>
		</align>
		<archive public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `archive` HTML attribute, containing a list of archives for resources for this object.</haxe_doc>
		</archive>
		<code public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the name of an applet class file, containing either the applet's subclass, or the path to get to the class, including the class file itself.</haxe_doc>
		</code>
		<declare public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `declare` HTML attribute, indicating that this is a declaration, not an instantiation, of the object.</haxe_doc>
		</declare>
		<hspace public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` representing the horizontal space in pixels around the control.</haxe_doc>
		</hspace>
		<standby public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `standby` HTML attribute, specifying a message to display while the object loads.</haxe_doc>
		</standby>
		<vspace public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` representing the horizontal space in pixels around the control.</haxe_doc>
		</vspace>
		<codeBase public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `codebase` HTML attribute, specifying the base path to use to resolve relative URIs.</haxe_doc>
		</codeBase>
		<codeType public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `codetype` HTML attribute, specifying the content type of the data.</haxe_doc>
		</codeType>
		<border public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `border` HTML attribute, specifying the width of a border around the object.</haxe_doc>
		</border>
		<checkValidity public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>Retuns a `Boolean` that always is `true`, because `object` objects are never candidates for constraint validation.</haxe_doc>
		</checkValidity>
		<setCustomValidity public="1" set="method">
			<f a="error">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets a custom validity message for the element. If this message is not the empty string, then the element is suffering from a custom validity error, and does not validate.</haxe_doc>
		</setCustomValidity>
		<getSVGDocument public="1" set="method"><f a=""><c path="js.html.HTMLDocument"/></f></getSVGDocument>
		<haxe_doc><![CDATA[The `HTMLObjectElement` interface provides special properties and methods (beyond those on the `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of `object` element, representing external resources.

	Documentation [HTMLObjectElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLObjectElement"</e></m></meta>
	</class>
	<class path="js.html.OptGroupElement" params="" file="/usr/local/lib/haxe/std/js/html/OptGroupElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `boolean` representing whether or not the whole list of children `option` is disabled (true) or not (false).</haxe_doc>
		</disabled>
		<label public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the label for the group.</haxe_doc>
		</label>
		<haxe_doc><![CDATA[The `HTMLOptGroupElement` interface provides special properties and methods (beyond the regular `HTMLElement` object interface they also have available to them by inheritance) for manipulating the layout and presentation of `optgroup` elements.

	Documentation [HTMLOptGroupElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptGroupElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptGroupElement"</e></m></meta>
	</class>
	<class path="js.html.OptionElement" params="" file="/usr/local/lib/haxe/std/js/html/OptionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1"><x path="Bool"/></disabled>
		<form public="1" set="null"><c path="js.html.FormElement"/></form>
		<label public="1"><c path="String"/></label>
		<defaultSelected public="1"><x path="Bool"/></defaultSelected>
		<selected public="1"><x path="Bool"/></selected>
		<value public="1"><c path="String"/></value>
		<text public="1"><c path="String"/></text>
		<index public="1" set="null"><x path="Int"/></index>
		<haxe_doc><![CDATA[The `HTMLOptionElement` interface represents `option` elements and inherits all classes and methods of the `HTMLElement` interface.

	Documentation [HTMLOptionElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOptionElement"</e></m></meta>
	</class>
	<abstract path="js.html.OrientationLockType" params="" file="/usr/local/lib/haxe/std/js/html/OrientationLockType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._OrientationLockType.OrientationLockType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/OrientationLockType.hx" private="1" module="js.html.OrientationLockType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.OrientationType" params="" file="/usr/local/lib/haxe/std/js/html/OrientationType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._OrientationType.OrientationType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/OrientationType.hx" private="1" module="js.html.OrientationType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.OutputElement" params="" file="/usr/local/lib/haxe/std/js/html/OutputElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<htmlFor public="1" set="null"><c path="js.html.DOMTokenList"/></htmlFor>
		<form public="1" set="null"><c path="js.html.FormElement"/></form>
		<name public="1"><c path="String"/></name>
		<type public="1" set="null"><c path="String"/></type>
		<defaultValue public="1"><c path="String"/></defaultValue>
		<value public="1"><c path="String"/></value>
		<willValidate public="1" set="null"><x path="Bool"/></willValidate>
		<validity public="1" set="null"><c path="js.html.ValidityState"/></validity>
		<validationMessage public="1" set="null"><c path="String"/></validationMessage>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<haxe_doc><![CDATA[The `HTMLOutputElement` interface provides properties and methods (beyond those inherited from `HTMLElement`) for manipulating the layout and presentation of `output` elements.

	Documentation [HTMLOutputElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLOutputElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLOutputElement"</e></m></meta>
	</class>
	<class path="js.html.ParagraphElement" params="" file="/usr/local/lib/haxe/std/js/html/ParagraphElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1"><c path="String"/></align>
		<haxe_doc><![CDATA[The `HTMLParagraphElement` interface provides special properties (beyond those of the regular `HTMLElement` object interface it inherits) for manipulating `p` elements.

	Documentation [HTMLParagraphElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLParagraphElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLParagraphElement"</e></m></meta>
	</class>
	<class path="js.html.ParamElement" params="" file="/usr/local/lib/haxe/std/js/html/ParamElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the name of the parameter. It reflects the `name` attribute.</haxe_doc>
		</name>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the value associated to the parameter. It reflects the `value` attribute.</haxe_doc>
		</value>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the type of the parameter when `valueType` has the `"ref"` value. It reflects the `type` attribute.</haxe_doc>
		</type>
		<valueType public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the type of the `value`. It reflects the ``valuetype`` attribute and has one of the values: `"data"`, `"ref"`, or `"object"`.</haxe_doc>
		</valueType>
		<haxe_doc><![CDATA[The `HTMLParamElement` interface provides special properties (beyond those of the regular `HTMLElement` object interface it inherits) for manipulating `param` elements, representing a pair of a key and a value that acts as a parameter for an `object` element.

	Documentation [HTMLParamElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLParamElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLParamElement"</e></m></meta>
	</class>
	<class path="js.html.Path2D" params="" file="/usr/local/lib/haxe/std/js/html/Path2D.hx" extern="1">
		<addPath public="1" set="method">
			<f a="path:?transformation">
				<c path="js.html.Path2D"/>
				<c path="js.html.svg.Matrix"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds a path to the current path.</haxe_doc>
		</addPath>
		<closePath public="1" set="method"><f a=""><x path="Void"/></f></closePath>
		<moveTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></moveTo>
		<lineTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></lineTo>
		<quadraticCurveTo public="1" set="method"><f a="cpx:cpy:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></quadraticCurveTo>
		<bezierCurveTo public="1" set="method"><f a="cp1x:cp1y:cp2x:cp2y:x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></bezierCurveTo>
		<arcTo public="1" set="method">
			<f a="x1:y1:x2:y2:radius">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</arcTo>
		<rect public="1" set="method"><f a="x:y:w:h">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></rect>
		<arc public="1" set="method">
			<f a="x:y:radius:startAngle:endAngle:?anticlockwise" v=":::::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ anticlockwise : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</arc>
		<ellipse public="1" set="method">
			<f a="x:y:radiusX:radiusY:rotation:startAngle:endAngle:?anticlockwise" v=":::::::false">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ anticlockwise : false }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</ellipse>
		<new public="1" set="method">
			<f a="pathString">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="other">
						<c path="js.html.Path2D"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<haxe_doc><![CDATA[The `Path2D` interface of the Canvas 2D API is used to declare paths that are then later used on `CanvasRenderingContext2D` objects. The path methods of the `CanvasRenderingContext2D` interface are present on this interface as well and are allowing you to create paths that you can retain and replay as required on a canvas.

	Documentation [Path2D](https://developer.mozilla.org/en-US/docs/Web/API/Path2D) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Path2D$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Path2D>]]></haxe_doc>
		<meta><m n=":native"><e>"Path2D"</e></m></meta>
	</class>
	<class path="js.html.Performance" params="" file="/usr/local/lib/haxe/std/js/html/Performance.hx" extern="1">
		<timing public="1" set="null">
			<c path="js.html.PerformanceTiming"/>
			<haxe_doc>Is a `PerformanceTiming` object containing latency-related performance information.</haxe_doc>
		</timing>
		<navigation public="1" set="null">
			<c path="js.html.PerformanceNavigation"/>
			<haxe_doc>Is a `PerformanceNavigation` object representing the type of navigation that occurs in the given browsing context, like the amount of redirections needed to fetch the resource.</haxe_doc>
		</navigation>
		<now public="1" set="method">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Returns a `DOMHighResTimeStamp` representing the amount of milliseconds elapsed since a reference instant.</haxe_doc>
		</now>
		<haxe_doc><![CDATA[The `Performance` interface represents timing-related performance information for the given page.

	Documentation [Performance](https://developer.mozilla.org/en-US/docs/Web/API/Performance) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Performance$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Performance>]]></haxe_doc>
		<meta><m n=":native"><e>"Performance"</e></m></meta>
	</class>
	<class path="js.html.PerformanceNavigation" params="" file="/usr/local/lib/haxe/std/js/html/PerformanceNavigation.hx" extern="1">
		<TYPE_NAVIGATE public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</TYPE_NAVIGATE>
		<TYPE_RELOAD public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</TYPE_RELOAD>
		<TYPE_BACK_FORWARD public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</TYPE_BACK_FORWARD>
		<TYPE_RESERVED public="1" get="inline" set="null" expr="255" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>255</e></m></meta>
		</TYPE_RESERVED>
		<type public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Is an <code>unsigned short</code> containing a constant describing how the navigation to this page was done. Possible values are:
		 <table class="standard-table">
		  
		   <tr>
		    Value
		    Constant name
		    Meaning
		   </tr>
		  
		  
		   <tr>
		    <td><code>0</code></td>
		    <td><code>TYPE_NAVIGATE</code></td>
		    <td>The page was accessed by following a link, a bookmark, a form submission, a script, or typing the URL in the address bar.</td>
		   </tr>
		   <tr>
		    <td><code>1</code></td>
		    <td><code>TYPE_RELOAD</code></td>
		    <td>The page was accessed by clicking the Reload button or via the <code>Location.reload()</code> method.</td>
		   </tr>
		   <tr>
		    <td><code>2</code></td>
		    <td><code>TYPE_BACK_FORWARD</code></td>
		    <td>The page was accessed by navigating into the history.</td>
		   </tr>
		   <tr>
		    <td><code>255</code></td>
		    <td><code>TYPE_RESERVED</code></td>
		    <td>Any other way.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</type>
		<redirectCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned short` representing the number of REDIRECTs done before reaching the page.</haxe_doc>
		</redirectCount>
		<haxe_doc><![CDATA[The `PerformanceNavigation` interface represents information about how the navigation to the current document was done.

	Documentation [PerformanceNavigation](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigation) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigation$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigation>]]></haxe_doc>
		<meta><m n=":native"><e>"PerformanceNavigation"</e></m></meta>
	</class>
	<class path="js.html.PerformanceTiming" params="" file="/usr/local/lib/haxe/std/js/html/PerformanceTiming.hx" extern="1">
		<navigationStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as `PerformanceTiming.fetchStart`.</haxe_doc>
		</navigationStart>
		<unloadEventStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, the `unload` event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is `0`.</haxe_doc>
		</unloadEventStart>
		<unloadEventEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, the `unload` event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is `0`.</haxe_doc>
		</unloadEventEnd>
		<redirectStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is `0`.</haxe_doc>
		</redirectStart>
		<redirectEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is `0`.</haxe_doc>
		</redirectEnd>
		<fetchStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is before the check to any application cache.</haxe_doc>
		</fetchStart>
		<domainLookupStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as `PerformanceTiming.fetchStart`.</haxe_doc>
		</domainLookupStart>
		<domainLookupEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as `PerformanceTiming.fetchStart`.</haxe_doc>
		</domainLookupEnd>
		<connectStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as `PerformanceTiming.fetchStart`.</haxe_doc>
		</connectStart>
		<connectEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as `PerformanceTiming.fetchStart`. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</haxe_doc>
		</connectEnd>
		<requestStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</haxe_doc>
		</requestStart>
		<responseStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the browser received the first byte of the response, from the server from a cache, of from a local resource.</haxe_doc>
		</responseStart>
		<responseEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache, of from a local resource.</haxe_doc>
		</responseEnd>
		<domLoading public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its `Document.readyState` changes to `'loading'` and the corresponding `readystatechange` event is thrown.</haxe_doc>
		</domLoading>
		<domInteractive public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its `Document.readyState` changes to `'interactive'` and the corresponding `readystatechange` event is thrown.</haxe_doc>
		</domInteractive>
		<domContentLoadedEventStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, right before the parser sent the `DOMContentLoaded` event, that is right after all the scripts that need to be executed right after parsing has been executed.</haxe_doc>
		</domContentLoadedEventStart>
		<domContentLoadedEventEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed.</haxe_doc>
		</domContentLoadedEventEnd>
		<domComplete public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its `Document.readyState` changes to `'complete'` and the corresponding `readystatechange` event is thrown.</haxe_doc>
		</domComplete>
		<loadEventStart public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the `load` event was sent for the current document. If this event has not yet been sent, it returns `0.`</haxe_doc>
		</loadEventStart>
		<loadEventEnd public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long long` representing the moment, in miliseconds since the UNIX epoch, when the `load` event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns `0.`</haxe_doc>
		</loadEventEnd>
		<haxe_doc><![CDATA[The `PerformanceTiming` interface represents timing-related performance information for the given page.

	Documentation [PerformanceTiming](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming>]]></haxe_doc>
		<meta><m n=":native"><e>"PerformanceTiming"</e></m></meta>
	</class>
	<abstract path="js.html.PermissionState" params="" file="/usr/local/lib/haxe/std/js/html/PermissionState.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._PermissionState.PermissionState_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/PermissionState.hx" private="1" module="js.html.PermissionState"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.PermissionStatus" params="" file="/usr/local/lib/haxe/std/js/html/PermissionStatus.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<state public="1" set="null">
			<x path="js.html.PermissionState"/>
			<haxe_doc>Returns the state of a requested permission; one of `'granted'`, `'denied'`, or `'prompt'`.</haxe_doc>
		</state>
		<onchange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>An event called whenever `PermissionStatus.status` changes.</haxe_doc>
		</onchange>
		<haxe_doc><![CDATA[The `PermissionStatus` interface of the Permissions API provides the state of an object and an event handler for monitoring changes to said state.

	Documentation [PermissionStatus](https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus>]]></haxe_doc>
		<meta><m n=":native"><e>"PermissionStatus"</e></m></meta>
	</class>
	<class path="js.html.Permissions" params="" file="/usr/local/lib/haxe/std/js/html/Permissions.hx" extern="1">
		<query public="1" set="method">
			<f a="permission">
				<d/>
				<c path="js.Promise"><c path="js.html.PermissionStatus"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</query>
		<revoke public="1" set="method">
			<f a="permission">
				<d/>
				<c path="js.Promise"><c path="js.html.PermissionStatus"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</revoke>
		<haxe_doc><![CDATA[Documentation [Permissions](https://developer.mozilla.org/en-US/docs/Web/API/Permissions) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Permissions$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Permissions>]]></haxe_doc>
		<meta><m n=":native"><e>"Permissions"</e></m></meta>
	</class>
	<class path="js.html.PictureElement" params="" file="/usr/local/lib/haxe/std/js/html/PictureElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<haxe_doc><![CDATA[The `HTMLPictureElement` interface represents a `picture` HTML element. It doesn't implement specific properties or methods.

	Documentation [HTMLPictureElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPictureElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPictureElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLPictureElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLPictureElement"</e></m></meta>
	</class>
	<abstract path="js.html.PlaybackDirection" params="" file="/usr/local/lib/haxe/std/js/html/PlaybackDirection.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._PlaybackDirection.PlaybackDirection_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/PlaybackDirection.hx" private="1" module="js.html.PlaybackDirection"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Plugin" params="" file="/usr/local/lib/haxe/std/js/html/Plugin.hx" extern="1">
		<description public="1" set="null"><c path="String"/></description>
		<filename public="1" set="null"><c path="String"/></filename>
		<version public="1" set="null"><c path="String"/></version>
		<name public="1" set="null"><c path="String"/></name>
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.MimeType"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.MimeType"/>
</f></namedItem>
		<haxe_doc><![CDATA[The `Plugin` interface provides information about a browser plugin.

	Documentation [Plugin](https://developer.mozilla.org/en-US/docs/Web/API/Plugin) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Plugin$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Plugin>]]></haxe_doc>
		<meta><m n=":native"><e>"Plugin"</e></m></meta>
	</class>
	<class path="js.html.PluginArray" params="" file="/usr/local/lib/haxe/std/js/html/PluginArray.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.Plugin"/>
</f></item>
		<namedItem public="1" set="method"><f a="name">
	<c path="String"/>
	<c path="js.html.Plugin"/>
</f></namedItem>
		<refresh public="1" set="method">
			<f a="?reloadDocuments" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ reloadDocuments : false }</e></m></meta>
		</refresh>
		<haxe_doc><![CDATA[The `PluginArray` interface is used to store a list of `Plugin` objects describing the available plugins; it's returned by the `window.navigator.plugins` property. The `PluginArray` is not a JavaScript array, but has the `length` property and supports accessing individual items using bracket notation (`plugins[2]`), as well as via `item(index)` and `namedItem("name")` methods.

	Documentation [PluginArray](https://developer.mozilla.org/en-US/docs/Web/API/PluginArray) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PluginArray$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PluginArray>]]></haxe_doc>
		<meta><m n=":native"><e>"PluginArray"</e></m></meta>
	</class>
	<class path="js.html.Position" params="" file="/usr/local/lib/haxe/std/js/html/Position.hx" extern="1">
		<coords public="1" set="null">
			<c path="js.html.Coordinates"/>
			<haxe_doc>Returns a `Coordinates` object defining the current location.</haxe_doc>
		</coords>
		<timestamp public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `DOMTimeStamp` representing the time at which the location was retrieved.</haxe_doc>
		</timestamp>
		<haxe_doc><![CDATA[The `Position` interface represents the position of the concerned device at a given time. The position, represented by a `Coordinates` object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed.

	Documentation [Position](https://developer.mozilla.org/en-US/docs/Web/API/Position) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Position$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Position>]]></haxe_doc>
		<meta><m n=":native"><e>"Position"</e></m></meta>
	</class>
	<class path="js.html.PositionError" params="" file="/usr/local/lib/haxe/std/js/html/PositionError.hx" extern="1">
		<PERMISSION_DENIED public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</PERMISSION_DENIED>
		<POSITION_UNAVAILABLE public="1" get="inline" set="null" expr="2" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</POSITION_UNAVAILABLE>
		<TIMEOUT public="1" get="inline" set="null" expr="3" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</TIMEOUT>
		<code public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns an <code>unsigned short</code> representing the error code. The following values are possible:
		 <table class="standard-table">
		  
		   <tr>
		    Value
		    Associated constant
		    Description
		   </tr>
		   <tr>
		    <td><code>1</code></td>
		    <td><code>PERMISSION_DENIED</code></td>
		    <td>The acquisition of the geolocation information failed because the page didn't have the permission to do it.</td>
		   </tr>
		   <tr>
		    <td><code>2</code></td>
		    <td><code>POSITION_UNAVAILABLE</code></td>
		    <td>The acquisition of the geolocation failed because at least one internal source of position returned an internal error.</td>
		   </tr>
		   <tr>
		    <td><code>3</code></td>
		    <td><code>TIMEOUT</code></td>
		    <td>The time allowed to acquire the geolocation, defined by <code>PositionOptions.timeout</code> information was reached before the information was obtained.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</code>
		<message public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a human-readable `DOMString` describing the details of the error. Specifications note that this is primarily intended for debugging use and not to be shown directly in a user interface.</haxe_doc>
		</message>
		<haxe_doc><![CDATA[The `PositionError` interface represents the reason of an error occurring when using the geolocating device.

	Documentation [PositionError](https://developer.mozilla.org/en-US/docs/Web/API/PositionError) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PositionError$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PositionError>]]></haxe_doc>
		<meta><m n=":native"><e>"PositionError"</e></m></meta>
	</class>
	<typedef path="js.html.PositionOptions" params="" file="/usr/local/lib/haxe/std/js/html/PositionOptions.hx">
		<a>
			<timeout>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
			</timeout>
			<maximumAge>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
			</maximumAge>
			<enableHighAccuracy>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
			</enableHighAccuracy>
		</a>
		<haxe_doc><![CDATA[The `PositionOptions` interface describes an object containing option properties to pass as a parameter of `Geolocation.getCurrentPosition()` and `Geolocation.watchPosition()`.

	Documentation [PositionOptions](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions>]]></haxe_doc>
	</typedef>
	<class path="js.html.PreElement" params="" file="/usr/local/lib/haxe/std/js/html/PreElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` value reflecting the obsolete `width` attribute, containing a fixed-size length for the `pre` element.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[The `HTMLPreElement` interface expose specific properties and methods (beyond those defined by regular `HTMLElement` interface it also has available to it by inheritance) for manipulating block of preformatted text.

	Documentation [HTMLPreElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLPreElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLPreElement"</e></m></meta>
	</class>
	<class path="js.html.ProcessingInstruction" params="" file="/usr/local/lib/haxe/std/js/html/ProcessingInstruction.hx" extern="1">
		<extends path="js.html.CharacterData"/>
		<target public="1" set="null"><c path="String"/></target>
		<haxe_doc><![CDATA[A processing instruction provides an opportunity for application-specific instructions to be embedded within XML and which can be ignored by XML processors which do not support processing their instructions (outside of their having a place in the DOM).

	Documentation [ProcessingInstruction](https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction>]]></haxe_doc>
		<meta><m n=":native"><e>"ProcessingInstruction"</e></m></meta>
	</class>
	<class path="js.html.ProgressElement" params="" file="/usr/local/lib/haxe/std/js/html/ProgressElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<value public="1">
			<x path="Float"/>
			<haxe_doc>Is a `double` value that reflects the current value; if the progress bar is an indeterminate progress bar, it returns `0`.</haxe_doc>
		</value>
		<max public="1">
			<x path="Float"/>
			<haxe_doc>Is a `double` value reflecting the content attribute of the same name, limited to numbers greater than zero. Its default value is `1.0`.</haxe_doc>
		</max>
		<position public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a `double` value returning the result of dividing the current value (`value`) by the maximum value (`max`); if the progress bar is an indeterminate progress bar, it returns `-1`.</haxe_doc>
		</position>
		<haxe_doc><![CDATA[The `HTMLProgressElement` interface provides special properties and methods (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of `progress` elements.

	Documentation [HTMLProgressElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLProgressElement"</e></m></meta>
	</class>
	<class path="js.html.QuoteElement" params="" file="/usr/local/lib/haxe/std/js/html/QuoteElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<cite public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `cite` HTML attribute, containing a URL for the source of the quotation.</haxe_doc>
		</cite>
		<haxe_doc><![CDATA[The `HTMLQuoteElement` interface provides special properties and methods (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating quoting elements, like `blockquote` and `q`, but not the `cite` element.

	Documentation [HTMLQuoteElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLQuoteElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLQuoteElement"</e></m></meta>
	</class>
	<class path="js.html.Range" params="" file="/usr/local/lib/haxe/std/js/html/Range.hx" extern="1">
		<START_TO_START public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</START_TO_START>
		<START_TO_END public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</START_TO_END>
		<END_TO_END public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</END_TO_END>
		<END_TO_START public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</END_TO_START>
		<startContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the `Node` within which the `Range` starts.</haxe_doc>
		</startContainer>
		<startOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing where in the `startContainer` the `Range` starts.</haxe_doc>
		</startOffset>
		<endContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the `Node` within which the `Range` ends.</haxe_doc>
		</endContainer>
		<endOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing where in the `endContainer` the `Range` ends.</haxe_doc>
		</endOffset>
		<collapsed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a `Boolean` indicating whether the range's start and end points are at the same position.</haxe_doc>
		</collapsed>
		<commonAncestorContainer public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the deepest `Node` that contains the `startContainer` and `endContainer` nodes.</haxe_doc>
		</commonAncestorContainer>
		<setStart public="1" set="method">
			<f a="refNode:offset">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setStart>
		<setEnd public="1" set="method">
			<f a="refNode:offset">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setEnd>
		<setStartBefore public="1" set="method">
			<f a="refNode">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setStartBefore>
		<setStartAfter public="1" set="method">
			<f a="refNode">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setStartAfter>
		<setEndBefore public="1" set="method">
			<f a="refNode">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setEndBefore>
		<setEndAfter public="1" set="method">
			<f a="refNode">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setEndAfter>
		<collapse public="1" set="method">
			<f a="?toStart" v="false">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ toStart : false }</e></m></meta>
		</collapse>
		<selectNode public="1" set="method">
			<f a="refNode">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</selectNode>
		<selectNodeContents public="1" set="method">
			<f a="refNode">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</selectNodeContents>
		<compareBoundaryPoints public="1" set="method">
			<f a="how:sourceRange">
				<x path="Int"/>
				<c path="js.html.Range"/>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</compareBoundaryPoints>
		<deleteContents public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteContents>
		<extractContents public="1" set="method">
			<f a=""><c path="js.html.DocumentFragment"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</extractContents>
		<cloneContents public="1" set="method">
			<f a=""><c path="js.html.DocumentFragment"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</cloneContents>
		<insertNode public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertNode>
		<surroundContents public="1" set="method">
			<f a="newParent">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</surroundContents>
		<cloneRange public="1" set="method"><f a=""><c path="js.html.Range"/></f></cloneRange>
		<detach public="1" set="method"><f a=""><x path="Void"/></f></detach>
		<isPointInRange public="1" set="method">
			<f a="node:offset">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</isPointInRange>
		<comparePoint public="1" set="method">
			<f a="node:offset">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</comparePoint>
		<intersectsNode public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</intersectsNode>
		<createContextualFragment public="1" set="method">
			<f a="fragment">
				<c path="String"/>
				<c path="js.html.DocumentFragment"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createContextualFragment>
		<getClientRects public="1" set="method"><f a=""><c path="js.html.DOMRectList"/></f></getClientRects>
		<getBoundingClientRect public="1" set="method"><f a=""><c path="js.html.DOMRect"/></f></getBoundingClientRect>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Range` interface represents a fragment of a document that can contain nodes and parts of text nodes.

	Documentation [Range](https://developer.mozilla.org/en-US/docs/Web/API/Range) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Range$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Range>]]></haxe_doc>
		<meta><m n=":native"><e>"Range"</e></m></meta>
	</class>
	<abstract path="js.html.ReferrerPolicy" params="" file="/usr/local/lib/haxe/std/js/html/ReferrerPolicy.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._ReferrerPolicy.ReferrerPolicy_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/ReferrerPolicy.hx" private="1" module="js.html.ReferrerPolicy"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Request" params="" file="/usr/local/lib/haxe/std/js/html/Request.hx" extern="1">
		<method public="1" set="null">
			<c path="String"/>
			<haxe_doc>Contains the request's method (`GET`, `POST`, etc.)</haxe_doc>
		</method>
		<url public="1" set="null">
			<c path="String"/>
			<haxe_doc>Contains the URL of the request.</haxe_doc>
		</url>
		<headers public="1" set="null">
			<c path="js.html.Headers"/>
			<haxe_doc>Contains the associated `Headers` object of the request.</haxe_doc>
		</headers>
		<referrer public="1" set="null">
			<c path="String"/>
			<haxe_doc>Contains the referrer of the request (e.g., `client`).</haxe_doc>
		</referrer>
		<referrerPolicy public="1" set="null">
			<x path="js.html.ReferrerPolicy"/>
			<haxe_doc>Contains the referrer policy of the request (e.g., `no-referrer`).</haxe_doc>
		</referrerPolicy>
		<mode public="1" set="null">
			<x path="js.html.RequestMode"/>
			<haxe_doc>Contains the mode of the request (e.g., `cors`, `no-cors`, `same-origin`, `navigate`.)</haxe_doc>
		</mode>
		<credentials public="1" set="null">
			<x path="js.html.RequestCredentials"/>
			<haxe_doc>Contains the credentials of the request (e.g., `omit`, `same-origin`).</haxe_doc>
		</credentials>
		<cache public="1" set="null">
			<x path="js.html.RequestCache"/>
			<haxe_doc>Contains the cache mode of the request (e.g., `default`, `reload`, `no-cache`).</haxe_doc>
		</cache>
		<redirect public="1" set="null">
			<x path="js.html.RequestRedirect"/>
			<haxe_doc>Contains the mode for how redirects are handled. It may be one of `follow`, `error`, or `manual`.</haxe_doc>
		</redirect>
		<bodyUsed public="1" set="null"><x path="Bool"/></bodyUsed>
		<clone public="1" set="method">
			<f a=""><c path="js.html.Request"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</clone>
		<arrayBuffer public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.ArrayBuffer"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</arrayBuffer>
		<blob public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.Blob"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</blob>
		<formData public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.FormData"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</formData>
		<json public="1" set="method">
			<f a=""><c path="js.Promise"><d/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</json>
		<text public="1" set="method">
			<f a=""><c path="js.Promise"><c path="String"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</text>
		<new public="1" set="method">
			<f a="input:?init">
				<x path="haxe.extern.EitherType">
					<c path="js.html.Request"/>
					<c path="String"/>
				</x>
				<t path="js.html.RequestInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Request` interface of the Fetch API represents a resource request.

	Documentation [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Request$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Request>]]></haxe_doc>
		<meta><m n=":native"><e>"Request"</e></m></meta>
	</class>
	<abstract path="js.html.RequestCache" params="" file="/usr/local/lib/haxe/std/js/html/RequestCache.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._RequestCache.RequestCache_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/RequestCache.hx" private="1" module="js.html.RequestCache"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.RequestCredentials" params="" file="/usr/local/lib/haxe/std/js/html/RequestCredentials.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._RequestCredentials.RequestCredentials_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/RequestCredentials.hx" private="1" module="js.html.RequestCredentials"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<typedef path="js.html.RequestInit" params="" file="/usr/local/lib/haxe/std/js/html/RequestInit.hx"><a>
	<referrerPolicy>
		<x path="Null"><x path="js.html.ReferrerPolicy"/></x>
		<meta><m n=":optional"/></meta>
	</referrerPolicy>
	<referrer>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</referrer>
	<redirect>
		<x path="Null"><x path="js.html.RequestRedirect"/></x>
		<meta><m n=":optional"/></meta>
	</redirect>
	<mode>
		<x path="Null"><x path="js.html.RequestMode"/></x>
		<meta><m n=":optional"/></meta>
	</mode>
	<method>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</method>
	<headers>
		<x path="Null"><x path="haxe.extern.EitherType">
	<c path="js.html.Headers"/>
	<x path="haxe.extern.EitherType">
		<c path="Array"><c path="Array"><c path="String"/></c></c>
		<d/>
	</x>
</x></x>
		<meta><m n=":optional"/></meta>
	</headers>
	<credentials>
		<x path="Null"><x path="js.html.RequestCredentials"/></x>
		<meta><m n=":optional"/></meta>
	</credentials>
	<cache>
		<x path="Null"><x path="js.html.RequestCache"/></x>
		<meta><m n=":optional"/></meta>
	</cache>
	<body>
		<x path="Null"><x path="haxe.extern.EitherType">
	<c path="js.html.ArrayBuffer"/>
	<x path="haxe.extern.EitherType">
		<c path="js.html.ArrayBufferView"/>
		<x path="haxe.extern.EitherType">
			<c path="js.html.Blob"/>
			<x path="haxe.extern.EitherType">
				<c path="js.html.FormData"/>
				<x path="haxe.extern.EitherType">
					<c path="String"/>
					<c path="js.html.URLSearchParams"/>
				</x>
			</x>
		</x>
	</x>
</x></x>
		<meta><m n=":optional"/></meta>
	</body>
</a></typedef>
	<abstract path="js.html.RequestMode" params="" file="/usr/local/lib/haxe/std/js/html/RequestMode.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._RequestMode.RequestMode_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/RequestMode.hx" private="1" module="js.html.RequestMode"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.RequestRedirect" params="" file="/usr/local/lib/haxe/std/js/html/RequestRedirect.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._RequestRedirect.RequestRedirect_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/RequestRedirect.hx" private="1" module="js.html.RequestRedirect"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Response" params="" file="/usr/local/lib/haxe/std/js/html/Response.hx" extern="1">
		<error public="1" set="method" static="1"><f a=""><c path="js.html.Response"/></f></error>
		<redirect public="1" set="method" static="1">
			<f a="url:?status" v=":302">
				<c path="String"/>
				<x path="Int"/>
				<c path="js.html.Response"/>
			</f>
			<meta><m n=":value"><e>{ status : 302 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</redirect>
		<type public="1" set="null">
			<x path="js.html.ResponseType"/>
			<haxe_doc>Contains the type of the response (e.g., `basic`, `cors`).</haxe_doc>
		</type>
		<url public="1" set="null">
			<c path="String"/>
			<haxe_doc>Contains the URL of the response.</haxe_doc>
		</url>
		<status public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Contains the status code of the response (e.g., `200` for a success).</haxe_doc>
		</status>
		<ok public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Contains a boolean stating whether the response was successful (status in the range 200-299) or not.</haxe_doc>
		</ok>
		<statusText public="1" set="null">
			<c path="String"/>
			<haxe_doc>Contains the status message corresponding to the status code (e.g., `OK` for `200`).</haxe_doc>
		</statusText>
		<headers public="1" set="null">
			<c path="js.html.Headers"/>
			<haxe_doc>Contains the `Headers` object associated with the response.</haxe_doc>
		</headers>
		<bodyUsed public="1" set="null"><x path="Bool"/></bodyUsed>
		<clone public="1" set="method">
			<f a=""><c path="js.html.Response"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</clone>
		<arrayBuffer public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.ArrayBuffer"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</arrayBuffer>
		<blob public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.Blob"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</blob>
		<formData public="1" set="method">
			<f a=""><c path="js.Promise"><c path="js.html.FormData"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</formData>
		<json public="1" set="method">
			<f a=""><c path="js.Promise"><d/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</json>
		<text public="1" set="method">
			<f a=""><c path="js.Promise"><c path="String"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</text>
		<new public="1" set="method">
			<f a="?body:?init">
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBuffer"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.ArrayBufferView"/>
						<x path="haxe.extern.EitherType">
							<c path="js.html.Blob"/>
							<x path="haxe.extern.EitherType">
								<c path="js.html.FormData"/>
								<x path="haxe.extern.EitherType">
									<c path="String"/>
									<c path="js.html.URLSearchParams"/>
								</x>
							</x>
						</x>
					</x>
				</x>
				<t path="js.html.ResponseInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Response` interface of the Fetch API represents the response to a request.

	Documentation [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Response$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Response>]]></haxe_doc>
		<meta><m n=":native"><e>"Response"</e></m></meta>
	</class>
	<typedef path="js.html.ResponseInit" params="" file="/usr/local/lib/haxe/std/js/html/ResponseInit.hx"><a>
	<statusText>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</statusText>
	<status>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</status>
	<headers>
		<x path="Null"><x path="haxe.extern.EitherType">
	<c path="js.html.Headers"/>
	<x path="haxe.extern.EitherType">
		<c path="Array"><c path="Array"><c path="String"/></c></c>
		<d/>
	</x>
</x></x>
		<meta><m n=":optional"/></meta>
	</headers>
</a></typedef>
	<abstract path="js.html.ResponseType" params="" file="/usr/local/lib/haxe/std/js/html/ResponseType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._ResponseType.ResponseType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/ResponseType.hx" private="1" module="js.html.ResponseType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Screen" params="" file="/usr/local/lib/haxe/std/js/html/Screen.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<availWidth public="1" set="null"><x path="Int"/></availWidth>
		<availHeight public="1" set="null"><x path="Int"/></availHeight>
		<width public="1" set="null"><x path="Int"/></width>
		<height public="1" set="null"><x path="Int"/></height>
		<colorDepth public="1" set="null"><x path="Int"/></colorDepth>
		<pixelDepth public="1" set="null"><x path="Int"/></pixelDepth>
		<top public="1" set="null"><x path="Int"/></top>
		<left public="1" set="null"><x path="Int"/></left>
		<availTop public="1" set="null"><x path="Int"/></availTop>
		<availLeft public="1" set="null"><x path="Int"/></availLeft>
		<orientation public="1" set="null"><c path="js.html.ScreenOrientation"/></orientation>
		<haxe_doc><![CDATA[The `Screen` interface represents a screen, usually the one on which the current window is being rendered.

	Documentation [Screen](https://developer.mozilla.org/en-US/docs/Web/API/Screen) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Screen$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Screen>]]></haxe_doc>
		<meta><m n=":native"><e>"Screen"</e></m></meta>
	</class>
	<class path="js.html.ScreenOrientation" params="" file="/usr/local/lib/haxe/std/js/html/ScreenOrientation.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<type public="1" set="null"><x path="js.html.OrientationType"/></type>
		<angle public="1" set="null"><x path="Int"/></angle>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<lock public="1" set="method">
			<f a="orientation">
				<x path="js.html.OrientationLockType"/>
				<c path="js.Promise"><x path="Void"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</lock>
		<unlock public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</unlock>
		<meta><m n=":native"><e>"ScreenOrientation"</e></m></meta>
	</class>
	<class path="js.html.ScriptElement" params="" file="/usr/local/lib/haxe/std/js/html/ScriptElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<src public="1"><c path="String"/></src>
		<type public="1"><c path="String"/></type>
		<charset public="1"><c path="String"/></charset>
		<async public="1"><x path="Bool"/></async>
		<defer public="1"><x path="Bool"/></defer>
		<crossOrigin public="1"><c path="String"/></crossOrigin>
		<text public="1"><c path="String"/></text>
		<event public="1"><c path="String"/></event>
		<htmlFor public="1"><c path="String"/></htmlFor>
		<integrity public="1"><c path="String"/></integrity>
		<haxe_doc><![CDATA[HTML script elements expose the `HTMLScriptElement` interface, which provides special properties and methods (beyond the regular `HTMLElement` object interface they also have available to them by inheritance) for manipulating the layout and presentation of `script` elements.

	Documentation [HTMLScriptElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLScriptElement"</e></m></meta>
	</class>
	<typedef path="js.html.ScrollIntoViewOptions" params="" file="/usr/local/lib/haxe/std/js/html/ScrollIntoViewOptions.hx"><a>
	<block>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</block>
	<behavior>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</behavior>
</a></typedef>
	<typedef path="js.html.ScrollOptions" params="" file="/usr/local/lib/haxe/std/js/html/ScrollOptions.hx"><a><behavior>
	<x path="Null"><d/></x>
	<meta><m n=":optional"/></meta>
</behavior></a></typedef>
	<abstract path="js.html.ScrollRestoration" params="" file="/usr/local/lib/haxe/std/js/html/ScrollRestoration.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._ScrollRestoration.ScrollRestoration_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/ScrollRestoration.hx" private="1" module="js.html.ScrollRestoration"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<typedef path="js.html.ScrollToOptions" params="" file="/usr/local/lib/haxe/std/js/html/ScrollToOptions.hx"><a>
	<top>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</top>
	<left>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</left>
	<behavior>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</behavior>
</a></typedef>
	<class path="js.html.SelectElement" params="" file="/usr/local/lib/haxe/std/js/html/SelectElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `autofocus` HTML attribute, which indicates whether the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified. `2.0`</haxe_doc>
		</autofocus>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `disabled` HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks.</haxe_doc>
		</disabled>
		<form public="1" set="null">
			<c path="js.html.FormElement"/>
			<haxe_doc>Returns a `HTMLFormElement` representing the form that this element is associated with. If the element is not associated with of a `form` element, then it returns `null`.</haxe_doc>
		</form>
		<multiple public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `multiple` HTML attribute, which indicates whether multiple items can be selected.</haxe_doc>
		</multiple>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `name` HTML attribute, containing the name of this control used by servers and DOM search functions.</haxe_doc>
		</name>
		<required public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that reflects the `required` HTML attribute, which indicates whether the user is required to select a value before submitting the form. `2.0`</haxe_doc>
		</required>
		<size public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` that reflects the `size` HTML attribute, which contains the number of visible items in the control. The default is 1, unless `multiple` is true, in which case it is 4.</haxe_doc>
		</size>
		<type public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` the form control's type. When `multiple` is `true`, it returns `"select-multiple"`; otherwise, it returns `"select-one"`.</haxe_doc>
		</type>
		<options public="1" set="null">
			<c path="js.html.HTMLOptionsCollection"/>
			<haxe_doc>Returns a `HTMLOptionsCollection` containing the set of `option` elements contained by this element.</haxe_doc>
		</options>
		<length public="1">
			<x path="Int"/>
			<haxe_doc>Is a `unsigned long` representing the number of `option` elements in this `select` element.</haxe_doc>
		</length>
		<selectedOptions public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a live `HTMLCollection` containing the set of options that are selected.</haxe_doc>
		</selectedOptions>
		<selectedIndex public="1">
			<x path="Int"/>
			<haxe_doc>Is a `long` that reflects the index of the first selected `option` element. The value `-1` indicates no element is selected.</haxe_doc>
		</selectedIndex>
		<value public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the value of the form control (the first selected option).</haxe_doc>
		</value>
		<willValidate public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` that indicates whether the button is a candidate for constraint validation. It is false if any conditions bar it from constraint validation.</haxe_doc>
		</willValidate>
		<validity public="1" set="null">
			<c path="js.html.ValidityState"/>
			<haxe_doc>Returns a `ValidityState` representing the validity state that this control is in.</haxe_doc>
		</validity>
		<validationMessage public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a `DOMString` containing a localized message that describes the validation constraints that the control does not satisfy (if any). This attribute is the empty string if the control is not a candidate for constraint validation (`willValidate` is false), or it satisfies its constraints.</haxe_doc>
		</validationMessage>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Element"/>
			</f>
			<haxe_doc>Gets an item from the options collection for this `select` element. You can also access an item by specifying the index in array-style brackets or parentheses, without calling this method explicitly.</haxe_doc>
		</item>
		<namedItem public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.OptionElement"/>
			</f>
			<haxe_doc>Gets the item in the options collection with the specified name. The name string can match either the `id` or the `name` attribute of an option node. You can also access an item by specifying the name in array-style brackets or parentheses, without calling this method explicitly.</haxe_doc>
		</namedItem>
		<add public="1" set="method">
			<f a="element:?before">
				<x path="haxe.extern.EitherType">
					<c path="js.html.OptionElement"/>
					<c path="js.html.OptGroupElement"/>
				</x>
				<x path="haxe.extern.EitherType">
					<c path="js.html.Element"/>
					<x path="Int"/>
				</x>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</add>
		<checkValidity public="1" set="method">
			<f a=""><x path="Bool"/></f>
			<haxe_doc>Checks whether the element has any constraints and whether it satisfies them. If the element fails its constraints, the browser fires a cancelable `invalid` event at the element (and returns `false`).</haxe_doc>
		</checkValidity>
		<setCustomValidity public="1" set="method">
			<f a="error">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the custom validity message for the selection element to the specified message. Use the empty string to indicate that the element does not have a custom validity error.</haxe_doc>
		</setCustomValidity>
		<haxe_doc><![CDATA[The `HTMLSelectElement` interface represents a `select` HTML Element. These elements also share all of the properties and methods of other HTML elements via the `HTMLElement` interface.

	Documentation [HTMLSelectElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSelectElement"</e></m></meta>
	</class>
	<class path="js.html.Selection" params="" file="/usr/local/lib/haxe/std/js/html/Selection.hx" extern="1">
		<anchorNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the `Node` in which the selection begins.</haxe_doc>
		</anchorNode>
		<anchorOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing the offset of the selection's anchor within the anchorNode. If anchorNode is a text node, this is the number of characters within anchorNode preceding the anchor. If anchorNode is an element, this is the number of child nodes of the anchorNode preceding the anchor.</haxe_doc>
		</anchorOffset>
		<focusNode public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns the `Node` in which the selection ends.</haxe_doc>
		</focusNode>
		<focusOffset public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a number representing the offset of the selection's anchor within the focusNode. If focusNode is a text node, this is the number of characters within focusNode preceding the focus. If focusNode is an element, this is the number of child nodes of the focusNode preceding the focus.</haxe_doc>
		</focusOffset>
		<isCollapsed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Returns a Boolean indicating whether the selection's start and end points are at the same position.</haxe_doc>
		</isCollapsed>
		<rangeCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of ranges in the selection.</haxe_doc>
		</rangeCount>
		<caretBidiLevel public="1"><x path="Int"/></caretBidiLevel>
		<collapse public="1" set="method">
			<f a="node:offset">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</collapse>
		<collapseToStart public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</collapseToStart>
		<collapseToEnd public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</collapseToEnd>
		<extend public="1" set="method">
			<f a="node:offset">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</extend>
		<selectAllChildren public="1" set="method">
			<f a="node">
				<c path="js.html.Node"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</selectAllChildren>
		<deleteFromDocument public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteFromDocument>
		<getRangeAt public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Range"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getRangeAt>
		<addRange public="1" set="method">
			<f a="range">
				<c path="js.html.Range"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</addRange>
		<removeRange public="1" set="method">
			<f a="range">
				<c path="js.html.Range"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeRange>
		<removeAllRanges public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeAllRanges>
		<containsNode public="1" set="method">
			<f a="node:allowPartialContainment">
				<c path="js.html.Node"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</containsNode>
		<modify public="1" set="method">
			<f a="alter:direction:granularity">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</modify>
		<haxe_doc><![CDATA[Calling the `Selection.toString()` method returns the text contained in the selection, e.g.:

	Documentation [Selection](https://developer.mozilla.org/en-US/docs/Web/API/Selection) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Selection$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Selection>]]></haxe_doc>
		<meta><m n=":native"><e>"Selection"</e></m></meta>
	</class>
	<abstract path="js.html.SelectionMode" params="" file="/usr/local/lib/haxe/std/js/html/SelectionMode.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._SelectionMode.SelectionMode_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/SelectionMode.hx" private="1" module="js.html.SelectionMode"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.ShadowElement" params="" file="/usr/local/lib/haxe/std/js/html/ShadowElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<olderShadowRoot public="1" set="null"><c path="js.html.ShadowRoot"/></olderShadowRoot>
		<haxe_doc><![CDATA[The `HTMLShadowElement` interface represents a `shadow` HTML Element, which is used in Shadow DOM.

	Documentation [HTMLShadowElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLShadowElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLShadowElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLShadowElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLShadowElement"</e></m></meta>
	</class>
	<class path="js.html.ShadowRoot" params="" file="/usr/local/lib/haxe/std/js/html/ShadowRoot.hx" extern="1">
		<extends path="js.html.DocumentFragment"/>
		<innerHTML public="1">
			<c path="String"/>
			<haxe_doc>The DOM tree inside the `ShadowRoot`.</haxe_doc>
		</innerHTML>
		<host public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>A DOM element to which the `ShadowRoot` is attatched.</haxe_doc>
		</host>
		<olderShadowRoot public="1" set="null"><c path="js.html.ShadowRoot"/></olderShadowRoot>
		<applyAuthorStyles public="1"><x path="Bool"/></applyAuthorStyles>
		<styleSheets public="1" set="null"><c path="js.html.StyleSheetList"/></styleSheets>
		<getElementsByTagName public="1" set="method"><f a="localName">
	<c path="String"/>
	<c path="js.html.HTMLCollection"/>
</f></getElementsByTagName>
		<getElementsByTagNameNS public="1" set="method"><f a="namespace_:localName">
	<c path="String"/>
	<c path="String"/>
	<c path="js.html.HTMLCollection"/>
</f></getElementsByTagNameNS>
		<getElementsByClassName public="1" set="method"><f a="classNames">
	<c path="String"/>
	<c path="js.html.HTMLCollection"/>
</f></getElementsByClassName>
		<haxe_doc><![CDATA[The `ShadowRoot` interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree.

	Documentation [ShadowRoot](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot>]]></haxe_doc>
		<meta><m n=":native"><e>"ShadowRoot"</e></m></meta>
	</class>
	<class path="js.html.SourceElement" params="" file="/usr/local/lib/haxe/std/js/html/SourceElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `src` HTML attribute, containing the URL for the media resource. The `HTMLSourceElement.src` property has a meaning only when the associated `source` element is nested in a media element that is a `video` or an `audio` element. It has no meaning and is ignored when it is nested in a `picture` element.</haxe_doc>
		</src>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `type` HTML attribute, containing the type of the media resource.</haxe_doc>
		</type>
		<srcset public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `srcset` HTML attribute, containing a list of candidate images, separated by a comma (`',', U+002C COMMA`). A candidate image is a URL followed by a `'w'` with the width of the images, or an `'x'` followed by the pixel density.</haxe_doc>
		</srcset>
		<sizes public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing image sizes between breakpoints</haxe_doc>
		</sizes>
		<media public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` reflecting the `media` HTML attribute, containing the intended type of the media resource.</haxe_doc>
		</media>
		<haxe_doc><![CDATA[The `HTMLSourceElement` interface provides special properties (beyond the regular `HTMLElement` object interface it also has available to it by inheritance) for manipulating `source` elements.

	Documentation [HTMLSourceElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLSourceElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSourceElement"</e></m></meta>
	</class>
	<class path="js.html.SpanElement" params="" file="/usr/local/lib/haxe/std/js/html/SpanElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<haxe_doc><![CDATA[The `HTMLSpanElement` interface represents a `span` element and derives from the `HTMLElement` interface, but without implementing any additional properties or methods.

	Documentation [HTMLSpanElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLSpanElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLSpanElement"</e></m></meta>
	</class>
	<class path="js.html.SpeechSynthesis" params="" file="/usr/local/lib/haxe/std/js/html/SpeechSynthesis.hx" extern="1">
		<pending public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A `Boolean` that returns `true` if the utterance queue contains as-yet-unspoken utterances.</haxe_doc>
		</pending>
		<speaking public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A `Boolean` that returns `true` if an utterance is currently in the process of being spoken — even if `SpeechSynthesis` is in a paused state.</haxe_doc>
		</speaking>
		<paused public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A `Boolean` that returns `true` if the `SpeechSynthesis` object is in a paused state.</haxe_doc>
		</paused>
		<speak public="1" set="method">
			<f a="utterance">
				<c path="js.html.SpeechSynthesisUtterance"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds an `SpeechSynthesisUtterance` to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.</haxe_doc>
		</speak>
		<cancel public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Removes all utterances from the utterance queue.</haxe_doc>
		</cancel>
		<pause public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Puts the `SpeechSynthesis` object into a paused state.</haxe_doc>
		</pause>
		<resume public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Puts the `SpeechSynthesis` object into a non-paused state: resumes it if it was already paused.</haxe_doc>
		</resume>
		<getVoices public="1" set="method">
			<f a=""><c path="Array"><c path="js.html.SpeechSynthesisVoice"/></c></f>
			<haxe_doc>Returns a list of `SpeechSynthesisVoice` objects representing all the available voices on the current device.</haxe_doc>
		</getVoices>
		<haxe_doc><![CDATA[The `SpeechSynthesis` interface of the Web Speech API is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides.

	Documentation [SpeechSynthesis](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis>]]></haxe_doc>
		<meta><m n=":native"><e>"SpeechSynthesis"</e></m></meta>
	</class>
	<class path="js.html.SpeechSynthesisUtterance" params="" file="/usr/local/lib/haxe/std/js/html/SpeechSynthesisUtterance.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Gets and sets the text that will be synthesised when the utterance is spoken.</haxe_doc>
		</text>
		<lang public="1">
			<c path="String"/>
			<haxe_doc>Gets and sets the language of the utterance.</haxe_doc>
		</lang>
		<voice public="1">
			<c path="js.html.SpeechSynthesisVoice"/>
			<haxe_doc>Gets and sets the voice that will be used to speak the utterance.</haxe_doc>
		</voice>
		<volume public="1">
			<x path="Float"/>
			<haxe_doc>Gets and sets the volume that the utterance will be spoken at.</haxe_doc>
		</volume>
		<rate public="1">
			<x path="Float"/>
			<haxe_doc>Gets and sets the speed at which the utterance will be spoken at.</haxe_doc>
		</rate>
		<pitch public="1">
			<x path="Float"/>
			<haxe_doc>Gets and sets the pitch at which the utterance will be spoken at.</haxe_doc>
		</pitch>
		<onstart public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when the utterance has begun to be spoken.</haxe_doc>
		</onstart>
		<onend public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when the utterance has finished being spoken.</haxe_doc>
		</onend>
		<onerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when an error occurs that prevents the utterance from being succesfully spoken.</haxe_doc>
		</onerror>
		<onpause public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when the utterance is paused part way through.</haxe_doc>
		</onpause>
		<onresume public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when a paused utterance is resumed.</haxe_doc>
		</onresume>
		<onmark public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when the spoken utterance reaches a named SSML "mark" tag.</haxe_doc>
		</onmark>
		<onboundary public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fired when the spoken utterance reaches a word or sentence boundary.</haxe_doc>
		</onboundary>
		<new public="1" set="method">
			<f a="text">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[The `SpeechSynthesisUtterance` interface of the Web Speech API represents a speech request. It contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.)

	Documentation [SpeechSynthesisUtterance](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance>]]></haxe_doc>
		<meta><m n=":native"><e>"SpeechSynthesisUtterance"</e></m></meta>
	</class>
	<class path="js.html.SpeechSynthesisVoice" params="" file="/usr/local/lib/haxe/std/js/html/SpeechSynthesisVoice.hx" extern="1">
		<voiceURI public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns the type of URI and location of the speech synthesis service for this voice.</haxe_doc>
		</voiceURI>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a human-readable name that represents the voice.</haxe_doc>
		</name>
		<lang public="1" set="null">
			<c path="String"/>
			<haxe_doc>Returns a BCP 47 language tag indicating the language of the voice.</haxe_doc>
		</lang>
		<localService public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>A `Boolean` indicating whether the voice is supplied by a local speech synthesizer service (`true`), or a remote speech synthesizer service (`false`.)</haxe_doc>
		</localService>
		<default_ public="1" set="null">
			<x path="Bool"/>
			<meta><m n=":native"><e>"default"</e></m></meta>
		</default_>
		<haxe_doc><![CDATA[The `SpeechSynthesisVoice` interface of the Web Speech API represents a voice that the system supports. Every `SpeechSynthesisVoice` has its own relative speech service including information about language, name and URI.

	Documentation [SpeechSynthesisVoice](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisVoice) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisVoice$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisVoice>]]></haxe_doc>
		<meta><m n=":native"><e>"SpeechSynthesisVoice"</e></m></meta>
	</class>
	<class path="js.html.Storage" params="" file="/usr/local/lib/haxe/std/js/html/Storage.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an integer representing the number of data items stored in the `Storage` object.</haxe_doc>
		</length>
		<key public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</key>
		<getItem public="1" set="method">
			<f a="key">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getItem>
		<setItem public="1" set="method">
			<f a="key:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setItem>
		<removeItem public="1" set="method">
			<f a="key">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeItem>
		<clear public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</clear>
		<haxe_doc><![CDATA[The `Storage` interface of the Web Storage API provides access to the session storage or local storage for a particular domain, allowing you to for example add, modify or delete stored data items.

	Documentation [Storage](https://developer.mozilla.org/en-US/docs/Web/API/Storage) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Storage$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Storage>]]></haxe_doc>
		<meta><m n=":native"><e>"Storage"</e></m></meta>
	</class>
	<class path="js.html.StyleElement" params="" file="/usr/local/lib/haxe/std/js/html/StyleElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<disabled public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` value representing whether or not the stylesheet is disabled (true) or not (false).</haxe_doc>
		</disabled>
		<media public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the intended destination medium for style information.</haxe_doc>
		</media>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the type of style being applied by this statement.</haxe_doc>
		</type>
		<scoped public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` value indicating if the element applies to the whole document (`false`) or only to the parent's sub-tree (`true`).</haxe_doc>
		</scoped>
		<sheet public="1" set="null"><c path="js.html.StyleSheet"/></sheet>
		<haxe_doc><![CDATA[The `HTMLStyleElement` interface represents a `style` element. It inherits properties and methods from its parent, `HTMLElement`, and from `LinkStyle`.

	Documentation [HTMLStyleElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLStyleElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLStyleElement"</e></m></meta>
	</class>
	<class path="js.html.StyleSheetList" params="" file="/usr/local/lib/haxe/std/js/html/StyleSheetList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<item public="1" set="method"><f a="index">
	<x path="Int"/>
	<c path="js.html.StyleSheet"/>
</f></item>
		<haxe_doc><![CDATA[The `StyleSheetList` interface represents a list of `StyleSheet`.

	Documentation [StyleSheetList](https://developer.mozilla.org/en-US/docs/Web/API/StyleSheetList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/StyleSheetList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/StyleSheetList>]]></haxe_doc>
		<meta><m n=":native"><e>"StyleSheetList"</e></m></meta>
	</class>
	<class path="js.html.SubtleCrypto" params="" file="/usr/local/lib/haxe/std/js/html/SubtleCrypto.hx" extern="1">
		<encrypt public="1" set="method">
			<f a="algorithm:key:data">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</encrypt>
		<decrypt public="1" set="method">
			<f a="algorithm:key:data">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</decrypt>
		<sign public="1" set="method">
			<f a="algorithm:key:data">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</sign>
		<verify public="1" set="method">
			<f a="algorithm:key:signature:data">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</verify>
		<digest public="1" set="method">
			<f a="algorithm:data">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</digest>
		<generateKey public="1" set="method">
			<f a="algorithm:extractable:keyUsages">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<x path="Bool"/>
				<c path="Array"><c path="String"/></c>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</generateKey>
		<deriveKey public="1" set="method">
			<f a="algorithm:baseKey:derivedKeyType:extractable:keyUsages">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<x path="Bool"/>
				<c path="Array"><c path="String"/></c>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deriveKey>
		<deriveBits public="1" set="method">
			<f a="algorithm:baseKey:length">
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="Int"/>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deriveBits>
		<importKey public="1" set="method">
			<f a="format:keyData:algorithm:extractable:keyUsages">
				<c path="String"/>
				<d/>
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<x path="Bool"/>
				<c path="Array"><c path="String"/></c>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</importKey>
		<exportKey public="1" set="method">
			<f a="format:key">
				<c path="String"/>
				<c path="js.html.CryptoKey"/>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</exportKey>
		<wrapKey public="1" set="method">
			<f a="format:key:wrappingKey:wrapAlgorithm">
				<c path="String"/>
				<c path="js.html.CryptoKey"/>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</wrapKey>
		<unwrapKey public="1" set="method">
			<f a="format:wrappedKey:unwrappingKey:unwrapAlgorithm:unwrappedKeyAlgorithm:extractable:keyUsages">
				<c path="String"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.ArrayBufferView"/>
					<c path="js.html.ArrayBuffer"/>
				</x>
				<c path="js.html.CryptoKey"/>
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<x path="haxe.extern.EitherType">
					<d/>
					<c path="String"/>
				</x>
				<x path="Bool"/>
				<c path="Array"><c path="String"/></c>
				<c path="js.Promise"><d/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</unwrapKey>
		<haxe_doc><![CDATA[The `SubtleCrypto` interface represents a set of cryptographic primitives. It is available via the `Crypto.subtle` properties available in a window context (via `Window.crypto`).

	Documentation [SubtleCrypto](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto>]]></haxe_doc>
		<meta><m n=":native"><e>"SubtleCrypto"</e></m></meta>
	</class>
	<class path="js.html.TableCaptionElement" params="" file="/usr/local/lib/haxe/std/js/html/TableCaptionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` which represents an enumerated attribute indicating alignment of the caption with respect to the table.</haxe_doc>
		</align>
		<haxe_doc><![CDATA[The `HTMLTableCaptionElement` interface special properties (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating table caption elements.

	Documentation [HTMLTableCaptionElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCaptionElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableCaptionElement"</e></m></meta>
	</class>
	<class path="js.html.TableCellElement" params="" file="/usr/local/lib/haxe/std/js/html/TableCellElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<colSpan public="1">
			<x path="Int"/>
			<haxe_doc>Is a `unsigned` `long` that represents the number of columns this cell must span. It reflects the `colspan` attribute.</haxe_doc>
		</colSpan>
		<rowSpan public="1">
			<x path="Int"/>
			<haxe_doc>Is a `unsigned` `long` that represents the number of rows this cell must span. It reflects the `rowspan` attribute.</haxe_doc>
		</rowSpan>
		<headers public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMSettableTokenList` describing a list of `id` of `th` elements that represents headers associated with the cell. It reflects the `headers` attribute.</haxe_doc>
		</headers>
		<cellIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is a `long` representing the cell position in the cells collection of the `tr` it belongs to. If the cell doesn't belong to a `tr`, it returns `-1`.</haxe_doc>
		</cellIndex>
		<abbr public="1"><c path="String"/></abbr>
		<scope public="1"><c path="String"/></scope>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing an enumerated value reflecting the `align` attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, and `"center"`.</haxe_doc>
		</align>
		<axis public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a name grouping cells in virtual. It reflects the obsolete `axis` attribute.</haxe_doc>
		</axis>
		<height public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a length of pixel of the hinted height of the cell. It reflects the obsolete `height` attribute.</haxe_doc>
		</height>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a length of pixel of the hinted width of the cell. It reflects the obsolete `width` attribute.</haxe_doc>
		</width>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing one single chararcter. This character is the one to align all the cell of a column on. It reflects the `char` and default to the decimal points associated with the language, e.g. `'.'` for English, or `','` for French. This property was optional and was not very well supported.</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a integer indicating how many characters must be left at the right (for left-to-right scripts; or at the left for right-to-left scripts) of the character defined by `HTMLTableCellElement.ch`. This property was optional and was not very well supported.</haxe_doc>
		</chOff>
		<noWrap public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` value reflecting the `nowrap` attribute and indicating if cell content can be broken in several lines.</haxe_doc>
		</noWrap>
		<vAlign public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing an enumerated value indicating how the content of the cell must be vertically aligned. It reflects the `valign` attribute and can have one of the following values: `"top"`, `"middle"`, `"bottom"`, or `"baseline"`.</haxe_doc>
		</vAlign>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the background color of the cells. It reflects the obsolete `bgColor` attribute.</haxe_doc>
		</bgColor>
		<haxe_doc><![CDATA[The `HTMLTableCellElement` interface provides special properties and methods (beyond the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document.

	Documentation [HTMLTableCellElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableCellElement"</e></m></meta>
	</class>
	<class path="js.html.TableColElement" params="" file="/usr/local/lib/haxe/std/js/html/TableColElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<span public="1"><x path="Int"/></span>
		<align public="1"><c path="String"/></align>
		<ch public="1"><c path="String"/></ch>
		<chOff public="1"><c path="String"/></chOff>
		<vAlign public="1"><c path="String"/></vAlign>
		<width public="1"><c path="String"/></width>
		<haxe_doc><![CDATA[The `HTMLTableColElement` interface provides special properties (beyond the `HTMLElement` interface it also has available to it inheritance) for manipulating single or grouped table column elements.

	Documentation [HTMLTableColElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableColElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableColElement"</e></m></meta>
	</class>
	<class path="js.html.TableElement" params="" file="/usr/local/lib/haxe/std/js/html/TableElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<caption public="1">
			<c path="js.html.TableCaptionElement"/>
			<haxe_doc>Is a `HTMLTableCaptionElement` representing the first `caption` that is a child of the element, or `null` if none is found. When set, if the object doesn't represent a `caption`, a `DOMException` with the `HierarchyRequestError` name is thrown. If a correct object is given, it is inserted in the tree as the first child of this element and the first `caption` that is a child of this element is removed from the tree, if any.</haxe_doc>
		</caption>
		<tHead public="1">
			<c path="js.html.TableSectionElement"/>
			<haxe_doc>Is a `HTMLTableSectionElement` representing the first `thead` that is a child of the element, or `null` if none is found. When set, if the object doesn't represent a `thead`, a `DOMException` with the `HierarchyRequestError` name is thrown. If a correct object is given, it is inserted in the tree immediately before the first element that is neither a `caption`, nor a `colgroup`, or as the last child if there is no such element, and the first `thead` that is a child of this element is removed from the tree, if any.</haxe_doc>
		</tHead>
		<tFoot public="1">
			<c path="js.html.TableSectionElement"/>
			<haxe_doc>Is a `HTMLTableSectionElement` representing the first `tfoot` that is a child of the element, or `null` if none is found. When set, if the object doesn't represent a `tfoot`, a `DOMException` with the `HierarchyRequestError` name is thrown. If a correct object is given, it is inserted in the tree immediately before the first element that is neither a `caption`, a `colgroup`, nor a `thead`, or as the last child if there is no such element, and the first `tfoot` that is a child of this element is removed from the tree, if any.</haxe_doc>
		</tFoot>
		<tBodies public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a live `HTMLCollection` containing all the `tbody` of the element. The `HTMLCollection` is live and is automatically updated when the `HTMLTableElement` changes.</haxe_doc>
		</tBodies>
		<rows public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a live `HTMLCollection` containing all the rows of the element, that is all `tr` that are a child of the element, or a child or one of its `thead`, `tbody` and `tfoot` children. The rows members of a `thead` appear first, in tree order, and those members of a `tbody` last, also in tree order. The `HTMLCollection` is live and is automatically updated when the `HTMLTableElement` changes.</haxe_doc>
		</rows>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing an enumerated value reflecting the `align` attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, and `"center"`.</haxe_doc>
		</align>
		<border public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the width in pixels of the border of the table. It reflects the obsolete `border` attribute.</haxe_doc>
		</border>
		<frame public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the type of the external borders of the table. It reflects the obsolete `frame` attribute and can take one of the following values: `"void"`, `"above"`, `"below"`, `"hsides"`, `"vsides"`, `"lhs"`, `"rhs"`, `"box"`, or `"border"`.</haxe_doc>
		</frame>
		<rules public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the type of the internal borders of the table. It reflects the obsolete `rules` attribute and can take one of the following values: `"none"`, `"groups"`, `"rows"`, `"cols"`, or `"all"`.</haxe_doc>
		</rules>
		<summary public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a description of the purpose or the structure of the table. It reflects the obsolete `summary` attribute.</haxe_doc>
		</summary>
		<width public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the length in pixels or in percentage of the desired width fo the entire table. It reflects the obsolete `width` attribute.</haxe_doc>
		</width>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the background color of the cells. It reflects the obsolete `bgColor` attribute.</haxe_doc>
		</bgColor>
		<cellPadding public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the width in pixels of the horizontal and vertical sapce between cell content and cell borders. It reflects the obsolete `cellpadding` attribute.</haxe_doc>
		</cellPadding>
		<cellSpacing public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the width in pixels of the horizontal and vertical separation between cells. It reflects the obsolete `cellspacing` attribute.</haxe_doc>
		</cellSpacing>
		<createCaption public="1" set="method">
			<f a=""><c path="js.html.Element"/></f>
			<haxe_doc>Returns an `HTMLElement` representing the first `caption` that is a child of the element. If none is found, a new one is created and inserted in the tree as the first child of the `table` element.</haxe_doc>
		</createCaption>
		<deleteCaption public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Removes the first `caption` that is a child of the element.</haxe_doc>
		</deleteCaption>
		<createTHead public="1" set="method">
			<f a=""><c path="js.html.Element"/></f>
			<haxe_doc>Returns an `HTMLElement` representing the first `thead` that is a child of the element. If none is found, a new one is created and inserted in the tree immediately before the first element that is neither a `caption`, nor a `colgroup`, or as the last child if there is no such element.</haxe_doc>
		</createTHead>
		<deleteTHead public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Removes the first `thead` that is a child of the element.</haxe_doc>
		</deleteTHead>
		<createTFoot public="1" set="method">
			<f a=""><c path="js.html.Element"/></f>
			<haxe_doc>Returns an `HTMLElement` representing the first `tfoot` that is a child of the element. If none is found, a new one is created and inserted in the tree immediately before the first element that is neither a `caption`, a `colgroup`, nor a `thead`, or as the last child if there is no such element.</haxe_doc>
		</createTFoot>
		<deleteTFoot public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Removes the first `tfoot` that is a child of the element.</haxe_doc>
		</deleteTFoot>
		<createTBody public="1" set="method"><f a=""><c path="js.html.Element"/></f></createTBody>
		<insertRow public="1" set="method">
			<f a="?index" v="-1">
				<x path="Int"/>
				<c path="js.html.Element"/>
			</f>
			<meta><m n=":value"><e>{ index : -1 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertRow>
		<deleteRow public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteRow>
		<haxe_doc><![CDATA[The `HTMLTableElement` interface provides special properties and methods (beyond the regular `HTMLElement` object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document.

	Documentation [HTMLTableElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableElement"</e></m></meta>
	</class>
	<class path="js.html.TableRowElement" params="" file="/usr/local/lib/haxe/std/js/html/TableRowElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<rowIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `long` value which gives the logical position of the row within the entire table. If the row is not part of a table, returns `-1`.</haxe_doc>
		</rowIndex>
		<sectionRowIndex public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns a `long` value which gives the logical position of the row within the table section it belongs to. If the row is not part of a section, returns `-1`.</haxe_doc>
		</sectionRowIndex>
		<cells public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a live `HTMLCollection` containing the cells in the row. The `HTMLCollection` is live and is automatically updated when cells are added or removed.</haxe_doc>
		</cells>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing an enumerated value reflecting the `align` attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, and `"center"`.</haxe_doc>
		</align>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing one single character. This character is the one to align all the cell of a column on. It reflects the `char` and default to the decimal points associated with the language, e.g. `'.'` for English, or `','` for French. This property was optional and was not very well supported.</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a integer indicating how many characters must be left at the right (for left-to-right scripts; or at the left for right-to-left scripts) of the character defined by `HTMLTableRowElement.ch`. This property was optional and was not very well supported.</haxe_doc>
		</chOff>
		<vAlign public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing an enumerated value indicating how the content of the cell must be vertically aligned. It reflects the `valign` attribute and can have one of the following values: `"top"`, `"middle"`, `"bottom"`, or `"baseline"`.</haxe_doc>
		</vAlign>
		<bgColor public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing the background color of the cells. It reflects the obsolete `bgColor` attribute.</haxe_doc>
		</bgColor>
		<insertCell public="1" set="method">
			<f a="?index" v="-1">
				<x path="Int"/>
				<c path="js.html.Element"/>
			</f>
			<meta><m n=":value"><e>{ index : -1 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertCell>
		<deleteCell public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteCell>
		<haxe_doc><![CDATA[The `HTMLTableRowElement` interface provides special properties and methods (beyond the `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table.

	Documentation [HTMLTableRowElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableRowElement"</e></m></meta>
	</class>
	<class path="js.html.TableSectionElement" params="" file="/usr/local/lib/haxe/std/js/html/TableSectionElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<rows public="1" set="null">
			<c path="js.html.HTMLCollection"/>
			<haxe_doc>Returns a live `HTMLCollection` containing the rows in the section. The `HTMLCollection` is live and is automatically updated when rows are added or removed.</haxe_doc>
		</rows>
		<align public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing an enumerated value reflecting the `align` attribute. It indicates the alignment of the element's contents with respect to the surrounding context. The possible values are `"left"`, `"right"`, and `"center"`.</haxe_doc>
		</align>
		<ch public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing one single chararcter. This character is the one to align all the cell of a column on. It reflects the `char` and default to the decimal points associated with the language, e.g. `'.'` for English, or `','` for French. This property was optional and was not very well supported.</haxe_doc>
		</ch>
		<chOff public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` containing a integer indicating how many characters must be left at the right (for left-to-right scripts; or at the left for right-to-left scripts) of the character defined by `HTMLTableRowElement.ch`. This property was optional and was not very well supported.</haxe_doc>
		</chOff>
		<vAlign public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing an enumerated value indicating how the content of the cell must be vertically aligned. It reflects the `valign` attribute and can have one of the following values: `"top"`, `"middle"`, `"bottom"`, or `"baseline"`.</haxe_doc>
		</vAlign>
		<insertRow public="1" set="method">
			<f a="?index" v="-1">
				<x path="Int"/>
				<c path="js.html.Element"/>
			</f>
			<meta><m n=":value"><e>{ index : -1 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</insertRow>
		<deleteRow public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteRow>
		<haxe_doc><![CDATA[The `HTMLTableSectionElement` interface provides special properties and methods (beyond the `HTMLElement` interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table.

	Documentation [HTMLTableSectionElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTableSectionElement"</e></m></meta>
	</class>
	<class path="js.html.TextAreaElement" params="" file="/usr/local/lib/haxe/std/js/html/TextAreaElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<autofocus public="1"><x path="Bool"/></autofocus>
		<cols public="1"><x path="Int"/></cols>
		<disabled public="1"><x path="Bool"/></disabled>
		<form public="1" set="null"><c path="js.html.FormElement"/></form>
		<maxLength public="1"><x path="Int"/></maxLength>
		<name public="1"><c path="String"/></name>
		<placeholder public="1"><c path="String"/></placeholder>
		<readOnly public="1"><x path="Bool"/></readOnly>
		<required public="1"><x path="Bool"/></required>
		<rows public="1"><x path="Int"/></rows>
		<wrap public="1"><c path="String"/></wrap>
		<type public="1" set="null"><c path="String"/></type>
		<defaultValue public="1"><c path="String"/></defaultValue>
		<value public="1"><c path="String"/></value>
		<textLength public="1" set="null"><x path="Int"/></textLength>
		<willValidate public="1" set="null"><x path="Bool"/></willValidate>
		<validity public="1" set="null"><c path="js.html.ValidityState"/></validity>
		<validationMessage public="1" set="null"><c path="String"/></validationMessage>
		<selectionStart public="1"><x path="Int"/></selectionStart>
		<selectionEnd public="1"><x path="Int"/></selectionEnd>
		<selectionDirection public="1"><c path="String"/></selectionDirection>
		<checkValidity public="1" set="method"><f a=""><x path="Bool"/></f></checkValidity>
		<setCustomValidity public="1" set="method"><f a="error">
	<c path="String"/>
	<x path="Void"/>
</f></setCustomValidity>
		<select public="1" set="method"><f a=""><x path="Void"/></f></select>
		<setRangeText public="1" set="method">
			<f a="replacement:start:end:?selectionMode" v=":::&quot;preserve&quot;">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="js.html.SelectionMode"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ selectionMode : "preserve" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><setRangeText public="1" set="method">
	<f a="replacement">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</setRangeText></overloads>
		</setRangeText>
		<setSelectionRange public="1" set="method">
			<f a="start:end:?direction">
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setSelectionRange>
		<haxe_doc><![CDATA[The `HTMLTextAreaElement` interface provides special properties and methods for manipulating the layout and presentation of `textarea` elements.

	Documentation [HTMLTextAreaElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTextAreaElement"</e></m></meta>
	</class>
	<class path="js.html.TextMetrics" params="" file="/usr/local/lib/haxe/std/js/html/TextMetrics.hx" extern="1">
		<width public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Is a `double` giving the calculated width of a segment of inline text in CSS pixels. It takes into account the current font of the context.</haxe_doc>
		</width>
		<haxe_doc><![CDATA[The `TextMetrics` interface represents the dimension of a text in the canvas, as created by the `CanvasRenderingContext2D.measureText()` method.

	Documentation [TextMetrics](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics>]]></haxe_doc>
		<meta><m n=":native"><e>"TextMetrics"</e></m></meta>
	</class>
	<class path="js.html.TextTrack" params="" file="/usr/local/lib/haxe/std/js/html/TextTrack.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<kind public="1" set="null"><x path="js.html.TextTrackKind"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<language public="1" set="null"><c path="String"/></language>
		<id public="1" set="null"><c path="String"/></id>
		<inBandMetadataTrackDispatchType public="1" set="null"><c path="String"/></inBandMetadataTrackDispatchType>
		<mode public="1"><x path="js.html.TextTrackMode"/></mode>
		<cues public="1" set="null"><c path="js.html.TextTrackCueList"/></cues>
		<activeCues public="1" set="null"><c path="js.html.TextTrackCueList"/></activeCues>
		<oncuechange public="1"><x path="haxe.Function"/></oncuechange>
		<addCue public="1" set="method"><f a="cue">
	<c path="js.html.VTTCue"/>
	<x path="Void"/>
</f></addCue>
		<removeCue public="1" set="method">
			<f a="cue">
				<c path="js.html.VTTCue"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</removeCue>
		<meta><m n=":native"><e>"TextTrack"</e></m></meta>
	</class>
	<class path="js.html.TextTrackCue" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackCue.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<track public="1" set="null"><c path="js.html.TextTrack"/></track>
		<id public="1"><c path="String"/></id>
		<startTime public="1"><x path="Float"/></startTime>
		<endTime public="1"><x path="Float"/></endTime>
		<pauseOnExit public="1"><x path="Bool"/></pauseOnExit>
		<onenter public="1"><x path="haxe.Function"/></onenter>
		<onexit public="1"><x path="haxe.Function"/></onexit>
		<meta><m n=":native"><e>"TextTrackCue"</e></m></meta>
	</class>
	<class path="js.html.TextTrackCueList" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackCueList.hx" extern="1">
		<length public="1" set="null"><x path="Int"/></length>
		<getCueById public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="js.html.VTTCue"/>
</f></getCueById>
		<meta><m n=":native"><e>"TextTrackCueList"</e></m></meta>
	</class>
	<abstract path="js.html.TextTrackKind" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackKind.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._TextTrackKind.TextTrackKind_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackKind.hx" private="1" module="js.html.TextTrackKind"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.TextTrackList" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<onaddtrack public="1"><x path="haxe.Function"/></onaddtrack>
		<onremovetrack public="1"><x path="haxe.Function"/></onremovetrack>
		<getTrackById public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="js.html.TextTrack"/>
</f></getTrackById>
		<meta><m n=":native"><e>"TextTrackList"</e></m></meta>
	</class>
	<abstract path="js.html.TextTrackMode" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackMode.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._TextTrackMode.TextTrackMode_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/TextTrackMode.hx" private="1" module="js.html.TextTrackMode"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.TimeRanges" params="" file="/usr/local/lib/haxe/std/js/html/TimeRanges.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an `unsigned long` representing the number of time ranges represented by the time range object.</haxe_doc>
		</length>
		<start public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</start>
		<end public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</end>
		<haxe_doc><![CDATA[The `TimeRanges` interface is used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the `audio` and `video` elements.

	Documentation [TimeRanges](https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges>]]></haxe_doc>
		<meta><m n=":native"><e>"TimeRanges"</e></m></meta>
	</class>
	<class path="js.html.TitleElement" params="" file="/usr/local/lib/haxe/std/js/html/TitleElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<text public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` representing the text of the document's title.</haxe_doc>
		</text>
		<haxe_doc><![CDATA[The `HTMLTitleElement` interface contains the title for a document. This element inherits all of the properties and methods of the `HTMLElement` interface.

	Documentation [HTMLTitleElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTitleElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTitleElement"</e></m></meta>
	</class>
	<class path="js.html.Touch" params="" file="/usr/local/lib/haxe/std/js/html/Touch.hx" extern="1">
		<identifier public="1" set="null"><x path="Int"/></identifier>
		<target public="1" set="null"><c path="js.html.EventTarget"/></target>
		<screenX public="1" set="null"><x path="Int"/></screenX>
		<screenY public="1" set="null"><x path="Int"/></screenY>
		<clientX public="1" set="null"><x path="Int"/></clientX>
		<clientY public="1" set="null"><x path="Int"/></clientY>
		<pageX public="1" set="null"><x path="Int"/></pageX>
		<pageY public="1" set="null"><x path="Int"/></pageY>
		<radiusX public="1" set="null"><x path="Int"/></radiusX>
		<radiusY public="1" set="null"><x path="Int"/></radiusY>
		<rotationAngle public="1" set="null"><x path="Float"/></rotationAngle>
		<force public="1" set="null"><x path="Float"/></force>
		<new public="1" set="method">
			<f a="touchInitDict">
				<t path="js.html.TouchInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `Touch` interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad.

	Documentation [Touch](https://developer.mozilla.org/en-US/docs/Web/API/Touch) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Touch$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Touch>]]></haxe_doc>
		<meta><m n=":native"><e>"Touch"</e></m></meta>
	</class>
	<class path="js.html.TouchEvent" params="" file="/usr/local/lib/haxe/std/js/html/TouchEvent.hx" extern="1">
		<extends path="js.html.UIEvent"/>
		<touches public="1" set="null"><c path="js.html.TouchList"/></touches>
		<targetTouches public="1" set="null"><c path="js.html.TouchList"/></targetTouches>
		<changedTouches public="1" set="null"><c path="js.html.TouchList"/></changedTouches>
		<altKey public="1" set="null"><x path="Bool"/></altKey>
		<metaKey public="1" set="null"><x path="Bool"/></metaKey>
		<ctrlKey public="1" set="null"><x path="Bool"/></ctrlKey>
		<shiftKey public="1" set="null"><x path="Bool"/></shiftKey>
		<initTouchEvent public="1" set="method"><f a="type:canBubble:cancelable:view:detail:ctrlKey:altKey:shiftKey:metaKey:touches:targetTouches:changedTouches">
	<c path="String"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.Window"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<c path="js.html.TouchList"/>
	<c path="js.html.TouchList"/>
	<c path="js.html.TouchList"/>
	<x path="Void"/>
</f></initTouchEvent>
		<new public="1" set="method">
			<f a="type:?eventInitDict">
				<c path="String"/>
				<t path="js.html.TouchEventInit"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<haxe_doc><![CDATA[The `TouchEvent` interface represents an event sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth.

	Documentation [TouchEvent](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent>]]></haxe_doc>
		<meta><m n=":native"><e>"TouchEvent"</e></m></meta>
	</class>
	<typedef path="js.html.TouchEventInit" params="" file="/usr/local/lib/haxe/std/js/html/TouchEventInit.hx"><a>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<touches>
		<x path="Null"><c path="Array"><c path="js.html.Touch"/></c></x>
		<meta><m n=":optional"/></meta>
	</touches>
	<targetTouches>
		<x path="Null"><c path="Array"><c path="js.html.Touch"/></c></x>
		<meta><m n=":optional"/></meta>
	</targetTouches>
	<shiftKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</shiftKey>
	<modifierSymbolLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbolLock>
	<modifierSymbol>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierSymbol>
	<modifierScrollLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierScrollLock>
	<modifierOS>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierOS>
	<modifierNumLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierNumLock>
	<modifierFnLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFnLock>
	<modifierFn>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierFn>
	<modifierCapsLock>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierCapsLock>
	<modifierAltGraph>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</modifierAltGraph>
	<metaKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</metaKey>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<ctrlKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</ctrlKey>
	<changedTouches>
		<x path="Null"><c path="Array"><c path="js.html.Touch"/></c></x>
		<meta><m n=":optional"/></meta>
	</changedTouches>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
	<altKey>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</altKey>
</a></typedef>
	<typedef path="js.html.TouchInit" params="" file="/usr/local/lib/haxe/std/js/html/TouchInit.hx"><a>
	<target><c path="js.html.EventTarget"/></target>
	<screenY>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</screenY>
	<screenX>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</screenX>
	<rotationAngle>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</rotationAngle>
	<radiusY>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</radiusY>
	<radiusX>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</radiusX>
	<pageY>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</pageY>
	<pageX>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</pageX>
	<identifier><x path="Int"/></identifier>
	<force>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</force>
	<clientY>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</clientY>
	<clientX>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</clientX>
</a></typedef>
	<class path="js.html.TouchList" params="" file="/usr/local/lib/haxe/std/js/html/TouchList.hx" extern="1">
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of `Touch` objects in the `TouchList`.</haxe_doc>
		</length>
		<item public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Touch"/>
			</f>
			<haxe_doc>Returns the `Touch` object at the specified index in the list.</haxe_doc>
		</item>
		<identifiedTouch public="1" set="method">
			<f a="identifier">
				<x path="Int"/>
				<c path="js.html.Touch"/>
			</f>
			<haxe_doc>Returns the first `Touch` item in the list whose identifier matches a specified value.</haxe_doc>
		</identifiedTouch>
		<haxe_doc><![CDATA[The `TouchList` interface represents a list of contact points with a touch surface; for example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding `TouchList` object would have one `Touch` object for each finger, for a total of three entries.

	Documentation [TouchList](https://developer.mozilla.org/en-US/docs/Web/API/TouchList) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/TouchList$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/TouchList>]]></haxe_doc>
		<meta><m n=":native"><e>"TouchList"</e></m></meta>
	</class>
	<class path="js.html.TrackElement" params="" file="/usr/local/lib/haxe/std/js/html/TrackElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<NONE public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<LOADING public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</LOADING>
		<LOADED public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</LOADED>
		<ERROR public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</ERROR>
		<kind public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `kind` HTML attribute, indicating how the text track is meant to be used. Possible values are: subtitles, captions, descriptions, chapters, metadata.</haxe_doc>
		</kind>
		<src public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `src` HTML attribute, indicating the address of the text track data.</haxe_doc>
		</src>
		<srclang public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `srclang` HTML attribute, indicating the language of the text track data.</haxe_doc>
		</srclang>
		<label public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `label` HTML attribute, indicating a user-readable title for the track.</haxe_doc>
		</label>
		<default_ public="1">
			<x path="Bool"/>
			<meta><m n=":native"><e>"default"</e></m></meta>
		</default_>
		<readyState public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns  an <code>unsigned short</code><code> </code>that show the readiness state of the track:
		 <table style="margin: 0px 0px 1.286em;" class="standard-table">
		  
		   <tr>
		    <td class="header">Constant</td>
		    <td class="header">Value</td>
		    <td class="header">Description</td>
		   </tr>
		   <tr>
		    <td><code style="font-size: 14px;">NONE</code></td>
		    <td>0</td>
		    <td>Indicates that the text track's cues have not been obtained.</td>
		   </tr>
		   <tr>
		    <td><code style="font-size: 14px;">LOADING</code></td>
		    <td>1</td>
		    <td>Indicates that the text track is loading and there have been no fatal errors encountered so far. Further cues might still be added to the track by the parser.</td>
		   </tr>
		   <tr>
		    <td><code style="font-size: 14px;">LOADED</code></td>
		    <td>2</td>
		    <td>Indicates that the text track has been loaded with no fatal errors.</td>
		   </tr>
		   <tr>
		    <td><code style="font-size: 14px;">ERROR</code></td>
		    <td>3</td>
		    <td>Indicates that the text track was enabled, but when the user agent attempted to obtain it, this failed in some way. Some or all of the cues are likely missing and will not be obtained.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</readyState>
		<track public="1" set="null">
			<c path="js.html.TextTrack"/>
			<haxe_doc>Returns `TextTrack` is the track element's text track data.</haxe_doc>
		</track>
		<haxe_doc><![CDATA[The HTMLTrackElement` interface provides access to the properties of `track` elements, as well as methods to manipulate them.

	Documentation [HTMLTrackElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLTrackElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLTrackElement"</e></m></meta>
	</class>
	<class path="js.html.TreeWalker" params="" file="/usr/local/lib/haxe/std/js/html/TreeWalker.hx" extern="1">
		<root public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>Returns a `Node` representing the root node as specified when the `TreeWalker` was created.</haxe_doc>
		</root>
		<whatToShow public="1" set="null">
			<x path="Int"/>
			<haxe_doc><![CDATA[Returns an <code>unsigned long</code> being a bitmask made of constants describing the types of <code>Node</code> that must to be presented. Non-matching nodes are skipped, but their children may be included, if relevant. The possible values are:
		 <table class="standard-table">
		  
		   <tr>
		    <td class="header">Constant</td>
		    <td class="header">Numerical value</td>
		    <td class="header">Description</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ALL</code></td>
		    <td><code>-1</code> (that is the max value of <code>unsigned long</code>)</td>
		    <td>Shows all nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ATTRIBUTE</code> {{deprecated_inline}}</td>
		    <td><code>2</code></td>
		    <td>Shows attribute <code>Attr</code> nodes. This is meaningful only when creating a <code>TreeWalker</code> with an <code>Attr</code> node as its root; in this case, it means that the attribute node will appear in the first position of the iteration or traversal. Since attributes are never children of other nodes, they do not appear when traversing over the document tree.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_CDATA_SECTION</code> {{deprecated_inline}}</td>
		    <td><code>8</code></td>
		    <td>Shows <code>CDATASection</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_COMMENT</code></td>
		    <td><code>128</code></td>
		    <td>Shows <code>Comment</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_DOCUMENT</code></td>
		    <td><code>256</code></td>
		    <td>Shows <code>Document</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_DOCUMENT_FRAGMENT</code></td>
		    <td><code>1024</code></td>
		    <td>Shows <code>DocumentFragment</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_DOCUMENT_TYPE</code></td>
		    <td><code>512</code></td>
		    <td>Shows <code>DocumentType</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ELEMENT</code></td>
		    <td><code>1</code></td>
		    <td>Shows <code>Element</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ENTITY</code> {{deprecated_inline}}</td>
		    <td><code>32</code></td>
		    <td>Shows <code>Entity</code> nodes. This is meaningful only when creating a <code>TreeWalker</code> with an <code>Entity</code> node as its root; in this case, it means that the <code>Entity</code> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_ENTITY_REFERENCE</code> {{deprecated_inline}}</td>
		    <td><code>16</code></td>
		    <td>Shows <code>EntityReference</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_NOTATION</code> {{deprecated_inline}}</td>
		    <td><code>2048</code></td>
		    <td>Shows <code>Notation</code> nodes. This is meaningful only when creating a <code>TreeWalker</code> with a <code>Notation</code> node as its root; in this case, it means that the <code>Notation</code> node will appear in the first position of the traversal. Since entities are not part of the document tree, they do not appear when traversing over the document tree.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_PROCESSING_INSTRUCTION</code></td>
		    <td><code>64</code></td>
		    <td>Shows <code>ProcessingInstruction</code> nodes.</td>
		   </tr>
		   <tr>
		    <td><code>NodeFilter.SHOW_TEXT</code></td>
		    <td><code>4</code></td>
		    <td>Shows <code>Text</code> nodes.</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</whatToShow>
		<filter public="1" set="null">
			<c path="js.html.NodeFilter"/>
			<haxe_doc>Returns a `NodeFilter` used to select the relevant nodes.</haxe_doc>
		</filter>
		<currentNode public="1">
			<c path="js.html.Node"/>
			<haxe_doc>Is the `Node` on which the `TreeWalker` is currently pointing at.</haxe_doc>
		</currentNode>
		<parentNode public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</parentNode>
		<firstChild public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</firstChild>
		<lastChild public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</lastChild>
		<previousSibling public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</previousSibling>
		<nextSibling public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</nextSibling>
		<previousNode public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</previousNode>
		<nextNode public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</nextNode>
		<haxe_doc><![CDATA[The `TreeWalker` object represents the nodes of a document subtree and a position within them.

	Documentation [TreeWalker](https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker>]]></haxe_doc>
		<meta><m n=":native"><e>"TreeWalker"</e></m></meta>
	</class>
	<typedef path="js.html.UIEventInit" params="" file="/usr/local/lib/haxe/std/js/html/UIEventInit.hx"><a>
	<view>
		<x path="Null"><c path="js.html.Window"/></x>
		<meta><m n=":optional"/></meta>
	</view>
	<detail>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</detail>
	<cancelable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</cancelable>
	<bubbles>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</bubbles>
</a></typedef>
	<class path="js.html.UListElement" params="" file="/usr/local/lib/haxe/std/js/html/UListElement.hx" extern="1">
		<extends path="js.html.Element"/>
		<compact public="1">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating that spacing between list items should be reduced. This property reflects the `compact` attribute only, it doesn't consider the `line-height` CSS property used for that behavior in modern pages.</haxe_doc>
		</compact>
		<type public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` value reflecting the `type` and defining the kind of marker to be used to display. The values are browser dependent and have never been standardized.</haxe_doc>
		</type>
		<haxe_doc><![CDATA[The `HTMLUListElement` interface provides special properties (beyond those defined on the regular `HTMLElement` interface it also has available to it by inheritance) for manipulating unordered list elements.

	Documentation [HTMLUListElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLUListElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLUListElement"</e></m></meta>
	</class>
	<class path="js.html.URLSearchParams" params="" file="/usr/local/lib/haxe/std/js/html/URLSearchParams.hx" extern="1">
		<append public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Appends a specified key/value pair as a new search parameter.</haxe_doc>
		</append>
		<delete_ public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"delete"</e></m></meta>
		</delete_>
		<get public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the first value associated to the given search parameter.</haxe_doc>
		</get>
		<getAll public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Returns all the values association with a given search parameter.</haxe_doc>
		</getAll>
		<has public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns a `Boolean` indicating if such a search parameter exists.</haxe_doc>
		</has>
		<set public="1" set="method">
			<f a="name:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the value associated to a given search parameter to the given value. If there were several values, delete the others.</haxe_doc>
		</set>
		<entries public="1" set="method">
			<f a=""><c path="js.html.URLSearchParamsIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</entries>
		<keys public="1" set="method">
			<f a=""><c path="js.html.URLSearchParamsIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</keys>
		<values public="1" set="method">
			<f a=""><c path="js.html.URLSearchParamsIterator"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</values>
		<forEach public="1" set="method">
			<f a="callback:?thisArg">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</forEach>
		<new public="1" set="method">
			<f a="init">
				<c path="js.html.URLSearchParams"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a="?init" v="&quot;&quot;">
		<c path="String"/>
		<x path="Void"/>
	</f>
	<meta><m n=":value"><e>{ init : "" }</e></m></meta>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[The `URLSearchParams` interface defines utility methods to work with the query string of a URL.

	Documentation [URLSearchParams](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams>]]></haxe_doc>
		<meta><m n=":native"><e>"URLSearchParams"</e></m></meta>
	</class>
	<class path="js.html.URLSearchParamsIterator" params="" file="/usr/local/lib/haxe/std/js/html/URLSearchParamsIterator.hx" extern="1">
		<next public="1" set="method">
			<f a=""><d/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</next>
		<meta><m n=":native"><e>"URLSearchParamsIterator"</e></m></meta>
	</class>
	<class path="js.html.Uint8ClampedArray" params="" file="/usr/local/lib/haxe/std/js/html/Uint8ClampedArray.hx" extern="1">
		<extends path="js.html.ArrayBufferView"/>
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" set="null"><x path="Int"/></length>
		<set public="1" set="method">
			<f a="array:?offset">
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads><set public="1" set="method"><f a="array:?offset">
	<c path="js.html.Uint8ClampedArray"/>
	<x path="Int"/>
	<x path="Void"/>
</f></set></overloads>
		</set>
		<subarray public="1" set="method"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.Uint8ClampedArray"/>
</f></subarray>
		<new public="1" set="method">
			<f a="buffer:?byteOffset:?length">
				<c path="js.html.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<new public="1" set="method">
					<f a="length">
						<x path="Int"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="js.html.Uint8ClampedArray"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
				<new public="1" set="method">
					<f a="array">
						<c path="Array"><x path="Int"/></c>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</new>
			</overloads>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":native"><e>"Uint8ClampedArray"</e></m>
		</meta>
	</class>
	<class path="js.html.VTTCue" params="" file="/usr/local/lib/haxe/std/js/html/VTTCue.hx" extern="1">
		<extends path="js.html.TextTrackCue"/>
		<region public="1"><c path="js.html.VTTRegion"/></region>
		<vertical public="1"><x path="js.html.DirectionSetting"/></vertical>
		<snapToLines public="1"><x path="Bool"/></snapToLines>
		<line public="1"><x path="haxe.extern.EitherType">
	<x path="Int"/>
	<d/>
</x></line>
		<lineAlign public="1"><x path="js.html.AlignSetting"/></lineAlign>
		<position public="1"><x path="Int"/></position>
		<positionAlign public="1"><x path="js.html.AlignSetting"/></positionAlign>
		<size public="1"><x path="Int"/></size>
		<align public="1"><x path="js.html.AlignSetting"/></align>
		<text public="1"><c path="String"/></text>
		<getCueAsHTML public="1" set="method"><f a=""><c path="js.html.DocumentFragment"/></f></getCueAsHTML>
		<new public="1" set="method">
			<f a="startTime:endTime:text">
				<x path="Float"/>
				<x path="Float"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta><m n=":native"><e>"VTTCue"</e></m></meta>
	</class>
	<class path="js.html.VTTRegion" params="" file="/usr/local/lib/haxe/std/js/html/VTTRegion.hx" extern="1">
		<width public="1"><x path="Float"/></width>
		<lines public="1"><x path="Int"/></lines>
		<regionAnchorX public="1"><x path="Float"/></regionAnchorX>
		<regionAnchorY public="1"><x path="Float"/></regionAnchorY>
		<viewportAnchorX public="1"><x path="Float"/></viewportAnchorX>
		<viewportAnchorY public="1"><x path="Float"/></viewportAnchorY>
		<scroll public="1"><c path="String"/></scroll>
		<new public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</new>
		<meta><m n=":native"><e>"VTTRegion"</e></m></meta>
	</class>
	<class path="js.html.ValidityState" params="" file="/usr/local/lib/haxe/std/js/html/ValidityState.hx" extern="1">
		<valueMissing public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the element has a `required` attribute, but no value.</haxe_doc>
		</valueMissing>
		<typeMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the value is not in the required syntax (when `type` is `email` or `url`).</haxe_doc>
		</typeMismatch>
		<patternMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the value does not match the specified `pattern`.</haxe_doc>
		</patternMismatch>
		<tooLong public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the value exceeds the specified `maxlength` for `HTMLInputElement` or `HTMLTextAreaElement` objects. Note: This will never be `true` in Gecko, because elements' values are prevented from being longer than `maxlength`.</haxe_doc>
		</tooLong>
		<rangeUnderflow public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the value is less than the minimum specified by the `min` attribute.</haxe_doc>
		</rangeUnderflow>
		<rangeOverflow public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the value is greater than the maximum specified by the `max` attribute.</haxe_doc>
		</rangeOverflow>
		<stepMismatch public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the value does not fit the rules determined by the `step` attribute (that is, it's not evenly divisible by the step value).</haxe_doc>
		</stepMismatch>
		<badInput public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the user has provided input that the browser is unable to convert.</haxe_doc>
		</badInput>
		<customError public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the element's custom validity message has been set to a non-empty string by calling the element's `setCustomValidity()` method.</haxe_doc>
		</customError>
		<valid public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Is a `Boolean` indicating the element meets all constraint validations, and is therefore considered to be valid.</haxe_doc>
		</valid>
		<haxe_doc><![CDATA[The `ValidityState` interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid.

	Documentation [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ValidityState>]]></haxe_doc>
		<meta><m n=":native"><e>"ValidityState"</e></m></meta>
	</class>
	<class path="js.html.VideoElement" params="" file="/usr/local/lib/haxe/std/js/html/VideoElement.hx" extern="1">
		<extends path="js.html.MediaElement"/>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>Is a `DOMString` that reflects the `width` HTML attribute, which specifies the width of the display area, in CSS pixels.</haxe_doc>
		</width>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>Is a `DOMString` that reflects the `height` HTML attribute, which specifies the height of the display area, in CSS pixels.</haxe_doc>
		</height>
		<videoWidth public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an `unsigned long` containing the intrinsic width of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is `HAVE_NOTHING`, the value is `0`.</haxe_doc>
		</videoWidth>
		<videoHeight public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an `unsigned long` containing the intrinsic height of the resource in CSS pixels, taking into account the dimensions, aspect ratio, clean aperture, resolution, and so forth, as defined for the format used by the resource. If the element's ready state is `HAVE_NOTHING`, the value is `0`.</haxe_doc>
		</videoHeight>
		<poster public="1">
			<c path="String"/>
			<haxe_doc>Is a `DOMString` that reflects the `poster` HTML attribute, which specifies an image to show while no video data is available.</haxe_doc>
		</poster>
		<getVideoPlaybackQuality public="1" set="method">
			<f a=""><c path="js.html.VideoPlaybackQuality"/></f>
			<haxe_doc>Returns a `VideoPlaybackQuality` objects that contains the current playback metrics.</haxe_doc>
		</getVideoPlaybackQuality>
		<haxe_doc><![CDATA[The `HTMLVideoElement` interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of `HTMLMediaElement` and `HTMLElement`.

	Documentation [HTMLVideoElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLVideoElement>]]></haxe_doc>
		<meta><m n=":native"><e>"HTMLVideoElement"</e></m></meta>
	</class>
	<class path="js.html.VideoPlaybackQuality" params="" file="/usr/local/lib/haxe/std/js/html/VideoPlaybackQuality.hx" extern="1">
		<creationTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>A `DOMHighResTimeStamp` containing the time in miliseconds since the start of the navigation and the creation of the object.</haxe_doc>
		</creationTime>
		<totalVideoFrames public="1" set="null">
			<x path="Int"/>
			<haxe_doc>An `unsigned long` giving the number of video frames created and dropped since the creation of the associated `HTMLVideoElement`.</haxe_doc>
		</totalVideoFrames>
		<droppedVideoFrames public="1" set="null">
			<x path="Int"/>
			<haxe_doc>An `unsigned long` giving the number of video frames dropped since the creation of the associated `HTMLVideoElement`.</haxe_doc>
		</droppedVideoFrames>
		<corruptedVideoFrames public="1" set="null">
			<x path="Int"/>
			<haxe_doc>An `unsigned long` giving the number of video frames corrupted since the creation of the associated `HTMLVideoElement`. A corrupted frame may be created or dropped.</haxe_doc>
		</corruptedVideoFrames>
		<haxe_doc><![CDATA[The `VideoPlaybackQuality` interface represents the set of metrics describing the playback quality of a video.

	Documentation [VideoPlaybackQuality](https://developer.mozilla.org/en-US/docs/Web/API/VideoPlaybackQuality) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/VideoPlaybackQuality$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/VideoPlaybackQuality>]]></haxe_doc>
		<meta><m n=":native"><e>"VideoPlaybackQuality"</e></m></meta>
	</class>
	<class path="js.html.VideoStreamTrack" params="" file="/usr/local/lib/haxe/std/js/html/VideoStreamTrack.hx" extern="1">
		<extends path="js.html.MediaStreamTrack"/>
		<meta><m n=":native"><e>"VideoStreamTrack"</e></m></meta>
	</class>
	<class path="js.html.VideoTrack" params="" file="/usr/local/lib/haxe/std/js/html/VideoTrack.hx" extern="1">
		<id public="1" set="null"><c path="String"/></id>
		<kind public="1" set="null"><c path="String"/></kind>
		<label public="1" set="null"><c path="String"/></label>
		<language public="1" set="null"><c path="String"/></language>
		<selected public="1"><x path="Bool"/></selected>
		<meta><m n=":native"><e>"VideoTrack"</e></m></meta>
	</class>
	<class path="js.html.VideoTrackList" params="" file="/usr/local/lib/haxe/std/js/html/VideoTrackList.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<length public="1" set="null"><x path="Int"/></length>
		<selectedIndex public="1" set="null"><x path="Int"/></selectedIndex>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<onaddtrack public="1"><x path="haxe.Function"/></onaddtrack>
		<onremovetrack public="1"><x path="haxe.Function"/></onremovetrack>
		<getTrackById public="1" set="method"><f a="id">
	<c path="String"/>
	<c path="js.html.VideoTrack"/>
</f></getTrackById>
		<meta><m n=":native"><e>"VideoTrackList"</e></m></meta>
	</class>
	<abstract path="js.html.VisibilityState" params="" file="/usr/local/lib/haxe/std/js/html/VisibilityState.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._VisibilityState.VisibilityState_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/VisibilityState.hx" private="1" module="js.html.VisibilityState"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.Window" params="" file="/usr/local/lib/haxe/std/js/html/Window.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<window public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a reference to the current window.</haxe_doc>
		</window>
		<self public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns an object reference to the window object itself.</haxe_doc>
		</self>
		<document public="1" set="null">
			<c path="js.html.HTMLDocument"/>
			<haxe_doc>Returns a reference to the document that the window contains.</haxe_doc>
		</document>
		<name public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the name of the window.</haxe_doc>
		</name>
		<location public="1" set="null">
			<c path="js.html.Location"/>
			<haxe_doc>Gets/sets the location, or current URL, of the window object.</haxe_doc>
		</location>
		<history public="1" set="null">
			<c path="js.html.History"/>
			<haxe_doc>Returns a reference to the history object.</haxe_doc>
		</history>
		<locationbar public="1" set="null">
			<c path="js.html.BarProp"/>
			<haxe_doc>Returns the locationbar object, whose visibility can be toggled in the window.</haxe_doc>
		</locationbar>
		<menubar public="1" set="null">
			<c path="js.html.BarProp"/>
			<haxe_doc>Returns the menubar object, whose visibility can be toggled in the window.</haxe_doc>
		</menubar>
		<personalbar public="1" set="null">
			<c path="js.html.BarProp"/>
			<haxe_doc>Returns the personalbar object, whose visibility can be toggled in the window.</haxe_doc>
		</personalbar>
		<scrollbars public="1" set="null">
			<c path="js.html.BarProp"/>
			<haxe_doc>Returns the scrollbars object, whose visibility can be toggled in the window.</haxe_doc>
		</scrollbars>
		<statusbar public="1" set="null">
			<c path="js.html.BarProp"/>
			<haxe_doc>Returns the statusbar object, whose visibility can be toggled in the window.</haxe_doc>
		</statusbar>
		<toolbar public="1" set="null">
			<c path="js.html.BarProp"/>
			<haxe_doc>Returns the toolbar object, whose visibility can be toggled in the window.</haxe_doc>
		</toolbar>
		<status public="1">
			<c path="String"/>
			<haxe_doc>Gets/sets the text in the statusbar at the bottom of the browser.</haxe_doc>
		</status>
		<closed public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>This property indicates whether the current window is closed or not.</haxe_doc>
		</closed>
		<frames public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns an array of the subframes in the current window.</haxe_doc>
		</frames>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of frames in the window. See also `window.frames`.</haxe_doc>
		</length>
		<top public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a reference to the topmost window in the window hierarchy. This property is read only.</haxe_doc>
		</top>
		<opener public="1">
			<d/>
			<haxe_doc>Returns a reference to the window that opened this current window.</haxe_doc>
		</opener>
		<parent public="1" set="null">
			<c path="js.html.Window"/>
			<haxe_doc>Returns a reference to the parent of the current window or subframe.</haxe_doc>
		</parent>
		<frameElement public="1" set="null">
			<c path="js.html.Element"/>
			<haxe_doc>Returns the element in which the window is embedded, or null if the window is not embedded.</haxe_doc>
		</frameElement>
		<navigator public="1" set="null">
			<c path="js.html.Navigator"/>
			<haxe_doc>Returns a reference to the navigator object.</haxe_doc>
		</navigator>
		<orientation public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the orientation in degrees (in 90 degree increments) of the viewport relative to the device's natural orientation.</haxe_doc>
		</orientation>
		<onorientationchange public="1"><x path="haxe.Function"/></onorientationchange>
		<screen public="1" set="null">
			<c path="js.html.Screen"/>
			<haxe_doc>Returns a reference to the screen object associated with the window.</haxe_doc>
		</screen>
		<innerWidth public="1">
			<d/>
			<haxe_doc>Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.</haxe_doc>
		</innerWidth>
		<innerHeight public="1">
			<d/>
			<haxe_doc>Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.</haxe_doc>
		</innerHeight>
		<scrollX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of pixels that the document has already been scrolled horizontally.</haxe_doc>
		</scrollX>
		<pageXOffset public="1" set="null"><x path="Int"/></pageXOffset>
		<scrollY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of pixels that the document has already been scrolled vertically.</haxe_doc>
		</scrollY>
		<pageYOffset public="1" set="null"><x path="Int"/></pageYOffset>
		<screenX public="1">
			<d/>
			<haxe_doc>Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</haxe_doc>
		</screenX>
		<screenY public="1">
			<d/>
			<haxe_doc>Returns the vertical distance of the top border of the user's browser from the top side of the screen.</haxe_doc>
		</screenY>
		<outerWidth public="1">
			<d/>
			<haxe_doc>Gets the width of the outside of the browser window.</haxe_doc>
		</outerWidth>
		<outerHeight public="1">
			<d/>
			<haxe_doc>Gets the height of the outside of the browser window.</haxe_doc>
		</outerHeight>
		<performance public="1" set="null">
			<c path="js.html.Performance"/>
			<haxe_doc>Provides a hosting area for performance related attributes.</haxe_doc>
		</performance>
		<devicePixelRatio public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns the ratio between physical pixels and device independent pixels in the current display.</haxe_doc>
		</devicePixelRatio>
		<scrollMaxX public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The maximum offset that the window can be scrolled to horizontally, that is the document width minus the viewport width.</haxe_doc>
		</scrollMaxX>
		<scrollMaxY public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The maximum offset that the window can be scrolled to vertically (i.e., the document height minus the viewport height).</haxe_doc>
		</scrollMaxY>
		<fullScreen public="1">
			<x path="Bool"/>
			<haxe_doc>This property indicates whether the window is displayed in full screen or not.</haxe_doc>
		</fullScreen>
		<onwheel public="1"><x path="haxe.Function"/></onwheel>
		<ondevicemotion public="1"><x path="haxe.Function"/></ondevicemotion>
		<ondeviceorientation public="1"><x path="haxe.Function"/></ondeviceorientation>
		<onabsolutedeviceorientation public="1"><x path="haxe.Function"/></onabsolutedeviceorientation>
		<ondeviceproximity public="1"><x path="haxe.Function"/></ondeviceproximity>
		<onuserproximity public="1"><x path="haxe.Function"/></onuserproximity>
		<ondevicelight public="1"><x path="haxe.Function"/></ondevicelight>
		<content public="1" set="null">
			<d/>
			<haxe_doc>Returns a reference to the content element in the current window. The obsolete variant with underscore is no longer available from Web content.</haxe_doc>
		</content>
		<console public="1" set="null">
			<c path="js.html.Console"/>
			<haxe_doc>Returns a reference to the console object which provides access to the browser's debugging console.</haxe_doc>
		</console>
		<crypto public="1" set="null">
			<c path="js.html.Crypto"/>
			<haxe_doc>Returns the browser crypto object.</haxe_doc>
		</crypto>
		<onabort public="1"><x path="haxe.Function"/></onabort>
		<onblur public="1"><x path="haxe.Function"/></onblur>
		<onfocus public="1"><x path="haxe.Function"/></onfocus>
		<oncanplay public="1"><x path="haxe.Function"/></oncanplay>
		<oncanplaythrough public="1"><x path="haxe.Function"/></oncanplaythrough>
		<onchange public="1"><x path="haxe.Function"/></onchange>
		<onclick public="1"><x path="haxe.Function"/></onclick>
		<oncontextmenu public="1"><x path="haxe.Function"/></oncontextmenu>
		<ondblclick public="1"><x path="haxe.Function"/></ondblclick>
		<ondrag public="1"><x path="haxe.Function"/></ondrag>
		<ondragend public="1"><x path="haxe.Function"/></ondragend>
		<ondragenter public="1"><x path="haxe.Function"/></ondragenter>
		<ondragleave public="1"><x path="haxe.Function"/></ondragleave>
		<ondragover public="1"><x path="haxe.Function"/></ondragover>
		<ondragstart public="1"><x path="haxe.Function"/></ondragstart>
		<ondrop public="1"><x path="haxe.Function"/></ondrop>
		<ondurationchange public="1"><x path="haxe.Function"/></ondurationchange>
		<onemptied public="1"><x path="haxe.Function"/></onemptied>
		<onended public="1"><x path="haxe.Function"/></onended>
		<oninput public="1"><x path="haxe.Function"/></oninput>
		<oninvalid public="1"><x path="haxe.Function"/></oninvalid>
		<onkeydown public="1"><x path="haxe.Function"/></onkeydown>
		<onkeypress public="1"><x path="haxe.Function"/></onkeypress>
		<onkeyup public="1"><x path="haxe.Function"/></onkeyup>
		<onload public="1"><x path="haxe.Function"/></onload>
		<onloadeddata public="1"><x path="haxe.Function"/></onloadeddata>
		<onloadedmetadata public="1"><x path="haxe.Function"/></onloadedmetadata>
		<onloadstart public="1"><x path="haxe.Function"/></onloadstart>
		<onmousedown public="1"><x path="haxe.Function"/></onmousedown>
		<onmouseenter public="1"><x path="haxe.Function"/></onmouseenter>
		<onmouseleave public="1"><x path="haxe.Function"/></onmouseleave>
		<onmousemove public="1"><x path="haxe.Function"/></onmousemove>
		<onmouseout public="1"><x path="haxe.Function"/></onmouseout>
		<onmouseover public="1"><x path="haxe.Function"/></onmouseover>
		<onmouseup public="1"><x path="haxe.Function"/></onmouseup>
		<onpause public="1"><x path="haxe.Function"/></onpause>
		<onplay public="1"><x path="haxe.Function"/></onplay>
		<onplaying public="1"><x path="haxe.Function"/></onplaying>
		<onprogress public="1"><x path="haxe.Function"/></onprogress>
		<onratechange public="1"><x path="haxe.Function"/></onratechange>
		<onreset public="1"><x path="haxe.Function"/></onreset>
		<onresize public="1"><x path="haxe.Function"/></onresize>
		<onscroll public="1"><x path="haxe.Function"/></onscroll>
		<onseeked public="1"><x path="haxe.Function"/></onseeked>
		<onseeking public="1"><x path="haxe.Function"/></onseeking>
		<onselect public="1"><x path="haxe.Function"/></onselect>
		<onshow public="1"><x path="haxe.Function"/></onshow>
		<onstalled public="1"><x path="haxe.Function"/></onstalled>
		<onsubmit public="1"><x path="haxe.Function"/></onsubmit>
		<onsuspend public="1"><x path="haxe.Function"/></onsuspend>
		<ontimeupdate public="1"><x path="haxe.Function"/></ontimeupdate>
		<onvolumechange public="1"><x path="haxe.Function"/></onvolumechange>
		<onwaiting public="1"><x path="haxe.Function"/></onwaiting>
		<onpointercancel public="1"><x path="haxe.Function"/></onpointercancel>
		<onpointerdown public="1"><x path="haxe.Function"/></onpointerdown>
		<onpointerup public="1"><x path="haxe.Function"/></onpointerup>
		<onpointermove public="1"><x path="haxe.Function"/></onpointermove>
		<onpointerout public="1"><x path="haxe.Function"/></onpointerout>
		<onpointerover public="1"><x path="haxe.Function"/></onpointerover>
		<onpointerenter public="1"><x path="haxe.Function"/></onpointerenter>
		<onpointerleave public="1"><x path="haxe.Function"/></onpointerleave>
		<ongotpointercapture public="1"><x path="haxe.Function"/></ongotpointercapture>
		<onlostpointercapture public="1"><x path="haxe.Function"/></onlostpointercapture>
		<onfullscreenchange public="1"><x path="haxe.Function"/></onfullscreenchange>
		<onfullscreenerror public="1"><x path="haxe.Function"/></onfullscreenerror>
		<onpointerlockchange public="1"><x path="haxe.Function"/></onpointerlockchange>
		<onpointerlockerror public="1"><x path="haxe.Function"/></onpointerlockerror>
		<indexedDB public="1" set="null"><c path="js.html.idb.Factory"/></indexedDB>
		<onerror public="1"><f a="::::">
	<x path="haxe.extern.EitherType">
		<c path="js.html.Event"/>
		<c path="String"/>
	</x>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Bool"/>
</f></onerror>
		<speechSynthesis public="1" set="null">
			<c path="js.html.SpeechSynthesis"/>
			<haxe_doc>Returns a `SpeechSynthesis` object, which is the entry point into using Web Speech API speech synthesis functionality.</haxe_doc>
		</speechSynthesis>
		<ontouchstart public="1"><x path="haxe.Function"/></ontouchstart>
		<ontouchend public="1"><x path="haxe.Function"/></ontouchend>
		<ontouchmove public="1"><x path="haxe.Function"/></ontouchmove>
		<ontouchcancel public="1"><x path="haxe.Function"/></ontouchcancel>
		<onafterprint public="1"><x path="haxe.Function"/></onafterprint>
		<onbeforeprint public="1"><x path="haxe.Function"/></onbeforeprint>
		<onbeforeunload public="1"><f a="">
	<c path="js.html.Event"/>
	<c path="String"/>
</f></onbeforeunload>
		<onhashchange public="1"><x path="haxe.Function"/></onhashchange>
		<onlanguagechange public="1"><x path="haxe.Function"/></onlanguagechange>
		<onmessage public="1"><x path="haxe.Function"/></onmessage>
		<onoffline public="1"><x path="haxe.Function"/></onoffline>
		<ononline public="1"><x path="haxe.Function"/></ononline>
		<onpagehide public="1"><x path="haxe.Function"/></onpagehide>
		<onpageshow public="1"><x path="haxe.Function"/></onpageshow>
		<onpopstate public="1"><x path="haxe.Function"/></onpopstate>
		<onstorage public="1"><x path="haxe.Function"/></onstorage>
		<onunload public="1"><x path="haxe.Function"/></onunload>
		<localStorage public="1" set="null">
			<c path="js.html.Storage"/>
			<haxe_doc>Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it.</haxe_doc>
		</localStorage>
		<sessionStorage public="1" set="null">
			<c path="js.html.Storage"/>
			<haxe_doc>Returns a storage object for storing data within a single page session.</haxe_doc>
		</sessionStorage>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</close>
		<stop public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</stop>
		<focus public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</focus>
		<blur public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</blur>
		<open public="1" set="method">
			<f a="?url:?target:?features" v="&quot;&quot;:&quot;&quot;:&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.Window"/>
			</f>
			<meta><m n=":value"><e>{ features : "", target : "", url : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</open>
		<alert public="1" set="method">
			<f a="message">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><alert public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>@throws DOMError</haxe_doc>
</alert></overloads>
		</alert>
		<confirm public="1" set="method">
			<f a="?message" v="&quot;&quot;">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ message : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</confirm>
		<prompt public="1" set="method">
			<f a="?message:?default_" v="&quot;&quot;:&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":value"><e>{ default_ : "", message : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</prompt>
		<print public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</print>
		<postMessage public="1" set="method">
			<f a="message:targetOrigin:?transfer">
				<d/>
				<c path="String"/>
				<c path="Array"><d/></c>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</postMessage>
		<captureEvents public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Registers the window to capture all events of the specified type.</haxe_doc>
		</captureEvents>
		<releaseEvents public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Releases the window from trapping events of a specific type.</haxe_doc>
		</releaseEvents>
		<getSelection public="1" set="method">
			<f a=""><c path="js.html.Selection"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getSelection>
		<getComputedStyle public="1" set="method">
			<f a="elt:?pseudoElt" v=":&quot;&quot;">
				<c path="js.html.Element"/>
				<c path="String"/>
				<c path="js.html.CSSStyleDeclaration"/>
			</f>
			<meta><m n=":value"><e>{ pseudoElt : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getComputedStyle>
		<matchMedia public="1" set="method">
			<f a="query">
				<c path="String"/>
				<c path="js.html.MediaQueryList"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</matchMedia>
		<moveTo public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</moveTo>
		<moveBy public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</moveBy>
		<resizeTo public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</resizeTo>
		<resizeBy public="1" set="method">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</resizeBy>
		<scroll public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollToOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scroll public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scroll></overloads>
		</scroll>
		<scrollTo public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollToOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scrollTo public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scrollTo></overloads>
		</scrollTo>
		<scrollBy public="1" set="method">
			<f a="?options">
				<t path="js.html.ScrollToOptions"/>
				<x path="Void"/>
			</f>
			<overloads><scrollBy public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></scrollBy></overloads>
		</scrollBy>
		<requestAnimationFrame public="1" set="method">
			<f a="callback">
				<f a="">
					<x path="Float"/>
					<x path="Void"/>
				</f>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</requestAnimationFrame>
		<cancelAnimationFrame public="1" set="method">
			<f a="handle">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</cancelAnimationFrame>
		<getDefaultComputedStyle public="1" set="method">
			<f a="elt:?pseudoElt" v=":&quot;&quot;">
				<c path="js.html.Element"/>
				<c path="String"/>
				<c path="js.html.CSSStyleDeclaration"/>
			</f>
			<meta><m n=":value"><e>{ pseudoElt : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getDefaultComputedStyle>
		<scrollByLines public="1" set="method">
			<f a="numLines:?options">
				<x path="Int"/>
				<t path="js.html.ScrollOptions"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scrolls the document by the given number of lines.</haxe_doc>
		</scrollByLines>
		<scrollByPages public="1" set="method">
			<f a="numPages:?options">
				<x path="Int"/>
				<t path="js.html.ScrollOptions"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scrolls the current document by the specified number of pages.</haxe_doc>
		</scrollByPages>
		<sizeToContent public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</sizeToContent>
		<updateCommands public="1" set="method">
			<f a="action:?sel:?reason" v="::0">
				<c path="String"/>
				<c path="js.html.Selection"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ reason : 0 }</e></m></meta>
			<haxe_doc>Updates the state of commands of the current chrome window (UI).</haxe_doc>
		</updateCommands>
		<find public="1" set="method">
			<f a="?str:?caseSensitive:?backwards:?wrapAround:?wholeWord:?searchInFrames:?showDialog" v="&quot;&quot;:false:false:false:false:false:false">
				<c path="String"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ showDialog : false, searchInFrames : false, wholeWord : false, wrapAround : false, backwards : false, caseSensitive : false, str : "" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</find>
		<dump public="1" set="method">
			<f a="str">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Writes a message to the console.</haxe_doc>
		</dump>
		<setResizable public="1" set="method">
			<f a="resizable">
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Toggles a user's ability to resize a window.</haxe_doc>
		</setResizable>
		<fetch public="1" set="method">
			<f a="input:?init">
				<x path="haxe.extern.EitherType">
					<c path="js.html.Request"/>
					<c path="String"/>
				</x>
				<t path="js.html.RequestInit"/>
				<c path="js.Promise"><c path="js.html.Response"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</fetch>
		<createImageBitmap public="1" set="method">
			<f a="aImage:aSx:aSy:aSw:aSh">
				<x path="haxe.extern.EitherType">
					<c path="js.html.ImageElement"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.VideoElement"/>
						<x path="haxe.extern.EitherType">
							<c path="js.html.CanvasElement"/>
							<x path="haxe.extern.EitherType">
								<c path="js.html.Blob"/>
								<x path="haxe.extern.EitherType">
									<c path="js.html.ImageData"/>
									<x path="haxe.extern.EitherType">
										<c path="js.html.CanvasRenderingContext2D"/>
										<c path="js.html.ImageBitmap"/>
									</x>
								</x>
							</x>
						</x>
					</x>
				</x>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.Promise"><c path="js.html.ImageBitmap"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><createImageBitmap public="1" set="method">
	<f a="aImage">
		<x path="haxe.extern.EitherType">
			<c path="js.html.ImageElement"/>
			<x path="haxe.extern.EitherType">
				<c path="js.html.VideoElement"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.CanvasElement"/>
					<x path="haxe.extern.EitherType">
						<c path="js.html.Blob"/>
						<x path="haxe.extern.EitherType">
							<c path="js.html.ImageData"/>
							<x path="haxe.extern.EitherType">
								<c path="js.html.CanvasRenderingContext2D"/>
								<c path="js.html.ImageBitmap"/>
							</x>
						</x>
					</x>
				</x>
			</x>
		</x>
		<c path="js.Promise"><c path="js.html.ImageBitmap"/></c>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</createImageBitmap></overloads>
		</createImageBitmap>
		<btoa public="1" set="method">
			<f a="btoa">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</btoa>
		<atob public="1" set="method">
			<f a="atob">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</atob>
		<setTimeout public="1" set="method">
			<f a="handler:?timeout:unused" v=":0:">
				<c path="String"/>
				<x path="Int"/>
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ timeout : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><setTimeout public="1" set="method">
	<f a="handler:?timeout:arguments" v=":0:">
		<x path="haxe.Function"/>
		<x path="Int"/>
		<x path="haxe.extern.Rest"><d/></x>
		<x path="Int"/>
	</f>
	<meta><m n=":value"><e>{ timeout : 0 }</e></m></meta>
	<haxe_doc>@throws DOMError</haxe_doc>
</setTimeout></overloads>
		</setTimeout>
		<clearTimeout public="1" set="method">
			<f a="?handle" v="0">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ handle : 0 }</e></m></meta>
		</clearTimeout>
		<setInterval public="1" set="method">
			<f a="handler:?timeout:unused">
				<c path="String"/>
				<x path="Int"/>
				<x path="haxe.extern.Rest"><d/></x>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><setInterval public="1" set="method">
	<f a="handler:?timeout:arguments">
		<x path="haxe.Function"/>
		<x path="Int"/>
		<x path="haxe.extern.Rest"><d/></x>
		<x path="Int"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</setInterval></overloads>
		</setInterval>
		<clearInterval public="1" set="method">
			<f a="?handle" v="0">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ handle : 0 }</e></m></meta>
		</clearInterval>
		<haxe_doc><![CDATA[The `window` object represents a window containing a DOM document; the `document` property points to the DOM document loaded in that window.

	Documentation [Window](https://developer.mozilla.org/en-US/docs/Web/API/Window) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Window$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/Window>]]></haxe_doc>
		<meta><m n=":native"><e>"Window"</e></m></meta>
	</class>
	<class path="js.html.XMLHttpRequestEventTarget" params="" file="/usr/local/lib/haxe/std/js/html/XMLHttpRequestEventTarget.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<onloadstart public="1"><x path="haxe.Function"/></onloadstart>
		<onprogress public="1"><x path="haxe.Function"/></onprogress>
		<onabort public="1"><x path="haxe.Function"/></onabort>
		<onerror public="1"><x path="haxe.Function"/></onerror>
		<onload public="1"><x path="haxe.Function"/></onload>
		<ontimeout public="1"><x path="haxe.Function"/></ontimeout>
		<onloadend public="1"><x path="haxe.Function"/></onloadend>
		<haxe_doc><![CDATA[`XMLHttpRequestEventTarget` is the interface that describes the event handlers you can implement in an object that will handle events for an `XMLHttpRequest`.

	Documentation [XMLHttpRequestEventTarget](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget>]]></haxe_doc>
		<meta><m n=":native"><e>"XMLHttpRequestEventTarget"</e></m></meta>
	</class>
	<class path="js.html.XMLHttpRequest" params="" file="/usr/local/lib/haxe/std/js/html/XMLHttpRequest.hx" extern="1">
		<extends path="js.html.XMLHttpRequestEventTarget"/>
		<UNSENT public="1" get="inline" set="null" expr="0" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</UNSENT>
		<OPENED public="1" get="inline" set="null" expr="1" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</OPENED>
		<HEADERS_RECEIVED public="1" get="inline" set="null" expr="2" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</HEADERS_RECEIVED>
		<LOADING public="1" get="inline" set="null" expr="3" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</LOADING>
		<DONE public="1" get="inline" set="null" expr="4" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</DONE>
		<onreadystatechange public="1"><x path="haxe.Function"/></onreadystatechange>
		<readyState public="1" set="null"><x path="Int"/></readyState>
		<timeout public="1"><x path="Int"/></timeout>
		<withCredentials public="1"><x path="Bool"/></withCredentials>
		<upload public="1" set="null"><c path="js.html.XMLHttpRequestUpload"/></upload>
		<responseURL public="1" set="null"><c path="String"/></responseURL>
		<status public="1" set="null"><x path="Int"/></status>
		<statusText public="1" set="null"><c path="String"/></statusText>
		<responseType public="1"><x path="js.html.XMLHttpRequestResponseType"/></responseType>
		<response public="1" set="null">
			<d/>
			<haxe_doc>Returns an `ArrayBuffer`, `Blob`, `Document`, JavaScript object, or a `DOMString`, depending on the value of `XMLHttpRequest.responseType`. that contains the response entity body.</haxe_doc>
		</response>
		<responseText public="1" set="null"><c path="String"/></responseText>
		<responseXML public="1" set="null"><c path="js.html.HTMLDocument"/></responseXML>
		<open public="1" set="method">
			<f a="method:url:async:?user:?password">
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><open public="1" set="method">
	<f a="method:url">
		<c path="String"/>
		<c path="String"/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</open></overloads>
		</open>
		<setRequestHeader public="1" set="method">
			<f a="header:value">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setRequestHeader>
		<send public="1" set="method">
			<f a="data">
				<d/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<send public="1" set="method">
					<f a=""><x path="Void"/></f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.ArrayBuffer"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.Blob"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.HTMLDocument"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="String"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
				<send public="1" set="method">
					<f a="data">
						<c path="js.html.FormData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</send>
			</overloads>
		</send>
		<abort public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</abort>
		<getResponseHeader public="1" set="method">
			<f a="header">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getResponseHeader>
		<getAllResponseHeaders public="1" set="method">
			<f a=""><c path="String"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getAllResponseHeaders>
		<overrideMimeType public="1" set="method">
			<f a="mime">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</overrideMimeType>
		<new public="1" set="method">
			<f a="ignored">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a="?params">
		<d/>
		<x path="Void"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[`XMLHttpRequest` is an API that provides client functionality for transferring data between a client and a server. It provides an easy way to retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just a part of the page without disrupting what the user is doing.

	Documentation [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest>]]></haxe_doc>
		<meta><m n=":native"><e>"XMLHttpRequest"</e></m></meta>
	</class>
	<abstract path="js.html.XMLHttpRequestResponseType" params="" file="/usr/local/lib/haxe/std/js/html/XMLHttpRequestResponseType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html._XMLHttpRequestResponseType.XMLHttpRequestResponseType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/XMLHttpRequestResponseType.hx" private="1" module="js.html.XMLHttpRequestResponseType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.XMLHttpRequestUpload" params="" file="/usr/local/lib/haxe/std/js/html/XMLHttpRequestUpload.hx" extern="1">
		<extends path="js.html.XMLHttpRequestEventTarget"/>
		<meta><m n=":native"><e>"XMLHttpRequestUpload"</e></m></meta>
	</class>
	<class path="js.html.XPathExpression" params="" file="/usr/local/lib/haxe/std/js/html/XPathExpression.hx" extern="1">
		<evaluate public="1" set="method">
			<f a="contextNode:type:result">
				<c path="js.html.Node"/>
				<x path="Int"/>
				<d/>
				<c path="js.html.XPathResult"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</evaluate>
		<haxe_doc><![CDATA[An `XPathExpression` is a compiled XPath query returned from `document.createExpression()`. It has a method `evaluate()` which can be used to execute the compiled XPath.

	Documentation [XPathExpression](https://developer.mozilla.org/en-US/docs/Web/API/XPathExpression) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/XPathExpression$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/XPathExpression>]]></haxe_doc>
		<meta><m n=":native"><e>"XPathExpression"</e></m></meta>
	</class>
	<class path="js.html.XPathNSResolver" params="" file="/usr/local/lib/haxe/std/js/html/XPathNSResolver.hx" extern="1">
		<lookupNamespaceURI public="1" set="method"><f a="prefix">
	<c path="String"/>
	<c path="String"/>
</f></lookupNamespaceURI>
		<meta><m n=":native"><e>"XPathNSResolver"</e></m></meta>
	</class>
	<class path="js.html.XPathResult" params="" file="/usr/local/lib/haxe/std/js/html/XPathResult.hx" extern="1">
		<ANY_TYPE public="1" get="inline" set="null" expr="0" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ANY_TYPE>
		<NUMBER_TYPE public="1" get="inline" set="null" expr="1" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</NUMBER_TYPE>
		<STRING_TYPE public="1" get="inline" set="null" expr="2" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</STRING_TYPE>
		<BOOLEAN_TYPE public="1" get="inline" set="null" expr="3" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</BOOLEAN_TYPE>
		<UNORDERED_NODE_ITERATOR_TYPE public="1" get="inline" set="null" expr="4" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</UNORDERED_NODE_ITERATOR_TYPE>
		<ORDERED_NODE_ITERATOR_TYPE public="1" get="inline" set="null" expr="5" line="35" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</ORDERED_NODE_ITERATOR_TYPE>
		<UNORDERED_NODE_SNAPSHOT_TYPE public="1" get="inline" set="null" expr="6" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</UNORDERED_NODE_SNAPSHOT_TYPE>
		<ORDERED_NODE_SNAPSHOT_TYPE public="1" get="inline" set="null" expr="7" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7</e></m></meta>
		</ORDERED_NODE_SNAPSHOT_TYPE>
		<ANY_UNORDERED_NODE_TYPE public="1" get="inline" set="null" expr="8" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</ANY_UNORDERED_NODE_TYPE>
		<FIRST_ORDERED_NODE_TYPE public="1" get="inline" set="null" expr="9" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9</e></m></meta>
		</FIRST_ORDERED_NODE_TYPE>
		<resultType public="1" set="null">
			<x path="Int"/>
			<haxe_doc>readonly integer (short)</haxe_doc>
		</resultType>
		<numberValue public="1" set="null">
			<x path="Float"/>
			<haxe_doc>readonly float</haxe_doc>
		</numberValue>
		<stringValue public="1" set="null">
			<c path="String"/>
			<haxe_doc>readonly String</haxe_doc>
		</stringValue>
		<booleanValue public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>readonly boolean</haxe_doc>
		</booleanValue>
		<singleNodeValue public="1" set="null">
			<c path="js.html.Node"/>
			<haxe_doc>readonly Node</haxe_doc>
		</singleNodeValue>
		<invalidIteratorState public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>readonly boolean</haxe_doc>
		</invalidIteratorState>
		<snapshotLength public="1" set="null">
			<x path="Int"/>
			<haxe_doc>readonly Integer</haxe_doc>
		</snapshotLength>
		<iterateNext public="1" set="method">
			<f a=""><c path="js.html.Node"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</iterateNext>
		<snapshotItem public="1" set="method">
			<f a="index">
				<x path="Int"/>
				<c path="js.html.Node"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</snapshotItem>
		<meta><m n=":native"><e>"XPathResult"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioNode.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<context public="1" set="null">
			<c path="js.html.audio.AudioContext"/>
			<haxe_doc>Returns the associated `AudioContext`, that is the object representing the processing graph the node is participating in.</haxe_doc>
		</context>
		<numberOfInputs public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of inputs feeding the node. Source nodes are defined as nodes having a `numberOfInputs` property with a value of `0`.</haxe_doc>
		</numberOfInputs>
		<numberOfOutputs public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns the number of outputs coming out of the node. Destination nodes — like `AudioDestinationNode` — have a value of `0` for this attribute.</haxe_doc>
		</numberOfOutputs>
		<channelCount public="1">
			<x path="Int"/>
			<haxe_doc>Represents an integer used to determine how many channels are used when up-mixing and down-mixing connections to any inputs to the node. Its usage and precise definition depend on the value of `AudioNode.channelCountMode`.</haxe_doc>
		</channelCount>
		<channelCountMode public="1">
			<x path="js.html.audio.ChannelCountMode"/>
			<haxe_doc>Represents an enumerated value describing the way channels must be matched between the node's inputs and outputs.</haxe_doc>
		</channelCountMode>
		<channelInterpretation public="1">
			<x path="js.html.audio.ChannelInterpretation"/>
			<haxe_doc>Represents an enumerated value describing the meaning of the channels. This interpretation will define how audio up-mixing and down-mixing will happen.
		
		 The possible values are `"speakers"` or `"discrete"`.</haxe_doc>
		</channelInterpretation>
		<connect public="1" set="method">
			<f a="destination:?output" v=":0">
				<c path="js.html.audio.AudioParam"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ output : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><connect public="1" set="method">
	<f a="destination:?output:?input" v=":0:0">
		<c path="js.html.audio.AudioNode"/>
		<x path="Int"/>
		<x path="Int"/>
		<c path="js.html.audio.AudioNode"/>
	</f>
	<meta><m n=":value"><e>{ input : 0, output : 0 }</e></m></meta>
	<haxe_doc>@throws DOMError</haxe_doc>
</connect></overloads>
		</connect>
		<disconnect public="1" set="method">
			<f a="?output" v="0">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ output : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</disconnect>
		<haxe_doc><![CDATA[The `AudioNode` interface is a generic interface for representing an audio processing module like an audio source (e.g. an HTML `audio` or `video` element, an `OscillatorNode`, etc.), the audio destination, intermediate processing module (e.g. a filter like `BiquadFilterNode` or `ConvolverNode`), or volume control (like `GainNode`).

	Documentation [AudioNode](https://developer.mozilla.org/en-US/docs/Web/API/AudioNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioNode>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AnalyserNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/AnalyserNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<fftSize public="1">
			<x path="Int"/>
			<haxe_doc>Is an unsigned long value representing the size of the FFT (Fast Fourier Transform) to be used to determine the frequency domain.</haxe_doc>
		</fftSize>
		<frequencyBinCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an unsigned long value half that of the FFT size. This generally equates to the number of data values you will have to play with for the visualization.</haxe_doc>
		</frequencyBinCount>
		<minDecibels public="1">
			<x path="Float"/>
			<haxe_doc>Is a double value representing the minimum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte values — basically, this specifies the minimum value for the range of results when using `getByteFrequencyData()`.</haxe_doc>
		</minDecibels>
		<maxDecibels public="1">
			<x path="Float"/>
			<haxe_doc>Is a double value representing the maximum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte values — basically, this specifies the maximum value for the range of results when using `getByteFrequencyData()`.</haxe_doc>
		</maxDecibels>
		<smoothingTimeConstant public="1">
			<x path="Float"/>
			<haxe_doc>Is a double value representing the averaging constant with the last analysis frame — basically, it makes the transition between values over time smoother.</haxe_doc>
		</smoothingTimeConstant>
		<getFloatFrequencyData public="1" set="method">
			<f a="array">
				<c path="js.html.Float32Array"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the current frequency data into a `Float32Array` array passed into it.</haxe_doc>
		</getFloatFrequencyData>
		<getByteFrequencyData public="1" set="method">
			<f a="array">
				<c path="js.html.Uint8Array"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the current frequency data into a `Uint8Array` (unsigned byte array) passed into it.</haxe_doc>
		</getByteFrequencyData>
		<getFloatTimeDomainData public="1" set="method">
			<f a="array">
				<c path="js.html.Float32Array"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the current waveform, or time-domain, data into a `Float32Array` array passed into it.</haxe_doc>
		</getFloatTimeDomainData>
		<getByteTimeDomainData public="1" set="method">
			<f a="array">
				<c path="js.html.Uint8Array"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the current waveform, or time-domain, data into a `Uint8Array` (unsigned byte array) passed into it.</haxe_doc>
		</getByteTimeDomainData>
		<haxe_doc><![CDATA[The `AnalyserNode` interface represents a node able to provide real-time frequency and time-domain analysis information. It is an `AudioNode` that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations.

	Documentation [AnalyserNode](https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode>]]></haxe_doc>
		<meta><m n=":native"><e>"AnalyserNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioBuffer" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioBuffer.hx" extern="1">
		<sampleRate public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a float representing the sample rate, in samples per second, of the PCM data stored in the buffer.</haxe_doc>
		</sampleRate>
		<length public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an integer representing the length, in sample-frames, of the PCM data stored in the buffer.</haxe_doc>
		</length>
		<duration public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a double representing the duration, in seconds, of the PCM data stored in the buffer.</haxe_doc>
		</duration>
		<numberOfChannels public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an integer representing the number of discrete audio channels described by the PCM data stored in the buffer.</haxe_doc>
		</numberOfChannels>
		<getChannelData public="1" set="method">
			<f a="channel">
				<x path="Int"/>
				<c path="js.html.Float32Array"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getChannelData>
		<copyFromChannel public="1" set="method">
			<f a="destination:channelNumber:?startInChannel" v="::0">
				<c path="js.html.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ startInChannel : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</copyFromChannel>
		<copyToChannel public="1" set="method">
			<f a="source:channelNumber:?startInChannel" v="::0">
				<c path="js.html.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ startInChannel : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</copyToChannel>
		<haxe_doc><![CDATA[Objects of these types are designed to hold small audio snippets, typically less than 45 s. For longer sounds, objects implementing the `MediaElementAudioSourceNode` are more suitable. The buffer contains data in the following format:  non-interleaved IEEE754 32-bit linear PCM with a nominal range between `-1` and `+1`, that is, 32bits floating point buffer, with each samples between -1.0 and 1.0. If the `AudioBuffer` has multiple channels, they are stored in separate buffer.

	Documentation [AudioBuffer](https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioBuffer"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioBufferSourceNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioBufferSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<buffer public="1">
			<c path="js.html.audio.AudioBuffer"/>
			<haxe_doc>Is an `AudioBuffer` that defines the audio asset to be played, or when set to the value `null`, defines a single channel of silence. </haxe_doc>
		</buffer>
		<playbackRate public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam` that defines the speed factor at which the audio asset will be played. Since no pitch correction is applied on the output, this can be used to change the pitch of the sample.</haxe_doc>
		</playbackRate>
		<detune public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is a `AudioParam` representing detuning of oscillation in cents. Its default value is `0`.</haxe_doc>
		</detune>
		<loop public="1">
			<x path="Bool"/>
			<haxe_doc>Is a Boolean attribute indicating if the audio asset must be replayed when the end of the `AudioBuffer` is reached. Its default value is `false`.</haxe_doc>
		</loop>
		<loopStart public="1">
			<x path="Float"/>
			<haxe_doc>Is a double value indicating, in seconds, where in the `AudioBuffer` the restart of the play must happen. Its default value is `0`.</haxe_doc>
		</loopStart>
		<loopEnd public="1">
			<x path="Float"/>
			<haxe_doc>Is a double value indicating, in seconds, where in the `AudioBuffer` the replay of the play must stop (and eventually loop again). Its default value is `0`.</haxe_doc>
		</loopEnd>
		<onended public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Is an `EventHandler` containing the callback associated with the `ended_(Web_Audio)` event.</haxe_doc>
		</onended>
		<start public="1" set="method">
			<f a="?when:?grainOffset:?grainDuration" v="0.0:0.0:">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ grainOffset : 0.0, when : 0.0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</start>
		<stop public="1" set="method">
			<f a="?when" v="0.0">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ when : 0.0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</stop>
		<haxe_doc><![CDATA[The `AudioBufferSourceNode` interface represents an audio source consisting of in-memory audio data, stored in an `AudioBuffer`. It is an `AudioNode` that acts as an audio source`.`

	Documentation [AudioBufferSourceNode](https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioBufferSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioContext" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioContext.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<destination public="1" set="null">
			<c path="js.html.audio.AudioDestinationNode"/>
			<haxe_doc>Returns an `AudioDestinationNode` representing the final destination of all audio in the context. It can be thought of as the audio-rendering device.</haxe_doc>
		</destination>
		<sampleRate public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a float representing the sample rate (in samples per second) used by all nodes in this context. The sample-rate of an `AudioContext` cannot be changed.</haxe_doc>
		</sampleRate>
		<currentTime public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Returns a double representing an ever-increasing hardware time in seconds used for scheduling. It starts at `0`.</haxe_doc>
		</currentTime>
		<listener public="1" set="null">
			<c path="js.html.audio.AudioListener"/>
			<haxe_doc>Returns the `AudioListener` object, used for 3D spatialization.</haxe_doc>
		</listener>
		<state public="1" set="null">
			<x path="js.html.AudioContextState"/>
			<haxe_doc>Returns the current state of the `AudioContext`.</haxe_doc>
		</state>
		<onstatechange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>An event handler that runs when an event of type `statechange` has fired. This occurs when the `AudioContext`'s state changes, due to the calling of one of the state change methods (`AudioContext.suspend`, `AudioContext.resume`, or `AudioContext.close`).</haxe_doc>
		</onstatechange>
		<suspend public="1" set="method">
			<f a=""><c path="js.Promise"><x path="Void"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</suspend>
		<resume public="1" set="method">
			<f a=""><c path="js.Promise"><x path="Void"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</resume>
		<close public="1" set="method">
			<f a=""><c path="js.Promise"><x path="Void"/></c></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</close>
		<createBuffer public="1" set="method">
			<f a="numberOfChannels:length:sampleRate">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<c path="js.html.audio.AudioBuffer"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createBuffer>
		<decodeAudioData public="1" set="method">
			<f a="audioData:?successCallback:?errorCallback">
				<c path="js.html.ArrayBuffer"/>
				<f a="">
					<c path="js.html.audio.AudioBuffer"/>
					<x path="Void"/>
				</f>
				<f a=""><x path="Void"/></f>
				<c path="js.Promise"><c path="js.html.audio.AudioBuffer"/></c>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</decodeAudioData>
		<createBufferSource public="1" set="method">
			<f a=""><c path="js.html.audio.AudioBufferSourceNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createBufferSource>
		<createMediaStreamDestination public="1" set="method">
			<f a=""><c path="js.html.audio.MediaStreamAudioDestinationNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createMediaStreamDestination>
		<createScriptProcessor public="1" set="method">
			<f a="?bufferSize:?numberOfInputChannels:?numberOfOutputChannels" v="0:2:2">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.audio.ScriptProcessorNode"/>
			</f>
			<meta><m n=":value"><e>{ numberOfOutputChannels : 2, numberOfInputChannels : 2, bufferSize : 0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createScriptProcessor>
		<createStereoPanner public="1" set="method">
			<f a=""><c path="js.html.audio.StereoPannerNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createStereoPanner>
		<createAnalyser public="1" set="method">
			<f a=""><c path="js.html.audio.AnalyserNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createAnalyser>
		<createMediaElementSource public="1" set="method">
			<f a="mediaElement">
				<c path="js.html.MediaElement"/>
				<c path="js.html.audio.MediaElementAudioSourceNode"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createMediaElementSource>
		<createMediaStreamSource public="1" set="method">
			<f a="mediaStream">
				<c path="js.html.MediaStream"/>
				<c path="js.html.audio.MediaStreamAudioSourceNode"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createMediaStreamSource>
		<createGain public="1" set="method">
			<f a=""><c path="js.html.audio.GainNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createGain>
		<createDelay public="1" set="method">
			<f a="?maxDelayTime" v="1.0">
				<x path="Float"/>
				<c path="js.html.audio.DelayNode"/>
			</f>
			<meta><m n=":value"><e>{ maxDelayTime : 1.0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createDelay>
		<createBiquadFilter public="1" set="method">
			<f a=""><c path="js.html.audio.BiquadFilterNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createBiquadFilter>
		<createWaveShaper public="1" set="method">
			<f a=""><c path="js.html.audio.WaveShaperNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createWaveShaper>
		<createPanner public="1" set="method">
			<f a=""><c path="js.html.audio.PannerNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createPanner>
		<createConvolver public="1" set="method">
			<f a=""><c path="js.html.audio.ConvolverNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createConvolver>
		<createChannelSplitter public="1" set="method">
			<f a="?numberOfOutputs" v="6">
				<x path="Int"/>
				<c path="js.html.audio.ChannelSplitterNode"/>
			</f>
			<meta><m n=":value"><e>{ numberOfOutputs : 6 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createChannelSplitter>
		<createChannelMerger public="1" set="method">
			<f a="?numberOfInputs" v="6">
				<x path="Int"/>
				<c path="js.html.audio.ChannelMergerNode"/>
			</f>
			<meta><m n=":value"><e>{ numberOfInputs : 6 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createChannelMerger>
		<createDynamicsCompressor public="1" set="method">
			<f a=""><c path="js.html.audio.DynamicsCompressorNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createDynamicsCompressor>
		<createOscillator public="1" set="method">
			<f a=""><c path="js.html.audio.OscillatorNode"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createOscillator>
		<createPeriodicWave public="1" set="method">
			<f a="real:imag">
				<c path="js.html.Float32Array"/>
				<c path="js.html.Float32Array"/>
				<c path="js.html.audio.PeriodicWave"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createPeriodicWave>
		<new public="1" set="method">
			<f a="audioChannelType">
				<x path="js.html.AudioChannel"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><new public="1" set="method">
	<f a=""><x path="Void"/></f>
	<haxe_doc>@throws DOMError</haxe_doc>
</new></overloads>
		</new>
		<haxe_doc><![CDATA[An `AudioContext` can be a target of events, therefore it implements the `EventTarget` interface.

	Documentation [AudioContext](https://developer.mozilla.org/en-US/docs/Web/API/AudioContext) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioContext$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioContext>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioContext"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioDestinationNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioDestinationNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<maxChannelCount public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Is an `unsigned long` defining the maximum amount of channels that the physical device can handle.</haxe_doc>
		</maxChannelCount>
		<haxe_doc><![CDATA[`AudioDestinationNode` has no output (as it is the output, no more `AudioNode` can be linked after it in the audio graph) and one input. The amount of channels in the input must be between `0` and the `maxChannelCount` value or an exception is raised.

	Documentation [AudioDestinationNode](https://developer.mozilla.org/en-US/docs/Web/API/AudioDestinationNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioDestinationNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioDestinationNode>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioDestinationNode"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioListener" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioListener.hx" extern="1">
		<dopplerFactor public="1"><x path="Float"/></dopplerFactor>
		<speedOfSound public="1"><x path="Float"/></speedOfSound>
		<setPosition public="1" set="method">
			<f a="x:y:z">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the position of the listener. See `Deprecated features` to learn why this method was removed.</haxe_doc>
		</setPosition>
		<setOrientation public="1" set="method">
			<f a="x:y:z:xUp:yUp:zUp">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the orientation of the listener.</haxe_doc>
		</setOrientation>
		<setVelocity public="1" set="method"><f a="x:y:z">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setVelocity>
		<haxe_doc><![CDATA[It is important to note that there is only one listener per context and that it isn't an `AudioNode`.

	Documentation [AudioListener](https://developer.mozilla.org/en-US/docs/Web/API/AudioListener) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioListener$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioListener>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioListener"</e></m></meta>
	</class>
	<class path="js.html.audio.AudioParam" params="" file="/usr/local/lib/haxe/std/js/html/audio/AudioParam.hx" extern="1">
		<value public="1">
			<x path="Float"/>
			<haxe_doc>Represents the parameter's current volume as a floating point value; initially set to the value of `AudioParam.defaultValue`. Though it can be set, any modifications happening while there are automation events scheduled — that is events scheduled using the methods of the `AudioParam` — are ignored, without raising any exception.</haxe_doc>
		</value>
		<defaultValue public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Represents the initial volume of the attribute as defined by the specific `AudioNode` creating the `AudioParam`.</haxe_doc>
		</defaultValue>
		<setValueAtTime public="1" set="method">
			<f a="value:startTime">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setValueAtTime>
		<linearRampToValueAtTime public="1" set="method">
			<f a="value:endTime">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</linearRampToValueAtTime>
		<exponentialRampToValueAtTime public="1" set="method">
			<f a="value:endTime">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</exponentialRampToValueAtTime>
		<setTargetAtTime public="1" set="method">
			<f a="target:startTime:timeConstant">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setTargetAtTime>
		<setValueCurveAtTime public="1" set="method">
			<f a="values:startTime:duration">
				<c path="js.html.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</setValueCurveAtTime>
		<cancelScheduledValues public="1" set="method">
			<f a="startTime">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</cancelScheduledValues>
		<haxe_doc><![CDATA[There are two kinds of `AudioParam`, a-rate and k-rate parameters:

	Documentation [AudioParam](https://developer.mozilla.org/en-US/docs/Web/API/AudioParam) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/AudioParam$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/AudioParam>]]></haxe_doc>
		<meta><m n=":native"><e>"AudioParam"</e></m></meta>
	</class>
	<class path="js.html.audio.BiquadFilterNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/BiquadFilterNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<type public="1">
			<x path="js.html.audio.BiquadFilterType"/>
			<haxe_doc><![CDATA[Is a string value defining the kind of filtering algorithm the node is implementing.<br>
		  
		 <table class="standard-table">
		  The meaning of the different parameters depending of the type of the filter (detune has the same meaning regardless, so isn't listed below)
		  
		   <tr>
		    <code>type</code>
		    Description
		    <code>frequency</code>
		    <code>Q</code>
		    <code>gain</code>
		   </tr>
		  
		  
		   <tr>
		    <code>lowpass</code>
		    <td>Standard second-order resonant lowpass filter with 12dB/octave rolloff. Frequencies below the cutoff pass through; frequencies above it are attenuated.</td>
		    <td>The cutoff frequency.</td>
		    <td>Indicates how peaked the frequency is around the cutoff. The greater the value is, the greater is the peak.</td>
		    <td>Not used</td>
		   </tr>
		   <tr>
		    <code>highpass</code>
		    <td>Standard second-order resonant highpass filter with 12dB/octave rolloff. Frequencies below the cutoff are attenuated; frequencies above it pass through.</td>
		    <td>The cutoff frequency.</td>
		    <td>Indicates how peaked the frequency is around the cutoff. The greater the value, the greater the peak.</td>
		    <td>Not used</td>
		   </tr>
		   <tr>
		    <code>bandpass</code>
		    <td>Standard second-order bandpass filter. Frequencies outside the given range of frequencies are attenuated; the frequencies inside it pass through.</td>
		    <td>The center of the range of frequencies.</td>
		    <td>Controls the width of the frequency band. The greater the <code>Q</code> value, the smaller the frequency band.</td>
		    <td>Not used</td>
		   </tr>
		   <tr>
		    <code>lowshelf</code>
		    <td>Standard second-order lowshelf filer. Frequencies lower than the frequency get a boost, or an attenuation; frequencies over it are unchanged.</td>
		    <td>The upper limit of the frequencies getting a boost or an attenuation.</td>
		    <td>Not used</td>
		    <td>The boost, in dB, to be applied; if negative, it will be an attenuation.</td>
		   </tr>
		   <tr>
		    <code>highshelf</code>
		    <td>Standard second-order highshelf filer. Frequencies higher than the frequency get a boost or an attenuation; frequencies lower than it are unchanged.</td>
		    <td>The lower limit of the frequencies getting a boost or an attenuation.</td>
		    <td>Not used</td>
		    <td>The boost, in dB, to be applied; if negative, it will be an attenuation.</td>
		   </tr>
		   <tr>
		    <code>peaking</code>
		    <td>Frequencies inside the range get a boost or an attenuation; frequencies outside it are unchanged.</td>
		    <td>The middle of the frequency range getting a boost or an attenuation.</td>
		    <td>Controls the width of the frequency band. The greater the <code>Q</code> value, the smaller the frequency band.</td>
		    <td>The boost, in dB, to be applied; if negative, it will be an attenuation.</td>
		   </tr>
		   <tr>
		    <code>notch</code>
		    <td>Standard notch filter, also called a band-stop or band-rejection filter. It is the opposite of a bandpass filter: frequencies outside the give range of frequencies pass through; frequencies inside it are attenuated.</td>
		    <td>The center of the range of frequencies.</td>
		    <td>Controls the width of the frequency band. The greater the <code>Q</code> value, the smaller the frequency band.</td>
		    <td>Not used</td>
		   </tr>
		   <tr>
		    <code>allpass</code>
		    <td>Standard second-order allpass filter. It lets all frequencies through, but changes the phase-relationship between the various frequencies.</td>
		    <td>The frequency with the maximal group delay, that is, the frequency where the center of the phase transition occurs.</td>
		    <td>Controls how sharp the transition is at the medium frequency. The larger this parameter is, the sharper and larger the transition will be.</td>
		    <td>Not used</td>
		   </tr>
		  
		 </table>]]></haxe_doc>
		</type>
		<frequency public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam`, a double representing a frequency in the current filtering algorithm measured in hertz (Hz).</haxe_doc>
		</frequency>
		<detune public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam` representing detuning of the frequency in cents.</haxe_doc>
		</detune>
		<Q public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam`, a double representing a Q factor, or quality factor.</haxe_doc>
		</Q>
		<gain public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam`, a double representing the gain used in the current filtering algorithm.</haxe_doc>
		</gain>
		<getFrequencyResponse public="1" set="method">
			<f a="frequencyHz:magResponse:phaseResponse">
				<c path="js.html.Float32Array"/>
				<c path="js.html.Float32Array"/>
				<c path="js.html.Float32Array"/>
				<x path="Void"/>
			</f>
			<haxe_doc>From the current filter parameter settings this method calculates the frequency response for frequencies specified in the provided array of frequencies.</haxe_doc>
		</getFrequencyResponse>
		<haxe_doc><![CDATA[The `BiquadFilterNode` interface represents a simple low-order filter, and is created using the `AudioContext.createBiquadFilter()` method. It is an `AudioNode` that can represent different kinds of filters, tone control devices, and graphic equalizers.

	Documentation [BiquadFilterNode](https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode>]]></haxe_doc>
		<meta><m n=":native"><e>"BiquadFilterNode"</e></m></meta>
	</class>
	<abstract path="js.html.audio.BiquadFilterType" params="" file="/usr/local/lib/haxe/std/js/html/audio/BiquadFilterType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._BiquadFilterType.BiquadFilterType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/BiquadFilterType.hx" private="1" module="js.html.audio.BiquadFilterType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.audio.ChannelCountMode" params="" file="/usr/local/lib/haxe/std/js/html/audio/ChannelCountMode.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._ChannelCountMode.ChannelCountMode_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/ChannelCountMode.hx" private="1" module="js.html.audio.ChannelCountMode"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.audio.ChannelInterpretation" params="" file="/usr/local/lib/haxe/std/js/html/audio/ChannelInterpretation.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._ChannelInterpretation.ChannelInterpretation_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/ChannelInterpretation.hx" private="1" module="js.html.audio.ChannelInterpretation"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.audio.ChannelMergerNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/ChannelMergerNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<meta><m n=":native"><e>"ChannelMergerNode"</e></m></meta>
	</class>
	<class path="js.html.audio.ChannelSplitterNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/ChannelSplitterNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<meta><m n=":native"><e>"ChannelSplitterNode"</e></m></meta>
	</class>
	<class path="js.html.audio.ConvolverNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/ConvolverNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<buffer public="1">
			<c path="js.html.audio.AudioBuffer"/>
			<haxe_doc>A mono, stereo, or 4-channel `AudioBuffer` containing the (possibly multichannel) impulse response used by the `ConvolverNode` to create the reverb effect.</haxe_doc>
		</buffer>
		<normalize public="1">
			<x path="Bool"/>
			<haxe_doc>A boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the `buffer` attribute is set, or not.</haxe_doc>
		</normalize>
		<haxe_doc><![CDATA[The `ConvolverNode` interface is an `AudioNode` that performs a Linear Convolution on a given `AudioBuffer`, often used to achieve a reverb effect. A `ConvolverNode` always has exactly one input and one output.

	Documentation [ConvolverNode](https://developer.mozilla.org/en-US/docs/Web/API/ConvolverNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ConvolverNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ConvolverNode>]]></haxe_doc>
		<meta><m n=":native"><e>"ConvolverNode"</e></m></meta>
	</class>
	<class path="js.html.audio.DelayNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/DelayNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<delayTime public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam` representing the amount of delay to apply.</haxe_doc>
		</delayTime>
		<haxe_doc><![CDATA[Documentation [DelayNode](https://developer.mozilla.org/en-US/docs/Web/API/DelayNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DelayNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DelayNode>]]></haxe_doc>
		<meta><m n=":native"><e>"DelayNode"</e></m></meta>
	</class>
	<abstract path="js.html.audio.DistanceModelType" params="" file="/usr/local/lib/haxe/std/js/html/audio/DistanceModelType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._DistanceModelType.DistanceModelType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/DistanceModelType.hx" private="1" module="js.html.audio.DistanceModelType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.audio.DynamicsCompressorNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/DynamicsCompressorNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<threshold public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is a `AudioParam` representing the decibel value above which the compression will start taking effect.</haxe_doc>
		</threshold>
		<knee public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is a `AudioParam` containing a decibel value representing the range above the threshold where the curve smoothly transitions to the compressed portion.</haxe_doc>
		</knee>
		<ratio public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is a `AudioParam` representing the amount of change, in dB, needed in the input for a 1 dB change in the output.</haxe_doc>
		</ratio>
		<reduction public="1" set="null">
			<x path="Float"/>
			<haxe_doc>Is a `float `representing the amount of gain reduction currently applied by the compressor to the signal.</haxe_doc>
		</reduction>
		<attack public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is a `AudioParam` representing the amount of time, in seconds, required to reduce the gain by 10 dB.</haxe_doc>
		</attack>
		<release public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is a `AudioParam` representing the amount of time, in seconds, required to increase the gain by 10 dB.</haxe_doc>
		</release>
		<haxe_doc><![CDATA[Inherits properties from its parent, `AudioNode`.

	Documentation [DynamicsCompressorNode](https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode>]]></haxe_doc>
		<meta><m n=":native"><e>"DynamicsCompressorNode"</e></m></meta>
	</class>
	<class path="js.html.audio.GainNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/GainNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<gain public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam` representing the amount of gain to apply.</haxe_doc>
		</gain>
		<haxe_doc><![CDATA[The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is applied using a de-zippering algorithm in order to prevent unaesthetic 'clicks' from appearing in the resulting audio.

	Documentation [GainNode](https://developer.mozilla.org/en-US/docs/Web/API/GainNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/GainNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/GainNode>]]></haxe_doc>
		<meta><m n=":native"><e>"GainNode"</e></m></meta>
	</class>
	<class path="js.html.audio.MediaElementAudioSourceNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/MediaElementAudioSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<haxe_doc><![CDATA[A `MediaElementSourceNode` has no inputs and exactly one output, and is created using the `AudioContext.createMediaElementSource` method. The amount of channels in the output equals the number of channels of the audio referenced by the `HTMLMediaElement` used in the creation of the node, or is 1 if the `HTMLMediaElement` has no audio.

	Documentation [MediaElementAudioSourceNode](https://developer.mozilla.org/en-US/docs/Web/API/MediaElementAudioSourceNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaElementAudioSourceNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaElementAudioSourceNode>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaElementAudioSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.MediaStreamAudioDestinationNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/MediaStreamAudioDestinationNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<stream public="1" set="null">
			<c path="js.html.MediaStream"/>
			<haxe_doc>Is a `MediaStream` containing a single `AudioMediaStreamTrack` with the same number of channels as the node itself. You can use this property to get a stream out of the audio graph and feed it into another construct, such as a Media Recorder.</haxe_doc>
		</stream>
		<haxe_doc><![CDATA[Inherits properties from its parent, `AudioNode`.

	Documentation [MediaStreamAudioDestinationNode](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioDestinationNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioDestinationNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioDestinationNode>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaStreamAudioDestinationNode"</e></m></meta>
	</class>
	<class path="js.html.audio.MediaStreamAudioSourceNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/MediaStreamAudioSourceNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<haxe_doc><![CDATA[A `MediaElementSourceNode` has no inputs and exactly one output, and is created using the `AudioContext.createMediaStreamSource` method. The amount of channels in the output equals the number of channels in `AudioMediaStreamTrack`. If there is no valid media stream, then the number of output channels will be one silent channel.

	Documentation [MediaStreamAudioSourceNode](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode>]]></haxe_doc>
		<meta><m n=":native"><e>"MediaStreamAudioSourceNode"</e></m></meta>
	</class>
	<class path="js.html.audio.OscillatorNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/OscillatorNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<type public="1">
			<x path="js.html.audio.OscillatorType"/>
			<haxe_doc>Represents the shape of the oscillator wave generated. Different waves will produce different tones.</haxe_doc>
		</type>
		<frequency public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>An a-rate `AudioParam` representing the frequency of oscillation in hertz (though the AudioParam` returned is read-only, the value it represents is not.)</haxe_doc>
		</frequency>
		<detune public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>An a-rate `AudioParam` representing detuning of oscillation in cents (though the AudioParam` returned is read-only, the value it represents is not.)</haxe_doc>
		</detune>
		<onended public="1"><x path="haxe.Function"/></onended>
		<start public="1" set="method">
			<f a="?when" v="0.0">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ when : 0.0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</start>
		<stop public="1" set="method">
			<f a="?when" v="0.0">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ when : 0.0 }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</stop>
		<setPeriodicWave public="1" set="method">
			<f a="periodicWave">
				<c path="js.html.audio.PeriodicWave"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Used to point to a `PeriodicWave` defining a periodic waveform that can be used to shape the oscillator's output, when `type = "custom"` is used. This replaces the now-obsolete `OscillatorNode.setWaveTable`.</haxe_doc>
		</setPeriodicWave>
		<haxe_doc><![CDATA[The `OscillatorNode` interface represents a periodic waveform, like a sine wave. It is an `AudioNode` audio-processing module that causes a given frequency of sine wave to be created — in effect, a constant tone.

	Documentation [OscillatorNode](https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode>]]></haxe_doc>
		<meta><m n=":native"><e>"OscillatorNode"</e></m></meta>
	</class>
	<abstract path="js.html.audio.OscillatorType" params="" file="/usr/local/lib/haxe/std/js/html/audio/OscillatorType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._OscillatorType.OscillatorType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/OscillatorType.hx" private="1" module="js.html.audio.OscillatorType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<abstract path="js.html.audio.OverSampleType" params="" file="/usr/local/lib/haxe/std/js/html/audio/OverSampleType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._OverSampleType.OverSampleType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/OverSampleType.hx" private="1" module="js.html.audio.OverSampleType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.audio.PannerNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/PannerNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<panningModel public="1">
			<x path="js.html.audio.PanningModelType"/>
			<haxe_doc>An enumerated value determining which spatialisation algorithm to use to position the audio in 3D space.</haxe_doc>
		</panningModel>
		<distanceModel public="1">
			<x path="js.html.audio.DistanceModelType"/>
			<haxe_doc>An enumerated value determining which algorithm to use to reduce the volume of the audio source as it moves away from the listener.</haxe_doc>
		</distanceModel>
		<refDistance public="1">
			<x path="Float"/>
			<haxe_doc>A double value representing the reference distance for reducing volume as the audio source moves further from the listener.</haxe_doc>
		</refDistance>
		<maxDistance public="1">
			<x path="Float"/>
			<haxe_doc>A double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further.</haxe_doc>
		</maxDistance>
		<rolloffFactor public="1">
			<x path="Float"/>
			<haxe_doc>A double value describing how quickly the volume is reduced as the source moves away from the listener. This value is used by all distance models.</haxe_doc>
		</rolloffFactor>
		<coneInnerAngle public="1">
			<x path="Float"/>
			<haxe_doc>Is a double value describing the angle, in degrees, of a cone inside of which there will be no volume reduction.</haxe_doc>
		</coneInnerAngle>
		<coneOuterAngle public="1">
			<x path="Float"/>
			<haxe_doc>A double value describing the angle, in degrees, of a cone outside of which the volume will be reduced by a constant value, defined by the `coneOuterGain` attribute.</haxe_doc>
		</coneOuterAngle>
		<coneOuterGain public="1">
			<x path="Float"/>
			<haxe_doc>A double value describing the amount of volume reduction outside the cone defined by the `coneOuterAngle` attribute. Its default value is `0`, meaning that no sound can be heard.</haxe_doc>
		</coneOuterGain>
		<setPosition public="1" set="method">
			<f a="x:y:z">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Defines the position of the audio source relative to the listener (represented by an `AudioListener` object stored in the `AudioContext.listener` attribute.)</haxe_doc>
		</setPosition>
		<setOrientation public="1" set="method">
			<f a="x:y:z">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Defines the direction the audio source is playing in.</haxe_doc>
		</setOrientation>
		<setVelocity public="1" set="method">
			<f a="x:y:z">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Defines the velocity vector of the audio source — how fast it is moving and in what direction. In a previous version of the specification, the `PannerNode` had a velocity that could pitch up or down `AudioBufferSourceNode`s connected downstream. This feature was not clearly specified and had a number of issues, so it was removed from the specification.</haxe_doc>
		</setVelocity>
		<haxe_doc><![CDATA[A `PannerNode` always has exactly one input and one output: the input can be mono or stereo but the output is always stereo (2 channels); you can't have panning effects without at least two audio channels!

	Documentation [PannerNode](https://developer.mozilla.org/en-US/docs/Web/API/PannerNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PannerNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PannerNode>]]></haxe_doc>
		<meta><m n=":native"><e>"PannerNode"</e></m></meta>
	</class>
	<abstract path="js.html.audio.PanningModelType" params="" file="/usr/local/lib/haxe/std/js/html/audio/PanningModelType.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.audio._PanningModelType.PanningModelType_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/audio/PanningModelType.hx" private="1" module="js.html.audio.PanningModelType"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.audio.PeriodicWave" params="" file="/usr/local/lib/haxe/std/js/html/audio/PeriodicWave.hx" extern="1">
		<haxe_doc><![CDATA[`PeriodicWave` has no inputs or outputs; it is used to create custom oscillators via `OscillatorNode.setPeriodicWave`. The `PeriodicWave` itself is created/returned by `AudioContext.createPeriodicWave`.

	Documentation [PeriodicWave](https://developer.mozilla.org/en-US/docs/Web/API/PeriodicWave) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/PeriodicWave$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/PeriodicWave>]]></haxe_doc>
		<meta><m n=":native"><e>"PeriodicWave"</e></m></meta>
	</class>
	<class path="js.html.audio.ScriptProcessorNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/ScriptProcessorNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<onaudioprocess public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Represents the `EventHandler` to be called.</haxe_doc>
		</onaudioprocess>
		<bufferSize public="1" set="null">
			<x path="Int"/>
			<haxe_doc>Returns an integer representing both the input and output buffer size. Its value can be a power of 2 value in the range `256`–`16384`.</haxe_doc>
		</bufferSize>
		<haxe_doc><![CDATA[Documentation [ScriptProcessorNode](https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/ScriptProcessorNode>]]></haxe_doc>
		<meta><m n=":native"><e>"ScriptProcessorNode"</e></m></meta>
	</class>
	<class path="js.html.audio.StereoPannerNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/StereoPannerNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<pan public="1" set="null">
			<c path="js.html.audio.AudioParam"/>
			<haxe_doc>Is an a-rate `AudioParam` representing the amount of panning to apply.</haxe_doc>
		</pan>
		<haxe_doc><![CDATA[The `pan` property takes a unitless value between `-1` (full left pan) and `1` (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full `PannerNode`.

	Documentation [StereoPannerNode](https://developer.mozilla.org/en-US/docs/Web/API/StereoPannerNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/StereoPannerNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/StereoPannerNode>]]></haxe_doc>
		<meta><m n=":native"><e>"StereoPannerNode"</e></m></meta>
	</class>
	<class path="js.html.audio.WaveShaperNode" params="" file="/usr/local/lib/haxe/std/js/html/audio/WaveShaperNode.hx" extern="1">
		<extends path="js.html.audio.AudioNode"/>
		<curve public="1">
			<c path="js.html.Float32Array"/>
			<haxe_doc>Is a `Float32Array` of numbers describing the distortion to apply.</haxe_doc>
		</curve>
		<oversample public="1">
			<x path="js.html.audio.OverSampleType"/>
			<haxe_doc>Is an enumerated value indicating if oversampling must be used. Oversampling is a technique for creating more samples (up-sampling) before applying the distortion effect to the audio signal.</haxe_doc>
		</oversample>
		<haxe_doc><![CDATA[A `WaveShaperNode` always has exactly one input and one output.

	Documentation [WaveShaperNode](https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode>]]></haxe_doc>
		<meta><m n=":native"><e>"WaveShaperNode"</e></m></meta>
	</class>
	<class path="js.html.compat.ArrayBuffer" params="" file="/usr/local/lib/haxe/std/js/html/compat/ArrayBuffer.hx">
		<sliceImpl set="method" line="48" static="1"><f a="begin:?end">
	<x path="Null"><x path="Int"/></x>
	<x path="Int"/>
	<c path="js.html.ArrayBuffer"/>
</f></sliceImpl>
		<byteLength public="1"><x path="Int"/></byteLength>
		<a><c path="Array"><x path="Int"/></c></a>
		<slice public="1" set="method" line="44"><f a="begin:?end">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.compat.ArrayBuffer"/>
</f></slice>
		<new public="1" set="method" line="31"><f a="?a">
	<d/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":ifFeature"><e>"js.html.ArrayBuffer.*"</e></m>
		</meta>
	</class>
	<class path="js.html.compat.DataView" params="" file="/usr/local/lib/haxe/std/js/html/compat/DataView.hx">
		<buf><c path="js.html.compat.ArrayBuffer"/></buf>
		<offset><x path="Int"/></offset>
		<length><x path="Int"/></length>
		<byteLength public="1" set="null"><x path="Int"/></byteLength>
		<byteOffset public="1" set="null"><x path="Int"/></byteOffset>
		<buffer public="1" set="null"><c path="js.html.compat.ArrayBuffer"/></buffer>
		<getInt8 public="1" set="method" line="50"><f a="byteOffset">
	<x path="Int"/>
	<x path="Int"/>
</f></getInt8>
		<getUint8 public="1" set="method" line="55"><f a="byteOffset">
	<x path="Int"/>
	<x path="Int"/>
</f></getUint8>
		<getInt16 public="1" set="method" line="59"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getInt16>
		<getUint16 public="1" set="method" line="64"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getUint16>
		<getInt32 public="1" set="method" line="68"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getInt32>
		<getUint32 public="1" set="method" line="77"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
</f></getUint32>
		<getFloat32 public="1" set="method" line="82"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Float"/>
</f></getFloat32>
		<getFloat64 public="1" set="method" line="86"><f a="byteOffset:?littleEndian">
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Float"/>
</f></getFloat64>
		<setInt8 public="1" set="method" line="92"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt8>
		<setUint8 public="1" set="method" line="96"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setUint8>
		<setInt16 public="1" set="method" line="100"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setInt16>
		<setUint16 public="1" set="method" line="104"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setUint16>
		<setInt32 public="1" set="method" line="115"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setInt32>
		<setUint32 public="1" set="method" line="119"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setUint32>
		<setFloat32 public="1" set="method" line="134"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setFloat32>
		<setFloat64 public="1" set="method" line="138"><f a="byteOffset:value:?littleEndian">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setFloat64>
		<new public="1" set="method" line="39"><f a="buffer:?byteOffset:?byteLength">
	<c path="js.html.compat.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":ifFeature"><e>"js.html.DataView.*"</e></m>
			<m n=":access"><e>js.html.compat.ArrayBuffer</e></m>
		</meta>
	</class>
	<class path="js.html.compat.Uint8Array" params="" file="/usr/local/lib/haxe/std/js/html/compat/Uint8Array.hx">
		<BYTES_PER_ELEMENT expr="1" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<_new set="method" line="32" static="1">
			<f a="?arg1:?offset:?length">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</_new>
		<_set set="method" line="74" static="1">
			<f a="?arg:?offset" v=":0">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0 }</e></m></meta>
		</_set>
		<_subarray set="method" line="91" static="1"><f a="start:?end">
	<x path="Int"/>
	<x path="Int"/>
	<a><byteOffset><x path="Int"/></byteOffset></a>
</f></_subarray>
		<meta>
			<m n=":keep"/>
			<m n=":directlyUsed"/>
			<m n=":ifFeature"><e>"js.html.Uint8Array.*"</e></m>
		</meta>
	</class>
	<class path="js.html.idb.Cursor" params="" file="/usr/local/lib/haxe/std/js/html/idb/Cursor.hx" extern="1">
		<source public="1" set="null">
			<x path="haxe.extern.EitherType">
				<c path="js.html.idb.ObjectStore"/>
				<c path="js.html.idb.Index"/>
			</x>
			<haxe_doc>Returns the `IDBObjectStore` or `IDBIndex` that the cursor is iterating. This function never returns null or throws an exception, even if the cursor is currently being iterated, has iterated past its end, or its transaction is not active.</haxe_doc>
		</source>
		<direction public="1" set="null">
			<x path="js.html.idb.CursorDirection"/>
			<haxe_doc>Returns the direction of traversal of the cursor. See Constants for possible values.</haxe_doc>
		</direction>
		<key public="1" set="null">
			<d/>
			<haxe_doc>Returns the key for the record at the cursor's position. If the cursor is outside its range, this is set to `undefined`. The cursor's key can be any data type.</haxe_doc>
		</key>
		<primaryKey public="1" set="null">
			<d/>
			<haxe_doc>Returns the cursor's current effective primary key. If the cursor is currently being iterated or has iterated outside its range, this is set to `undefined`. The cursor's primary key can be any data type.</haxe_doc>
		</primaryKey>
		<update public="1" set="method">
			<f a="value">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</update>
		<advance public="1" set="method">
			<f a="count">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</advance>
		<continue_ public="1" set="method">
			<f a="?key">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":native"><e>"continue"</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</continue_>
		<delete_ public="1" set="method">
			<f a=""><c path="js.html.idb.Request"/></f>
			<meta><m n=":native"><e>"delete"</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</delete_>
		<haxe_doc><![CDATA[The `IDBCursor` interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database.

	Documentation [IDBCursor](https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBCursor"</e></m></meta>
	</class>
	<abstract path="js.html.idb.CursorDirection" params="" file="/usr/local/lib/haxe/std/js/html/idb/CursorDirection.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.idb._CursorDirection.CursorDirection_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/idb/CursorDirection.hx" private="1" module="js.html.idb.CursorDirection"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.idb.Database" params="" file="/usr/local/lib/haxe/std/js/html/idb/Database.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>A `DOMString` that contains the name of the connected database.</haxe_doc>
		</name>
		<version public="1" set="null">
			<x path="Int"/>
			<haxe_doc>A 64-bit integer that contains the version of the connected database. When a database is first created, this attribute is an empty string.</haxe_doc>
		</version>
		<objectStoreNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc>A `DOMStringList` that contains a list of the names of the object stores currently in the connected database.</haxe_doc>
		</objectStoreNames>
		<onabort public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fires when access of the database is aborted.</haxe_doc>
		</onabort>
		<onerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fires when access to the database fails.</haxe_doc>
		</onerror>
		<onversionchange public="1">
			<x path="haxe.Function"/>
			<haxe_doc>Fires when a database structure change (`IDBOpenDBRequest.onupgradeneeded` event or` ``IDBFactory.deleteDatabase()` was requested elsewhere (most probably in another window/tab on the same computer). This is different from the version change transaction (see `IDBVersionChangeEvent`), but it is related.</haxe_doc>
		</onversionchange>
		<createObjectStore public="1" set="method">
			<f a="name:?optionalParameters">
				<c path="String"/>
				<t path="js.html.idb.ObjectStoreParameters"/>
				<c path="js.html.idb.ObjectStore"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createObjectStore>
		<deleteObjectStore public="1" set="method">
			<f a="name">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteObjectStore>
		<transaction public="1" set="method">
			<f a="storeNames:?mode" v=":&quot;readonly&quot;">
				<x path="haxe.extern.EitherType">
					<c path="String"/>
					<c path="Array"><c path="String"/></c>
				</x>
				<x path="js.html.idb.TransactionMode"/>
				<c path="js.html.idb.Transaction"/>
			</f>
			<meta><m n=":value"><e>{ mode : "readonly" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</transaction>
		<close public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Returns immediately and closes the connection to a database in a separate thread.</haxe_doc>
		</close>
		<createMutableFile public="1" set="method">
			<f a="name:?type">
				<c path="String"/>
				<c path="String"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</createMutableFile>
		<haxe_doc><![CDATA[Inherits from: EventTarget

	Documentation [IDBDatabase](https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBDatabase"</e></m></meta>
	</class>
	<class path="js.html.idb.Factory" params="" file="/usr/local/lib/haxe/std/js/html/idb/Factory.hx" extern="1">
		<open public="1" set="method">
			<f a="name:?options">
				<c path="String"/>
				<t path="js.html.idb.OpenDBOptions"/>
				<c path="js.html.idb.OpenDBRequest"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><open public="1" set="method">
	<f a="name:version">
		<c path="String"/>
		<x path="Int"/>
		<c path="js.html.idb.OpenDBRequest"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</open></overloads>
		</open>
		<deleteDatabase public="1" set="method">
			<f a="name:?options">
				<c path="String"/>
				<t path="js.html.idb.OpenDBOptions"/>
				<c path="js.html.idb.OpenDBRequest"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteDatabase>
		<cmp public="1" set="method">
			<f a="first:second">
				<d/>
				<d/>
				<x path="Int"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</cmp>
		<haxe_doc><![CDATA[In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.)

	Documentation [IDBFactory](https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBFactory"</e></m></meta>
	</class>
	<class path="js.html.idb.Index" params="" file="/usr/local/lib/haxe/std/js/html/idb/Index.hx" extern="1">
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of this index.</haxe_doc>
		</name>
		<objectStore public="1" set="null">
			<c path="js.html.idb.ObjectStore"/>
			<haxe_doc>The name of the object store referenced by this index.</haxe_doc>
		</objectStore>
		<keyPath public="1" set="null">
			<d/>
			<haxe_doc>The key path of this index. If null, this index is not auto-populated.</haxe_doc>
		</keyPath>
		<multiEntry public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Affects how the index behaves when the result of evaluating the index's key path yields an array. If `true`, there is one record in the index for each item in an array of keys. If `false`, then there is one record for each key that is an array.</haxe_doc>
		</multiEntry>
		<unique public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>If `true`, this index does not allow duplicate values for a key.</haxe_doc>
		</unique>
		<openCursor public="1" set="method">
			<f a="?range:?direction" v=":&quot;next&quot;">
				<d/>
				<x path="js.html.idb.CursorDirection"/>
				<c path="js.html.idb.Request"/>
			</f>
			<meta><m n=":value"><e>{ direction : "next" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</openCursor>
		<openKeyCursor public="1" set="method">
			<f a="?range:?direction" v=":&quot;next&quot;">
				<d/>
				<x path="js.html.idb.CursorDirection"/>
				<c path="js.html.idb.Request"/>
			</f>
			<meta><m n=":value"><e>{ direction : "next" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</openKeyCursor>
		<get public="1" set="method">
			<f a="key">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</get>
		<getKey public="1" set="method">
			<f a="key">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getKey>
		<count public="1" set="method">
			<f a="?key">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</count>
		<getAll public="1" set="method">
			<f a="?key:?limit">
				<d/>
				<x path="Int"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getAll>
		<getAllKeys public="1" set="method">
			<f a="?key:?limit">
				<d/>
				<x path="Int"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getAllKeys>
		<haxe_doc><![CDATA[`IDBIndex` interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data.

	Documentation [IDBIndex](https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBIndex>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBIndex"</e></m></meta>
	</class>
	<typedef path="js.html.idb.IndexParameters" params="" file="/usr/local/lib/haxe/std/js/html/idb/IndexParameters.hx"><a>
	<unique>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</unique>
	<multiEntry>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</multiEntry>
	<locale>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</locale>
</a></typedef>
	<class path="js.html.idb.ObjectStore" params="" file="/usr/local/lib/haxe/std/js/html/idb/ObjectStore.hx" extern="1">
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The name of this object store.</haxe_doc>
		</name>
		<keyPath public="1" set="null">
			<d/>
			<haxe_doc>The key path of this object store. If this attribute is `null`, the application must provide a key for each modification operation.</haxe_doc>
		</keyPath>
		<indexNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc>A list of the names of indexes on objects in this object store.</haxe_doc>
		</indexNames>
		<transaction public="1" set="null">
			<c path="js.html.idb.Transaction"/>
			<haxe_doc>The `IDBTransaction` object to which this object store belongs.</haxe_doc>
		</transaction>
		<autoIncrement public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>The value of the auto increment flag for this object store.</haxe_doc>
		</autoIncrement>
		<put public="1" set="method">
			<f a="value:?key">
				<d/>
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</put>
		<add public="1" set="method">
			<f a="value:?key">
				<d/>
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</add>
		<delete_ public="1" set="method">
			<f a="key">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<meta><m n=":native"><e>"delete"</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</delete_>
		<get public="1" set="method">
			<f a="key">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</get>
		<clear public="1" set="method">
			<f a=""><c path="js.html.idb.Request"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</clear>
		<openCursor public="1" set="method">
			<f a="?range:?direction" v=":&quot;next&quot;">
				<d/>
				<x path="js.html.idb.CursorDirection"/>
				<c path="js.html.idb.Request"/>
			</f>
			<meta><m n=":value"><e>{ direction : "next" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</openCursor>
		<createIndex public="1" set="method">
			<f a="name:keyPath:?optionalParameters">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<t path="js.html.idb.IndexParameters"/>
				<c path="js.html.idb.Index"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads><createIndex public="1" set="method">
	<f a="name:keyPath:?optionalParameters">
		<c path="String"/>
		<c path="String"/>
		<t path="js.html.idb.IndexParameters"/>
		<c path="js.html.idb.Index"/>
	</f>
	<haxe_doc>@throws DOMError</haxe_doc>
</createIndex></overloads>
		</createIndex>
		<index public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.idb.Index"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</index>
		<deleteIndex public="1" set="method">
			<f a="indexName">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</deleteIndex>
		<count public="1" set="method">
			<f a="?key">
				<d/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</count>
		<getAll public="1" set="method">
			<f a="?key:?limit">
				<d/>
				<x path="Int"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getAll>
		<getAllKeys public="1" set="method">
			<f a="?key:?limit">
				<d/>
				<x path="Int"/>
				<c path="js.html.idb.Request"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getAllKeys>
		<openKeyCursor public="1" set="method">
			<f a="?range:?direction" v=":&quot;next&quot;">
				<d/>
				<x path="js.html.idb.CursorDirection"/>
				<c path="js.html.idb.Request"/>
			</f>
			<meta><m n=":value"><e>{ direction : "next" }</e></m></meta>
			<haxe_doc>@throws DOMError</haxe_doc>
		</openKeyCursor>
		<haxe_doc><![CDATA[This example shows a variety of different uses of object stores, from updating the data structure with `IDBObjectStore.createIndex` inside an `onupgradeneeded` function, to adding a new item to our object store with `IDBObjectStore.add`. For a full working example, see our To-do Notifications app (view example live.)

	Documentation [IDBObjectStore](https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBObjectStore"</e></m></meta>
	</class>
	<typedef path="js.html.idb.ObjectStoreParameters" params="" file="/usr/local/lib/haxe/std/js/html/idb/ObjectStoreParameters.hx"><a>
	<keyPath>
		<x path="Null"><x path="haxe.extern.EitherType">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</x></x>
		<meta><m n=":optional"/></meta>
	</keyPath>
	<autoIncrement>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</autoIncrement>
</a></typedef>
	<typedef path="js.html.idb.OpenDBOptions" params="" file="/usr/local/lib/haxe/std/js/html/idb/OpenDBOptions.hx"><a>
	<version>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</version>
	<storage>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</storage>
</a></typedef>
	<class path="js.html.idb.Request" params="" file="/usr/local/lib/haxe/std/js/html/idb/Request.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<result public="1" set="null">
			<d/>
			<haxe_doc>Returns the result of the request. If the the request failed and the result is not available, an InvalidStateError exception is thrown.</haxe_doc>
		</result>
		<error public="1" set="null">
			<c path="js.html.DOMError"/>
			<haxe_doc>Returns an error in the event of an unsuccessful request, indicating what went wrong.</haxe_doc>
		</error>
		<source public="1" set="null">
			<x path="haxe.extern.EitherType">
				<c path="js.html.idb.ObjectStore"/>
				<x path="haxe.extern.EitherType">
					<c path="js.html.idb.Index"/>
					<c path="js.html.idb.Cursor"/>
				</x>
			</x>
			<haxe_doc>The source of the request, such as an `IDBIndex` or an `IDBObjectStore`. If no source exists (such as when calling `IDBFactory.open`), it returns null.</haxe_doc>
		</source>
		<transaction public="1" set="null">
			<c path="js.html.idb.Transaction"/>
			<haxe_doc>The transaction for the request. This property can be null for certain requests, for example those returned from `IDBFactory.open` unless an upgrade is needed. (You're just connecting to a database, so there is no transaction to return).</haxe_doc>
		</transaction>
		<readyState public="1" set="null">
			<x path="js.html.idb.RequestReadyState"/>
			<haxe_doc>The state of the request. Every request starts in the `pending` state. The state changes to `done` when the request completes successfully or when an error occurs.</haxe_doc>
		</readyState>
		<onsuccess public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the success event.</haxe_doc>
		</onsuccess>
		<onerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the error event.</haxe_doc>
		</onerror>
		<haxe_doc><![CDATA[The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the `IDBRequest` instance.

	Documentation [IDBRequest](https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBRequest"</e></m></meta>
	</class>
	<class path="js.html.idb.OpenDBRequest" params="" file="/usr/local/lib/haxe/std/js/html/idb/OpenDBRequest.hx" extern="1">
		<extends path="js.html.idb.Request"/>
		<onblocked public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the blocked event. This event is triggered when the `upgradeneeded` event should be triggered because of a version change but the database is still in use (i.e. not closed) somewhere, even after the `versionchange` event was sent.</haxe_doc>
		</onblocked>
		<onupgradeneeded public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the `upgradeneeded` event, fired when a database of a bigger version number than the existing stored database is loaded.</haxe_doc>
		</onupgradeneeded>
		<haxe_doc><![CDATA[No methods, but inherits methods from its parents `IDBRequest` and `EventTarget`.

	Documentation [IDBOpenDBRequest](https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBOpenDBRequest"</e></m></meta>
	</class>
	<abstract path="js.html.idb.RequestReadyState" params="" file="/usr/local/lib/haxe/std/js/html/idb/RequestReadyState.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.idb._RequestReadyState.RequestReadyState_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/idb/RequestReadyState.hx" private="1" module="js.html.idb.RequestReadyState"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.idb.Transaction" params="" file="/usr/local/lib/haxe/std/js/html/idb/Transaction.hx" extern="1">
		<extends path="js.html.EventTarget"/>
		<mode public="1" set="null">
			<x path="js.html.idb.TransactionMode"/>
			<haxe_doc>The mode for isolating access to data in the object stores that are in the scope of the transaction. For possible values, see the Constants section below. The default value is `readonly`.</haxe_doc>
		</mode>
		<db public="1" set="null">
			<c path="js.html.idb.Database"/>
			<haxe_doc>The database connection with which this transaction is associated.</haxe_doc>
		</db>
		<error public="1" set="null">
			<c path="js.html.DOMError"/>
			<haxe_doc>Returns one of several types of error when there is an unsuccessful transaction. This property is `null` if the transaction is not finished, is finished and successfully committed, or was aborted with `IDBTransaction.abort` function.</haxe_doc>
		</error>
		<onabort public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the `abort` event, fired when the transaction is aborted.</haxe_doc>
		</onabort>
		<oncomplete public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the `complete` event, thrown when the transaction completes successfully.</haxe_doc>
		</oncomplete>
		<onerror public="1">
			<x path="haxe.Function"/>
			<haxe_doc>The event handler for the `error` event, thrown when the transaction fails to complete.</haxe_doc>
		</onerror>
		<objectStoreNames public="1" set="null">
			<c path="js.html.DOMStringList"/>
			<haxe_doc>Returns a `DOMStringList` of the names of `IDBObjectStore` objects.</haxe_doc>
		</objectStoreNames>
		<objectStore public="1" set="method">
			<f a="name">
				<c path="String"/>
				<c path="js.html.idb.ObjectStore"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</objectStore>
		<abort public="1" set="method">
			<f a=""><x path="Void"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</abort>
		<haxe_doc><![CDATA[Note that as of Firefox 40, IndexedDB transactions have relaxed durability guarantees to increase performance (see bug 1112702.) Previously in a `readwrite` transaction `IDBTransaction.oncomplete` was fired only when all data was guaranteed to have been flushed to disk. In Firefox 40+ the `complete` event is fired after the OS has been told to write the data but potentially before that data has actually been flushed to disk. The `complete` event may thus be delivered quicker than before, however, there exists a small chance that the entire transaction will be lost if the OS crashes or there is a loss of system power before the data is flushed to disk. Since such catastrophic events are rare most consumers should not need to concern themselves further.

	Documentation [IDBTransaction](https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/IDBTransaction>]]></haxe_doc>
		<meta><m n=":native"><e>"IDBTransaction"</e></m></meta>
	</class>
	<abstract path="js.html.idb.TransactionMode" params="" file="/usr/local/lib/haxe/std/js/html/idb/TransactionMode.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="js.html.idb._TransactionMode.TransactionMode_Impl_" params="" file="/usr/local/lib/haxe/std/js/html/idb/TransactionMode.hx" private="1" module="js.html.idb.TransactionMode"><meta>
	<m n=":keep"/>
	<m n=":final"/>
	<m n=":enum"/>
</meta></class></impl>
	</abstract>
	<class path="js.html.svg.Matrix" params="" file="/usr/local/lib/haxe/std/js/html/svg/Matrix.hx" extern="1">
		<a public="1"><x path="Float"/></a>
		<b public="1"><x path="Float"/></b>
		<c public="1"><x path="Float"/></c>
		<d public="1"><x path="Float"/></d>
		<e public="1"><x path="Float"/></e>
		<f public="1"><x path="Float"/></f>
		<multiply public="1" set="method"><f a="secondMatrix">
	<c path="js.html.svg.Matrix"/>
	<c path="js.html.svg.Matrix"/>
</f></multiply>
		<inverse public="1" set="method">
			<f a=""><c path="js.html.svg.Matrix"/></f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</inverse>
		<translate public="1" set="method"><f a="x:y">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></translate>
		<scale public="1" set="method"><f a="scaleFactor">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></scale>
		<scaleNonUniform public="1" set="method"><f a="scaleFactorX:scaleFactorY">
	<x path="Float"/>
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></scaleNonUniform>
		<rotate public="1" set="method"><f a="angle">
	<x path="Float"/>
	<c path="js.html.svg.Matrix"/>
</f></rotate>
		<rotateFromVector public="1" set="method">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<c path="js.html.svg.Matrix"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</rotateFromVector>
		<flipX public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></flipX>
		<flipY public="1" set="method"><f a=""><c path="js.html.svg.Matrix"/></f></flipY>
		<skewX public="1" set="method">
			<f a="angle">
				<x path="Float"/>
				<c path="js.html.svg.Matrix"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</skewX>
		<skewY public="1" set="method">
			<f a="angle">
				<x path="Float"/>
				<c path="js.html.svg.Matrix"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</skewY>
		<haxe_doc><![CDATA[Many of SVG's graphics operations utilize 2x3 matrices of the form:

	Documentation [SVGMatrix](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix>]]></haxe_doc>
		<meta><m n=":native"><e>"SVGMatrix"</e></m></meta>
	</class>
	<class path="js.html.webgl.ActiveInfo" params="" file="/usr/local/lib/haxe/std/js/html/webgl/ActiveInfo.hx" extern="1">
		<size public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The read-only size of the requested variable.</haxe_doc>
		</size>
		<type public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The read-only type of the requested variable.</haxe_doc>
		</type>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>The read-only name of the requested variable.</haxe_doc>
		</name>
		<haxe_doc><![CDATA[The WebGLActiveInfo interface is part of the WebGL API and represents the information returned by calling the `WebGLRenderingContext.getActiveAttrib()` and `WebGLRenderingContext.getActiveUniform()` methods.

	Documentation [WebGLActiveInfo](https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLActiveInfo"</e></m></meta>
	</class>
	<class path="js.html.webgl.Buffer" params="" file="/usr/local/lib/haxe/std/js/html/webgl/Buffer.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLBuffer interface is part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors.

	Documentation [WebGLBuffer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLBuffer"</e></m></meta>
	</class>
	<typedef path="js.html.webgl.ContextAttributes" params="" file="/usr/local/lib/haxe/std/js/html/webgl/ContextAttributes.hx"><a>
	<stencil>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</stencil>
	<preserveDrawingBuffer>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</preserveDrawingBuffer>
	<premultipliedAlpha>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</premultipliedAlpha>
	<failIfMajorPerformanceCaveat>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</failIfMajorPerformanceCaveat>
	<depth>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</depth>
	<antialias>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</antialias>
	<alpha>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</alpha>
</a></typedef>
	<class path="js.html.webgl.Framebuffer" params="" file="/usr/local/lib/haxe/std/js/html/webgl/Framebuffer.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLFramebuffer interface is part of the WebGL API and represents a collection of buffers that serve as a rendering destination.

	Documentation [WebGLFramebuffer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLFramebuffer) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLFramebuffer$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLFramebuffer>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLFramebuffer"</e></m></meta>
	</class>
	<class path="js.html.webgl.Program" params="" file="/usr/local/lib/haxe/std/js/html/webgl/Program.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLProgram is part of the WebGL API and is a combination of two compiled `WebGLShader`s consisting of a vertex shader and a fragment shader (both written in GLSL). These are then linked into a usable program.

	Documentation [WebGLProgram](https://developer.mozilla.org/en-US/docs/Web/API/WebGLProgram) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLProgram$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLProgram>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLProgram"</e></m></meta>
	</class>
	<class path="js.html.webgl.Renderbuffer" params="" file="/usr/local/lib/haxe/std/js/html/webgl/Renderbuffer.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLRenderbuffer interface is part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation.

	Documentation [WebGLRenderbuffer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderbuffer) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderbuffer$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderbuffer>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLRenderbuffer"</e></m></meta>
	</class>
	<class path="js.html.webgl.RenderingContext" params="" file="/usr/local/lib/haxe/std/js/html/webgl/RenderingContext.hx" extern="1">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" expr="256" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>256</e></m></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" expr="1024" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1024</e></m></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" expr="16384" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>16384</e></m></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="inline" set="null" expr="0" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</POINTS>
		<LINES public="1" get="inline" set="null" expr="1" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</LINES>
		<LINE_LOOP public="1" get="inline" set="null" expr="2" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" expr="3" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" expr="4" line="44" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" expr="5" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5</e></m></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" expr="6" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6</e></m></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="inline" set="null" expr="0" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ZERO>
		<ONE public="1" get="inline" set="null" expr="1" line="48" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ONE>
		<SRC_COLOR public="1" get="inline" set="null" expr="768" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>768</e></m></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" expr="769" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>769</e></m></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" expr="770" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>770</e></m></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" expr="771" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>771</e></m></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" expr="772" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>772</e></m></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" expr="773" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>773</e></m></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" expr="774" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>774</e></m></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" expr="775" line="56" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>775</e></m></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" expr="776" line="57" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>776</e></m></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="inline" set="null" expr="32774" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32774</e></m></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="inline" set="null" expr="32777" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32777</e></m></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" expr="32777" line="60" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32777</e></m></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" expr="34877" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34877</e></m></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="inline" set="null" expr="32778" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32778</e></m></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" expr="32779" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32779</e></m></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="inline" set="null" expr="32968" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32968</e></m></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="inline" set="null" expr="32969" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32969</e></m></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" expr="32970" line="66" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32970</e></m></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" expr="32971" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32971</e></m></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" expr="32769" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32769</e></m></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" expr="32770" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32770</e></m></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" expr="32771" line="70" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32771</e></m></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" expr="32772" line="71" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32772</e></m></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="inline" set="null" expr="32773" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32773</e></m></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="inline" set="null" expr="34962" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34962</e></m></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" expr="34963" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34963</e></m></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="34964" line="75" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34964</e></m></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="34965" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34965</e></m></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="inline" set="null" expr="35040" line="77" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35040</e></m></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" expr="35044" line="78" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35044</e></m></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" expr="35048" line="79" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35048</e></m></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="inline" set="null" expr="34660" line="80" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34660</e></m></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" expr="34661" line="81" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34661</e></m></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" expr="34342" line="82" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34342</e></m></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="inline" set="null" expr="1028" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1028</e></m></meta>
		</FRONT>
		<BACK public="1" get="inline" set="null" expr="1029" line="84" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1029</e></m></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" expr="1032" line="85" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1032</e></m></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="inline" set="null" expr="2884" line="86" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2884</e></m></meta>
		</CULL_FACE>
		<BLEND public="1" get="inline" set="null" expr="3042" line="87" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3042</e></m></meta>
		</BLEND>
		<DITHER public="1" get="inline" set="null" expr="3024" line="88" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3024</e></m></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" expr="2960" line="89" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2960</e></m></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" expr="2929" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2929</e></m></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" expr="3089" line="91" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3089</e></m></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="32823" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32823</e></m></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" expr="32926" line="93" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32926</e></m></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" expr="32928" line="94" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32928</e></m></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="95" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" expr="1280" line="96" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1280</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="1281" line="97" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1281</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="1282" line="98" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1282</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="1285" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1285</e></m></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="inline" set="null" expr="2304" line="100" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2304</e></m></meta>
		</CW>
		<CCW public="1" get="inline" set="null" expr="2305" line="101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2305</e></m></meta>
		</CCW>
		<LINE_WIDTH public="1" get="inline" set="null" expr="2849" line="102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2849</e></m></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" expr="33901" line="103" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33901</e></m></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" expr="33902" line="104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33902</e></m></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="inline" set="null" expr="2885" line="105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2885</e></m></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="inline" set="null" expr="2886" line="106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2886</e></m></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="inline" set="null" expr="2928" line="107" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2928</e></m></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" expr="2930" line="108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2930</e></m></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" expr="2931" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2931</e></m></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" expr="2932" line="110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2932</e></m></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" expr="2961" line="111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2961</e></m></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="inline" set="null" expr="2962" line="112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2962</e></m></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="inline" set="null" expr="2964" line="113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2964</e></m></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="2965" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2965</e></m></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="2966" line="115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2966</e></m></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" expr="2967" line="116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2967</e></m></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" expr="2963" line="117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2963</e></m></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" expr="2968" line="118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2968</e></m></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" expr="34816" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34816</e></m></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" expr="34817" line="120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34817</e></m></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="34818" line="121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34818</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="34819" line="122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34819</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" expr="36003" line="123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36003</e></m></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" expr="36004" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36004</e></m></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" expr="36005" line="125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36005</e></m></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="inline" set="null" expr="2978" line="126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2978</e></m></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="inline" set="null" expr="3088" line="127" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3088</e></m></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" expr="3106" line="128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3106</e></m></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" expr="3107" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3107</e></m></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="3317" line="130" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3317</e></m></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="inline" set="null" expr="3333" line="131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3333</e></m></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" expr="3379" line="132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3379</e></m></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" expr="3386" line="133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3386</e></m></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="inline" set="null" expr="3408" line="134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3408</e></m></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="inline" set="null" expr="3410" line="135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3410</e></m></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="inline" set="null" expr="3411" line="136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3411</e></m></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="inline" set="null" expr="3412" line="137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3412</e></m></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="inline" set="null" expr="3413" line="138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3413</e></m></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="inline" set="null" expr="3414" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3414</e></m></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="inline" set="null" expr="3415" line="140" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3415</e></m></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" expr="10752" line="141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10752</e></m></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" expr="32824" line="142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32824</e></m></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" expr="32873" line="143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32873</e></m></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" expr="32936" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32936</e></m></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="inline" set="null" expr="32937" line="145" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32937</e></m></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" expr="32938" line="146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32938</e></m></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" expr="32939" line="147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32939</e></m></meta>
		</SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="34467" line="148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34467</e></m></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="inline" set="null" expr="4352" line="149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4352</e></m></meta>
		</DONT_CARE>
		<FASTEST public="1" get="inline" set="null" expr="4353" line="150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4353</e></m></meta>
		</FASTEST>
		<NICEST public="1" get="inline" set="null" expr="4354" line="151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4354</e></m></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="33170" line="152" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33170</e></m></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="inline" set="null" expr="5120" line="153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5120</e></m></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" expr="5121" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5121</e></m></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" expr="5122" line="155" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5122</e></m></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" expr="5123" line="156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5123</e></m></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" expr="5124" line="157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5124</e></m></meta>
		</INT>
		<UNSIGNED_INT public="1" get="inline" set="null" expr="5125" line="158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5125</e></m></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" expr="5126" line="159" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5126</e></m></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="inline" set="null" expr="6402" line="160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6402</e></m></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" expr="6406" line="161" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6406</e></m></meta>
		</ALPHA>
		<RGB public="1" get="inline" set="null" expr="6407" line="162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6407</e></m></meta>
		</RGB>
		<RGBA public="1" get="inline" set="null" expr="6408" line="163" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6408</e></m></meta>
		</RGBA>
		<LUMINANCE public="1" get="inline" set="null" expr="6409" line="164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6409</e></m></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" expr="6410" line="165" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6410</e></m></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" expr="32819" line="166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32819</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" expr="32820" line="167" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32820</e></m></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" expr="33635" line="168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33635</e></m></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="inline" set="null" expr="35632" line="169" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35632</e></m></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" expr="35633" line="170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35633</e></m></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" expr="34921" line="171" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34921</e></m></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" expr="36347" line="172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36347</e></m></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" expr="36348" line="173" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36348</e></m></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="35661" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35661</e></m></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="35660" line="175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35660</e></m></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="34930" line="176" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34930</e></m></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" expr="36349" line="177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36349</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="inline" set="null" expr="35663" line="178" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35663</e></m></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" expr="35712" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35712</e></m></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" expr="35714" line="180" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35714</e></m></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" expr="35715" line="181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35715</e></m></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" expr="35717" line="182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35717</e></m></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="35718" line="183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35718</e></m></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" expr="35721" line="184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35721</e></m></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" expr="35724" line="185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35724</e></m></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="inline" set="null" expr="35725" line="186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35725</e></m></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="inline" set="null" expr="512" line="187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>512</e></m></meta>
		</NEVER>
		<LESS public="1" get="inline" set="null" expr="513" line="188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>513</e></m></meta>
		</LESS>
		<EQUAL public="1" get="inline" set="null" expr="514" line="189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>514</e></m></meta>
		</EQUAL>
		<LEQUAL public="1" get="inline" set="null" expr="515" line="190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>515</e></m></meta>
		</LEQUAL>
		<GREATER public="1" get="inline" set="null" expr="516" line="191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>516</e></m></meta>
		</GREATER>
		<NOTEQUAL public="1" get="inline" set="null" expr="517" line="192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>517</e></m></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" expr="518" line="193" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>518</e></m></meta>
		</GEQUAL>
		<ALWAYS public="1" get="inline" set="null" expr="519" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>519</e></m></meta>
		</ALWAYS>
		<KEEP public="1" get="inline" set="null" expr="7680" line="195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7680</e></m></meta>
		</KEEP>
		<REPLACE public="1" get="inline" set="null" expr="7681" line="196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7681</e></m></meta>
		</REPLACE>
		<INCR public="1" get="inline" set="null" expr="7682" line="197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7682</e></m></meta>
		</INCR>
		<DECR public="1" get="inline" set="null" expr="7683" line="198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7683</e></m></meta>
		</DECR>
		<INVERT public="1" get="inline" set="null" expr="5386" line="199" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5386</e></m></meta>
		</INVERT>
		<INCR_WRAP public="1" get="inline" set="null" expr="34055" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34055</e></m></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" expr="34056" line="201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34056</e></m></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="inline" set="null" expr="7936" line="202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7936</e></m></meta>
		</VENDOR>
		<RENDERER public="1" get="inline" set="null" expr="7937" line="203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7937</e></m></meta>
		</RENDERER>
		<VERSION public="1" get="inline" set="null" expr="7938" line="204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>7938</e></m></meta>
		</VERSION>
		<NEAREST public="1" get="inline" set="null" expr="9728" line="205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9728</e></m></meta>
		</NEAREST>
		<LINEAR public="1" get="inline" set="null" expr="9729" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9729</e></m></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" expr="9984" line="207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9984</e></m></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" expr="9985" line="208" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9985</e></m></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" expr="9986" line="209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9986</e></m></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" expr="9987" line="210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>9987</e></m></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" expr="10240" line="211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10240</e></m></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" expr="10241" line="212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10241</e></m></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" expr="10242" line="213" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10242</e></m></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" expr="10243" line="214" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10243</e></m></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="inline" set="null" expr="3553" line="215" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>3553</e></m></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="inline" set="null" expr="5890" line="216" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>5890</e></m></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" expr="34067" line="217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34067</e></m></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" expr="34068" line="218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34068</e></m></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" expr="34069" line="219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34069</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" expr="34070" line="220" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34070</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" expr="34071" line="221" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34071</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" expr="34072" line="222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34072</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" expr="34073" line="223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34073</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" expr="34074" line="224" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34074</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" expr="34076" line="225" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34076</e></m></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="inline" set="null" expr="33984" line="226" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33984</e></m></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" expr="33985" line="227" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33985</e></m></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" expr="33986" line="228" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33986</e></m></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" expr="33987" line="229" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33987</e></m></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" expr="33988" line="230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33988</e></m></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" expr="33989" line="231" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33989</e></m></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" expr="33990" line="232" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33990</e></m></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" expr="33991" line="233" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33991</e></m></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" expr="33992" line="234" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33992</e></m></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" expr="33993" line="235" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33993</e></m></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" expr="33994" line="236" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33994</e></m></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" expr="33995" line="237" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33995</e></m></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" expr="33996" line="238" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33996</e></m></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" expr="33997" line="239" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33997</e></m></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" expr="33998" line="240" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33998</e></m></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" expr="33999" line="241" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33999</e></m></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" expr="34000" line="242" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34000</e></m></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" expr="34001" line="243" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34001</e></m></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" expr="34002" line="244" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34002</e></m></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" expr="34003" line="245" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34003</e></m></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" expr="34004" line="246" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34004</e></m></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" expr="34005" line="247" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34005</e></m></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" expr="34006" line="248" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34006</e></m></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" expr="34007" line="249" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34007</e></m></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" expr="34008" line="250" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34008</e></m></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" expr="34009" line="251" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34009</e></m></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" expr="34010" line="252" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34010</e></m></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" expr="34011" line="253" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34011</e></m></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" expr="34012" line="254" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34012</e></m></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" expr="34013" line="255" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34013</e></m></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" expr="34014" line="256" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34014</e></m></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" expr="34015" line="257" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34015</e></m></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" expr="34016" line="258" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34016</e></m></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="inline" set="null" expr="10497" line="259" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>10497</e></m></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" expr="33071" line="260" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33071</e></m></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" expr="33648" line="261" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33648</e></m></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" expr="35664" line="262" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35664</e></m></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" expr="35665" line="263" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35665</e></m></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" expr="35666" line="264" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35666</e></m></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="inline" set="null" expr="35667" line="265" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35667</e></m></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" expr="35668" line="266" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35668</e></m></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" expr="35669" line="267" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35669</e></m></meta>
		</INT_VEC4>
		<BOOL public="1" get="inline" set="null" expr="35670" line="268" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35670</e></m></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" expr="35671" line="269" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35671</e></m></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" expr="35672" line="270" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35672</e></m></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" expr="35673" line="271" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35673</e></m></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" expr="35674" line="272" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35674</e></m></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" expr="35675" line="273" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35675</e></m></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" expr="35676" line="274" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35676</e></m></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" expr="35678" line="275" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35678</e></m></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" expr="35680" line="276" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35680</e></m></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" expr="34338" line="277" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34338</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" expr="34339" line="278" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34339</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" expr="34340" line="279" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34340</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" expr="34341" line="280" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34341</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" expr="34922" line="281" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34922</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" expr="34373" line="282" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34373</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="34975" line="283" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34975</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<IMPLEMENTATION_COLOR_READ_TYPE public="1" get="inline" set="null" expr="35738" line="284" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35738</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<IMPLEMENTATION_COLOR_READ_FORMAT public="1" get="inline" set="null" expr="35739" line="285" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35739</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<COMPILE_STATUS public="1" get="inline" set="null" expr="35713" line="286" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>35713</e></m></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" expr="36336" line="287" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36336</e></m></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" expr="36337" line="288" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36337</e></m></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" expr="36338" line="289" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36338</e></m></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" expr="36339" line="290" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36339</e></m></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" expr="36340" line="291" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36340</e></m></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" expr="36341" line="292" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36341</e></m></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="36160" line="293" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36160</e></m></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="36161" line="294" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36161</e></m></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="inline" set="null" expr="32854" line="295" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32854</e></m></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" expr="32855" line="296" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>32855</e></m></meta>
		</RGB5_A1>
		<RGB565 public="1" get="inline" set="null" expr="36194" line="297" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36194</e></m></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" expr="33189" line="298" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33189</e></m></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="inline" set="null" expr="6401" line="299" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>6401</e></m></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" expr="36168" line="300" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36168</e></m></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" expr="34041" line="301" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34041</e></m></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" expr="36162" line="302" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36162</e></m></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" expr="36163" line="303" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36163</e></m></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" expr="36164" line="304" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36164</e></m></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" expr="36176" line="305" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36176</e></m></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" expr="36177" line="306" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36177</e></m></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" expr="36178" line="307" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36178</e></m></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" expr="36179" line="308" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36179</e></m></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" expr="36180" line="309" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36180</e></m></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" expr="36181" line="310" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36181</e></m></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" expr="36048" line="311" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36048</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" expr="36049" line="312" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36049</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" expr="36050" line="313" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36050</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" expr="36051" line="314" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36051</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" expr="36064" line="315" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36064</e></m></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" expr="36096" line="316" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36096</e></m></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="36128" line="317" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36128</e></m></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="33306" line="318" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>33306</e></m></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="inline" set="null" expr="0" line="319" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" expr="36053" line="320" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36053</e></m></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" expr="36054" line="321" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36054</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" expr="36055" line="322" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36055</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" expr="36057" line="323" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36057</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" expr="36061" line="324" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36061</e></m></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="36006" line="325" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36006</e></m></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" expr="36007" line="326" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>36007</e></m></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" expr="34024" line="327" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>34024</e></m></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" expr="1286" line="328" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1286</e></m></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" expr="37440" line="329" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37440</e></m></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" expr="37441" line="330" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37441</e></m></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" expr="37442" line="331" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37442</e></m></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" expr="37443" line="332" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37443</e></m></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" expr="37444" line="333" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>37444</e></m></meta>
		</BROWSER_DEFAULT_WEBGL>
		<canvas public="1" set="null"><c path="js.html.CanvasElement"/></canvas>
		<drawingBufferWidth public="1" set="null"><x path="Int"/></drawingBufferWidth>
		<drawingBufferHeight public="1" set="null"><x path="Int"/></drawingBufferHeight>
		<getContextAttributes public="1" set="method"><f a=""><t path="js.html.webgl.ContextAttributes"/></f></getContextAttributes>
		<isContextLost public="1" set="method"><f a=""><x path="Bool"/></f></isContextLost>
		<getSupportedExtensions public="1" set="method"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getExtension public="1" set="method">
			<f a="name">
				<c path="String"/>
				<d/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getExtension>
		<activeTexture public="1" set="method"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" set="method"><f a="program:shader">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></attachShader>
		<bindAttribLocation public="1" set="method"><f a="program:index:name">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" set="method"><f a="target:buffer">
	<x path="Int"/>
	<c path="js.html.webgl.Buffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindFramebuffer public="1" set="method"><f a="target:framebuffer">
	<x path="Int"/>
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" set="method"><f a="target:renderbuffer">
	<x path="Int"/>
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindTexture public="1" set="method"><f a="target:texture">
	<x path="Int"/>
	<c path="js.html.webgl.Texture"/>
	<x path="Void"/>
</f></bindTexture>
		<blendColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" set="method"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" set="method"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" set="method"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferData public="1" set="method">
			<f a="target:data:usage">
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<overloads>
				<bufferData public="1" set="method"><f a="target:size:usage">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
				<bufferData public="1" set="method"><f a="target:data:usage">
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
				<bufferData public="1" set="method"><f a="target:data:usage">
	<x path="Int"/>
	<c path="js.html.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferData>
			</overloads>
		</bufferData>
		<bufferSubData public="1" set="method">
			<f a="target:offset:data">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Void"/>
			</f>
			<overloads>
				<bufferSubData public="1" set="method"><f a="target:offset:data">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></bufferSubData>
				<bufferSubData public="1" set="method"><f a="target:offset:data">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBuffer"/>
	<x path="Void"/>
</f></bufferSubData>
			</overloads>
		</bufferSubData>
		<checkFramebufferStatus public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearColor public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" set="method"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" set="method"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<colorMask public="1" set="method"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2D public="1" set="method"><f a="target:level:internalformat:width:height:border:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexImage2D>
		<compressedTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:width:height:format:data">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.ArrayBufferView"/>
	<x path="Void"/>
</f></compressedTexSubImage2D>
		<copyTexImage2D public="1" set="method"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" set="method"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<createBuffer public="1" set="method"><f a=""><c path="js.html.webgl.Buffer"/></f></createBuffer>
		<createFramebuffer public="1" set="method"><f a=""><c path="js.html.webgl.Framebuffer"/></f></createFramebuffer>
		<createProgram public="1" set="method"><f a=""><c path="js.html.webgl.Program"/></f></createProgram>
		<createRenderbuffer public="1" set="method"><f a=""><c path="js.html.webgl.Renderbuffer"/></f></createRenderbuffer>
		<createShader public="1" set="method"><f a="type">
	<x path="Int"/>
	<c path="js.html.webgl.Shader"/>
</f></createShader>
		<createTexture public="1" set="method"><f a=""><c path="js.html.webgl.Texture"/></f></createTexture>
		<cullFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" set="method"><f a="buffer">
	<c path="js.html.webgl.Buffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" set="method"><f a="framebuffer">
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteRenderbuffer public="1" set="method"><f a="renderbuffer">
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteTexture public="1" set="method"><f a="texture">
	<c path="js.html.webgl.Texture"/>
	<x path="Void"/>
</f></deleteTexture>
		<depthFunc public="1" set="method"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" set="method"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" set="method"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" set="method"><f a="program:shader">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.Shader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" set="method"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawElements public="1" set="method"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<enable public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" set="method"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<finish public="1" set="method"><f a=""><x path="Void"/></f></finish>
		<flush public="1" set="method"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" set="method"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" set="method"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.Texture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<frontFace public="1" set="method"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" set="method"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" set="method"><f a="program:index">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="js.html.webgl.ActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" set="method"><f a="program:index">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<c path="js.html.webgl.ActiveInfo"/>
</f></getActiveUniform>
		<getAttachedShaders public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<c path="Array"><c path="js.html.webgl.Shader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" set="method"><f a="program:name">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" set="method"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getBufferParameter>
		<getParameter public="1" set="method">
			<f a="pname">
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getParameter>
		<getError public="1" set="method"><f a=""><x path="Int"/></f></getError>
		<getFramebufferAttachmentParameter public="1" set="method">
			<f a="target:attachment:pname">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getFramebufferAttachmentParameter>
		<getProgramParameter public="1" set="method"><f a="program:pname">
	<c path="js.html.webgl.Program"/>
	<x path="Int"/>
	<d/>
</f></getProgramParameter>
		<getProgramInfoLog public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getRenderbufferParameter public="1" set="method"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getShaderParameter public="1" set="method"><f a="shader:pname">
	<c path="js.html.webgl.Shader"/>
	<x path="Int"/>
	<d/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" set="method"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<c path="js.html.webgl.ShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderInfoLog public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderSource public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
</f></getShaderSource>
		<getTexParameter public="1" set="method"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getTexParameter>
		<getUniform public="1" set="method"><f a="program:location">
	<c path="js.html.webgl.Program"/>
	<c path="js.html.webgl.UniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformLocation public="1" set="method"><f a="program:name">
	<c path="js.html.webgl.Program"/>
	<c path="String"/>
	<c path="js.html.webgl.UniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" set="method">
			<f a="index:pname">
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" set="method"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getVertexAttribOffset>
		<hint public="1" set="method"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<isBuffer public="1" set="method"><f a="buffer">
	<c path="js.html.webgl.Buffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isEnabled public="1" set="method"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" set="method"><f a="framebuffer">
	<c path="js.html.webgl.Framebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Bool"/>
</f></isProgram>
		<isRenderbuffer public="1" set="method"><f a="renderbuffer">
	<c path="js.html.webgl.Renderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isShader public="1" set="method"><f a="shader">
	<c path="js.html.webgl.Shader"/>
	<x path="Bool"/>
</f></isShader>
		<isTexture public="1" set="method"><f a="texture">
	<c path="js.html.webgl.Texture"/>
	<x path="Bool"/>
</f></isTexture>
		<lineWidth public="1" set="method"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></linkProgram>
		<pixelStorei public="1" set="method"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" set="method"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<readPixels public="1" set="method">
			<f a="x:y:width:height:format:type:pixels">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
		</readPixels>
		<renderbufferStorage public="1" set="method"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<sampleCoverage public="1" set="method"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<scissor public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" set="method"><f a="shader:source">
	<c path="js.html.webgl.Shader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" set="method"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" set="method"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" set="method"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" set="method"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" set="method"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" set="method"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2D public="1" set="method">
			<f a="target:level:internalformat:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:width:height:border:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texImage2D>
				<texImage2D public="1" set="method">
					<f a="target:level:internalformat:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texImage2D>
			</overloads>
		</texImage2D>
		<texParameterf public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" set="method"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2D public="1" set="method">
			<f a="target:level:xoffset:yoffset:format:type:video">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="js.html.VideoElement"/>
				<x path="Void"/>
			</f>
			<haxe_doc>@throws DOMError</haxe_doc>
			<overloads>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:width:height:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ArrayBufferView"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:pixels">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageData"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:image">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.ImageElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texSubImage2D>
				<texSubImage2D public="1" set="method">
					<f a="target:level:xoffset:yoffset:format:type:canvas">
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<x path="Int"/>
						<c path="js.html.CanvasElement"/>
						<x path="Void"/>
					</f>
					<haxe_doc>@throws DOMError</haxe_doc>
				</texSubImage2D>
			</overloads>
		</texSubImage2D>
		<uniform1f public="1" set="method"><f a="location:x">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform1fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform1fv></overloads>
		</uniform1fv>
		<uniform1i public="1" set="method"><f a="location:x">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1iv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform1iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform1iv></overloads>
		</uniform1iv>
		<uniform2f public="1" set="method"><f a="location:x:y">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform2fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform2fv></overloads>
		</uniform2fv>
		<uniform2i public="1" set="method"><f a="location:x:y">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2iv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform2iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform2iv></overloads>
		</uniform2iv>
		<uniform3f public="1" set="method"><f a="location:x:y:z">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform3fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform3fv></overloads>
		</uniform3fv>
		<uniform3i public="1" set="method"><f a="location:x:y:z">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3iv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform3iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform3iv></overloads>
		</uniform3iv>
		<uniform4f public="1" set="method"><f a="location:x:y:z:w">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform4fv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniform4fv></overloads>
		</uniform4fv>
		<uniform4i public="1" set="method"><f a="location:x:y:z:w">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4iv public="1" set="method">
			<f a="location:v">
				<c path="js.html.webgl.UniformLocation"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniform4iv public="1" set="method"><f a="location:v">
	<c path="js.html.webgl.UniformLocation"/>
	<c path="js.html.Int32Array"/>
	<x path="Void"/>
</f></uniform4iv></overloads>
		</uniform4iv>
		<uniformMatrix2fv public="1" set="method">
			<f a="location:transpose:value">
				<c path="js.html.webgl.UniformLocation"/>
				<x path="Bool"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniformMatrix2fv public="1" set="method"><f a="location:transpose:value">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix2fv></overloads>
		</uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method">
			<f a="location:transpose:value">
				<c path="js.html.webgl.UniformLocation"/>
				<x path="Bool"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniformMatrix3fv public="1" set="method"><f a="location:transpose:value">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix3fv></overloads>
		</uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method">
			<f a="location:transpose:value">
				<c path="js.html.webgl.UniformLocation"/>
				<x path="Bool"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><uniformMatrix4fv public="1" set="method"><f a="location:transpose:value">
	<c path="js.html.webgl.UniformLocation"/>
	<x path="Bool"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></uniformMatrix4fv></overloads>
		</uniformMatrix4fv>
		<useProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" set="method"><f a="program">
	<c path="js.html.webgl.Program"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" set="method"><f a="indx:x">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" set="method">
			<f a="indx:values">
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><vertexAttrib1fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib1fv></overloads>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" set="method"><f a="indx:x:y">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" set="method">
			<f a="indx:values">
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><vertexAttrib2fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib2fv></overloads>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" set="method"><f a="indx:x:y:z">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" set="method">
			<f a="indx:values">
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><vertexAttrib3fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib3fv></overloads>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" set="method"><f a="indx:x:y:z:w">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" set="method">
			<f a="indx:values">
				<x path="Int"/>
				<c path="Array"><x path="Float"/></c>
				<x path="Void"/>
			</f>
			<overloads><vertexAttrib4fv public="1" set="method"><f a="indx:values">
	<x path="Int"/>
	<c path="js.html.Float32Array"/>
	<x path="Void"/>
</f></vertexAttrib4fv></overloads>
		</vertexAttrib4fv>
		<vertexAttribPointer public="1" set="method"><f a="indx:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" set="method"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<haxe_doc><![CDATA[The WebGLRenderingContext interface provides the OpenGL ES 2.0 rendering context for the drawing surface of an HTML `canvas` element.

	Documentation [WebGLRenderingContext](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLRenderingContext"</e></m></meta>
	</class>
	<class path="js.html.webgl.Shader" params="" file="/usr/local/lib/haxe/std/js/html/webgl/Shader.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A `WebGLProgram` requires both types of shaders.

	Documentation [WebGLShader](https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLShader"</e></m></meta>
	</class>
	<class path="js.html.webgl.ShaderPrecisionFormat" params="" file="/usr/local/lib/haxe/std/js/html/webgl/ShaderPrecisionFormat.hx" extern="1">
		<rangeMin public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The base 2 log of the absolute value of the minimum value that can be represented.</haxe_doc>
		</rangeMin>
		<rangeMax public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The base 2 log of the absolute value of the maximum value that can be represented.</haxe_doc>
		</rangeMax>
		<precision public="1" set="null">
			<x path="Int"/>
			<haxe_doc>The number of bits of precision that can be represented. For integer formats this value is always 0.</haxe_doc>
		</precision>
		<haxe_doc><![CDATA[The WebGLShaderPrecisionFormat interface is part of the WebGL API and represents the information returned by calling the `WebGLRenderingContext.getShaderPrecisionFormat()` method.

	Documentation [WebGLShaderPrecisionFormat](https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLShaderPrecisionFormat"</e></m></meta>
	</class>
	<class path="js.html.webgl.Texture" params="" file="/usr/local/lib/haxe/std/js/html/webgl/Texture.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLTexture interface is part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations.

	Documentation [WebGLTexture](https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLTexture"</e></m></meta>
	</class>
	<class path="js.html.webgl.UniformLocation" params="" file="/usr/local/lib/haxe/std/js/html/webgl/UniformLocation.hx" extern="1">
		<haxe_doc><![CDATA[The WebGLUniformLocation interface is part of the WebGL API and represents the location of a uniform variable in a shader program.

	Documentation [WebGLUniformLocation](https://developer.mozilla.org/en-US/docs/Web/API/WebGLUniformLocation) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGLUniformLocation$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).

	@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGLUniformLocation>]]></haxe_doc>
		<meta><m n=":native"><e>"WebGLUniformLocation"</e></m></meta>
	</class>
	<class path="lime._internal.backend.html5.HTML5Application" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/html5/HTML5Application.hx">
		<gameDeviceCache expr="new Map&lt;Int,GameDeviceData&gt;()">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime._internal.backend.html5.GameDeviceData"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,GameDeviceData>()]]></e></m></meta>
		</gameDeviceCache>
		<accelerometer><c path="lime.system.Sensor"/></accelerometer>
		<currentUpdate><x path="Float"/></currentUpdate>
		<deltaTime><x path="Float"/></deltaTime>
		<framePeriod><x path="Float"/></framePeriod>
		<lastUpdate><x path="Float"/></lastUpdate>
		<nextUpdate><x path="Float"/></nextUpdate>
		<parent><c path="lime.app.Application"/></parent>
		<convertKeyCode set="method" line="59"><f a="keyCode">
	<x path="Int"/>
	<x path="lime.ui.KeyCode"/>
</f></convertKeyCode>
		<exec public="1" set="method" line="133">
			<f a=""><x path="Int"/></f>
			<meta><m n=":has_untyped"/></meta>
		</exec>
		<exit public="1" set="method" line="210"><f a=""><x path="Void"/></f></exit>
		<handleApplicationEvent set="method" line="217"><f a="?__">
	<unknown/>
	<x path="Void"/>
</f></handleApplicationEvent>
		<handleKeyEvent set="method" line="269"><f a="event">
	<c path="js.html.KeyboardEvent"/>
	<x path="Void"/>
</f></handleKeyEvent>
		<handleSensorEvent set="method" line="313"><f a="event">
	<c path="js.html.DeviceMotionEvent"/>
	<x path="Void"/>
</f></handleSensorEvent>
		<handleWindowEvent set="method" line="320"><f a="event">
	<c path="js.html.Event"/>
	<x path="Void"/>
</f></handleWindowEvent>
		<updateGameDevices set="method" line="361"><f a=""><x path="Void"/></f></updateGameDevices>
		<new public="1" get="inline" set="null" line="44"><f a="parent">
	<c path="lime.app.Application"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.html5.HTML5Window</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.system.Sensor</e></m>
			<m n=":access"><e>lime.ui.Gamepad</e></m>
			<m n=":access"><e>lime.ui.Joystick</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime._internal.backend.html5.GameDeviceData" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/html5/HTML5Application.hx" module="lime._internal.backend.html5.HTML5Application">
		<connected public="1"><x path="Bool"/></connected>
		<id public="1"><x path="Int"/></id>
		<isGamepad public="1"><x path="Bool"/></isGamepad>
		<buttons public="1"><c path="Array"><x path="Float"/></c></buttons>
		<axes public="1"><c path="Array"><x path="Float"/></c></axes>
		<new public="1" set="method" line="535"><f a=""><x path="Void"/></f></new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<class path="lime._internal.backend.html5.HTML5AudioSource" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/html5/HTML5AudioSource.hx">
		<completed><x path="Bool"/></completed>
		<gain><x path="Float"/></gain>
		<id><x path="Int"/></id>
		<length><x path="Int"/></length>
		<loops><x path="Int"/></loops>
		<parent><c path="lime.media.AudioSource"/></parent>
		<playing><x path="Bool"/></playing>
		<position><c path="lime.math.Vector4"/></position>
		<dispose public="1" set="method" line="34"><f a=""><x path="Void"/></f></dispose>
		<init public="1" set="method" line="41"><f a=""><x path="Void"/></f></init>
		<play public="1" set="method" line="48"><f a=""><x path="Void"/></f></play>
		<pause public="1" set="method" line="83"><f a=""><x path="Void"/></f></pause>
		<stop public="1" set="method" line="100"><f a=""><x path="Void"/></f></stop>
		<howl_onEnd set="method" line="124"><f a=""><x path="Void"/></f></howl_onEnd>
		<getCurrentTime public="1" set="method" line="159"><f a=""><x path="Int"/></f></getCurrentTime>
		<setCurrentTime public="1" set="method" line="188"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></setCurrentTime>
		<getGain public="1" set="method" line="208"><f a=""><x path="Float"/></f></getGain>
		<setGain public="1" set="method" line="215"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></setGain>
		<getLength public="1" set="method" line="235"><f a=""><x path="Int"/></f></getLength>
		<setLength public="1" set="method" line="258"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></setLength>
		<getLoops public="1" set="method" line="265"><f a=""><x path="Int"/></f></getLoops>
		<setLoops public="1" set="method" line="272"><f a="value">
	<x path="Int"/>
	<x path="Int"/>
</f></setLoops>
		<getPosition public="1" set="method" line="279"><f a=""><c path="lime.math.Vector4"/></f></getPosition>
		<setPosition public="1" set="method" line="292"><f a="value">
	<c path="lime.math.Vector4"/>
	<c path="lime.math.Vector4"/>
</f></setPosition>
		<new public="1" set="method" line="23"><f a="parent">
	<c path="lime.media.AudioSource"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.media.AudioBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.backend.html5.HTML5Window" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/html5/HTML5Window.hx">
		<dummyCharacter expr="String.fromCharCode(127)" line="51" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>String.fromCharCode(127)</e></m></meta>
		</dummyCharacter>
		<textInput static="1"><c path="js.html.InputElement"/></textInput>
		<windowID expr="0" line="53" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</windowID>
		<canvas public="1"><c path="js.html.CanvasElement"/></canvas>
		<div public="1"><c path="js.html.DivElement"/></div>
		<cacheElementHeight><x path="Float"/></cacheElementHeight>
		<cacheElementWidth><x path="Float"/></cacheElementWidth>
		<cacheMouseX><x path="Float"/></cacheMouseX>
		<cacheMouseY><x path="Float"/></cacheMouseY>
		<cursor><e path="lime.ui.MouseCursor"/></cursor>
		<cursorHidden><x path="Bool"/></cursorHidden>
		<currentTouches expr="new Map&lt;Int,Touch&gt;()">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.ui.Touch"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Touch>()]]></e></m></meta>
		</currentTouches>
		<isFullscreen><x path="Bool"/></isFullscreen>
		<parent><c path="lime.ui.Window"/></parent>
		<primaryTouch><c path="lime.ui.Touch"/></primaryTouch>
		<renderType><x path="lime.graphics.RenderContextType"/></renderType>
		<requestedFullscreen><x path="Bool"/></requestedFullscreen>
		<resizeElement><x path="Bool"/></resizeElement>
		<scale expr="1.0">
			<x path="Float"/>
			<meta><m n=":value"><e>1.0</e></m></meta>
		</scale>
		<setHeight><x path="Int"/></setHeight>
		<setWidth><x path="Int"/></setWidth>
		<textInputEnabled><x path="Bool"/></textInputEnabled>
		<unusedTouchesPool expr="new List&lt;Touch&gt;()">
			<c path="haxe.ds.List"><c path="lime.ui.Touch"/></c>
			<meta><m n=":value"><e><![CDATA[new List<Touch>()]]></e></m></meta>
		</unusedTouchesPool>
		<alert public="1" set="method" line="260"><f a="message:title">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></alert>
		<close public="1" set="method" line="271"><f a=""><x path="Void"/></f></close>
		<createContext set="method" line="278"><f a=""><x path="Void"/></f></createContext>
		<focus public="1" set="method" line="372"><f a=""><x path="Void"/></f></focus>
		<getCursor public="1" set="method" line="379"><f a=""><e path="lime.ui.MouseCursor"/></f></getCursor>
		<getDisplay public="1" set="method" line="386"><f a=""><c path="lime.system.Display"/></f></getDisplay>
		<getDisplayMode public="1" set="method" line="393"><f a=""><c path="lime.system.DisplayMode"/></f></getDisplayMode>
		<getFrameRate public="1" set="method" line="400"><f a=""><x path="Float"/></f></getFrameRate>
		<getMouseLock public="1" set="method" line="421"><f a=""><x path="Bool"/></f></getMouseLock>
		<getTextInputEnabled public="1" set="method" line="428"><f a=""><x path="Bool"/></f></getTextInputEnabled>
		<handleContextEvent set="method" line="435"><f a="event">
	<c path="js.html.Event"/>
	<x path="Void"/>
</f></handleContextEvent>
		<handleContextMenuEvent set="method" line="468"><f a="event">
	<c path="js.html.MouseEvent"/>
	<x path="Void"/>
</f></handleContextMenuEvent>
		<handleCutOrCopyEvent set="method" line="479"><f a="event">
	<c path="js.html.ClipboardEvent"/>
	<x path="Void"/>
</f></handleCutOrCopyEvent>
		<handleFocusEvent set="method" line="487"><f a="event">
	<c path="js.html.FocusEvent"/>
	<x path="Void"/>
</f></handleFocusEvent>
		<handleFullscreenEvent set="method" line="506">
			<f a="event">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</handleFullscreenEvent>
		<handleGamepadEvent set="method" line="546"><f a="event">
	<d/>
	<x path="Void"/>
</f></handleGamepadEvent>
		<handleInputEvent set="method" line="572"><f a="event">
	<c path="js.html.InputEvent"/>
	<x path="Void"/>
</f></handleInputEvent>
		<handleMouseEvent set="method" line="594">
			<f a="event">
				<c path="js.html.MouseEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</handleMouseEvent>
		<handlePasteEvent set="method" line="743">
			<f a="event">
				<c path="js.html.ClipboardEvent"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</handlePasteEvent>
		<handleResizeEvent set="method" line="763"><f a="event">
	<c path="js.html.Event"/>
	<x path="Void"/>
</f></handleResizeEvent>
		<handleTouchEvent set="method" line="771"><f a="event">
	<c path="js.html.TouchEvent"/>
	<x path="Void"/>
</f></handleTouchEvent>
		<isDescendent set="method" line="937"><f a="node">
	<c path="js.html.Node"/>
	<x path="Bool"/>
</f></isDescendent>
		<move public="1" set="method" line="958"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<readPixels public="1" set="method" line="965"><f a="rect">
	<c path="lime.math.Rectangle"/>
	<c path="lime.graphics.Image"/>
</f></readPixels>
		<resize public="1" set="method" line="1003"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setBorderless public="1" set="method" line="1010"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setBorderless>
		<setClipboard public="1" set="method" line="1017"><f a="value">
	<c path="String"/>
	<x path="Void"/>
</f></setClipboard>
		<setCursor public="1" set="method" line="1040"><f a="value">
	<e path="lime.ui.MouseCursor"/>
	<e path="lime.ui.MouseCursor"/>
</f></setCursor>
		<setDisplayMode public="1" set="method" line="1078"><f a="value">
	<c path="lime.system.DisplayMode"/>
	<c path="lime.system.DisplayMode"/>
</f></setDisplayMode>
		<setFrameRate public="1" set="method" line="1085"><f a="value">
	<x path="Float"/>
	<x path="Float"/>
</f></setFrameRate>
		<setFullscreen public="1" set="method" line="1110">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setFullscreen>
		<setIcon public="1" set="method" line="1170"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></setIcon>
		<setMaximized public="1" set="method" line="1202"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMaximized>
		<setMinimized public="1" set="method" line="1209"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setMinimized>
		<setMouseLock public="1" set="method" line="1216"><f a="value">
	<x path="Bool"/>
	<x path="Void"/>
</f></setMouseLock>
		<setResizable public="1" set="method" line="1223"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></setResizable>
		<setTextInputEnabled public="1" set="method" line="1230">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</setTextInputEnabled>
		<setTitle public="1" set="method" line="1310"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></setTitle>
		<showCursor public="1" set="method" line="1323"><f a=""><x path="Void"/></f></showCursor>
		<updateSize set="method" line="1338"><f a=""><x path="Void"/></f></updateSize>
		<warpMouse public="1" set="method" line="1446"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></warpMouse>
		<new public="1" set="method" line="81"><f a="parent">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.html5.HTML5Application</e></m>
			<m n=":access"><e>lime._internal.backend.html5.HTML5WebGL2RenderContext</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.graphics.opengl.GL</e></m>
			<m n=":access"><e>lime.graphics.OpenGLRenderContext</e></m>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
			<m n=":access"><e>lime.ui.Gamepad</e></m>
			<m n=":access"><e>lime.ui.Joystick</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<typedef path="lime._internal.backend.native.Float32" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/native/NativeCFFI.hx" module="lime._internal.backend.native.NativeCFFI"><x path="Float"/></typedef>
	<typedef path="lime._internal.backend.native.CFFI" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/native/NativeCFFI.hx" module="lime._internal.backend.native.NativeCFFI"><d/></typedef>
	<typedef path="lime._internal.backend.native.CFFIPointer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/native/NativeCFFI.hx" module="lime._internal.backend.native.NativeCFFI"><d/></typedef>
	<class path="lime._internal.backend.native.NativeCFFI" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/backend/native/NativeCFFI.hx"><meta>
	<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
	<m n=":noDebug"/>
</meta></class>
	<class path="lime._internal.format.BMP" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/BMP.hx">
		<encode public="1" set="method" line="17" static="1">
			<f a="image:?type" v=":null">
				<c path="lime.graphics.Image"/>
				<e path="lime._internal.format.BMPType"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime._internal.format.BMPType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/BMP.hx" module="lime._internal.format.BMP">
		<RGB/>
		<BITFIELD/>
		<ICO/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime._internal.format.Deflate" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/Deflate.hx">
		<compress public="1" set="method" line="22" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</compress>
		<decompress public="1" set="method" line="62" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.GZip" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/GZip.hx">
		<compress public="1" set="method" line="18" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</compress>
		<decompress public="1" set="method" line="48" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.JPEG" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/JPEG.hx">
		<decodeBytes public="1" set="method" line="36" static="1">
			<f a="bytes:?decodeData" v=":true">
				<c path="haxe.io.Bytes"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeBytes>
		<decodeFile public="1" set="method" line="67" static="1">
			<f a="path:?decodeData" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeFile>
		<encode public="1" set="method" line="98" static="1"><f a="image:quality">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<c path="haxe.io.Bytes"/>
</f></encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.LZMA" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/LZMA.hx">
		<compress public="1" set="method" line="23" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></compress>
		<decompress public="1" set="method" line="54" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="haxe.io.Bytes"/>
</f></decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.PNG" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/PNG.hx">
		<decodeBytes public="1" set="method" line="36" static="1">
			<f a="bytes:?decodeData" v=":true">
				<c path="haxe.io.Bytes"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeBytes>
		<decodeFile public="1" set="method" line="67" static="1">
			<f a="path:?decodeData" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ decodeData : true }</e></m></meta>
		</decodeFile>
		<encode public="1" set="method" line="98" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<c path="haxe.io.Bytes"/>
</f></encode>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.format.Zlib" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/format/Zlib.hx">
		<compress public="1" set="method" line="22" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</compress>
		<decompress public="1" set="method" line="62" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</decompress>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime._internal.graphics.ImageCanvasUtil" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/graphics/ImageCanvasUtil.hx">
		<colorTransform public="1" set="method" line="27" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<convertToCanvas public="1" set="method" line="36" static="1">
			<f a="image:?clear" v=":false">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clear : false }</e></m></meta>
		</convertToCanvas>
		<convertToData public="1" set="method" line="92" static="1">
			<f a="image:?clear" v=":false">
				<c path="lime.graphics.Image"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ clear : false }</e></m></meta>
		</convertToData>
		<copyChannel public="1" set="method" line="138" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="148" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<createCanvas public="1" set="method" line="197" static="1">
			<f a="image:width:height">
				<c path="lime.graphics.Image"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</createCanvas>
		<createImageData public="1" set="method" line="230" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></createImageData>
		<fillRect public="1" set="method" line="258" static="1"><f a="image:rect:color:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="310" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></floodFill>
		<getPixel public="1" set="method" line="319" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="328" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="337" static="1"><f a="image:rect:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="haxe.io.Bytes"/>
</f></getPixels>
		<merge public="1" set="method" line="346" static="1"><f a="image:sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<resize public="1" set="method" line="356" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<scroll public="1" set="method" line="384" static="1"><f a="image:x:y">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scroll>
		<setPixel public="1" set="method" line="401" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="410" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="419" static="1"><f a="image:rect:bytePointer:format:endian">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.utils.BytePointer"/>
	<x path="lime.graphics.PixelFormat"/>
	<e path="lime.system.Endian"/>
	<x path="Void"/>
</f></setPixels>
		<sync public="1" set="method" line="428" static="1"><f a="image:clear">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sync>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
		</meta>
	</class>
	<class path="lime._internal.graphics.ImageDataUtil" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/graphics/ImageDataUtil.hx">
		<colorTransform public="1" set="method" line="36" static="1"><f a="image:rect:colorMatrix">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.math.ColorMatrix"/>
	<x path="Void"/>
</f></colorTransform>
		<copyChannel public="1" set="method" line="82" static="1"><f a="image:sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<e path="lime.graphics.ImageChannel"/>
	<e path="lime.graphics.ImageChannel"/>
	<x path="Void"/>
</f></copyChannel>
		<copyPixels public="1" set="method" line="167" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v="::::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
		</copyPixels>
		<fillRect public="1" set="method" line="372" static="1"><f a="image:rect:color:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></fillRect>
		<floodFill public="1" set="method" line="425" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></floodFill>
		<gaussianBlur public="1" set="method" line="510" static="1">
			<f a="image:sourceImage:sourceRect:destPoint:?blurX:?blurY:?quality:?strength" v="::::4:4:1:1">
				<c path="lime.graphics.Image"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Float"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ strength : 1, quality : 1, blurY : 4, blurX : 4 }</e></m></meta>
		</gaussianBlur>
		<calculateSourceOffset get="inline" set="null" line="687" static="1">
			<f a="sourceRect:destPoint:destX:destY">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Returns: the offset for translated coordinate in the source image or -1 if the source the coordinate out of the source or destination bounds
	* Note: destX and destY should be valid coordinates</haxe_doc>
		</calculateSourceOffset>
		<translatePixel get="inline" set="null" line="696" static="1"><f a="imgB:sourceRect:destRect:destPoint:destX:destY:strength">
	<x path="lime.utils.UInt8Array"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></translatePixel>
		<getColorBoundsRect public="1" set="method" line="713" static="1"><f a="image:mask:color:findColor:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="lime.math.Rectangle"/>
</f></getColorBoundsRect>
		<getPixel public="1" set="method" line="880" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel>
		<getPixel32 public="1" set="method" line="898" static="1"><f a="image:x:y:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></getPixel32>
		<getPixels public="1" set="method" line="915" static="1"><f a="image:rect:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.graphics.PixelFormat"/>
	<c path="haxe.io.Bytes"/>
</f></getPixels>
		<merge public="1" set="method" line="969" static="1"><f a="image:sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></merge>
		<multiplyAlpha public="1" set="method" line="1022" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></multiplyAlpha>
		<resize public="1" set="method" line="1052" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<resizeBuffer public="1" set="method" line="1135" static="1"><f a="image:newWidth:newHeight">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resizeBuffer>
		<setFormat public="1" set="method" line="1174" static="1"><f a="image:format">
	<c path="lime.graphics.Image"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setFormat>
		<setPixel public="1" set="method" line="1264" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel>
		<setPixel32 public="1" set="method" line="1290" static="1"><f a="image:x:y:color:format">
	<c path="lime.graphics.Image"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Void"/>
</f></setPixel32>
		<setPixels public="1" set="method" line="1311" static="1"><f a="image:rect:bytePointer:format:endian">
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<x path="lime.utils.BytePointer"/>
	<x path="lime.graphics.PixelFormat"/>
	<e path="lime.system.Endian"/>
	<x path="Void"/>
</f></setPixels>
		<threshold public="1" set="method" line="1371" static="1"><f a="image:sourceImage:sourceRect:destPoint:operation:threshold:color:mask:copySource:format">
	<c path="lime.graphics.Image"/>
	<c path="lime.graphics.Image"/>
	<c path="lime.math.Rectangle"/>
	<c path="lime.math.Vector2"/>
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="lime.graphics.PixelFormat"/>
	<x path="Int"/>
</f></threshold>
		<unmultiplyAlpha public="1" set="method" line="1490" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></unmultiplyAlpha>
		<__pixelCompare get="inline" set="null" line="1520" static="1"><f a="n1:n2">
	<x path="UInt"/>
	<x path="UInt"/>
	<x path="Int"/>
</f></__pixelCompare>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.ImageBuffer</e></m>
			<m n=":access"><e>lime.math.RGBA</e></m>
		</meta>
	</class>
	<class path="lime._internal.graphics._ImageDataUtil.ImageDataView" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil">
		<x public="1" set="null"><x path="Int"/></x>
		<y public="1" set="null"><x path="Int"/></y>
		<height public="1" set="null"><x path="Int"/></height>
		<width public="1" set="null"><x path="Int"/></width>
		<byteOffset><x path="Int"/></byteOffset>
		<image><c path="lime.graphics.Image"/></image>
		<rect><c path="lime.math.Rectangle"/></rect>
		<stride><x path="Int"/></stride>
		<tempRect><c path="lime.math.Rectangle"/></tempRect>
		<clip public="1" set="method" line="1619"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clip>
		<hasRow public="1" get="inline" set="null" line="1630"><f a="y">
	<x path="Int"/>
	<x path="Bool"/>
</f></hasRow>
		<offset public="1" set="method" line="1637"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></offset>
		<row public="1" get="inline" set="null" line="1668"><f a="y">
	<x path="Int"/>
	<x path="Int"/>
</f></row>
		<__update set="method" line="1675"><f a=""><x path="Void"/></f></__update>
		<new public="1" set="method" line="1592">
			<f a="image:?rect" v=":null">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</new>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="lime._internal.graphics._ImageDataUtil.ThresholdOperation" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime._internal.graphics._ImageDataUtil.ThresholdOperation_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil" extern="1">
	<NOT_EQUALS public="1" get="inline" set="null" expr="cast 0" line="1691" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NOT_EQUALS>
	<EQUALS public="1" get="inline" set="null" expr="cast 1" line="1692" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<LESS_THAN public="1" get="inline" set="null" expr="cast 2" line="1693" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<LESS_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 3" line="1694" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN_OR_EQUAL_TO>
	<GREATER_THAN public="1" get="inline" set="null" expr="cast 4" line="1695" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<GREATER_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 5" line="1696" static="1">
		<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN_OR_EQUAL_TO>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime._internal.graphics._ImageDataUtil.ThresholdOperation_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/graphics/ImageDataUtil.hx" private="1" module="lime._internal.graphics.ImageDataUtil" extern="1">
		<NOT_EQUALS public="1" get="inline" set="null" expr="cast 0" line="1691" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NOT_EQUALS>
		<EQUALS public="1" get="inline" set="null" expr="cast 1" line="1692" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<LESS_THAN public="1" get="inline" set="null" expr="cast 2" line="1693" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<LESS_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 3" line="1694" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN_OR_EQUAL_TO>
		<GREATER_THAN public="1" get="inline" set="null" expr="cast 4" line="1695" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<GREATER_THAN_OR_EQUAL_TO public="1" get="inline" set="null" expr="cast 5" line="1696" static="1">
			<x path="lime._internal.graphics._ImageDataUtil.ThresholdOperation"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN_OR_EQUAL_TO>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime._internal.macros.AssetsMacro" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/macros/AssetsMacro.hx"><cacheVersion public="1" set="method" static="1"><f a=""><d/></f></cacheVersion></class>
	<abstract path="lime._internal.unifill.CodePoint" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/CodePoint.hx">
		<from><icast field="fromInt"><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to>
			<icast field="toString"><c path="String"/></icast>
			<icast field="toInt"><x path="Int"/></icast>
		</to>
		<impl><class path="lime._internal.unifill._CodePoint.CodePoint_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/CodePoint.hx" private="1" module="lime._internal.unifill.CodePoint">
	<fromInt public="1" get="inline" set="null" line="6" static="1">
		<f a="code">
			<x path="Int"/>
			<x path="lime._internal.unifill.CodePoint"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromInt>
	<cons public="1" get="inline" set="null" line="14" static="1">
		<f a="a:b">
			<x path="lime._internal.unifill.CodePoint"/>
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</cons>
	<snoc public="1" get="inline" set="null" line="18" static="1">
		<f a="a:b">
			<c path="String"/>
			<x path="lime._internal.unifill.CodePoint"/>
			<c path="String"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</snoc>
	<addInt public="1" get="inline" set="null" line="22" static="1">
		<f a="a:b">
			<x path="lime._internal.unifill.CodePoint"/>
			<x path="Int"/>
			<x path="lime._internal.unifill.CodePoint"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</addInt>
	<sub public="1" get="inline" set="null" line="26" static="1">
		<f a="a:b">
			<x path="lime._internal.unifill.CodePoint"/>
			<x path="lime._internal.unifill.CodePoint"/>
			<x path="Int"/>
		</f>
		<meta><m n=":op"><e>A - B</e></m></meta>
	</sub>
	<subInt public="1" get="inline" set="null" line="30" static="1">
		<f a="a:b">
			<x path="lime._internal.unifill.CodePoint"/>
			<x path="Int"/>
			<x path="lime._internal.unifill.CodePoint"/>
		</f>
		<meta><m n=":op"><e>A - B</e></m></meta>
	</subInt>
	<_new get="inline" set="null" line="40" static="1">
		<f a="code">
			<x path="Int"/>
			<x path="lime._internal.unifill.CodePoint"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<toString public="1" get="inline" set="null" line="45" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toString>
	<toInt public="1" get="inline" set="null" line="49" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</toInt>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.unifill._CodePoint.CodePoint_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/CodePoint.hx" private="1" module="lime._internal.unifill.CodePoint">
		<fromInt public="1" get="inline" set="null" line="6" static="1">
			<f a="code">
				<x path="Int"/>
				<x path="lime._internal.unifill.CodePoint"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromInt>
		<cons public="1" get="inline" set="null" line="14" static="1">
			<f a="a:b">
				<x path="lime._internal.unifill.CodePoint"/>
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</cons>
		<snoc public="1" get="inline" set="null" line="18" static="1">
			<f a="a:b">
				<c path="String"/>
				<x path="lime._internal.unifill.CodePoint"/>
				<c path="String"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</snoc>
		<addInt public="1" get="inline" set="null" line="22" static="1">
			<f a="a:b">
				<x path="lime._internal.unifill.CodePoint"/>
				<x path="Int"/>
				<x path="lime._internal.unifill.CodePoint"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</addInt>
		<sub public="1" get="inline" set="null" line="26" static="1">
			<f a="a:b">
				<x path="lime._internal.unifill.CodePoint"/>
				<x path="lime._internal.unifill.CodePoint"/>
				<x path="Int"/>
			</f>
			<meta><m n=":op"><e>A - B</e></m></meta>
		</sub>
		<subInt public="1" get="inline" set="null" line="30" static="1">
			<f a="a:b">
				<x path="lime._internal.unifill.CodePoint"/>
				<x path="Int"/>
				<x path="lime._internal.unifill.CodePoint"/>
			</f>
			<meta><m n=":op"><e>A - B</e></m></meta>
		</subInt>
		<_new get="inline" set="null" line="40" static="1">
			<f a="code">
				<x path="Int"/>
				<x path="lime._internal.unifill.CodePoint"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<toString public="1" get="inline" set="null" line="45" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toString>
		<toInt public="1" get="inline" set="null" line="49" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</toInt>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime._internal.unifill.CodePointIter" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/CodePointIter.hx">
		<string><c path="String"/></string>
		<index><x path="Int"/></index>
		<endIndex><x path="Int"/></endIndex>
		<hasNext public="1" get="inline" set="null" line="20"><f a=""><x path="Bool"/></f></hasNext>
		<i expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</i>
		<next public="1" get="inline" set="null" line="25"><f a=""><x path="lime._internal.unifill.CodePoint"/></f></next>
		<new public="1" get="inline" set="null" line="14"><f a="s">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.unifill.Exception" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Exception.hx">
		<toString public="1" set="method" line="11"><f a=""><c path="String"/></f></toString>
		<new set="method" line="9"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.unifill.InvalidCodePoint" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Exception.hx" module="lime._internal.unifill.Exception">
		<extends path="lime._internal.unifill.Exception"/>
		<code public="1" set="null"><x path="Int"/></code>
		<toString public="1" set="method" line="27" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="23"><f a="code">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.unifill.InvalidCodeUnitSequence" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Exception.hx" module="lime._internal.unifill.Exception">
		<extends path="lime._internal.unifill.Exception"/>
		<index public="1" set="null"><x path="Int"/></index>
		<toString public="1" set="method" line="43" override="1"><f a=""><c path="String"/></f></toString>
		<new public="1" set="method" line="39"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime._internal.unifill._InternalEncoding.UtfX" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/InternalEncoding.hx" private="1" module="lime._internal.unifill.InternalEncoding"><x path="lime._internal.unifill.Utf16"/></typedef>
	<class path="lime._internal.unifill.InternalEncoding" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/InternalEncoding.hx">
		<internalEncoding public="1" get="accessor" set="null" static="1">
			<c path="String"/>
			<haxe_doc>Returns Encoding strings on the platform are encoded in.</haxe_doc>
		</internalEncoding>
		<get_internalEncoding get="inline" set="null" line="27" static="1"><f a=""><c path="String"/></f></get_internalEncoding>
		<codeUnitAt public="1" get="inline" set="null" line="40" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the UTF-8/16/32 code unit at position `index` of
	   String `s`.</haxe_doc>
		</codeUnitAt>
		<codePointAt public="1" get="inline" set="null" line="48" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the Unicode code point at position `index` of
	   String `s`.</haxe_doc>
		</codePointAt>
		<charAt public="1" get="inline" set="null" line="56" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character as a String at position `index` of
	   String `s`.</haxe_doc>
		</charAt>
		<codePointCount public="1" get="inline" set="null" line="64" static="1">
			<f a="s:beginIndex:endIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the number of Unicode code points from `beginIndex`
	   to `endIndex` in String `s`.</haxe_doc>
		</codePointCount>
		<codePointWidthAt public="1" get="inline" set="null" line="72" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the number of units of the code point at position
	   `index` of String `s`.</haxe_doc>
		</codePointWidthAt>
		<codePointWidthBefore public="1" get="inline" set="null" line="80" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the number of units of the code point before
	   position `index` of String `s`.</haxe_doc>
		</codePointWidthBefore>
		<offsetByCodePoints public="1" get="inline" set="null" line="88" static="1">
			<f a="s:index:codePointOffset">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index within String `s` that is offset from
	   position `index` by `codePointOffset` code points.</haxe_doc>
		</offsetByCodePoints>
		<backwardOffsetByCodePoints public="1" get="inline" set="null" line="97" static="1">
			<f a="s:index:codePointOffset">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the index within String `s` that is offset from
	   position `index` by `codePointOffset` code points counting
	   backward.</haxe_doc>
		</backwardOffsetByCodePoints>
		<fromCodePoint public="1" get="inline" set="null" line="104" static="1">
			<f a="codePoint">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Converts the code point `code` to a character as String.</haxe_doc>
		</fromCodePoint>
		<fromCodePoints public="1" get="inline" set="null" line="111" static="1">
			<f a="codePoints">
				<t path="Iterable"><x path="Int"/></t>
				<c path="String"/>
			</f>
			<haxe_doc>Converts `codePoints` to a String.</haxe_doc>
		</fromCodePoints>
		<validate public="1" get="inline" set="null" line="121" static="1">
			<f a="s">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Validates String `s`.

	   If the code unit sequence of `s` is invalid,
	   `Exception.InvalidCodeUnitSequence` is throwed.</haxe_doc>
		</validate>
		<isValidString public="1" set="method" line="128" static="1">
			<f a="s">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns if String `s` is valid.</haxe_doc>
		</isValidString>
		<encodeWith public="1" get="inline" set="null" line="137" static="1"><f a="f:c">
	<f a="">
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<x path="Int"/>
	<x path="Void"/>
</f></encodeWith>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.unifill.InternalEncodingIter" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/InternalEncodingIter.hx">
		<string public="1"><c path="String"/></string>
		<index public="1"><x path="Int"/></index>
		<endIndex public="1"><x path="Int"/></endIndex>
		<hasNext public="1" get="inline" set="null" line="20"><f a=""><x path="Bool"/></f></hasNext>
		<i expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</i>
		<next public="1" get="inline" set="null" line="25"><f a=""><x path="Int"/></f></next>
		<new public="1" get="inline" set="null" line="14"><f a="s:beginIndex:endIndex">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.unifill.Unicode" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Unicode.hx">
		<minCodePoint public="1" get="inline" set="null" expr="0x0000" line="10" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</minCodePoint>
		<maxCodePoint public="1" get="inline" set="null" expr="0x10FFFF" line="11" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x10FFFF</e></m></meta>
		</maxCodePoint>
		<minHighSurrogate public="1" get="inline" set="null" expr="0xD800" line="12" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xD800</e></m></meta>
		</minHighSurrogate>
		<maxHighSurrogate public="1" get="inline" set="null" expr="0xDBFF" line="13" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xDBFF</e></m></meta>
		</maxHighSurrogate>
		<minLowSurrogate public="1" get="inline" set="null" expr="0xDC00" line="14" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xDC00</e></m></meta>
		</minLowSurrogate>
		<maxLowSurrogate public="1" get="inline" set="null" expr="0xDFFF" line="15" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xDFFF</e></m></meta>
		</maxLowSurrogate>
		<decodeSurrogate public="1" get="inline" set="null" line="17" static="1"><f a="hi:lo">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
</f></decodeSurrogate>
		<encodeHighSurrogate public="1" get="inline" set="null" line="20" static="1"><f a="c">
	<x path="Int"/>
	<x path="Int"/>
</f></encodeHighSurrogate>
		<encodeLowSurrogate public="1" get="inline" set="null" line="23" static="1"><f a="c">
	<x path="Int"/>
	<x path="Int"/>
</f></encodeLowSurrogate>
		<isScalar public="1" get="inline" set="null" line="26" static="1"><f a="code">
	<x path="Int"/>
	<x path="Bool"/>
</f></isScalar>
		<isHighSurrogate public="1" get="inline" set="null" line="30" static="1"><f a="code">
	<x path="Int"/>
	<x path="Bool"/>
</f></isHighSurrogate>
		<isLowSurrogate public="1" get="inline" set="null" line="34" static="1"><f a="code">
	<x path="Int"/>
	<x path="Bool"/>
</f></isLowSurrogate>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime._internal.unifill.Unifill" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Unifill.hx">
		<uLength public="1" get="inline" set="null" line="18" static="1">
			<f a="s">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the number of Unicode code points of String `s`.</haxe_doc>
		</uLength>
		<uCharAt public="1" get="inline" set="null" line="24" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the character at position `index` by code points of String `s`.</haxe_doc>
		</uCharAt>
		<uCharCodeAt public="1" get="inline" set="null" line="36" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the code point as Int at position `index` by code points of String `s`.</haxe_doc>
		</uCharCodeAt>
		<uCodePointAt public="1" get="inline" set="null" line="48" static="1">
			<f a="s:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="lime._internal.unifill.CodePoint"/>
			</f>
			<haxe_doc>Returns the code point at position `index` by code points of String `s`.</haxe_doc>
		</uCodePointAt>
		<uIndexOf public="1" get="inline" set="null" line="57" static="1">
			<f a="s:value:?startIndex" v="::0">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ startIndex : 0 }</e></m></meta>
			<haxe_doc>Returns the position of the leftmost occurence of the str within String `s`.

	   `startIndex` is counted by code points.</haxe_doc>
		</uIndexOf>
		<uLastIndexOf public="1" get="inline" set="null" line="67" static="1">
			<f a="s:value:?startIndex">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Returns the position of the rightmost occurence of the str within String `s`.

	   `startIndex` is counted by code points.</haxe_doc>
		</uLastIndexOf>
		<uSplit public="1" get="inline" set="null" line="77" static="1">
			<f a="s:delimiter">
				<c path="String"/>
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<haxe_doc>Splits String `s` at each occurence of `delimiter`.</haxe_doc>
		</uSplit>
		<uSubstr public="1" get="inline" set="null" line="90" static="1">
			<f a="s:startIndex:?length">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns `length` characters of String `s`, starting at position `startIndex`.

	   `startIndex` and `length` are counted by code points.</haxe_doc>
		</uSubstr>
		<uSubstring public="1" get="inline" set="null" line="105" static="1">
			<f a="s:startIndex:?endIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the part of String `s` from `startIndex` to `endIndex`.

	   `startIndex` and `endIndex` are counted by code points.</haxe_doc>
		</uSubstring>
		<uIterator public="1" get="inline" set="null" line="117" static="1">
			<f a="s">
				<c path="String"/>
				<c path="lime._internal.unifill.CodePointIter"/>
			</f>
			<haxe_doc>Returns an iterator of the code points of String `s`.</haxe_doc>
		</uIterator>
		<uCompare public="1" set="method" line="124" static="1">
			<f a="a:b">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<haxe_doc>Compares String `a` and `b`.</haxe_doc>
		</uCompare>
		<uToString public="1" get="inline" set="null" line="145" static="1">
			<f a="codePoints">
				<t path="Iterable"><x path="lime._internal.unifill.CodePoint"/></t>
				<c path="String"/>
			</f>
			<haxe_doc>Converts `codePoints` to string.</haxe_doc>
		</uToString>
		<uAddChar public="1" get="inline" set="null" line="151" static="1">
			<f a="sb:c">
				<c path="StringBuf"/>
				<x path="lime._internal.unifill.CodePoint"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Appends the character `c` to StringBuf `sb`.</haxe_doc>
		</uAddChar>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime._internal.unifill.Utf16" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx">
		<this><x path="lime._internal.unifill._Utf16.StringU16"/></this>
		<impl><class path="lime._internal.unifill._Utf16.Utf16_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
	<fromCodePoint public="1" get="inline" set="null" line="8" static="1">
		<f a="codePoint">
			<x path="Int"/>
			<x path="lime._internal.unifill.Utf16"/>
		</f>
		<haxe_doc>Converts the code point `code` to a character as a Utf16 string.</haxe_doc>
	</fromCodePoint>
	<fromCodePoints public="1" get="inline" set="null" line="21" static="1">
		<f a="codePoints">
			<t path="Iterable"><x path="Int"/></t>
			<x path="lime._internal.unifill.Utf16"/>
		</f>
		<haxe_doc>Converts `codePoints` to a Utf16 string.</haxe_doc>
	</fromCodePoints>
	<fromString public="1" get="inline" set="null" line="29" static="1"><f a="s">
	<c path="String"/>
	<x path="lime._internal.unifill.Utf16"/>
</f></fromString>
	<fromArray public="1" get="inline" set="null" line="33" static="1"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<x path="lime._internal.unifill.Utf16"/>
</f></fromArray>
	<encodeWith public="1" get="inline" set="null" line="37" static="1"><f a="f:c">
	<f a="">
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<x path="Int"/>
	<x path="Void"/>
</f></encodeWith>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<codeUnitAt public="1" get="inline" set="null" line="46" static="1">
		<f a="this:index">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the UTF-16 code unit at position `index` of `this`.</haxe_doc>
	</codeUnitAt>
	<codePointAt public="1" set="method" line="54" static="1">
		<f a="this:index">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the Unicode code point at position `index` of
	   `this`.</haxe_doc>
	</codePointAt>
	<charAt public="1" get="inline" set="null" line="62" static="1">
		<f a="this:index">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="lime._internal.unifill.Utf16"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the character as a String at position `index` of
	   `this`.</haxe_doc>
	</charAt>
	<codePointCount public="1" set="method" line="70" static="1">
		<f a="this:beginIndex:endIndex">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the number of Unicode code points from `beginIndex`
	   to `endIndex` in `this`.</haxe_doc>
	</codePointCount>
	<codePointWidthAt public="1" get="inline" set="null" line="84" static="1">
		<f a="this:index">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the number of units of the code point at position
	   `index` of `this`.</haxe_doc>
	</codePointWidthAt>
	<codePointWidthBefore public="1" get="inline" set="null" line="93" static="1">
		<f a="this:index">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the number of units of the code point before
	   position `index` of `this`.</haxe_doc>
	</codePointWidthBefore>
	<offsetByCodePoints public="1" get="inline" set="null" line="101" static="1">
		<f a="this:index:codePointOffset">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the index within `this` that is offset from
	   position `index` by `codePointOffset` code points.</haxe_doc>
	</offsetByCodePoints>
	<substr public="1" get="inline" set="null" line="112" static="1">
		<f a="this:index:?len">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime._internal.unifill.Utf16"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns `len` code units of `this`, starting at position pos.</haxe_doc>
	</substr>
	<validate public="1" set="method" line="122" static="1">
		<f a="this">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Validates `this` Utf16 string.

	   If the code unit sequence of `this` is invalid,
	   `Exception.InvalidCodeUnitSequence` is throwed.</haxe_doc>
	</validate>
	<toString public="1" get="inline" set="null" line="132" static="1">
		<f a="this">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<toArray public="1" get="inline" set="null" line="136" static="1">
		<f a="this">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</toArray>
	<_new get="inline" set="null" line="140" static="1">
		<f a="s">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="lime._internal.unifill.Utf16"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<get_length get="inline" set="null" line="144" static="1">
		<f a="this">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<forward_offset_by_code_points get="inline" set="null" line="148" static="1">
		<f a="this:index:codePointOffset">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</forward_offset_by_code_points>
	<backward_offset_by_code_points get="inline" set="null" line="158" static="1">
		<f a="this:index:codePointOffset">
			<x path="lime._internal.unifill._Utf16.StringU16"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</backward_offset_by_code_points>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime._internal.unifill._Utf16.Utf16_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
		<fromCodePoint public="1" get="inline" set="null" line="8" static="1">
			<f a="codePoint">
				<x path="Int"/>
				<x path="lime._internal.unifill.Utf16"/>
			</f>
			<haxe_doc>Converts the code point `code` to a character as a Utf16 string.</haxe_doc>
		</fromCodePoint>
		<fromCodePoints public="1" get="inline" set="null" line="21" static="1">
			<f a="codePoints">
				<t path="Iterable"><x path="Int"/></t>
				<x path="lime._internal.unifill.Utf16"/>
			</f>
			<haxe_doc>Converts `codePoints` to a Utf16 string.</haxe_doc>
		</fromCodePoints>
		<fromString public="1" get="inline" set="null" line="29" static="1"><f a="s">
	<c path="String"/>
	<x path="lime._internal.unifill.Utf16"/>
</f></fromString>
		<fromArray public="1" get="inline" set="null" line="33" static="1"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<x path="lime._internal.unifill.Utf16"/>
</f></fromArray>
		<encodeWith public="1" get="inline" set="null" line="37" static="1"><f a="f:c">
	<f a="">
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<x path="Int"/>
	<x path="Void"/>
</f></encodeWith>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<codeUnitAt public="1" get="inline" set="null" line="46" static="1">
			<f a="this:index">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the UTF-16 code unit at position `index` of `this`.</haxe_doc>
		</codeUnitAt>
		<codePointAt public="1" set="method" line="54" static="1">
			<f a="this:index">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the Unicode code point at position `index` of
	   `this`.</haxe_doc>
		</codePointAt>
		<charAt public="1" get="inline" set="null" line="62" static="1">
			<f a="this:index">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="lime._internal.unifill.Utf16"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the character as a String at position `index` of
	   `this`.</haxe_doc>
		</charAt>
		<codePointCount public="1" set="method" line="70" static="1">
			<f a="this:beginIndex:endIndex">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the number of Unicode code points from `beginIndex`
	   to `endIndex` in `this`.</haxe_doc>
		</codePointCount>
		<codePointWidthAt public="1" get="inline" set="null" line="84" static="1">
			<f a="this:index">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the number of units of the code point at position
	   `index` of `this`.</haxe_doc>
		</codePointWidthAt>
		<codePointWidthBefore public="1" get="inline" set="null" line="93" static="1">
			<f a="this:index">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the number of units of the code point before
	   position `index` of `this`.</haxe_doc>
		</codePointWidthBefore>
		<offsetByCodePoints public="1" get="inline" set="null" line="101" static="1">
			<f a="this:index:codePointOffset">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the index within `this` that is offset from
	   position `index` by `codePointOffset` code points.</haxe_doc>
		</offsetByCodePoints>
		<substr public="1" get="inline" set="null" line="112" static="1">
			<f a="this:index:?len">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime._internal.unifill.Utf16"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns `len` code units of `this`, starting at position pos.</haxe_doc>
		</substr>
		<validate public="1" set="method" line="122" static="1">
			<f a="this">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Validates `this` Utf16 string.

	   If the code unit sequence of `this` is invalid,
	   `Exception.InvalidCodeUnitSequence` is throwed.</haxe_doc>
		</validate>
		<toString public="1" get="inline" set="null" line="132" static="1">
			<f a="this">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<toArray public="1" get="inline" set="null" line="136" static="1">
			<f a="this">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</toArray>
		<_new get="inline" set="null" line="140" static="1">
			<f a="s">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="lime._internal.unifill.Utf16"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<get_length get="inline" set="null" line="144" static="1">
			<f a="this">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<forward_offset_by_code_points get="inline" set="null" line="148" static="1">
			<f a="this:index:codePointOffset">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</forward_offset_by_code_points>
		<backward_offset_by_code_points get="inline" set="null" line="158" static="1">
			<f a="this:index:codePointOffset">
				<x path="lime._internal.unifill._Utf16.StringU16"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</backward_offset_by_code_points>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="lime._internal.unifill._Utf16.Utf16Impl" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
		<code_point_width public="1" get="inline" set="null" line="171" static="1"><f a="c">
	<x path="Int"/>
	<x path="Int"/>
</f></code_point_width>
		<find_prev_code_point public="1" get="inline" set="null" line="175" static="1"><f a="accessor:index">
	<f a="">
		<x path="Int"/>
		<x path="Int"/>
	</f>
	<x path="Int"/>
	<x path="Int"/>
</f></find_prev_code_point>
		<encode_code_point public="1" get="inline" set="null" line="180" static="1"><f a="addUnit:codePoint">
	<f a="">
		<x path="Int"/>
		<x path="Void"/>
	</f>
	<x path="Int"/>
	<x path="Void"/>
</f></encode_code_point>
		<decode_code_point public="1" set="method" line="189" static="1"><f a="len:accessor:index">
	<x path="Int"/>
	<f a="">
		<x path="Int"/>
		<x path="Int"/>
	</f>
	<x path="Int"/>
	<x path="Int"/>
</f></decode_code_point>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<abstract path="lime._internal.unifill._Utf16.StringU16Buffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
		<this><c path="StringBuf"/></this>
		<impl><class path="lime._internal.unifill._Utf16.StringU16Buffer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
	<_new public="1" get="inline" set="null" line="216" static="1">
		<f a=""><x path="lime._internal.unifill._Utf16.StringU16Buffer"/></f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<addUnit public="1" get="inline" set="null" line="220" static="1">
		<f a="this:unit">
			<c path="StringBuf"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</addUnit>
	<getStringU16 public="1" get="inline" set="null" line="224" static="1">
		<f a="this">
			<c path="StringBuf"/>
			<x path="lime._internal.unifill._Utf16.StringU16"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getStringU16>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.unifill._Utf16.StringU16Buffer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
		<_new public="1" get="inline" set="null" line="216" static="1">
			<f a=""><x path="lime._internal.unifill._Utf16.StringU16Buffer"/></f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<addUnit public="1" get="inline" set="null" line="220" static="1">
			<f a="this:unit">
				<c path="StringBuf"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</addUnit>
		<getStringU16 public="1" get="inline" set="null" line="224" static="1">
			<f a="this">
				<c path="StringBuf"/>
				<x path="lime._internal.unifill._Utf16.StringU16"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getStringU16>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime._internal.unifill._Utf16.StringU16" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
		<this><c path="String"/></this>
		<impl><class path="lime._internal.unifill._Utf16.StringU16_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
	<fromString public="1" get="inline" set="null" line="232" static="1"><f a="s">
	<c path="String"/>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromString>
	<fromCodeUnit public="1" get="inline" set="null" line="236" static="1"><f a="u">
	<x path="Int"/>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromCodeUnit>
	<fromTwoCodeUnits public="1" get="inline" set="null" line="240" static="1"><f a="u0:u1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromTwoCodeUnits>
	<ofArray public="1" get="inline" set="null" line="244" static="1"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></ofArray>
	<fromArray public="1" get="inline" set="null" line="248" static="1"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromArray>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<codeUnitAt public="1" get="inline" set="null" line="258" static="1">
		<f a="this:index">
			<c path="String"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</codeUnitAt>
	<substr public="1" get="inline" set="null" line="262" static="1">
		<f a="this:index:?len">
			<c path="String"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime._internal.unifill._Utf16.StringU16"/>
		</f>
		<meta><m n=":impl"/></meta>
	</substr>
	<toString public="1" get="inline" set="null" line="266" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<toArray public="1" get="inline" set="null" line="270" static="1">
		<f a="this">
			<c path="String"/>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</toArray>
	<_new get="inline" set="null" line="276" static="1">
		<f a="s">
			<c path="String"/>
			<x path="lime._internal.unifill._Utf16.StringU16"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<get_length get="inline" set="null" line="280" static="1">
		<f a="this">
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime._internal.unifill._Utf16.StringU16_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/_internal/unifill/Utf16.hx" private="1" module="lime._internal.unifill.Utf16">
		<fromString public="1" get="inline" set="null" line="232" static="1"><f a="s">
	<c path="String"/>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromString>
		<fromCodeUnit public="1" get="inline" set="null" line="236" static="1"><f a="u">
	<x path="Int"/>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromCodeUnit>
		<fromTwoCodeUnits public="1" get="inline" set="null" line="240" static="1"><f a="u0:u1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromTwoCodeUnits>
		<ofArray public="1" get="inline" set="null" line="244" static="1"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></ofArray>
		<fromArray public="1" get="inline" set="null" line="248" static="1"><f a="a">
	<c path="Array"><x path="Int"/></c>
	<x path="lime._internal.unifill._Utf16.StringU16"/>
</f></fromArray>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<codeUnitAt public="1" get="inline" set="null" line="258" static="1">
			<f a="this:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</codeUnitAt>
		<substr public="1" get="inline" set="null" line="262" static="1">
			<f a="this:index:?len">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime._internal.unifill._Utf16.StringU16"/>
			</f>
			<meta><m n=":impl"/></meta>
		</substr>
		<toString public="1" get="inline" set="null" line="266" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<toArray public="1" get="inline" set="null" line="270" static="1">
			<f a="this">
				<c path="String"/>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</toArray>
		<_new get="inline" set="null" line="276" static="1">
			<f a="s">
				<c path="String"/>
				<x path="lime._internal.unifill._Utf16.StringU16"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<get_length get="inline" set="null" line="280" static="1">
			<f a="this">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.app.IModule" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/app/IModule.hx" interface="1">
		<__registerLimeModule set="method">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":dox"><e>show</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__registerLimeModule>
		<__unregisterLimeModule set="method">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":dox"><e>show</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__unregisterLimeModule>
	</class>
	<class path="lime.app.Module" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Module.hx">
		<implements path="lime.app.IModule"/>
		<onExit public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
			<haxe_doc>Exit events are dispatched when the application is exiting</haxe_doc>
		</onExit>
		<__registerLimeModule set="method" line="39">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__registerLimeModule>
		<__unregisterLimeModule set="method" line="40">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__unregisterLimeModule>
		<new public="1" set="method" line="32">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new `Module` instance</haxe_doc>
		</new>
		<haxe_doc>`Module` instances can be added to a running `Application`,
	simplifying support for adding new components, such as a renderer,
	input handler or higher-level framework.</haxe_doc>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app.Application" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Application.hx">
		<extends path="lime.app.Module"/>
		<current public="1" set="null" static="1">
			<c path="lime.app.Application"/>
			<haxe_doc>The current Application instance that is executing</haxe_doc>
		</current>
		<meta public="1">
			<t path="Map">
				<c path="String"/>
				<c path="String"/>
			</t>
			<haxe_doc>Meta-data values for the application, such as a version or a package name</haxe_doc>
		</meta>
		<modules public="1" set="null">
			<c path="Array"><c path="lime.app.IModule"/></c>
			<haxe_doc>A list of currently attached Module instances</haxe_doc>
		</modules>
		<onUpdate public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
			<haxe_doc>Update events are dispatched each frame (usually just before rendering)</haxe_doc>
		</onUpdate>
		<onCreateWindow public="1" expr="new Event&lt;Window&gt;()">
			<c path="lime.app._Event_lime_ui_Window_Void"><f a="">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Window>()]]></e></m></meta>
			<haxe_doc>Dispatched when a new window has been created by this application</haxe_doc>
		</onCreateWindow>
		<preloader public="1" get="accessor" set="null">
			<c path="lime.utils.Preloader"/>
			<haxe_doc>The Preloader for the current Application</haxe_doc>
		</preloader>
		<window public="1" get="accessor" set="null">
			<c path="lime.ui.Window"/>
			<haxe_doc>The Window associated with this Application, or the first Window
		if there are multiple Windows active</haxe_doc>
		</window>
		<windows public="1" get="accessor" set="null">
			<c path="Array"><c path="lime.ui.Window"/></c>
			<haxe_doc>A list of active Window instances associated with this Application</haxe_doc>
		</windows>
		<__backend>
			<t path="lime.app._Application.ApplicationBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</__backend>
		<__preloader>
			<c path="lime.utils.Preloader"/>
			<meta><m n=":noCompletion"/></meta>
		</__preloader>
		<__window>
			<c path="lime.ui.Window"/>
			<meta><m n=":noCompletion"/></meta>
		</__window>
		<__windowByID>
			<t path="Map">
				<x path="Int"/>
				<c path="lime.ui.Window"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</__windowByID>
		<__windows>
			<c path="Array"><c path="lime.ui.Window"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__windows>
		<addModule public="1" set="method" line="136">
			<f a="module">
				<c path="lime.app.IModule"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adds a new module to the Application
		@param	module	A module to add</haxe_doc>
		</addModule>
		<createWindow public="1" set="method" line="148">
			<f a="attributes">
				<t path="lime.ui.WindowAttributes"/>
				<c path="lime.ui.Window"/>
			</f>
			<haxe_doc>Creates a new Window and adds it to the Application
		@param	window	A Window object to add</haxe_doc>
		</createWindow>
		<exec public="1" set="method" line="163">
			<f a=""><x path="Int"/></f>
			<haxe_doc>Execute the Application. On native platforms, this method
		blocks until the application is finished running. On other
		platforms, it will return immediately
		@return	An exit code, 0 if there was no error</haxe_doc>
		</exec>
		<onGamepadAxisMove public="1" set="method" line="178">
			<f a="gamepad:axis:value">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadAxis"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad axis move event is fired
		@param	gamepad	The current gamepad
		@param	axis	The axis that was moved
		@param	value	The axis value (between 0 and 1)</haxe_doc>
		</onGamepadAxisMove>
		<onGamepadButtonDown public="1" set="method" line="186">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad button down event is fired
		@param	gamepad	The current gamepad
		@param	button	The button that was pressed</haxe_doc>
		</onGamepadButtonDown>
		<onGamepadButtonUp public="1" set="method" line="194">
			<f a="gamepad:button">
				<c path="lime.ui.Gamepad"/>
				<x path="lime.ui.GamepadButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad button up event is fired
		@param	gamepad	The current gamepad
		@param	button	The button that was released</haxe_doc>
		</onGamepadButtonUp>
		<onGamepadConnect public="1" set="method" line="201">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad is connected
		@param	gamepad	The gamepad that was connected</haxe_doc>
		</onGamepadConnect>
		<onGamepadDisconnect public="1" set="method" line="208">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a gamepad is disconnected
		@param	gamepad	The gamepad that was disconnected</haxe_doc>
		</onGamepadDisconnect>
		<onJoystickAxisMove public="1" set="method" line="217">
			<f a="joystick:axis:value">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick axis move event is fired
		@param	joystick	The current joystick
		@param	axis	The axis that was moved
		@param	value	The axis value (between 0 and 1)</haxe_doc>
		</onJoystickAxisMove>
		<onJoystickButtonDown public="1" set="method" line="225">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick button down event is fired
		@param	joystick	The current joystick
		@param	button	The button that was pressed</haxe_doc>
		</onJoystickButtonDown>
		<onJoystickButtonUp public="1" set="method" line="233">
			<f a="joystick:button">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick button up event is fired
		@param	joystick	The current joystick
		@param	button	The button that was released</haxe_doc>
		</onJoystickButtonUp>
		<onJoystickConnect public="1" set="method" line="240">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick is connected
		@param	joystick	The joystick that was connected</haxe_doc>
		</onJoystickConnect>
		<onJoystickDisconnect public="1" set="method" line="247">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick is disconnected
		@param	joystick	The joystick that was disconnected</haxe_doc>
		</onJoystickDisconnect>
		<onJoystickHatMove public="1" set="method" line="256">
			<f a="joystick:hat:position">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick hat move event is fired
		@param	joystick	The current joystick
		@param	hat	The hat that was moved
		@param	position	The current hat position</haxe_doc>
		</onJoystickHatMove>
		<onJoystickTrackballMove public="1" set="method" line="266">
			<f a="joystick:trackball:x:y">
				<c path="lime.ui.Joystick"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a joystick axis move event is fired
		@param	joystick	The current joystick
		@param	trackball	The trackball that was moved
		@param	x	The x movement of the trackball (between 0 and 1)
		@param	y	The y movement of the trackball (between 0 and 1)</haxe_doc>
		</onJoystickTrackballMove>
		<onKeyDown public="1" set="method" line="274">
			<f a="keyCode:modifier">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a key down event is fired on the primary window
		@param	keyCode	The code of the key that was pressed
		@param	modifier	The modifier of the key that was pressed</haxe_doc>
		</onKeyDown>
		<onKeyUp public="1" set="method" line="282">
			<f a="keyCode:modifier">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyModifier"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a key up event is fired on the primary window
		@param	keyCode	The code of the key that was released
		@param	modifier	The modifier of the key that was released</haxe_doc>
		</onKeyUp>
		<onModuleExit public="1" set="method" line="288">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when the module is exiting</haxe_doc>
		</onModuleExit>
		<onMouseDown public="1" set="method" line="297">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.ui.MouseButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse down event is fired on the primary window
		@param	x	The current x coordinate of the mouse
		@param	y	The current y coordinate of the mouse
		@param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseDown>
		<onMouseMove public="1" set="method" line="306">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse move event is fired on the primary window
		@param	x	The current x coordinate of the mouse
		@param	y	The current y coordinate of the mouse
		@param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseMove>
		<onMouseMoveRelative public="1" set="method" line="315">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse move relative event is fired on the primary window
		@param	x	The x movement of the mouse
		@param	y	The y movement of the mouse
		@param	button	The ID of the mouse button that was pressed</haxe_doc>
		</onMouseMoveRelative>
		<onMouseUp public="1" set="method" line="324">
			<f a="x:y:button">
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.ui.MouseButton"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse up event is fired on the primary window
		@param	x	The current x coordinate of the mouse
		@param	y	The current y coordinate of the mouse
		@param	button	The ID of the button that was released</haxe_doc>
		</onMouseUp>
		<onMouseWheel public="1" set="method" line="332">
			<f a="deltaX:deltaY:deltaMode">
				<x path="Float"/>
				<x path="Float"/>
				<e path="lime.ui.MouseWheelMode"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a mouse wheel event is fired on the primary window
		@param	deltaX	The amount of horizontal scrolling (if applicable)
		@param	deltaY	The amount of vertical scrolling (if applicable)</haxe_doc>
		</onMouseWheel>
		<onPreloadComplete public="1" set="method" line="338">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a preload complete event is fired</haxe_doc>
		</onPreloadComplete>
		<onPreloadProgress public="1" set="method" line="346">
			<f a="loaded:total">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a preload progress event is fired
		@param	loaded	The number of items that are loaded
		@param	total	The total number of items will be loaded</haxe_doc>
		</onPreloadProgress>
		<onRenderContextLost public="1" set="method" line="352">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a render context is lost on the primary window</haxe_doc>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="method" line="359">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a render context is restored on the primary window
		@param	context	The render context relevant to the event</haxe_doc>
		</onRenderContextRestored>
		<onTextEdit public="1" set="method" line="368">
			<f a="text:start:length">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a text edit event is fired on the primary window
		@param	text	The current replacement text
		@param	start	The starting index for the edit
		@param	length	The length of the edit</haxe_doc>
		</onTextEdit>
		<onTextInput public="1" set="method" line="375">
			<f a="text">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a text input event is fired on the primary window
		@param	text	The current input text</haxe_doc>
		</onTextInput>
		<onTouchCancel public="1" set="method" line="382">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch cancel event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchCancel>
		<onTouchEnd public="1" set="method" line="389">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch end event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchEnd>
		<onTouchMove public="1" set="method" line="396">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch move event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchMove>
		<onTouchStart public="1" set="method" line="403">
			<f a="touch">
				<c path="lime.ui.Touch"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a touch start event is fired
		@param	touch	The current touch object</haxe_doc>
		</onTouchStart>
		<onWindowActivate public="1" set="method" line="409">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window activate event is fired on the primary window</haxe_doc>
		</onWindowActivate>
		<onWindowClose public="1" set="method" line="415">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window close event is fired on the primary window</haxe_doc>
		</onWindowClose>
		<onWindowCreate public="1" set="method" line="421">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window is created</haxe_doc>
		</onWindowCreate>
		<onWindowDeactivate public="1" set="method" line="427">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window deactivate event is fired on the primary window</haxe_doc>
		</onWindowDeactivate>
		<onWindowDropFile public="1" set="method" line="433">
			<f a="file">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a window drop file event is fired on the primary window</haxe_doc>
		</onWindowDropFile>
		<onWindowEnter public="1" set="method" line="439">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window enter event is fired on the primary window</haxe_doc>
		</onWindowEnter>
		<onWindowExpose public="1" set="method" line="445">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window expose event is fired on the primary window</haxe_doc>
		</onWindowExpose>
		<onWindowFocusIn public="1" set="method" line="451">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window focus in event is fired on the primary window</haxe_doc>
		</onWindowFocusIn>
		<onWindowFocusOut public="1" set="method" line="457">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window focus out event is fired on the primary window</haxe_doc>
		</onWindowFocusOut>
		<onWindowFullscreen public="1" set="method" line="463">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window enters fullscreen</haxe_doc>
		</onWindowFullscreen>
		<onWindowLeave public="1" set="method" line="469">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when a window leave event is fired on the primary window</haxe_doc>
		</onWindowLeave>
		<onWindowMove public="1" set="method" line="477">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a window move event is fired on the primary window
		@param	x	The x position of the window in desktop coordinates
		@param	y	The y position of the window in desktop coordinates</haxe_doc>
		</onWindowMove>
		<onWindowMinimize public="1" set="method" line="483">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window is minimized</haxe_doc>
		</onWindowMinimize>
		<onWindowResize public="1" set="method" line="491">
			<f a="width:height">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a window resize event is fired on the primary window
		@param	width	The width of the window
		@param	height	The height of the window</haxe_doc>
		</onWindowResize>
		<onWindowRestore public="1" set="method" line="497">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Called when the primary window is restored from being minimized or fullscreen</haxe_doc>
		</onWindowRestore>
		<removeModule public="1" set="method" line="504">
			<f a="module">
				<c path="lime.app.IModule"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes a module from the Application
		@param	module	A module to remove</haxe_doc>
		</removeModule>
		<render public="1" set="method" line="520">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when a render event is fired on the primary window
		@param	context	The render context ready to be rendered</haxe_doc>
		</render>
		<update public="1" set="method" line="527">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Called when an update event is fired on the primary window
		@param	deltaTime	The amount of time in milliseconds that has elapsed since the last update</haxe_doc>
		</update>
		<__addWindow set="method" line="530">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__addWindow>
		<__createWindow set="method" line="580">
			<f a="attributes">
				<t path="lime.ui.WindowAttributes"/>
				<c path="lime.ui.Window"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__createWindow>
		<__registerLimeModule set="method" line="589" override="1">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__registerLimeModule>
		<__removeWindow set="method" line="619">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__removeWindow>
		<__onGamepadConnect set="method" line="646">
			<f a="gamepad">
				<c path="lime.ui.Gamepad"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onGamepadConnect>
		<__onJoystickConnect set="method" line="658">
			<f a="joystick">
				<c path="lime.ui.Joystick"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onJoystickConnect>
		<__onModuleExit set="method" line="672">
			<f a="code">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onModuleExit>
		<__onWindowClose set="method" line="679">
			<f a="window">
				<c path="lime.ui.Window"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__onWindowClose>
		<__unregisterLimeModule set="method" line="692" override="1">
			<f a="application">
				<c path="lime.app.Application"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__unregisterLimeModule>
		<get_preloader get="inline" set="null" line="717">
			<f a=""><c path="lime.utils.Preloader"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_preloader>
		<get_window get="inline" set="null" line="724">
			<f a=""><c path="lime.ui.Window"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_window>
		<get_windows get="inline" set="null" line="731">
			<f a=""><c path="Array"><c path="lime.ui.Window"/></c></f>
			<meta><m n=":noCompletion"/></meta>
		</get_windows>
		<new public="1" set="method" line="106">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Application instance</haxe_doc>
		</new>
		<haxe_doc>The Application class forms the foundation for most Lime projects.
	It is common to extend this class in a main class. It is then possible
	to override "on" functions in the class in order to handle standard events
	that are relevant.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.ui.Window</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.app._Application.ApplicationBackend" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Application.hx" private="1" module="lime.app.Application">
		<c path="lime._internal.backend.html5.HTML5Application"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<class path="lime.app.Event" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Event.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__listeners public="1">
			<c path="Array"><c path="lime.app.Event.T"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__listeners>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app.Event.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<dispatch public="1">
			<d/>
			<haxe_doc><![CDATA[Dispatches a new event callback to all listeners. The signature for the
		`dispatch` method depends upon the type of the `Event`. For example, an
		`Event` of type `Int->Int->Void` will create a `dispatch` method that
		takes two `Int` arguments, like `dispatch (1, 2);`]]></haxe_doc>
		</dispatch>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app.Event.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app.Event.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<haxe_doc><![CDATA[Event is a strictly-typed signals and slots implementation, used for
	core event dispatching.

	For example:

	```haxe
	var event = new Event<Int->Void> ();
	event.add (function (value:Int):Void { trace (value); });
	event.dispatch (100);

	var event = new Event<Void->Void> ();
	event.add (function () { trace ("callback"); });
	event.dispatch ();
	```]]></haxe_doc>
		<meta>
			<m n=":genericBuild"><e>lime._internal.macros.EventMacro.build()</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app.Future" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Future.hx">
		<ofEvents public="1" params="T" set="method" line="117" static="1">
			<f a="onComplete:?onError:?onProgress" v=":null:null">
				<c path="lime.app._Event_ofEvents_T_Void"><f a="">
	<c path="ofEvents.T"/>
	<x path="Void"/>
</f></c>
				<x path="Null"><c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c></x>
				<x path="Null"><c path="lime.app._Event_Int_Int_Void"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></x>
				<c path="lime.app.Future"><c path="ofEvents.T"/></c>
			</f>
			<meta><m n=":value"><e>{ onProgress : null, onError : null }</e></m></meta>
			<haxe_doc>Create a new `Future` instance based on complete and (optionally) error and/or progress `Event` instances</haxe_doc>
		</ofEvents>
		<withError public="1" set="method" line="340" static="1">
			<f a="error">
				<d/>
				<c path="lime.app.Future"><d/></c>
			</f>
			<haxe_doc>Creates a `Future` instance which has finished with an error value
		@param	error	The error value to set
		@return	A new `Future` instance</haxe_doc>
		</withError>
		<withValue public="1" params="T" set="method" line="355" static="1">
			<f a="value">
				<c path="withValue.T"/>
				<c path="lime.app.Future"><c path="withValue.T"/></c>
			</f>
			<haxe_doc>Creates a `Future` instance which has finished with a completion value
		@param	error	The completion value to set
		@return	A new `Future` instance</haxe_doc>
		</withValue>
		<error public="1" set="null">
			<d/>
			<haxe_doc>If the `Future` has finished with an error state, the `error` value</haxe_doc>
		</error>
		<isComplete public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Future` finished with a completion state</haxe_doc>
		</isComplete>
		<isError public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Future` finished with an error state</haxe_doc>
		</isError>
		<value public="1" set="null">
			<c path="lime.app.Future.T"/>
			<haxe_doc>If the `Future` has finished with a completion state, the completion `value`</haxe_doc>
		</value>
		<__completeListeners>
			<c path="Array"><f a="">
	<c path="lime.app.Future.T"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":noCompletion"/></meta>
		</__completeListeners>
		<__errorListeners>
			<c path="Array"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":noCompletion"/></meta>
		</__errorListeners>
		<__progressListeners>
			<c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":noCompletion"/></meta>
		</__progressListeners>
		<onComplete public="1" set="method" line="137">
			<f a="listener">
				<f a="">
					<c path="lime.app.Future.T"/>
					<x path="Void"/>
				</f>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<haxe_doc>Register a listener for when the `Future` completes.

		If the `Future` has already completed, this is called immediately with the result
		@param	listener	A callback method to receive the result value
		@return	The current `Future`</haxe_doc>
		</onComplete>
		<onError public="1" set="method" line="171">
			<f a="listener">
				<f a="">
					<d/>
					<x path="Void"/>
				</f>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<haxe_doc>Register a listener for when the `Future` ends with an error state.

		If the `Future` has already ended with an error, this is called immediately with the error value
		@param	listener	A callback method to receive the error value
		@return	The current `Future`</haxe_doc>
		</onError>
		<onProgress public="1" set="method" line="205">
			<f a="listener">
				<f a=":">
					<x path="Int"/>
					<x path="Int"/>
					<x path="Void"/>
				</f>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<haxe_doc>Register a listener for when the `Future` updates progress.

		If the `Future` is already completed, this will not be called.
		@param	listener	A callback method to receive the progress value
		@return	The current `Future`</haxe_doc>
		</onProgress>
		<ready public="1" set="method" line="229">
			<f a="?waitTime" v="-1">
				<x path="Int"/>
				<c path="lime.app.Future"><c path="lime.app.Future.T"/></c>
			</f>
			<meta><m n=":value"><e>{ waitTime : -1 }</e></m></meta>
			<haxe_doc>Attempts to block on an asynchronous `Future`, returning when it is completed.
		@param	waitTime	(Optional) A timeout before this call will stop blocking
		@return	This current `Future`</haxe_doc>
		</ready>
		<result public="1" set="method" line="279">
			<f a="?waitTime" v="-1">
				<x path="Int"/>
				<x path="Null"><c path="lime.app.Future.T"/></x>
			</f>
			<meta><m n=":value"><e>{ waitTime : -1 }</e></m></meta>
			<haxe_doc>Attempts to block on an asynchronous `Future`, returning the completion value when it is finished.
		@param	waitTime	(Optional) A timeout before this call will stop blocking
		@return	The completion value, or `null` if the request timed out or blocking is not possible</haxe_doc>
		</result>
		<then public="1" params="U" set="method" line="300">
			<f a="next">
				<f a="">
					<c path="lime.app.Future.T"/>
					<c path="lime.app.Future"><c path="then.U"/></c>
				</f>
				<c path="lime.app.Future"><c path="then.U"/></c>
			</f>
			<haxe_doc>Chains two `Future` instances together, passing the result from the first
		as input for creating/returning a new `Future` instance of a new or the same type</haxe_doc>
		</then>
		<new public="1" set="method" line="82">
			<f a="?work:?async" v="null:false">
				<f a=""><c path="lime.app.Future.T"/></f>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ async : false, work : null }</e></m></meta>
			<haxe_doc>Create a new `Future` instance
		@param	work	(Optional) A function to execute
		@param	async	(Optional) If a function is specified, whether to execute it asynchronously where supported</haxe_doc>
		</new>
		<haxe_doc>`Future` is an implementation of Futures and Promises, with the exception that
	in addition to "success" and "failure" states (represented as "complete" and "error"),
	Lime `Future` introduces "progress" feedback as well to increase the value of
	`Future` values.

	```haxe
	var future = Image.loadFromFile ("image.png");
	future.onComplete (function (image) { trace ("Image loaded"); });
	future.onProgress (function (loaded, total) { trace ("Loading: " + loaded + ", " + total); });
	future.onError (function (error) { trace (error); });

	Image.loadFromFile ("image.png").then (function (image) {

		return Future.withValue (image.width);

	}).onComplete (function (width) { trace (width); })
	```

	`Future` values can be chained together for asynchronous processing of values.

	If an error occurs earlier in the chain, the error is propagated to all `onError` callbacks.

	`Future` will call `onComplete` callbacks, even if completion occurred before registering the
	callback. This resolves race conditions, so even functions that return immediately can return
	values using `Future`.

	`Future` values are meant to be immutable, if you wish to update a `Future`, you should create one
	using a `Promise`, and use the `Promise` interface to influence the error, complete or progress state
	of a `Future`.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.app.Promise</e></m>
		</meta>
	</class>
	<class path="lime.app._Future.FutureWork" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Future.hx" private="1" module="lime.app.Future">
		<threadPool static="1"><c path="lime.system.ThreadPool"/></threadPool>
		<queue public="1" set="method" line="380" static="1">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</queue>
		<threadPool_doWork set="method" line="403" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_doWork>
		<threadPool_onComplete set="method" line="419" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_onComplete>
		<threadPool_onError set="method" line="426" static="1"><f a="state">
	<d/>
	<x path="Void"/>
</f></threadPool_onError>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.app.Promise" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Promise.hx">
		<future public="1" set="null">
			<c path="lime.app.Future"><c path="lime.app.Promise.T"/></c>
			<haxe_doc>The `Future` associated with this `Promise`.

		All subsequent calls to set an error, completion or progress state
		will update the status and notify listeners to this `Future`</haxe_doc>
		</future>
		<isComplete public="1" get="accessor" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Promise` (and related `Future`) has finished with a completion state.
		This will be `false` if the `Promise` has not been resolved with a completion or error state.</haxe_doc>
		</isComplete>
		<isError public="1" get="accessor" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the `Promise` (and related `Future`) has finished with an error state.
		This will be `false` if the `Promise` has not been resolved with a completion or error state.</haxe_doc>
		</isError>
		<complete public="1" set="method" line="105">
			<f a="data">
				<c path="lime.app.Promise.T"/>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Resolves this `Promise` with a completion state
		@param	data	The completion value
		@return	The current `Promise`</haxe_doc>
		</complete>
		<completeWith public="1" set="method" line="137">
			<f a="future">
				<c path="lime.app.Future"><c path="lime.app.Promise.T"/></c>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Resolves this `Promise` with the complete, error and/or progress state
		of another `Future`
		@param	future	The `Future` to use to resolve this `Promise`
		@return	The current `Promise`</haxe_doc>
		</completeWith>
		<error public="1" set="method" line="153">
			<f a="msg">
				<d/>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Resolves this `Promise` with an error state
		@param	msg	The error value
		@return	The current `Promise`</haxe_doc>
		</error>
		<progress public="1" set="method" line="185">
			<f a="progress:total">
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.app.Promise"><c path="lime.app.Promise.T"/></c>
			</f>
			<haxe_doc>Sends progress updates to the related `Future`
		@param	progress	A progress value
		@param	total	A total value. This should be equal or greater to the `progress` value
		@return	The current `Promise`</haxe_doc>
		</progress>
		<get_isComplete set="method" line="213">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_isComplete>
		<get_isError set="method" line="220">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_isError>
		<new public="1" set="method" line="93">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Create a new `Promise` instance</haxe_doc>
		</new>
		<haxe_doc><![CDATA[`Promise` is an implementation of Futures and Promises, with the exception that
	in addition to "success" and "failure" states (represented as "complete" and "error"),
	Lime `Future` introduces "progress" feedback as well to increase the value of
	`Future` values.

	While `Future` is meant to be read-only, `Promise` can be used to set the state of a future
	for receipients of it's `Future` object. For example:

	```haxe
	function examplePromise ():Future<String> {

		var promise = new Promise<String> ();

		var progress = 0, total = 10;
		var timer = new Timer (100);
		timer.run = function () {

			promise.progress (progress, total);
			progress++;

			if (progress == total) {

				promise.complete ("Done!");
				timer.stop ();

			}

		};

		return promise.future;

	}

	var future = examplePromise ();
	future.onComplete (function (message) { trace (message); });
	future.onProgress (function (loaded, total) { trace ("Progress: " + loaded + ", " + total); });
	```]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.app.Future</e></m>
		</meta>
	</class>
	<class path="lime.app._Event_Array_String__Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/FileDialog.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Array_String__Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Array_String__Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Array_String__Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="37"><f a="a">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Dynamic_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Future.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Dynamic_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Dynamic_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Dynamic_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<d/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="117"><f a="a">
	<d/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_Float_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Sensor.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="19"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_Int_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="81"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="79"><f a="a:a1">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.ui.MouseButton"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="78"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.ui.MouseButton"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<e path="lime.ui.MouseWheelMode"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="82"><f a="a:a1:a2">
	<x path="Float"/>
	<x path="Float"/>
	<e path="lime.ui.MouseWheelMode"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Float_Float_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Float_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="34"><f a="a:a1:a2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Float_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Int_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="29"><f a="a:a1">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Int_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Future.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Int_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Int_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="117"><f a="a:a1">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="30"><f a="a">
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="33"><f a="a:a1">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_String_Int_Int_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_String_Int_Int_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_String_Int_Int_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_String_Int_Int_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="::">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="89"><f a="a:a1:a2">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_String_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_String_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_String_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_String_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="67"><f a="a">
	<c path="String"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_Void_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_Void_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_Void_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_Void_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=""><x path="Void"/></f></c></__listeners>
		<dispatch public="1" set="method" line="64"><f a=""><x path="Void"/></f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_haxe_Function_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/system/ThreadPool.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_haxe_Function_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_haxe_Function_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_haxe_Function_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="26"><f a="a">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_graphics_RenderContext_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_graphics_RenderContext_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_graphics_RenderContext_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_graphics_RenderContext_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="84"><f a="a">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_GamepadAxis_Float_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Gamepad.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="26"><f a="a:a1">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_GamepadButton_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Gamepad.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_GamepadButton_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadButton_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_GamepadButton_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="27"><f a="a">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Gamepad_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Gamepad.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Gamepad_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Gamepad_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Gamepad_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="20"><f a="a">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Joystick_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Joystick.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Joystick_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Joystick_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Joystick_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="19"><f a="a">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="73"><f a="a:a1">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Touch_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Touch.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Touch_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Touch_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Touch_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="18"><f a="a">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_ui_Window_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Application.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_ui_Window_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Window_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_ui_Window_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="62"><f a="a">
	<c path="lime.ui.Window"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_lime_utils_Resource_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/FileDialog.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_lime_utils_Resource_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_lime_utils_Resource_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_lime_utils_Resource_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<x path="lime.utils.Resource"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="34"><f a="a">
	<x path="lime.utils.Resource"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.app._Event_ofEvents_T_Void" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/app/Future.hx">
		<canceled public="1" set="null">
			<x path="Bool"/>
			<haxe_doc>Whether the event was canceled during the previous dispatch</haxe_doc>
		</canceled>
		<__repeat public="1">
			<c path="Array"><x path="Bool"/></c>
			<meta>
				<m n=":noCompletion"/>
				<m n=":dox"><e>hide</e></m>
			</meta>
		</__repeat>
		<__priorities>
			<c path="Array"><x path="Int"/></c>
			<meta><m n=":noCompletion"/></meta>
		</__priorities>
		<add public="1" set="method" line="65">
			<f a="listener:?once:?priority" v=":false:0">
				<c path="lime.app._Event_ofEvents_T_Void.T"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ priority : 0, once : false }</e></m></meta>
			<haxe_doc>Adds a new event listener
		@param	listener	A callback that matches the signature of the event
		@param	once	Whether to receive an event dispatch only once, or each time it is fired
		@param	priority	The priority for this listener, a higher priority will be dispatched sooner</haxe_doc>
		</add>
		<cancel public="1" set="method" line="92">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Marks the event as canceled, and stops the current event dispatch</haxe_doc>
		</cancel>
		<has public="1" set="method" line="141">
			<f a="listener">
				<c path="lime.app._Event_ofEvents_T_Void.T"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether a callback is a listener to this event
		@param	listener	A callback that matches the signature of the event
		@return	Whether the callback is a listener</haxe_doc>
		</has>
		<remove public="1" set="method" line="160">
			<f a="listener">
				<c path="lime.app._Event_ofEvents_T_Void.T"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Removes an event listener
		@param	listener	A callback that matches the signature of the event</haxe_doc>
		</remove>
		<__listeners public="1"><c path="Array"><f a="">
	<c path="lime.app._Event_ofEvents_T_Void.T"/>
	<x path="Void"/>
</f></c></__listeners>
		<dispatch public="1" set="method" line="117"><f a="a">
	<c path="lime.app._Event_ofEvents_T_Void.T"/>
	<x path="Void"/>
</f></dispatch>
		<new public="1" set="method" line="47">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Creates a new Event instance</haxe_doc>
		</new>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.graphics.Canvas2DRenderContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/Canvas2DRenderContext.hx">
		<from>
			<icast><c path="js.html.CanvasRenderingContext2D"/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
		</from>
		<this><c path="js.html.CanvasRenderingContext2D"/></this>
		<to><icast><c path="js.html.CanvasRenderingContext2D"/></icast></to>
		<haxe_doc>The `Canvas2DRenderContext` represents the primary `js.html.CanvasRenderingContext2D` instance when Canvas
	is the render context type of the `Window`.

	You can convert from `lime.graphics.RenderContext` to `Canvas2DRenderContext` directly
	if desired:

	```haxe
	var ctx:CanvasRenderingContext2D = window.context;
	```</haxe_doc>
		<meta>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.graphics._Canvas2DRenderContext.Canvas2DRenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/Canvas2DRenderContext.hx" private="1" module="lime.graphics.Canvas2DRenderContext">
	<fromRenderContext set="method" line="26" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.Canvas2DRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime.graphics.RenderContext</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._Canvas2DRenderContext.Canvas2DRenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/Canvas2DRenderContext.hx" private="1" module="lime.graphics.Canvas2DRenderContext">
		<fromRenderContext set="method" line="26" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.Canvas2DRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.DOMRenderContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/DOMRenderContext.hx">
		<from>
			<icast><c path="js.html.Element"/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
		</from>
		<this><c path="js.html.Element"/></this>
		<to><icast><c path="js.html.Element"/></icast></to>
		<haxe_doc>The `DOMRenderContext` represents the primary `js.html.Element` instance when DOM
	is the render context type of the `Window`.

	You can convert from `lime.graphics.RenderContext` to `DOMRenderContext` directly
	if desired:

	```haxe
	var dom:DOMRenderContext = window.context;
	```</haxe_doc>
		<meta>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.graphics._DOMRenderContext.DOMRenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/DOMRenderContext.hx" private="1" module="lime.graphics.DOMRenderContext">
	<fromRenderContext set="method" line="26" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.DOMRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<meta>
		<m n=":final"/>
		<m n=":access"><e>lime.graphics.RenderContext</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._DOMRenderContext.DOMRenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/DOMRenderContext.hx" private="1" module="lime.graphics.DOMRenderContext">
		<fromRenderContext set="method" line="26" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.DOMRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<meta>
			<m n=":final"/>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
		</meta>
	</class>
	<class path="lime.graphics.Image" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/Image.hx">
		<__base64Chars expr="&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;" line="100" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</e></m></meta>
		</__base64Chars>
		<__base64Encoder static="1"><c path="haxe.crypto.BaseCode"/></__base64Encoder>
		<fromBase64 public="1" set="method" line="676" static="1">
			<f a="base64:type">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Converts a Base64-encoded `String` into an `Image`, or returns `null` if this is not possible
		@param	base64	A Base64-encoded `String`
		@param	type	A mime-type to describe the image data (such as "image/png")
		@return	A new `Image`, or `null` if conversion was not possible</haxe_doc>
		</fromBase64>
		<fromBytes public="1" set="method" line="722" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Converts a `Bytes` object to an `Image` instance

		Some platforms (such as Flash and HTML5) cannot convert `Bytes` to an
		`Image` synchronously, and may not work properly.

		`Image.loadFromBytes` works asynchronously, and should work
		consistently on all platforms.
		@param	bytes	A `Bytes` holding encoded image data
		@return	A new `Image` instance</haxe_doc>
		</fromBytes>
		<fromCanvas public="1" set="method" line="739" static="1">
			<f a="canvas">
				<c path="js.html.CanvasElement"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Converts an `js.html.CanvasElement` instance to an `Image`
		@param	canvas	A `CanvasElement`
		@return	A new `Image` instance</haxe_doc>
		</fromCanvas>
		<fromFile public="1" set="method" line="766" static="1">
			<f a="path">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Loads an `Image` from a path synchronously.

		Some platforms, such as Flash and HTML5, cannot load
		images synchronously.

		`Image.loadFromFile` works asynchronously, and should
		behave consistently on all platforms.
		@param	path	The source file path or URL of an encoded image file
		@return	A new `Image` instance</haxe_doc>
		</fromFile>
		<fromImageElement public="1" set="method" line="783" static="1">
			<f a="image">
				<c path="js.html.ImageElement"/>
				<c path="lime.graphics.Image"/>
			</f>
			<haxe_doc>Converts a `js.html.Image` instance to an `Image`
		@param	image	An `ImageElement` instance
		@return	A new `Image` instance</haxe_doc>
		</fromImageElement>
		<loadFromBase64 public="1" set="method" line="1016" static="1">
			<f a="base64:type">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<haxe_doc>Creates a new `Image` instance from a Base64-encoded `String`, asynchronously
		@param	base64	A Base64-encoded string representing encoded image data
		@param	type	The mime type of the encoded data (such as "image/png")
		@return	A `Future` to return a new `Image` instance</haxe_doc>
		</loadFromBase64>
		<loadFromBytes public="1" set="method" line="1038" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<haxe_doc>Creates a new `Image` instance from image-encoded `Bytes`, loaded asynchronously
		@param	bytes	A `Bytes` instance
		@return	A `Future` to return a new `Image` instance</haxe_doc>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="1113" static="1">
			<f a="path">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<haxe_doc>Creates a new `Image` instance from a file path or URL, loaded asynchronously
		@param	path	A file path or URL containing an encoded image
		@return	A `Future` to return a new `Image` instance</haxe_doc>
		</loadFromFile>
		<__base64Encode set="method" line="1572" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="String"/>
</f></__base64Encode>
		<__isGIF set="method" line="1940" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isGIF>
		<__isJPG set="method" line="1950" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isJPG>
		<__isPNG set="method" line="1959" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isPNG>
		<__isWebP set="method" line="1968" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="Bool"/>
</f></__isWebP>
		<buffer public="1">
			<c path="lime.graphics.ImageBuffer"/>
			<haxe_doc>The `ImageBuffer` store that backs the `Image`</haxe_doc>
		</buffer>
		<data public="1" get="accessor" set="accessor">
			<x path="lime.utils.UInt8Array"/>
			<haxe_doc>Retrieves `UInt8Array` data from the `ImageBuffer`. If the `ImageBuffer`
		is not in a data format, it will be converted.</haxe_doc>
		</data>
		<dirty public="1">
			<x path="Bool"/>
			<haxe_doc>Whether the `Image` is dirty. This is set to `true` when pixel operations
		have been performed on the underlying `buffer`, and can be set to `false`
		again by your own renderer.</haxe_doc>
		</dirty>
		<format public="1" get="accessor" set="accessor">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>Get or set the `PixelFormat` for the underlying `ImageBuffer`. This can be
		used to convert the `ImageBuffer` to a new format.</haxe_doc>
		</format>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>The logical height of the `Image`. This can be smaller than the `height`
		of the underlying `buffer`.</haxe_doc>
		</height>
		<offsetX public="1">
			<x path="Int"/>
			<haxe_doc>The offset X position of the `Image`, from the source `buffer`,
		when the `Image` is smaller than the full size of the source `buffer`</haxe_doc>
		</offsetX>
		<offsetY public="1">
			<x path="Int"/>
			<haxe_doc>The offset Y position of the `Image`, from the source `buffer`,
		when the `Image` is smaller than the full size of the source `buffer`</haxe_doc>
		</offsetY>
		<powerOfTwo public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc>Get or set whether the `ImageBuffer` dimensions are both a power-of-two
		(such as 2, 4, 8, 16, so on). Setting this value may resize the underlying
		`buffer`</haxe_doc>
		</powerOfTwo>
		<premultiplied public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc>Get or set whether this `Image` has premultiplied alpha. Setting this value
		may multiply or unmultiply data if the underlying `ImageBuffer` uses a
		different format.</haxe_doc>
		</premultiplied>
		<rect public="1" get="accessor" set="null">
			<c path="lime.math.Rectangle"/>
			<haxe_doc>The offset, width and height of this image as a `Rectangle`</haxe_doc>
		</rect>
		<src public="1" get="accessor" set="accessor">
			<d/>
			<haxe_doc>A higher-level representation of the source `ImageBuffer`. This might be an
		HTML5 Image, CanvasElement or a Flash BitmapData instance.</haxe_doc>
		</src>
		<transparent public="1" get="accessor" set="accessor">
			<x path="Bool"/>
			<haxe_doc>Get or set whether the underlying `ImageBuffer` is transparent.</haxe_doc>
		</transparent>
		<type public="1">
			<e path="lime.graphics.ImageType"/>
			<haxe_doc>The current `ImageType`, representing what is being used to store the `Image`'s graphics</haxe_doc>
		</type>
		<version public="1">
			<x path="Int"/>
			<haxe_doc>The `version` of the `Image` increases each time it is modified, helpful to determining
		whether a cache is out-of-date.</haxe_doc>
		</version>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>The logical width of the `Image`. This can be smaller than the `width`
		of the underlying `buffer`.</haxe_doc>
		</width>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>A convenience property, unused internally, which may be helpful for different renderer
		implementations</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>A convenience property, unused internally, which may be helpful for different renderer
		implementations</haxe_doc>
		</y>
		<clone public="1" set="method" line="311">
			<f a=""><c path="lime.graphics.Image"/></f>
			<haxe_doc>Creates a duplicate copy of this `Image` and `ImageBuffer`
		@return	A new `Image` instance</haxe_doc>
		</clone>
		<colorTransform public="1" set="method" line="345">
			<f a="rect:colorMatrix">
				<c path="lime.math.Rectangle"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Applies a color transform to the underlying `ImageBuffer` data
		@param	rect	The target rectangle to transform
		@param	colorMatrix	A `ColorMatrix` for color offset and/or multiplication</haxe_doc>
		</colorTransform>
		<copyChannel public="1" set="method" line="384">
			<f a="sourceImage:sourceRect:destPoint:sourceChannel:destChannel">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<e path="lime.graphics.ImageChannel"/>
				<e path="lime.graphics.ImageChannel"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copy a color channel from one `Image` to another. This can also be within the same `Image` instance.
		@param	sourceImage	The `Image` to copy from
		@param	sourceRect	The source rectangle to copy from in the `sourceImage`
		@param	destPoint	The destination point to apply the channel in the current `Image`
		@param	sourceChannel	The source color channel to copy the data from
		@param	destChannel	The destination color channel to apply the data into</haxe_doc>
		</copyChannel>
		<copyPixels public="1" set="method" line="445">
			<f a="sourceImage:sourceRect:destPoint:?alphaImage:?alphaPoint:?mergeAlpha" v=":::null:null:false">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ mergeAlpha : false, alphaPoint : null, alphaImage : null }</e></m></meta>
			<haxe_doc>Copies pixels from one `Image` to another. The source `Image` can also be this `Image`
		@param	sourceImage	The source `Image` to copy from
		@param	sourceRect	The source rectangle to use when copying
		@param	destPoint	The destination point to use when copying
		@param	alphaImage	(Optional) A different `Image` to use as the alpha channel while copying
		@param	alphaPoint	(Optional) A point in the alpha image to use when copying
		@param	mergeAlpha	(Optional) Whether to blend the source and destination alpha (`true`), or to replace the destination alpha (`false`)</haxe_doc>
		</copyPixels>
		<encode public="1" set="method" line="550">
			<f a="?format:?quality" v="null:90">
				<e path="lime.graphics.ImageFileFormat"/>
				<x path="Int"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ quality : 90, format : null }</e></m></meta>
			<haxe_doc>Encodes this `Image` into an image file format, such as PNG or JPEG.
		@param	format	(Optional) An `ImageFileFormat` to encode into (default is `PNG`)
		@param	quality	(Optional) A quality value to use when encoding as JPEG (from 0 to 100)
		@return	`Bytes` for the encoded `Image`, or `null` if encoding was not successful</haxe_doc>
		</encode>
		<fillRect public="1" set="method" line="581">
			<f a="rect:color:?format" v="::null">
				<c path="lime.math.Rectangle"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Fill a rectangle in the `Image` with a solid color
		@param	rect	A destination rectangle in this `Image` to fill
		@param	color	The color to use when filling this `Image`
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</fillRect>
		<floodFill public="1" set="method" line="633">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Applies a flood fill to this `Image`, starting with the point specified.

		A flood fill behaves similarly to the "paint can" tool in many image editors,
		the fill will apply the chosen color to neighboring pixels of the same color.
		@param	x	The target x coordinate within the `Image` to use with the fill
		@param	y	The target y coordinate within the `Image` to use with the fill
		@param	color	The color to use when performing the fill
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</floodFill>
		<getColorBoundsRect public="1" set="method" line="808">
			<f a="mask:color:?findColor:?format" v="::true:null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ format : null, findColor : true }</e></m></meta>
			<haxe_doc>Finds a region in the `Image` that includes pixels all of a certain color (when `findColor` is `true`) or
		excludes a certain color (`findColor` is `false`)
		@param	mask	A hexadecimal mask to use when comparing colors. You can use this to compare all of a color, or only certain color channels
		@param	color	The color value to use in comparisons
		@param	findColor	(Optional) Whether to find a region that does match the color (`true`) or excludes it (`false`)
		@param	format	(Optional) The `PixelFormat` that the `color` and `mask` are encoded in (default is `RGBA`)
		@return	The matching bounds `Rectangle`, or `null` if no matching region is found</haxe_doc>
		</getColorBoundsRect>
		<getPixel public="1" set="method" line="846">
			<f a="x:y:?format" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Gets a 24-bit pixel from the `Image` (red, green and blue, but no alpha)
		@param	x	The `x` location to fetch
		@param	y	The `y` location to fetch
		@param	format	(Optional) The `PixelFormat` to encode the return value in (default is `RGBA`)
		@return	The specified pixel, or `0` if it is out-of-bounds</haxe_doc>
		</getPixel>
		<getPixel32 public="1" set="method" line="892">
			<f a="x:y:?format" v="::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Gets a 32-bit pixel from the `Image`, including alpha
		@param	x	The `x` location to fetch
		@param	y	The `y` location to fetch
		@param	format	(Optional) The `PixelFormat` to encode the return value in (default is `RGBA`)
		@return	The specified pixel, or `0` if it is out-of-bounds</haxe_doc>
		</getPixel32>
		<getPixels public="1" set="method" line="937">
			<f a="rect:?format" v=":null">
				<c path="lime.math.Rectangle"/>
				<x path="lime.graphics.PixelFormat"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Gets a region of pixels from the `Image`, as `Bytes`
		@param	rect	The source `Rectangle` to read from
		@param	format	(Optional) The `PixelFormat` to use when writing to the `Bytes` object (default is `RGBA`)
		@return	A `Bytes` object representing the region, or `null` if it is not possible to read</haxe_doc>
		</getPixels>
		<merge public="1" set="method" line="1202">
			<f a="sourceImage:sourceRect:destPoint:redMultiplier:greenMultiplier:blueMultiplier:alphaMultiplier">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Blits a second `Image` onto this one, using optional color multipliers
		@param	sourceImage	An `Image` instance to copy from
		@param	sourceRect	The source rectangle to use when copying
		@param	destPoint	The destination point in this `Image` to copy into
		@param	redMultiplier	A red multiplier to use when blitting
		@param	greenMultiplier	A red multiplier to use when blitting
		@param	blueMultiplier	A red multiplier to use when blitting
		@param	alphaMultiplier	A red multiplier to use when blitting</haxe_doc>
		</merge>
		<resize public="1" set="method" line="1242">
			<f a="newWidth:newHeight">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Resizes the current `Image`, reallocating the `ImageBuffer` to a new size.
		The resize algorithm for most platforms is bilinear.
		@param	newWidth	A new width for the `Image`
		@param	newHeight	A new height for the `Image`</haxe_doc>
		</resize>
		<scroll public="1" set="method" line="1288">
			<f a="x:y">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scrolls the content of this `Image`.

		Pixels on the edges of the scroll will remain repeated, while others
		within the scroll area will be shifted

		@param	x	The amount of horizontal scroll to apply
		@param	y	The amount of vertical scroll to apply</haxe_doc>
		</scroll>
		<setPixel public="1" set="method" line="1320">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Sets a pixel in the current `Image` in 24-bit color format (red, green, blue, no alpha)
		@param	x	The x coordinate of the pixel
		@param	y	The y coordinate of the pixel
		@param	color	The color to use
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</setPixel>
		<setPixel32 public="1" set="method" line="1364">
			<f a="x:y:color:?format" v=":::null">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null }</e></m></meta>
			<haxe_doc>Sets a pixel in the current `Image` in 32-bit color format (includes alpha)
		@param	x	The x coordinate of the pixel
		@param	y	The y coordinate of the pixel
		@param	color	The color to use
		@param	format	(Optional) The `PixelFormat` that `color` is encoded in (default is `RGBA`)</haxe_doc>
		</setPixel32>
		<setPixels public="1" set="method" line="1408">
			<f a="rect:bytePointer:?format:?endian" v="::null:null">
				<c path="lime.math.Rectangle"/>
				<x path="lime.utils.BytePointer"/>
				<x path="lime.graphics.PixelFormat"/>
				<e path="lime.system.Endian"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ endian : null, format : null }</e></m></meta>
			<haxe_doc>Sets a region of pixels at once using a `BytePointer`
		@param	rect	The region of pixels in this `Image` to replace with the incoming bytes
		@param	bytePointer	A `BytePointer` object referencing the `Bytes` and position to read from
		@param	format	(Optional) The `PixelFormat` that the pixels are encoded in (default is `RGBA`)
		@param	endian (Optional) The endianness of the incoming bytes (default is the system endianness)</haxe_doc>
		</setPixels>
		<threshold public="1" set="method" line="1525">
			<f a="sourceImage:sourceRect:destPoint:operation:threshold:?color:?mask:?copySource:?format" v=":::::0x00000000:0xFFFFFFFF:false:null">
				<c path="lime.graphics.Image"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Vector2"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ format : null, copySource : false, mask : 0xFFFFFFFF, color : 0x00000000 }</e></m></meta>
			<haxe_doc><![CDATA[Tests pixel values in an image against a specified threshold and sets
		pixels that pass the test to new color values. Using the
		`threshold()` method, you can isolate and replace color ranges
		in an image and perform other logical operations on image pixels.

		The `threshold()` method's test logic is as follows:

		 1. If `((pixelValue & mask) operation(threshold & mask))`,
		then set the pixel to `color`;
		 2. Otherwise, if `copySource == true`, then set the pixel to
		corresponding pixel value from `sourceBitmap`.

		The `operation` parameter specifies the comparison operator
		to use for the threshold test. For example, by using "==" as the
		`operation` parameter, you can isolate a specific color value
		in an image. Or by using `{operation: "<", mask: 0xFF000000,
		threshold: 0x7F000000, color: 0x00000000}`, you can set all
		destination pixels to be fully transparent when the source image pixel's
		alpha is less than 0x7F. You can use this technique for animated
		transitions and other effects.

		@param	sourceImage	The input bitmap image to use. The source image can be a different `Image` object or it can refer to the current `Image` instance.
		@param	sourceRect	A rectangle that defines the area of the source image to use as input.
		@param	destPoint	The point within the destination image (the current `Image` instance) that corresponds to the upper-left corner of the source rectangle.
		@param	operation	One of the following comparison operators, passed as a `String`: "<", "<=", ">", ">=", "==", "!="
		@param	threshold	The value that each pixel is tested against to see if it meets or exceeds the threshhold.
		@param	color	The color value that a pixel is set to if the threshold test succeeds. The default value is 0x00000000.
		@param	mask	The mask to use to isolate a color component.
		@param	copySource	If the value is `true`, pixel values from the source image are copied to the destination when the threshold test fails. If the value is `false`, the source image is not copied when the threshold test fails.
		@return	The number of pixels that were changed.]]></haxe_doc>
		</threshold>
		<__clipRect set="method" line="1601">
			<f a="r">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__clipRect>
		<__fromBase64 set="method" line="1644">
			<f a="base64:type:?onload" v="::null">
				<c path="String"/>
				<c path="String"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ onload : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromBase64>
		<__fromBytes set="method" line="1679">
			<f a="bytes:?onload" v=":null">
				<c path="haxe.io.Bytes"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ onload : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromBytes>
		<__fromFile set="method" line="1740">
			<f a="path:?onload:?onerror" v=":null:null">
				<c path="String"/>
				<f a="">
					<c path="lime.graphics.Image"/>
					<x path="Void"/>
				</f>
				<f a=""><x path="Void"/></f>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ onerror : null, onload : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__fromFile>
		<__fromImageBuffer set="method" line="1917">
			<f a="buffer">
				<c path="lime.graphics.ImageBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromImageBuffer>
		<get_data set="method" line="1984">
			<f a=""><x path="lime.utils.UInt8Array"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_data>
		<set_data set="method" line="2006">
			<f a="value">
				<x path="lime.utils.UInt8Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_data>
		<get_format set="method" line="2013">
			<f a=""><x path="lime.graphics.PixelFormat"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_format>
		<set_format set="method" line="2020">
			<f a="value">
				<x path="lime.graphics.PixelFormat"/>
				<x path="lime.graphics.PixelFormat"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_format>
		<get_powerOfTwo set="method" line="2041">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_powerOfTwo>
		<set_powerOfTwo set="method" line="2048">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_powerOfTwo>
		<get_premultiplied set="method" line="2106">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_premultiplied>
		<set_premultiplied set="method" line="2113">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_premultiplied>
		<get_rect set="method" line="2158">
			<f a=""><c path="lime.math.Rectangle"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_rect>
		<get_src set="method" line="2165">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_src>
		<set_src set="method" line="2180">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_src>
		<get_transparent set="method" line="2187">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_transparent>
		<set_transparent set="method" line="2195">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_transparent>
		<new public="1" set="method" line="235">
			<f a="?buffer:?offsetX:?offsetY:?width:?height:?color:?type" v="null:0:0:-1:-1:null:null">
				<c path="lime.graphics.ImageBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<e path="lime.graphics.ImageType"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ type : null, color : null, height : -1, width : -1, offsetY : 0, offsetX : 0, buffer : null }</e></m></meta>
			<haxe_doc>Creates a new `Image` instance.

		If `buffer` is null, but `width` and `height` are set, a new `ImageBuffer` is allocated matching the `color` requested.
		@param	buffer	(Optional) The `ImageBuffer` this `Image` represents
		@param	offsetX	(Optional) A logical offset value within the `ImageBuffer` dimensions
		@param	offsetY	(Optional) A logical offset value within the `ImageBuffer` dimensions
		@param	width	(Optional) A logical width value within the `ImageBuffer` dimensions
		@param	height	(Optional) A logical height value within the `ImageBuffer` dimensions
		@param	color	(Optional) A fill color to use if the `buffer` property is `null`
		@param	type	(Optional) An `ImageType` to use for this `Image`</haxe_doc>
		</new>
		<haxe_doc>`Image` is a convenience class for working with bitmap images in Lime.

	Although `ImageBuffer` holds the actual bitmap data, `Image` includes convenience methods for
	loading from files, loading from bytes, and performing many pixel operations over an
	`ImageBuffer` instance.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":autoBuild"><e>lime._internal.macros.AssetsMacro.embedImage()</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":allow"><e>lime._internal.graphics.ImageCanvasUtil</e></m>
			<m n=":allow"><e>lime._internal.graphics.ImageDataUtil</e></m>
			<m n=":access"><e>lime.app.Application</e></m>
			<m n=":access"><e>lime.math.ColorMatrix</e></m>
			<m n=":access"><e>lime.math.Rectangle</e></m>
			<m n=":access"><e>lime.math.Vector2</e></m>
		</meta>
	</class>
	<class path="lime.graphics.ImageBuffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/ImageBuffer.hx">
		<bitsPerPixel public="1">
			<x path="Int"/>
			<haxe_doc>The number of bits per pixel in this image data</haxe_doc>
		</bitsPerPixel>
		<data public="1">
			<x path="lime.utils.UInt8Array"/>
			<haxe_doc>The data for this image, represented as a `UInt8Array`</haxe_doc>
		</data>
		<format public="1">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>The `PixelFormat` for this image data</haxe_doc>
		</format>
		<height public="1">
			<x path="Int"/>
			<haxe_doc>The height of this image data</haxe_doc>
		</height>
		<premultiplied public="1">
			<x path="Bool"/>
			<haxe_doc>Whether the image data has premultiplied alpha</haxe_doc>
		</premultiplied>
		<src public="1" get="accessor" set="accessor">
			<d/>
			<haxe_doc>The data for this image, represented as a `js.html.CanvasElement`, `js.html.Image` or `flash.display.BitmapData`</haxe_doc>
		</src>
		<stride public="1" get="accessor" set="null">
			<x path="Int"/>
			<haxe_doc>The stride, or number of data values per row in the image data</haxe_doc>
		</stride>
		<transparent public="1">
			<x path="Bool"/>
			<haxe_doc>Whether this image data is transparent</haxe_doc>
		</transparent>
		<width public="1">
			<x path="Int"/>
			<haxe_doc>The width of this image data</haxe_doc>
		</width>
		<__srcBitmapData>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBitmapData>
		<__srcCanvas>
			<c path="js.html.CanvasElement"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCanvas>
		<__srcContext>
			<c path="js.html.CanvasRenderingContext2D"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcContext>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcImage>
			<t path="js.html._Image.HTMLImage"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImage>
		<__srcImageData>
			<c path="js.html.ImageData"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcImageData>
		<clone public="1" set="method" line="137">
			<f a=""><c path="lime.graphics.ImageBuffer"/></f>
			<haxe_doc>Creates a duplicate of this `ImageBuffer`

		If the current `ImageBuffer` has `data` or `src` information, this will be
		cloned as well.
		@return	A new `ImageBuffer` with duplicate values</haxe_doc>
		</clone>
		<get_src set="method" line="210">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_src>
		<set_src set="method" line="230">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_src>
		<get_stride set="method" line="260">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_stride>
		<new public="1" set="method" line="117">
			<f a="?data:?width:?height:?bitsPerPixel:?format" v="null:0:0:32:null">
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ format : null, bitsPerPixel : 32, height : 0, width : 0, data : null }</e></m></meta>
			<haxe_doc>Creates a new `ImageBuffer` instance
		@param	data	(Optional) Initial `UInt8Array` data
		@param	width	(Optional) An initial `width` value
		@param	height	(Optional) An initial `height` value
		@param	bitsPerPixel	(Optional) The `bitsPerPixel` of the data (default is 32)
		@param	format	(Optional) The `PixelFormat` of this image buffer</haxe_doc>
		</new>
		<haxe_doc>`ImageBuffer` is a simple object for storing image data.

	For higher-level operations, use the `Image` class.</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":allow"><e>lime.graphics.Image</e></m>
		</meta>
	</class>
	<enum path="lime.graphics.ImageChannel" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/ImageChannel.hx">
		<RED><haxe_doc>The red color channel</haxe_doc></RED>
		<GREEN><haxe_doc>The green color channel</haxe_doc></GREEN>
		<BLUE><haxe_doc>The blue color channel</haxe_doc></BLUE>
		<ALPHA><haxe_doc>The alpha color channel</haxe_doc></ALPHA>
		<haxe_doc>An enum with values for standard image color channels</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<enum path="lime.graphics.ImageFileFormat" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/ImageFileFormat.hx">
		<BMP><haxe_doc>An image file encoded in the BMP file format</haxe_doc></BMP>
		<JPEG><haxe_doc>An image file encoded in the JPEG file format</haxe_doc></JPEG>
		<PNG><haxe_doc>An image file encoded in the PNG file format</haxe_doc></PNG>
		<haxe_doc>An enum with values for image encoding formats</haxe_doc>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="lime.graphics.ImageType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/ImageType.hx">
		<CANVAS><haxe_doc>The source image data is stored in a `js.html.Image` or `js.html.CanvasElement`</haxe_doc></CANVAS>
		<DATA><haxe_doc>The source image data is stored in a `UInt8Array`</haxe_doc></DATA>
		<FLASH><haxe_doc>The source image data is stored in a `flash.display.BitmapData`</haxe_doc></FLASH>
		<CUSTOM><haxe_doc>The source image data is stored in a custom format</haxe_doc></CUSTOM>
		<haxe_doc>An enum containing values for the underlying image type
	represented by an `ImageBuffer`</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.graphics.PixelFormat" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/PixelFormat.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>An enum containing different pixel encoding formats for image data</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics._PixelFormat.PixelFormat_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/PixelFormat.hx" private="1" module="lime.graphics.PixelFormat" extern="1">
	<RGBA32 public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>An image encoded in 32-bit RGBA color order</haxe_doc>
	</RGBA32>
	<ARGB32 public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>An image encoded in 32-bit ARGB color order</haxe_doc>
	</ARGB32>
	<BGRA32 public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
		<x path="lime.graphics.PixelFormat"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>An image encoded in 32-bit BGRA color order</haxe_doc>
	</BGRA32>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._PixelFormat.PixelFormat_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/PixelFormat.hx" private="1" module="lime.graphics.PixelFormat" extern="1">
		<RGBA32 public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>An image encoded in 32-bit RGBA color order</haxe_doc>
		</RGBA32>
		<ARGB32 public="1" get="inline" set="null" expr="cast 1" line="18" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>An image encoded in 32-bit ARGB color order</haxe_doc>
		</ARGB32>
		<BGRA32 public="1" get="inline" set="null" expr="cast 2" line="23" static="1">
			<x path="lime.graphics.PixelFormat"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>An image encoded in 32-bit BGRA color order</haxe_doc>
		</BGRA32>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.graphics.RenderContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/RenderContext.hx">
		<attributes public="1" set="null">
			<t path="lime.graphics.RenderContextAttributes"/>
			<haxe_doc>Additional information about the current context</haxe_doc>
		</attributes>
		<canvas2D public="1" set="null">
			<x path="lime.graphics.Canvas2DRenderContext"/>
			<haxe_doc>Access to the current Cairo render context, if available</haxe_doc>
		</canvas2D>
		<dom public="1" set="null">
			<x path="lime.graphics.DOMRenderContext"/>
			<haxe_doc>Access to the current HTML5 DOM render context, if available</haxe_doc>
		</dom>
		<type public="1" set="null">
			<x path="lime.graphics.RenderContextType"/>
			<haxe_doc>Access to the current Flash render context, if available</haxe_doc>
		</type>
		<version public="1" set="null"><c path="String"/></version>
		<webgl public="1" set="null">
			<x path="lime.graphics.WebGLRenderContext"/>
			<haxe_doc>Access to the current WebGL render API, if available</haxe_doc>
		</webgl>
		<webgl2 public="1" set="null">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<haxe_doc>Access to the current WebGL 2 render API, if available</haxe_doc>
		</webgl2>
		<window public="1" set="null"><c path="lime.ui.Window"/></window>
		<new set="method" line="96">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<haxe_doc>The `RenderContext` provides access to rendering for a Lime `Window`.

	Only one render context type is used at once, but when `OPENGL` or
	`OPENGLES` is the context type, compatibility contexts for other
	forms of GL (such as WebGL) may be available also.</haxe_doc>
		<meta><m n=":directlyUsed"/></meta>
	</class>
	<typedef path="lime.graphics.RenderContextAttributes" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/RenderContextAttributes.hx">
		<a>
			<vsync>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether vertical-sync (VSync) is enabled</haxe_doc>
			</vsync>
			<version>
				<x path="Null"><c path="String"/></x>
				<meta><m n=":optional"/></meta>
			</version>
			<type>
				<x path="Null"><x path="lime.graphics.RenderContextType"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The type of render context requested</haxe_doc>
			</type>
			<stencil>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether a stencil buffer is enabled</haxe_doc>
			</stencil>
			<hardware>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether hardware acceleration is allowed</haxe_doc>
			</hardware>
			<depth>
				<x path="Null"><x path="Bool"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether a depth buffer is enabled</haxe_doc>
			</depth>
			<colorDepth>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>The color depth of the rendering context in bits</haxe_doc>
			</colorDepth>
			<background>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>An optional `background` property to be provided to rendering,
		a value of `null` means no background color.</haxe_doc>
			</background>
			<antialiasing>
				<x path="Null"><x path="Int"/></x>
				<meta><m n=":optional"/></meta>
				<haxe_doc>Whether to enable anti-aliasing, `0` is disabled, `2` enables
		2x2 anti-aliasing or `4` enables 4x4 anti-aliasing.</haxe_doc>
			</antialiasing>
		</a>
		<haxe_doc>Additional options possible for a render context</haxe_doc>
	</typedef>
	<abstract path="lime.graphics.RenderContextType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/RenderContextType.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<haxe_doc>An enum for possible render context types</haxe_doc>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.graphics._RenderContextType.RenderContextType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/RenderContextType.hx" private="1" module="lime.graphics.RenderContextType" extern="1">
	<CAIRO public="1" get="inline" set="null" expr="cast &quot;cairo&quot;" line="13" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "cairo"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a Cairo render context</haxe_doc>
	</CAIRO>
	<CANVAS public="1" get="inline" set="null" expr="cast &quot;canvas&quot;" line="18" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "canvas"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an HTML5 canvas render context</haxe_doc>
	</CANVAS>
	<DOM public="1" get="inline" set="null" expr="cast &quot;dom&quot;" line="23" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "dom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an HTML5 DOM render context</haxe_doc>
	</DOM>
	<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="28" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "flash"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a Flash render context</haxe_doc>
	</FLASH>
	<OPENGL public="1" get="inline" set="null" expr="cast &quot;opengl&quot;" line="33" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "opengl"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an OpenGL render context</haxe_doc>
	</OPENGL>
	<OPENGLES public="1" get="inline" set="null" expr="cast &quot;opengles&quot;" line="38" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "opengles"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes an OpenGL ES render context</haxe_doc>
	</OPENGLES>
	<WEBGL public="1" get="inline" set="null" expr="cast &quot;webgl&quot;" line="43" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "webgl"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a WebGL render context</haxe_doc>
	</WEBGL>
	<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="48" static="1">
		<x path="lime.graphics.RenderContextType"/>
		<meta>
			<m n=":value"><e>cast "custom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Describes a custom render context</haxe_doc>
	</CUSTOM>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._RenderContextType.RenderContextType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/RenderContextType.hx" private="1" module="lime.graphics.RenderContextType" extern="1">
		<CAIRO public="1" get="inline" set="null" expr="cast &quot;cairo&quot;" line="13" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "cairo"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a Cairo render context</haxe_doc>
		</CAIRO>
		<CANVAS public="1" get="inline" set="null" expr="cast &quot;canvas&quot;" line="18" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "canvas"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an HTML5 canvas render context</haxe_doc>
		</CANVAS>
		<DOM public="1" get="inline" set="null" expr="cast &quot;dom&quot;" line="23" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "dom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an HTML5 DOM render context</haxe_doc>
		</DOM>
		<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="28" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "flash"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a Flash render context</haxe_doc>
		</FLASH>
		<OPENGL public="1" get="inline" set="null" expr="cast &quot;opengl&quot;" line="33" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "opengl"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an OpenGL render context</haxe_doc>
		</OPENGL>
		<OPENGLES public="1" get="inline" set="null" expr="cast &quot;opengles&quot;" line="38" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "opengles"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes an OpenGL ES render context</haxe_doc>
		</OPENGLES>
		<WEBGL public="1" get="inline" set="null" expr="cast &quot;webgl&quot;" line="43" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "webgl"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a WebGL render context</haxe_doc>
		</WEBGL>
		<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="48" static="1">
			<x path="lime.graphics.RenderContextType"/>
			<meta>
				<m n=":value"><e>cast "custom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Describes a custom render context</haxe_doc>
		</CUSTOM>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.graphics.WebGL2RenderContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/WebGL2RenderContext.hx">
		<from>
			<icast><d/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
			<icast field="fromGL"><x path="Class"><c path="lime.graphics.opengl.GL"/></x></icast>
		</from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<haxe_doc>The `WebGL2RenderContext` allows access to WebGL 2 features when OpenGL, OpenGL ES
	or WebGL is the render context type of the `Window`, and the current context supports
	WebGL 2 features.

	Using a WebGL context on a desktop platform enables support for cross-platform
	code that should run on all platforms (when using hardware acceleration), though support
	for WebGL 2 features are more limited than WebGL, and require an OpenGL ES 3.0 compatible
	desktop or mobile context.

	You can convert from `lime.graphics.RenderContext`, `lime.graphics.OpenGLRenderContext`,
	`lime.graphics.OpenGLES3RenderContext` or `lime.graphics.opengl.GL`, and can convert to
	`lime.graphics.WebGLRenderContext` directly if desired:

	```haxe
	var webgl2:WebGL2RenderContext = window.context;
	var webgl2:WebGL2RenderContext = gl;
	var webgl2:WebGL2RenderContext = gles3;
	var webgl2:WebGL2RenderContext = GL;

	var webgl:WebGLRenderContext = webgl2;
	```</haxe_doc>
		<meta><m n=":access"><e>lime.graphics.RenderContext</e></m></meta>
		<impl><class path="lime.graphics._WebGL2RenderContext.WebGL2RenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/WebGL2RenderContext.hx" private="1" module="lime.graphics.WebGL2RenderContext">
	<__tempPointer expr="new BytePointer()" line="380" static="1">
		<x path="lime.utils.BytePointer"/>
		<meta><m n=":value"><e>new BytePointer()</e></m></meta>
	</__tempPointer>
	<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BUFFER_BIT>
	<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BUFFER_BIT>
	<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_BUFFER_BIT>
	<POINTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POINTS>
	<LINES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINES>
	<LINE_LOOP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_LOOP>
	<LINE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_STRIP>
	<TRIANGLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLES>
	<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_STRIP>
	<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRIANGLE_FAN>
	<ZERO public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ZERO>
	<ONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE>
	<SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_COLOR>
	<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_COLOR>
	<SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA>
	<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_SRC_ALPHA>
	<DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_ALPHA>
	<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_ALPHA>
	<DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DST_COLOR>
	<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_DST_COLOR>
	<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRC_ALPHA_SATURATE>
	<FUNC_ADD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_ADD>
	<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION>
	<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_RGB>
	<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_EQUATION_ALPHA>
	<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_SUBTRACT>
	<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FUNC_REVERSE_SUBTRACT>
	<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_RGB>
	<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_RGB>
	<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_DST_ALPHA>
	<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_SRC_ALPHA>
	<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_COLOR>
	<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_COLOR>
	<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONSTANT_ALPHA>
	<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ONE_MINUS_CONSTANT_ALPHA>
	<BLEND_COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND_COLOR>
	<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER>
	<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER>
	<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ARRAY_BUFFER_BINDING>
	<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ELEMENT_ARRAY_BUFFER_BINDING>
	<STREAM_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_DRAW>
	<STATIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_DRAW>
	<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_DRAW>
	<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_SIZE>
	<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BUFFER_USAGE>
	<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_VERTEX_ATTRIB>
	<FRONT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT>
	<BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BACK>
	<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_AND_BACK>
	<CULL_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE>
	<BLEND public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLEND>
	<DITHER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DITHER>
	<STENCIL_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_TEST>
	<DEPTH_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_TEST>
	<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_TEST>
	<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FILL>
	<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_ALPHA_TO_COVERAGE>
	<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE>
	<NO_ERROR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NO_ERROR>
	<INVALID_ENUM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_ENUM>
	<INVALID_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_VALUE>
	<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_OPERATION>
	<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OUT_OF_MEMORY>
	<CW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CW>
	<CCW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CCW>
	<LINE_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINE_WIDTH>
	<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_POINT_SIZE_RANGE>
	<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALIASED_LINE_WIDTH_RANGE>
	<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CULL_FACE_MODE>
	<FRONT_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRONT_FACE>
	<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_RANGE>
	<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_WRITEMASK>
	<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_CLEAR_VALUE>
	<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_FUNC>
	<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_CLEAR_VALUE>
	<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FUNC>
	<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_FAIL>
	<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_FAIL>
	<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_PASS_DEPTH_PASS>
	<STENCIL_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_REF>
	<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_VALUE_MASK>
	<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_WRITEMASK>
	<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FUNC>
	<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_FAIL>
	<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_FAIL>
	<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_PASS_DEPTH_PASS>
	<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_REF>
	<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_VALUE_MASK>
	<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BACK_WRITEMASK>
	<VIEWPORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VIEWPORT>
	<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SCISSOR_BOX>
	<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_CLEAR_VALUE>
	<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_WRITEMASK>
	<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ALIGNMENT>
	<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ALIGNMENT>
	<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_SIZE>
	<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VIEWPORT_DIMS>
	<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SUBPIXEL_BITS>
	<RED_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_BITS>
	<GREEN_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREEN_BITS>
	<BLUE_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BLUE_BITS>
	<ALPHA_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA_BITS>
	<DEPTH_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_BITS>
	<STENCIL_BITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_BITS>
	<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_UNITS>
	<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</POLYGON_OFFSET_FACTOR>
	<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D>
	<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_BUFFERS>
	<SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLES>
	<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_VALUE>
	<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLE_COVERAGE_INVERT>
	<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPRESSED_TEXTURE_FORMATS>
	<DONT_CARE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DONT_CARE>
	<FASTEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FASTEST>
	<NICEST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NICEST>
	<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GENERATE_MIPMAP_HINT>
	<BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BYTE>
	<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_BYTE>
	<SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHORT>
	<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT>
	<INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT>
	<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT>
	<FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT>
	<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT>
	<ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALPHA>
	<RGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB>
	<RGBA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA>
	<LUMINANCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE>
	<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LUMINANCE_ALPHA>
	<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_4_4_4_4>
	<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_5_5_1>
	<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_SHORT_5_6_5>
	<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER>
	<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_SHADER>
	<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_ATTRIBS>
	<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_VECTORS>
	<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_VECTORS>
	<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_IMAGE_UNITS>
	<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_VECTORS>
	<SHADER_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADER_TYPE>
	<DELETE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DELETE_STATUS>
	<LINK_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINK_STATUS>
	<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VALIDATE_STATUS>
	<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ATTACHED_SHADERS>
	<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORMS>
	<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_ATTRIBUTES>
	<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SHADING_LANGUAGE_VERSION>
	<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_PROGRAM>
	<NEVER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEVER>
	<LESS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LESS>
	<EQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</EQUAL>
	<LEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LEQUAL>
	<GREATER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GREATER>
	<NOTEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NOTEQUAL>
	<GEQUAL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</GEQUAL>
	<ALWAYS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALWAYS>
	<KEEP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</KEEP>
	<REPLACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPLACE>
	<INCR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR>
	<DECR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR>
	<INVERT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVERT>
	<INCR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INCR_WRAP>
	<DECR_WRAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DECR_WRAP>
	<VENDOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VENDOR>
	<RENDERER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERER>
	<VERSION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERSION>
	<NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST>
	<LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR>
	<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_NEAREST>
	<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_NEAREST>
	<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NEAREST_MIPMAP_LINEAR>
	<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LINEAR_MIPMAP_LINEAR>
	<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAG_FILTER>
	<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_FILTER>
	<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_S>
	<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_T>
	<TEXTURE_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D>
	<TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE>
	<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP>
	<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_CUBE_MAP>
	<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_X>
	<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_X>
	<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Y>
	<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_POSITIVE_Z>
	<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CUBE_MAP_TEXTURE_SIZE>
	<TEXTURE0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE0>
	<TEXTURE1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE1>
	<TEXTURE2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE2>
	<TEXTURE3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE3>
	<TEXTURE4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE4>
	<TEXTURE5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE5>
	<TEXTURE6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE6>
	<TEXTURE7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE7>
	<TEXTURE8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE8>
	<TEXTURE9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE9>
	<TEXTURE10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE10>
	<TEXTURE11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE11>
	<TEXTURE12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE12>
	<TEXTURE13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE13>
	<TEXTURE14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE14>
	<TEXTURE15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE15>
	<TEXTURE16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE16>
	<TEXTURE17 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE17>
	<TEXTURE18 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE18>
	<TEXTURE19 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE19>
	<TEXTURE20 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE20>
	<TEXTURE21 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE21>
	<TEXTURE22 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE22>
	<TEXTURE23 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE23>
	<TEXTURE24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE24>
	<TEXTURE25 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE25>
	<TEXTURE26 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE26>
	<TEXTURE27 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE27>
	<TEXTURE28 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE28>
	<TEXTURE29 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE29>
	<TEXTURE30 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE30>
	<TEXTURE31 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE31>
	<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_TEXTURE>
	<REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</REPEAT>
	<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CLAMP_TO_EDGE>
	<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIRRORED_REPEAT>
	<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC2>
	<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC3>
	<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_VEC4>
	<INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC2>
	<INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC3>
	<INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_VEC4>
	<BOOL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL>
	<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC2>
	<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC3>
	<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BOOL_VEC4>
	<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2>
	<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3>
	<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4>
	<SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D>
	<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE>
	<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_ENABLED>
	<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_SIZE>
	<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_STRIDE>
	<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_TYPE>
	<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_POINTER>
	<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPILE_STATUS>
	<LOW_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_FLOAT>
	<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_FLOAT>
	<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_FLOAT>
	<LOW_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</LOW_INT>
	<MEDIUM_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MEDIUM_INT>
	<HIGH_INT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HIGH_INT>
	<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER>
	<RGBA4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA4>
	<RGB5_A1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB5_A1>
	<RGB565 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB565>
	<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT16>
	<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX>
	<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_INDEX8>
	<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL>
	<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_WIDTH>
	<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_HEIGHT>
	<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_INTERNAL_FORMAT>
	<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_RED_SIZE>
	<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_GREEN_SIZE>
	<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BLUE_SIZE>
	<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_ALPHA_SIZE>
	<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_DEPTH_SIZE>
	<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_STENCIL_SIZE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT0>
	<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_ATTACHMENT>
	<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL_ATTACHMENT>
	<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_STENCIL_ATTACHMENT>
	<NONE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</NONE>
	<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_COMPLETE>
	<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_UNSUPPORTED>
	<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_BINDING>
	<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_BINDING>
	<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_RENDERBUFFER_SIZE>
	<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_FRAMEBUFFER_OPERATION>
	<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_FLIP_Y_WEBGL>
	<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONTEXT_LOST_WEBGL>
	<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</BROWSER_DEFAULT_WEBGL>
	<READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_BUFFER>
	<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_ROW_LENGTH>
	<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_ROWS>
	<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_PIXELS>
	<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_ROW_LENGTH>
	<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_ROWS>
	<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PACK_SKIP_PIXELS>
	<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_3D>
	<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_SKIP_IMAGES>
	<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNPACK_IMAGE_HEIGHT>
	<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_3D_TEXTURE_SIZE>
	<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_VERTICES>
	<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENTS_INDICES>
	<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TEXTURE_LOD_BIAS>
	<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_COMPONENTS>
	<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ARRAY_TEXTURE_LAYERS>
	<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN_PROGRAM_TEXEL_OFFSET>
	<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_PROGRAM_TEXEL_OFFSET>
	<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VARYING_COMPONENTS>
	<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAGMENT_SHADER_DERIVATIVE_HINT>
	<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RASTERIZER_DISCARD>
	<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ARRAY_BINDING>
	<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_OUTPUT_COMPONENTS>
	<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_INPUT_COMPONENTS>
	<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SERVER_WAIT_TIMEOUT>
	<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_ELEMENT_INDEX>
	<RED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED>
	<RGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8>
	<RGBA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8>
	<RGB10_A2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2>
	<TEXTURE_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_3D>
	<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_WRAP_R>
	<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MIN_LOD>
	<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LOD>
	<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BASE_LEVEL>
	<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_MAX_LEVEL>
	<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_MODE>
	<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_COMPARE_FUNC>
	<SRGB public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB>
	<SRGB8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8>
	<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SRGB8_ALPHA8>
	<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COMPARE_REF_TO_TEXTURE>
	<RGBA32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32F>
	<RGB32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32F>
	<RGBA16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16F>
	<RGB16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16F>
	<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_2D_ARRAY>
	<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_BINDING_2D_ARRAY>
	<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R11F_G11F_B10F>
	<RGB9_E5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB9_E5>
	<RGBA32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32UI>
	<RGB32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32UI>
	<RGBA16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16UI>
	<RGB16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16UI>
	<RGBA8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8UI>
	<RGB8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8UI>
	<RGBA32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA32I>
	<RGB32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB32I>
	<RGBA16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA16I>
	<RGB16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB16I>
	<RGBA8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8I>
	<RGB8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8I>
	<RED_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RED_INTEGER>
	<RGB_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB_INTEGER>
	<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA_INTEGER>
	<R8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8>
	<RG8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8>
	<R16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16F>
	<R32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32F>
	<RG16F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16F>
	<RG32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32F>
	<R8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8I>
	<R8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8UI>
	<R16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16I>
	<R16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R16UI>
	<R32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32I>
	<R32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R32UI>
	<RG8I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8I>
	<RG8UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8UI>
	<RG16I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16I>
	<RG16UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG16UI>
	<RG32I public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32I>
	<RG32UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG32UI>
	<R8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</R8_SNORM>
	<RG8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG8_SNORM>
	<RGB8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB8_SNORM>
	<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGBA8_SNORM>
	<RGB10_A2UI public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RGB10_A2UI>
	<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_FORMAT>
	<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TEXTURE_IMMUTABLE_LEVELS>
	<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_2_10_10_10_REV>
	<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_10F_11F_11F_REV>
	<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_5_9_9_9_REV>
	<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_32_UNSIGNED_INT_24_8_REV>
	<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_24_8>
	<HALF_FLOAT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</HALF_FLOAT>
	<RG public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG>
	<RG_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RG_INTEGER>
	<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_2_10_10_10_REV>
	<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CURRENT_QUERY>
	<QUERY_RESULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT>
	<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</QUERY_RESULT_AVAILABLE>
	<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED>
	<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ANY_SAMPLES_PASSED_CONSERVATIVE>
	<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_DRAW_BUFFERS>
	<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER0>
	<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER1>
	<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER2>
	<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER3>
	<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER4>
	<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER5>
	<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER6>
	<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER7>
	<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER8>
	<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER9>
	<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER10>
	<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER11>
	<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER12>
	<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER13>
	<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER14>
	<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_BUFFER15>
	<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COLOR_ATTACHMENTS>
	<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT1>
	<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT2>
	<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT3>
	<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT4>
	<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT5>
	<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT6>
	<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT7>
	<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT8>
	<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT9>
	<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT10>
	<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT11>
	<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT12>
	<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT13>
	<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT14>
	<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR_ATTACHMENT15>
	<SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_3D>
	<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_SHADOW>
	<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY>
	<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_2D_ARRAY_SHADOW>
	<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_CUBE_SHADOW>
	<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D>
	<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_3D>
	<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_CUBE>
	<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INT_SAMPLER_2D_ARRAY>
	<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D>
	<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_3D>
	<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_CUBE>
	<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_SAMPLES>
	<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SAMPLER_BINDING>
	<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER>
	<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER>
	<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_PACK_BUFFER_BINDING>
	<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</PIXEL_UNPACK_BUFFER_BINDING>
	<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER>
	<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER>
	<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_READ_BUFFER_BINDING>
	<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COPY_WRITE_BUFFER_BINDING>
	<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x3>
	<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT2x4>
	<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x2>
	<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT3x4>
	<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x2>
	<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FLOAT_MAT4x3>
	<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC2>
	<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC3>
	<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_INT_VEC4>
	<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNED_NORMALIZED>
	<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNED_NORMALIZED>
	<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_INTEGER>
	<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</VERTEX_ATTRIB_ARRAY_DIVISOR>
	<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_MODE>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_VARYINGS>
	<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_START>
	<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INTERLEAVED_ATTRIBS>
	<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SEPARATE_ATTRIBS>
	<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER>
	<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK>
	<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_PAUSED>
	<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_ACTIVE>
	<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TRANSFORM_FEEDBACK_BINDING>
	<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_DEFAULT>
	<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH24_STENCIL8>
	<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER_BINDING>
	<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER>
	<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DRAW_FRAMEBUFFER>
	<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</READ_FRAMEBUFFER_BINDING>
	<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</RENDERBUFFER_SAMPLES>
	<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER>
	<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_BINDING>
	<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_START>
	<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_SIZE>
	<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_VERTEX_UNIFORM_BLOCKS>
	<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_FRAGMENT_UNIFORM_BLOCKS>
	<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_UNIFORM_BLOCKS>
	<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BUFFER_BINDINGS>
	<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_UNIFORM_BLOCK_SIZE>
	<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ACTIVE_UNIFORM_BLOCKS>
	<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_TYPE>
	<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_SIZE>
	<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_INDEX>
	<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_OFFSET>
	<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_ARRAY_STRIDE>
	<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_MATRIX_STRIDE>
	<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_IS_ROW_MAJOR>
	<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_BINDING>
	<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_DATA_SIZE>
	<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</OBJECT_TYPE>
	<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_CONDITION>
	<SYNC_STATUS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_STATUS>
	<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLAGS>
	<SYNC_FENCE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FENCE>
	<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_GPU_COMMANDS_COMPLETE>
	<UNSIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</UNSIGNALED>
	<SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SIGNALED>
	<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</ALREADY_SIGNALED>
	<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_EXPIRED>
	<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</CONDITION_SATISFIED>
	<WAIT_FAILED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</WAIT_FAILED>
	<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</SYNC_FLUSH_COMMANDS_BIT>
	<COLOR public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</COLOR>
	<DEPTH public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH>
	<STENCIL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STENCIL>
	<MIN public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MIN>
	<MAX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX>
	<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT24>
	<STREAM_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_READ>
	<STREAM_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STREAM_COPY>
	<STATIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_READ>
	<STATIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</STATIC_COPY>
	<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_READ>
	<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DYNAMIC_COPY>
	<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH_COMPONENT32F>
	<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</DEPTH32F_STENCIL8>
	<INVALID_INDEX public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</INVALID_INDEX>
	<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</TIMEOUT_IGNORED>
	<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<get_DEPTH_BUFFER_BIT get="inline" set="null" line="1003" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_BUFFER_BIT>
	<get_STENCIL_BUFFER_BIT get="inline" set="null" line="1004" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BUFFER_BIT>
	<get_COLOR_BUFFER_BIT get="inline" set="null" line="1005" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_BUFFER_BIT>
	<get_POINTS get="inline" set="null" line="1006" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POINTS>
	<get_LINES get="inline" set="null" line="1007" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINES>
	<get_LINE_LOOP get="inline" set="null" line="1008" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_LOOP>
	<get_LINE_STRIP get="inline" set="null" line="1009" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_STRIP>
	<get_TRIANGLES get="inline" set="null" line="1010" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLES>
	<get_TRIANGLE_STRIP get="inline" set="null" line="1011" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLE_STRIP>
	<get_TRIANGLE_FAN get="inline" set="null" line="1012" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRIANGLE_FAN>
	<get_ZERO get="inline" set="null" line="1013" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ZERO>
	<get_ONE get="inline" set="null" line="1014" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE>
	<get_SRC_COLOR get="inline" set="null" line="1015" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_COLOR>
	<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="1016" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_SRC_COLOR>
	<get_SRC_ALPHA get="inline" set="null" line="1017" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_ALPHA>
	<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="1018" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_SRC_ALPHA>
	<get_DST_ALPHA get="inline" set="null" line="1019" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DST_ALPHA>
	<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="1020" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_DST_ALPHA>
	<get_DST_COLOR get="inline" set="null" line="1021" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DST_COLOR>
	<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="1022" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_DST_COLOR>
	<get_SRC_ALPHA_SATURATE get="inline" set="null" line="1023" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRC_ALPHA_SATURATE>
	<get_FUNC_ADD get="inline" set="null" line="1024" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_ADD>
	<get_BLEND_EQUATION get="inline" set="null" line="1025" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION>
	<get_BLEND_EQUATION_RGB get="inline" set="null" line="1026" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION_RGB>
	<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="1027" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_EQUATION_ALPHA>
	<get_FUNC_SUBTRACT get="inline" set="null" line="1028" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_SUBTRACT>
	<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="1029" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FUNC_REVERSE_SUBTRACT>
	<get_BLEND_DST_RGB get="inline" set="null" line="1030" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_DST_RGB>
	<get_BLEND_SRC_RGB get="inline" set="null" line="1031" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_SRC_RGB>
	<get_BLEND_DST_ALPHA get="inline" set="null" line="1032" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_DST_ALPHA>
	<get_BLEND_SRC_ALPHA get="inline" set="null" line="1033" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_SRC_ALPHA>
	<get_CONSTANT_COLOR get="inline" set="null" line="1034" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONSTANT_COLOR>
	<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="1035" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_CONSTANT_COLOR>
	<get_CONSTANT_ALPHA get="inline" set="null" line="1036" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONSTANT_ALPHA>
	<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="1037" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ONE_MINUS_CONSTANT_ALPHA>
	<get_BLEND_COLOR get="inline" set="null" line="1038" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND_COLOR>
	<get_ARRAY_BUFFER get="inline" set="null" line="1039" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ARRAY_BUFFER>
	<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="1040" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ELEMENT_ARRAY_BUFFER>
	<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="1041" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ARRAY_BUFFER_BINDING>
	<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="1042" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ELEMENT_ARRAY_BUFFER_BINDING>
	<get_STREAM_DRAW get="inline" set="null" line="1043" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_DRAW>
	<get_STATIC_DRAW get="inline" set="null" line="1044" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_DRAW>
	<get_DYNAMIC_DRAW get="inline" set="null" line="1045" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_DRAW>
	<get_BUFFER_SIZE get="inline" set="null" line="1046" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BUFFER_SIZE>
	<get_BUFFER_USAGE get="inline" set="null" line="1047" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BUFFER_USAGE>
	<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="1048" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_VERTEX_ATTRIB>
	<get_FRONT get="inline" set="null" line="1049" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT>
	<get_BACK get="inline" set="null" line="1050" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BACK>
	<get_FRONT_AND_BACK get="inline" set="null" line="1051" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT_AND_BACK>
	<get_CULL_FACE get="inline" set="null" line="1052" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CULL_FACE>
	<get_BLEND get="inline" set="null" line="1053" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLEND>
	<get_DITHER get="inline" set="null" line="1054" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DITHER>
	<get_STENCIL_TEST get="inline" set="null" line="1055" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_TEST>
	<get_DEPTH_TEST get="inline" set="null" line="1056" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_TEST>
	<get_SCISSOR_TEST get="inline" set="null" line="1057" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SCISSOR_TEST>
	<get_POLYGON_OFFSET_FILL get="inline" set="null" line="1058" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_FILL>
	<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="1059" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_ALPHA_TO_COVERAGE>
	<get_SAMPLE_COVERAGE get="inline" set="null" line="1060" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE>
	<get_NO_ERROR get="inline" set="null" line="1061" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NO_ERROR>
	<get_INVALID_ENUM get="inline" set="null" line="1062" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_ENUM>
	<get_INVALID_VALUE get="inline" set="null" line="1063" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_VALUE>
	<get_INVALID_OPERATION get="inline" set="null" line="1064" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_OPERATION>
	<get_OUT_OF_MEMORY get="inline" set="null" line="1065" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_OUT_OF_MEMORY>
	<get_CW get="inline" set="null" line="1066" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CW>
	<get_CCW get="inline" set="null" line="1067" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CCW>
	<get_LINE_WIDTH get="inline" set="null" line="1068" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINE_WIDTH>
	<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="1069" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALIASED_POINT_SIZE_RANGE>
	<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="1070" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALIASED_LINE_WIDTH_RANGE>
	<get_CULL_FACE_MODE get="inline" set="null" line="1071" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CULL_FACE_MODE>
	<get_FRONT_FACE get="inline" set="null" line="1072" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRONT_FACE>
	<get_DEPTH_RANGE get="inline" set="null" line="1073" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_RANGE>
	<get_DEPTH_WRITEMASK get="inline" set="null" line="1074" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_WRITEMASK>
	<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="1075" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_CLEAR_VALUE>
	<get_DEPTH_FUNC get="inline" set="null" line="1076" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_FUNC>
	<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="1077" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_CLEAR_VALUE>
	<get_STENCIL_FUNC get="inline" set="null" line="1078" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_FUNC>
	<get_STENCIL_FAIL get="inline" set="null" line="1079" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_FAIL>
	<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="1080" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_PASS_DEPTH_FAIL>
	<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="1081" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_PASS_DEPTH_PASS>
	<get_STENCIL_REF get="inline" set="null" line="1082" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_REF>
	<get_STENCIL_VALUE_MASK get="inline" set="null" line="1083" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_VALUE_MASK>
	<get_STENCIL_WRITEMASK get="inline" set="null" line="1084" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_WRITEMASK>
	<get_STENCIL_BACK_FUNC get="inline" set="null" line="1085" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_FUNC>
	<get_STENCIL_BACK_FAIL get="inline" set="null" line="1086" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="1087" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_PASS_DEPTH_FAIL>
	<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="1088" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_PASS_DEPTH_PASS>
	<get_STENCIL_BACK_REF get="inline" set="null" line="1089" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_REF>
	<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="1090" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_VALUE_MASK>
	<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="1091" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BACK_WRITEMASK>
	<get_VIEWPORT get="inline" set="null" line="1092" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VIEWPORT>
	<get_SCISSOR_BOX get="inline" set="null" line="1093" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SCISSOR_BOX>
	<get_COLOR_CLEAR_VALUE get="inline" set="null" line="1094" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_CLEAR_VALUE>
	<get_COLOR_WRITEMASK get="inline" set="null" line="1095" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_WRITEMASK>
	<get_UNPACK_ALIGNMENT get="inline" set="null" line="1096" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_ALIGNMENT>
	<get_PACK_ALIGNMENT get="inline" set="null" line="1097" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_ALIGNMENT>
	<get_MAX_TEXTURE_SIZE get="inline" set="null" line="1098" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_SIZE>
	<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="1099" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VIEWPORT_DIMS>
	<get_SUBPIXEL_BITS get="inline" set="null" line="1100" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SUBPIXEL_BITS>
	<get_RED_BITS get="inline" set="null" line="1101" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED_BITS>
	<get_GREEN_BITS get="inline" set="null" line="1102" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GREEN_BITS>
	<get_BLUE_BITS get="inline" set="null" line="1103" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BLUE_BITS>
	<get_ALPHA_BITS get="inline" set="null" line="1104" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALPHA_BITS>
	<get_DEPTH_BITS get="inline" set="null" line="1105" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_BITS>
	<get_STENCIL_BITS get="inline" set="null" line="1106" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_BITS>
	<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="1107" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_UNITS>
	<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="1108" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_POLYGON_OFFSET_FACTOR>
	<get_TEXTURE_BINDING_2D get="inline" set="null" line="1109" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_2D>
	<get_SAMPLE_BUFFERS get="inline" set="null" line="1110" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_BUFFERS>
	<get_SAMPLES get="inline" set="null" line="1111" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLES>
	<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="1112" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE_VALUE>
	<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="1113" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLE_COVERAGE_INVERT>
	<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="1114" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPRESSED_TEXTURE_FORMATS>
	<get_DONT_CARE get="inline" set="null" line="1115" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DONT_CARE>
	<get_FASTEST get="inline" set="null" line="1116" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FASTEST>
	<get_NICEST get="inline" set="null" line="1117" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NICEST>
	<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="1118" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GENERATE_MIPMAP_HINT>
	<get_BYTE get="inline" set="null" line="1119" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BYTE>
	<get_UNSIGNED_BYTE get="inline" set="null" line="1120" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_BYTE>
	<get_SHORT get="inline" set="null" line="1121" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHORT>
	<get_UNSIGNED_SHORT get="inline" set="null" line="1122" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT>
	<get_INT get="inline" set="null" line="1123" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT>
	<get_UNSIGNED_INT get="inline" set="null" line="1124" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT>
	<get_FLOAT get="inline" set="null" line="1125" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT>
	<get_DEPTH_COMPONENT get="inline" set="null" line="1126" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT>
	<get_ALPHA get="inline" set="null" line="1127" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALPHA>
	<get_RGB get="inline" set="null" line="1128" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB>
	<get_RGBA get="inline" set="null" line="1129" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA>
	<get_LUMINANCE get="inline" set="null" line="1130" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LUMINANCE>
	<get_LUMINANCE_ALPHA get="inline" set="null" line="1131" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LUMINANCE_ALPHA>
	<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="1132" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_4_4_4_4>
	<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="1133" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_5_5_5_1>
	<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="1134" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_SHORT_5_6_5>
	<get_FRAGMENT_SHADER get="inline" set="null" line="1135" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAGMENT_SHADER>
	<get_VERTEX_SHADER get="inline" set="null" line="1136" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_SHADER>
	<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="1137" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_ATTRIBS>
	<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="1138" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_VECTORS>
	<get_MAX_VARYING_VECTORS get="inline" set="null" line="1139" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VARYING_VECTORS>
	<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1140" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
	<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1141" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
	<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1142" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_IMAGE_UNITS>
	<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="1143" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_VECTORS>
	<get_SHADER_TYPE get="inline" set="null" line="1144" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHADER_TYPE>
	<get_DELETE_STATUS get="inline" set="null" line="1145" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DELETE_STATUS>
	<get_LINK_STATUS get="inline" set="null" line="1146" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINK_STATUS>
	<get_VALIDATE_STATUS get="inline" set="null" line="1147" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VALIDATE_STATUS>
	<get_ATTACHED_SHADERS get="inline" set="null" line="1148" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ATTACHED_SHADERS>
	<get_ACTIVE_UNIFORMS get="inline" set="null" line="1149" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_UNIFORMS>
	<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="1150" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_ATTRIBUTES>
	<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="1151" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SHADING_LANGUAGE_VERSION>
	<get_CURRENT_PROGRAM get="inline" set="null" line="1152" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_PROGRAM>
	<get_NEVER get="inline" set="null" line="1153" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEVER>
	<get_LESS get="inline" set="null" line="1154" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LESS>
	<get_EQUAL get="inline" set="null" line="1155" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_EQUAL>
	<get_LEQUAL get="inline" set="null" line="1156" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LEQUAL>
	<get_GREATER get="inline" set="null" line="1157" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GREATER>
	<get_NOTEQUAL get="inline" set="null" line="1158" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NOTEQUAL>
	<get_GEQUAL get="inline" set="null" line="1159" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_GEQUAL>
	<get_ALWAYS get="inline" set="null" line="1160" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALWAYS>
	<get_KEEP get="inline" set="null" line="1161" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_KEEP>
	<get_REPLACE get="inline" set="null" line="1162" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_REPLACE>
	<get_INCR get="inline" set="null" line="1163" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INCR>
	<get_DECR get="inline" set="null" line="1164" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DECR>
	<get_INVERT get="inline" set="null" line="1165" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVERT>
	<get_INCR_WRAP get="inline" set="null" line="1166" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INCR_WRAP>
	<get_DECR_WRAP get="inline" set="null" line="1167" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DECR_WRAP>
	<get_VENDOR get="inline" set="null" line="1168" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VENDOR>
	<get_RENDERER get="inline" set="null" line="1169" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERER>
	<get_VERSION get="inline" set="null" line="1170" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERSION>
	<get_NEAREST get="inline" set="null" line="1171" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST>
	<get_LINEAR get="inline" set="null" line="1172" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR>
	<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="1173" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST_MIPMAP_NEAREST>
	<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="1174" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR_MIPMAP_NEAREST>
	<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="1175" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NEAREST_MIPMAP_LINEAR>
	<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="1176" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LINEAR_MIPMAP_LINEAR>
	<get_TEXTURE_MAG_FILTER get="inline" set="null" line="1177" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAG_FILTER>
	<get_TEXTURE_MIN_FILTER get="inline" set="null" line="1178" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MIN_FILTER>
	<get_TEXTURE_WRAP_S get="inline" set="null" line="1179" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_S>
	<get_TEXTURE_WRAP_T get="inline" set="null" line="1180" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_T>
	<get_TEXTURE_2D get="inline" set="null" line="1181" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_2D>
	<get_TEXTURE get="inline" set="null" line="1182" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE>
	<get_TEXTURE_CUBE_MAP get="inline" set="null" line="1183" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP>
	<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="1184" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_CUBE_MAP>
	<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="1185" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_X>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="1186" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="1187" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="1188" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
	<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="1189" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
	<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="1190" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
	<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="1191" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_CUBE_MAP_TEXTURE_SIZE>
	<get_TEXTURE0 get="inline" set="null" line="1192" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE0>
	<get_TEXTURE1 get="inline" set="null" line="1193" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE1>
	<get_TEXTURE2 get="inline" set="null" line="1194" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE2>
	<get_TEXTURE3 get="inline" set="null" line="1195" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE3>
	<get_TEXTURE4 get="inline" set="null" line="1196" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE4>
	<get_TEXTURE5 get="inline" set="null" line="1197" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE5>
	<get_TEXTURE6 get="inline" set="null" line="1198" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE6>
	<get_TEXTURE7 get="inline" set="null" line="1199" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE7>
	<get_TEXTURE8 get="inline" set="null" line="1200" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE8>
	<get_TEXTURE9 get="inline" set="null" line="1201" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE9>
	<get_TEXTURE10 get="inline" set="null" line="1202" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE10>
	<get_TEXTURE11 get="inline" set="null" line="1203" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE11>
	<get_TEXTURE12 get="inline" set="null" line="1204" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE12>
	<get_TEXTURE13 get="inline" set="null" line="1205" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE13>
	<get_TEXTURE14 get="inline" set="null" line="1206" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE14>
	<get_TEXTURE15 get="inline" set="null" line="1207" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE15>
	<get_TEXTURE16 get="inline" set="null" line="1208" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE16>
	<get_TEXTURE17 get="inline" set="null" line="1209" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE17>
	<get_TEXTURE18 get="inline" set="null" line="1210" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE18>
	<get_TEXTURE19 get="inline" set="null" line="1211" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE19>
	<get_TEXTURE20 get="inline" set="null" line="1212" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE20>
	<get_TEXTURE21 get="inline" set="null" line="1213" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE21>
	<get_TEXTURE22 get="inline" set="null" line="1214" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE22>
	<get_TEXTURE23 get="inline" set="null" line="1215" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE23>
	<get_TEXTURE24 get="inline" set="null" line="1216" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE24>
	<get_TEXTURE25 get="inline" set="null" line="1217" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE25>
	<get_TEXTURE26 get="inline" set="null" line="1218" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE26>
	<get_TEXTURE27 get="inline" set="null" line="1219" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE27>
	<get_TEXTURE28 get="inline" set="null" line="1220" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE28>
	<get_TEXTURE29 get="inline" set="null" line="1221" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE29>
	<get_TEXTURE30 get="inline" set="null" line="1222" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE30>
	<get_TEXTURE31 get="inline" set="null" line="1223" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE31>
	<get_ACTIVE_TEXTURE get="inline" set="null" line="1224" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_TEXTURE>
	<get_REPEAT get="inline" set="null" line="1225" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_REPEAT>
	<get_CLAMP_TO_EDGE get="inline" set="null" line="1226" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CLAMP_TO_EDGE>
	<get_MIRRORED_REPEAT get="inline" set="null" line="1227" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIRRORED_REPEAT>
	<get_FLOAT_VEC2 get="inline" set="null" line="1228" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC2>
	<get_FLOAT_VEC3 get="inline" set="null" line="1229" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC3>
	<get_FLOAT_VEC4 get="inline" set="null" line="1230" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_VEC4>
	<get_INT_VEC2 get="inline" set="null" line="1231" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC2>
	<get_INT_VEC3 get="inline" set="null" line="1232" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC3>
	<get_INT_VEC4 get="inline" set="null" line="1233" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_VEC4>
	<get_BOOL get="inline" set="null" line="1234" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL>
	<get_BOOL_VEC2 get="inline" set="null" line="1235" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC2>
	<get_BOOL_VEC3 get="inline" set="null" line="1236" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC3>
	<get_BOOL_VEC4 get="inline" set="null" line="1237" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BOOL_VEC4>
	<get_FLOAT_MAT2 get="inline" set="null" line="1238" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2>
	<get_FLOAT_MAT3 get="inline" set="null" line="1239" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3>
	<get_FLOAT_MAT4 get="inline" set="null" line="1240" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4>
	<get_SAMPLER_2D get="inline" set="null" line="1241" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D>
	<get_SAMPLER_CUBE get="inline" set="null" line="1242" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_CUBE>
	<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="1243" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_ENABLED>
	<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="1244" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_SIZE>
	<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="1245" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_STRIDE>
	<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="1246" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_TYPE>
	<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="1247" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="1248" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_POINTER>
	<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="1249" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
	<get_COMPILE_STATUS get="inline" set="null" line="1250" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPILE_STATUS>
	<get_LOW_FLOAT get="inline" set="null" line="1251" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LOW_FLOAT>
	<get_MEDIUM_FLOAT get="inline" set="null" line="1252" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MEDIUM_FLOAT>
	<get_HIGH_FLOAT get="inline" set="null" line="1253" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HIGH_FLOAT>
	<get_LOW_INT get="inline" set="null" line="1254" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_LOW_INT>
	<get_MEDIUM_INT get="inline" set="null" line="1255" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MEDIUM_INT>
	<get_HIGH_INT get="inline" set="null" line="1256" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HIGH_INT>
	<get_FRAMEBUFFER get="inline" set="null" line="1257" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER>
	<get_RENDERBUFFER get="inline" set="null" line="1258" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER>
	<get_RGBA4 get="inline" set="null" line="1259" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA4>
	<get_RGB5_A1 get="inline" set="null" line="1260" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB5_A1>
	<get_RGB565 get="inline" set="null" line="1261" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB565>
	<get_DEPTH_COMPONENT16 get="inline" set="null" line="1262" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT16>
	<get_STENCIL_INDEX get="inline" set="null" line="1263" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_INDEX>
	<get_STENCIL_INDEX8 get="inline" set="null" line="1264" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_INDEX8>
	<get_DEPTH_STENCIL get="inline" set="null" line="1265" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_STENCIL>
	<get_RENDERBUFFER_WIDTH get="inline" set="null" line="1266" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_WIDTH>
	<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="1267" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_HEIGHT>
	<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="1268" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_INTERNAL_FORMAT>
	<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="1269" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_RED_SIZE>
	<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="1270" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_GREEN_SIZE>
	<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="1271" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_BLUE_SIZE>
	<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="1272" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_ALPHA_SIZE>
	<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="1273" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_DEPTH_SIZE>
	<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="1274" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_STENCIL_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="1275" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="1276" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="1277" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="1278" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
	<get_COLOR_ATTACHMENT0 get="inline" set="null" line="1279" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT0>
	<get_DEPTH_ATTACHMENT get="inline" set="null" line="1280" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_ATTACHMENT>
	<get_STENCIL_ATTACHMENT get="inline" set="null" line="1281" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL_ATTACHMENT>
	<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="1282" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_STENCIL_ATTACHMENT>
	<get_NONE get="inline" set="null" line="1283" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_NONE>
	<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="1284" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_COMPLETE>
	<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="1285" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="1286" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
	<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="1287" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
	<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="1288" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_UNSUPPORTED>
	<get_FRAMEBUFFER_BINDING get="inline" set="null" line="1289" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_BINDING get="inline" set="null" line="1290" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_BINDING>
	<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="1291" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_RENDERBUFFER_SIZE>
	<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="1292" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_FRAMEBUFFER_OPERATION>
	<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="1293" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_FLIP_Y_WEBGL>
	<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="1294" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
	<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="1295" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONTEXT_LOST_WEBGL>
	<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="1296" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
	<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="1297" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_BROWSER_DEFAULT_WEBGL>
	<get_READ_BUFFER get="inline" set="null" line="1299" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_BUFFER>
	<get_UNPACK_ROW_LENGTH get="inline" set="null" line="1300" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_ROW_LENGTH>
	<get_UNPACK_SKIP_ROWS get="inline" set="null" line="1301" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_ROWS>
	<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="1302" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_PIXELS>
	<get_PACK_ROW_LENGTH get="inline" set="null" line="1303" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_ROW_LENGTH>
	<get_PACK_SKIP_ROWS get="inline" set="null" line="1304" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_SKIP_ROWS>
	<get_PACK_SKIP_PIXELS get="inline" set="null" line="1305" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PACK_SKIP_PIXELS>
	<get_TEXTURE_BINDING_3D get="inline" set="null" line="1306" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_3D>
	<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="1307" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_SKIP_IMAGES>
	<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="1308" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNPACK_IMAGE_HEIGHT>
	<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="1309" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_3D_TEXTURE_SIZE>
	<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="1310" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENTS_VERTICES>
	<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="1311" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENTS_INDICES>
	<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="1312" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TEXTURE_LOD_BIAS>
	<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1313" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
	<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1314" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="1315" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ARRAY_TEXTURE_LAYERS>
	<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="1316" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIN_PROGRAM_TEXEL_OFFSET>
	<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="1317" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_PROGRAM_TEXEL_OFFSET>
	<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="1318" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VARYING_COMPONENTS>
	<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="1319" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
	<get_RASTERIZER_DISCARD get="inline" set="null" line="1320" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RASTERIZER_DISCARD>
	<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="1321" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ARRAY_BINDING>
	<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="1322" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_OUTPUT_COMPONENTS>
	<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="1323" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_INPUT_COMPONENTS>
	<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="1324" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_SERVER_WAIT_TIMEOUT>
	<get_MAX_ELEMENT_INDEX get="inline" set="null" line="1325" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_ELEMENT_INDEX>
	<get_RED get="inline" set="null" line="1327" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED>
	<get_RGB8 get="inline" set="null" line="1328" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8>
	<get_RGBA8 get="inline" set="null" line="1329" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8>
	<get_RGB10_A2 get="inline" set="null" line="1330" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB10_A2>
	<get_TEXTURE_3D get="inline" set="null" line="1331" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_3D>
	<get_TEXTURE_WRAP_R get="inline" set="null" line="1332" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_WRAP_R>
	<get_TEXTURE_MIN_LOD get="inline" set="null" line="1333" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MIN_LOD>
	<get_TEXTURE_MAX_LOD get="inline" set="null" line="1334" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAX_LOD>
	<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="1335" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BASE_LEVEL>
	<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="1336" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_MAX_LEVEL>
	<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="1337" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_COMPARE_MODE>
	<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="1338" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_COMPARE_FUNC>
	<get_SRGB get="inline" set="null" line="1339" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB>
	<get_SRGB8 get="inline" set="null" line="1340" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB8>
	<get_SRGB8_ALPHA8 get="inline" set="null" line="1341" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SRGB8_ALPHA8>
	<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="1342" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COMPARE_REF_TO_TEXTURE>
	<get_RGBA32F get="inline" set="null" line="1343" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32F>
	<get_RGB32F get="inline" set="null" line="1344" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32F>
	<get_RGBA16F get="inline" set="null" line="1345" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16F>
	<get_RGB16F get="inline" set="null" line="1346" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16F>
	<get_TEXTURE_2D_ARRAY get="inline" set="null" line="1347" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_2D_ARRAY>
	<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="1348" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_BINDING_2D_ARRAY>
	<get_R11F_G11F_B10F get="inline" set="null" line="1349" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R11F_G11F_B10F>
	<get_RGB9_E5 get="inline" set="null" line="1350" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB9_E5>
	<get_RGBA32UI get="inline" set="null" line="1351" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32UI>
	<get_RGB32UI get="inline" set="null" line="1352" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32UI>
	<get_RGBA16UI get="inline" set="null" line="1353" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16UI>
	<get_RGB16UI get="inline" set="null" line="1354" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16UI>
	<get_RGBA8UI get="inline" set="null" line="1355" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8UI>
	<get_RGB8UI get="inline" set="null" line="1356" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8UI>
	<get_RGBA32I get="inline" set="null" line="1357" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA32I>
	<get_RGB32I get="inline" set="null" line="1358" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB32I>
	<get_RGBA16I get="inline" set="null" line="1359" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA16I>
	<get_RGB16I get="inline" set="null" line="1360" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB16I>
	<get_RGBA8I get="inline" set="null" line="1361" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8I>
	<get_RGB8I get="inline" set="null" line="1362" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8I>
	<get_RED_INTEGER get="inline" set="null" line="1363" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RED_INTEGER>
	<get_RGB_INTEGER get="inline" set="null" line="1364" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB_INTEGER>
	<get_RGBA_INTEGER get="inline" set="null" line="1365" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA_INTEGER>
	<get_R8 get="inline" set="null" line="1366" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8>
	<get_RG8 get="inline" set="null" line="1367" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8>
	<get_R16F get="inline" set="null" line="1368" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16F>
	<get_R32F get="inline" set="null" line="1369" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32F>
	<get_RG16F get="inline" set="null" line="1370" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16F>
	<get_RG32F get="inline" set="null" line="1371" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32F>
	<get_R8I get="inline" set="null" line="1372" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8I>
	<get_R8UI get="inline" set="null" line="1373" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8UI>
	<get_R16I get="inline" set="null" line="1374" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16I>
	<get_R16UI get="inline" set="null" line="1375" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R16UI>
	<get_R32I get="inline" set="null" line="1376" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32I>
	<get_R32UI get="inline" set="null" line="1377" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R32UI>
	<get_RG8I get="inline" set="null" line="1378" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8I>
	<get_RG8UI get="inline" set="null" line="1379" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8UI>
	<get_RG16I get="inline" set="null" line="1380" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16I>
	<get_RG16UI get="inline" set="null" line="1381" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG16UI>
	<get_RG32I get="inline" set="null" line="1382" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32I>
	<get_RG32UI get="inline" set="null" line="1383" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG32UI>
	<get_R8_SNORM get="inline" set="null" line="1384" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_R8_SNORM>
	<get_RG8_SNORM get="inline" set="null" line="1385" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG8_SNORM>
	<get_RGB8_SNORM get="inline" set="null" line="1386" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB8_SNORM>
	<get_RGBA8_SNORM get="inline" set="null" line="1387" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGBA8_SNORM>
	<get_RGB10_A2UI get="inline" set="null" line="1388" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RGB10_A2UI>
	<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="1389" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_IMMUTABLE_FORMAT>
	<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="1390" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TEXTURE_IMMUTABLE_LEVELS>
	<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="1392" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_2_10_10_10_REV>
	<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="1393" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_10F_11F_11F_REV>
	<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="1394" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_5_9_9_9_REV>
	<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="1395" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
	<get_UNSIGNED_INT_24_8 get="inline" set="null" line="1396" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_24_8>
	<get_HALF_FLOAT get="inline" set="null" line="1397" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_HALF_FLOAT>
	<get_RG get="inline" set="null" line="1398" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG>
	<get_RG_INTEGER get="inline" set="null" line="1399" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RG_INTEGER>
	<get_INT_2_10_10_10_REV get="inline" set="null" line="1400" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_2_10_10_10_REV>
	<get_CURRENT_QUERY get="inline" set="null" line="1402" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CURRENT_QUERY>
	<get_QUERY_RESULT get="inline" set="null" line="1403" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_QUERY_RESULT>
	<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="1404" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_QUERY_RESULT_AVAILABLE>
	<get_ANY_SAMPLES_PASSED get="inline" set="null" line="1405" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ANY_SAMPLES_PASSED>
	<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="1406" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
	<get_MAX_DRAW_BUFFERS get="inline" set="null" line="1408" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_DRAW_BUFFERS>
	<get_DRAW_BUFFER0 get="inline" set="null" line="1409" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER0>
	<get_DRAW_BUFFER1 get="inline" set="null" line="1410" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER1>
	<get_DRAW_BUFFER2 get="inline" set="null" line="1411" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER2>
	<get_DRAW_BUFFER3 get="inline" set="null" line="1412" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER3>
	<get_DRAW_BUFFER4 get="inline" set="null" line="1413" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER4>
	<get_DRAW_BUFFER5 get="inline" set="null" line="1414" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER5>
	<get_DRAW_BUFFER6 get="inline" set="null" line="1415" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER6>
	<get_DRAW_BUFFER7 get="inline" set="null" line="1416" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER7>
	<get_DRAW_BUFFER8 get="inline" set="null" line="1417" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER8>
	<get_DRAW_BUFFER9 get="inline" set="null" line="1418" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER9>
	<get_DRAW_BUFFER10 get="inline" set="null" line="1419" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER10>
	<get_DRAW_BUFFER11 get="inline" set="null" line="1420" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER11>
	<get_DRAW_BUFFER12 get="inline" set="null" line="1421" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER12>
	<get_DRAW_BUFFER13 get="inline" set="null" line="1422" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER13>
	<get_DRAW_BUFFER14 get="inline" set="null" line="1423" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER14>
	<get_DRAW_BUFFER15 get="inline" set="null" line="1424" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_BUFFER15>
	<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="1425" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COLOR_ATTACHMENTS>
	<get_COLOR_ATTACHMENT1 get="inline" set="null" line="1426" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT1>
	<get_COLOR_ATTACHMENT2 get="inline" set="null" line="1427" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT2>
	<get_COLOR_ATTACHMENT3 get="inline" set="null" line="1428" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT3>
	<get_COLOR_ATTACHMENT4 get="inline" set="null" line="1429" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT4>
	<get_COLOR_ATTACHMENT5 get="inline" set="null" line="1430" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT5>
	<get_COLOR_ATTACHMENT6 get="inline" set="null" line="1431" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT6>
	<get_COLOR_ATTACHMENT7 get="inline" set="null" line="1432" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT7>
	<get_COLOR_ATTACHMENT8 get="inline" set="null" line="1433" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT8>
	<get_COLOR_ATTACHMENT9 get="inline" set="null" line="1434" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT9>
	<get_COLOR_ATTACHMENT10 get="inline" set="null" line="1435" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT10>
	<get_COLOR_ATTACHMENT11 get="inline" set="null" line="1436" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT11>
	<get_COLOR_ATTACHMENT12 get="inline" set="null" line="1437" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT12>
	<get_COLOR_ATTACHMENT13 get="inline" set="null" line="1438" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT13>
	<get_COLOR_ATTACHMENT14 get="inline" set="null" line="1439" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT14>
	<get_COLOR_ATTACHMENT15 get="inline" set="null" line="1440" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR_ATTACHMENT15>
	<get_SAMPLER_3D get="inline" set="null" line="1442" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_3D>
	<get_SAMPLER_2D_SHADOW get="inline" set="null" line="1443" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_SHADOW>
	<get_SAMPLER_2D_ARRAY get="inline" set="null" line="1444" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_ARRAY>
	<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="1445" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_2D_ARRAY_SHADOW>
	<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="1446" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_CUBE_SHADOW>
	<get_INT_SAMPLER_2D get="inline" set="null" line="1447" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_2D>
	<get_INT_SAMPLER_3D get="inline" set="null" line="1448" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_3D>
	<get_INT_SAMPLER_CUBE get="inline" set="null" line="1449" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_CUBE>
	<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1450" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INT_SAMPLER_2D_ARRAY>
	<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="1451" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_2D>
	<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="1452" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_3D>
	<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="1453" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_CUBE>
	<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1454" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
	<get_MAX_SAMPLES get="inline" set="null" line="1455" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_SAMPLES>
	<get_SAMPLER_BINDING get="inline" set="null" line="1456" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SAMPLER_BINDING>
	<get_PIXEL_PACK_BUFFER get="inline" set="null" line="1458" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_PACK_BUFFER>
	<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="1459" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_UNPACK_BUFFER>
	<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="1460" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_PACK_BUFFER_BINDING>
	<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="1461" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_PIXEL_UNPACK_BUFFER_BINDING>
	<get_COPY_READ_BUFFER get="inline" set="null" line="1462" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_READ_BUFFER>
	<get_COPY_WRITE_BUFFER get="inline" set="null" line="1463" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_WRITE_BUFFER>
	<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="1464" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_READ_BUFFER_BINDING>
	<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="1465" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COPY_WRITE_BUFFER_BINDING>
	<get_FLOAT_MAT2x3 get="inline" set="null" line="1467" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2x3>
	<get_FLOAT_MAT2x4 get="inline" set="null" line="1468" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT2x4>
	<get_FLOAT_MAT3x2 get="inline" set="null" line="1469" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3x2>
	<get_FLOAT_MAT3x4 get="inline" set="null" line="1470" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT3x4>
	<get_FLOAT_MAT4x2 get="inline" set="null" line="1471" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4x2>
	<get_FLOAT_MAT4x3 get="inline" set="null" line="1472" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FLOAT_MAT4x3>
	<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="1473" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC2>
	<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="1474" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC3>
	<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="1475" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_INT_VEC4>
	<get_UNSIGNED_NORMALIZED get="inline" set="null" line="1476" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNED_NORMALIZED>
	<get_SIGNED_NORMALIZED get="inline" set="null" line="1477" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SIGNED_NORMALIZED>
	<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="1479" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_INTEGER>
	<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="1480" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
	<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="1482" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="1483" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
	<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="1484" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_VARYINGS>
	<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="1485" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_START>
	<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="1486" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
	<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="1487" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
	<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="1488" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
	<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="1489" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
	<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="1490" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INTERLEAVED_ATTRIBS>
	<get_SEPARATE_ATTRIBS get="inline" set="null" line="1491" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SEPARATE_ATTRIBS>
	<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="1492" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER>
	<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="1493" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
	<get_TRANSFORM_FEEDBACK get="inline" set="null" line="1494" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK>
	<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="1495" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_PAUSED>
	<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="1496" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_ACTIVE>
	<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="1497" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TRANSFORM_FEEDBACK_BINDING>
	<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="1499" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
	<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="1500" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
	<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="1501" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="1502" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="1503" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="1504" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="1505" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
	<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="1506" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
	<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="1507" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_DEFAULT>
	<get_DEPTH24_STENCIL8 get="inline" set="null" line="1508" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH24_STENCIL8>
	<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="1509" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_FRAMEBUFFER_BINDING>
	<get_READ_FRAMEBUFFER get="inline" set="null" line="1510" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_FRAMEBUFFER>
	<get_DRAW_FRAMEBUFFER get="inline" set="null" line="1511" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DRAW_FRAMEBUFFER>
	<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="1512" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_READ_FRAMEBUFFER_BINDING>
	<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="1513" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_RENDERBUFFER_SAMPLES>
	<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="1514" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
	<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="1515" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
	<get_UNIFORM_BUFFER get="inline" set="null" line="1517" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER>
	<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="1518" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_BINDING>
	<get_UNIFORM_BUFFER_START get="inline" set="null" line="1519" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_START>
	<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="1520" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_SIZE>
	<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="1521" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_VERTEX_UNIFORM_BLOCKS>
	<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="1522" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
	<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="1523" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_UNIFORM_BLOCKS>
	<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="1524" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_UNIFORM_BUFFER_BINDINGS>
	<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="1525" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_UNIFORM_BLOCK_SIZE>
	<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1526" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
	<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1527" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
	<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="1528" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
	<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="1529" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ACTIVE_UNIFORM_BLOCKS>
	<get_UNIFORM_TYPE get="inline" set="null" line="1530" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_TYPE>
	<get_UNIFORM_SIZE get="inline" set="null" line="1531" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_SIZE>
	<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="1532" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_INDEX>
	<get_UNIFORM_OFFSET get="inline" set="null" line="1533" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_OFFSET>
	<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="1534" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_ARRAY_STRIDE>
	<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="1535" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_MATRIX_STRIDE>
	<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="1536" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_IS_ROW_MAJOR>
	<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="1537" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_BINDING>
	<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="1538" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_DATA_SIZE>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="1539" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
	<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="1540" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
	<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="1541" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
	<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="1542" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
	<get_OBJECT_TYPE get="inline" set="null" line="1544" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_OBJECT_TYPE>
	<get_SYNC_CONDITION get="inline" set="null" line="1545" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_CONDITION>
	<get_SYNC_STATUS get="inline" set="null" line="1546" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_STATUS>
	<get_SYNC_FLAGS get="inline" set="null" line="1547" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FLAGS>
	<get_SYNC_FENCE get="inline" set="null" line="1548" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FENCE>
	<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="1549" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_GPU_COMMANDS_COMPLETE>
	<get_UNSIGNALED get="inline" set="null" line="1550" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_UNSIGNALED>
	<get_SIGNALED get="inline" set="null" line="1551" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SIGNALED>
	<get_ALREADY_SIGNALED get="inline" set="null" line="1552" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ALREADY_SIGNALED>
	<get_TIMEOUT_EXPIRED get="inline" set="null" line="1553" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TIMEOUT_EXPIRED>
	<get_CONDITION_SATISFIED get="inline" set="null" line="1554" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_CONDITION_SATISFIED>
	<get_WAIT_FAILED get="inline" set="null" line="1555" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_WAIT_FAILED>
	<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="1556" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_SYNC_FLUSH_COMMANDS_BIT>
	<get_COLOR get="inline" set="null" line="1558" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_COLOR>
	<get_DEPTH get="inline" set="null" line="1559" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH>
	<get_STENCIL get="inline" set="null" line="1560" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STENCIL>
	<get_MIN get="inline" set="null" line="1561" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MIN>
	<get_MAX get="inline" set="null" line="1562" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX>
	<get_DEPTH_COMPONENT24 get="inline" set="null" line="1563" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT24>
	<get_STREAM_READ get="inline" set="null" line="1564" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_READ>
	<get_STREAM_COPY get="inline" set="null" line="1565" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STREAM_COPY>
	<get_STATIC_READ get="inline" set="null" line="1566" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_READ>
	<get_STATIC_COPY get="inline" set="null" line="1567" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_STATIC_COPY>
	<get_DYNAMIC_READ get="inline" set="null" line="1568" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_READ>
	<get_DYNAMIC_COPY get="inline" set="null" line="1569" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DYNAMIC_COPY>
	<get_DEPTH_COMPONENT32F get="inline" set="null" line="1570" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH_COMPONENT32F>
	<get_DEPTH32F_STENCIL8 get="inline" set="null" line="1571" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_DEPTH32F_STENCIL8>
	<get_INVALID_INDEX get="inline" set="null" line="1572" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_INVALID_INDEX>
	<get_TIMEOUT_IGNORED get="inline" set="null" line="1573" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_TIMEOUT_IGNORED>
	<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="1574" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
	<activeTexture public="1" get="inline" set="null" line="1577" static="1">
		<f a="this:texture">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</activeTexture>
	<attachShader public="1" get="inline" set="null" line="1584" static="1">
		<f a="this:program:shader">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</attachShader>
	<beginQuery public="1" get="inline" set="null" line="1591" static="1">
		<f a="this:target:query">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginQuery>
	<beginTransformFeedback public="1" get="inline" set="null" line="1598" static="1">
		<f a="this:primitiveNode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</beginTransformFeedback>
	<bindAttribLocation public="1" get="inline" set="null" line="1605" static="1">
		<f a="this:program:index:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindAttribLocation>
	<bindBuffer public="1" get="inline" set="null" line="1612" static="1">
		<f a="this:target:buffer">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBuffer>
	<bindBufferBase public="1" get="inline" set="null" line="1619" static="1">
		<f a="this:target:index:buffer">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferBase>
	<bindBufferRange public="1" get="inline" set="null" line="1626" static="1">
		<f a="this:target:index:buffer:offset:size">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindBufferRange>
	<bindFramebuffer public="1" get="inline" set="null" line="1633" static="1">
		<f a="this:target:framebuffer">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindFramebuffer>
	<bindRenderbuffer public="1" get="inline" set="null" line="1640" static="1">
		<f a="this:target:renderbuffer">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindRenderbuffer>
	<bindSampler public="1" get="inline" set="null" line="1647" static="1">
		<f a="this:unit:sampler">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindSampler>
	<bindTexture public="1" get="inline" set="null" line="1654" static="1">
		<f a="this:target:texture">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTexture>
	<bindTransformFeedback public="1" get="inline" set="null" line="1661" static="1">
		<f a="this:target:transformFeedback">
			<d/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindTransformFeedback>
	<bindVertexArray public="1" get="inline" set="null" line="1668" static="1">
		<f a="this:vertexArray">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bindVertexArray>
	<blendColor public="1" get="inline" set="null" line="1675" static="1">
		<f a="this:red:green:blue:alpha">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendColor>
	<blendEquation public="1" get="inline" set="null" line="1682" static="1">
		<f a="this:mode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquation>
	<blendEquationSeparate public="1" get="inline" set="null" line="1689" static="1">
		<f a="this:modeRGB:modeAlpha">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendEquationSeparate>
	<blendFunc public="1" get="inline" set="null" line="1696" static="1">
		<f a="this:sfactor:dfactor">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFunc>
	<blendFuncSeparate public="1" get="inline" set="null" line="1703" static="1">
		<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blendFuncSeparate>
	<blitFramebuffer public="1" get="inline" set="null" line="1710" static="1">
		<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</blitFramebuffer>
	<bufferData public="1" get="inline" set="null" line="1720" static="1">
		<f a="this:target:srcData:usage:?srcOffset:?length">
			<d/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="1733" static="1">
		<f a="this:target:offset:srcData:?srcOffset:?length">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<checkFramebufferStatus public="1" get="inline" set="null" line="1743" static="1">
		<f a="this:target">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</checkFramebufferStatus>
	<clear public="1" get="inline" set="null" line="1750" static="1">
		<f a="this:mask">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clear>
	<clearBufferfi public="1" get="inline" set="null" line="1757" static="1">
		<f a="this:buffer:drawbuffer:depth:stencil">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferfi>
	<clearBufferfv public="1" set="method" line="1764" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset" v="::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</clearBufferfv>
	<clearBufferiv public="1" set="method" line="1772" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferiv>
	<clearBufferuiv public="1" set="method" line="1780" static="1">
		<f a="this:buffer:drawbuffer:values:?srcOffset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearBufferuiv>
	<clearColor public="1" get="inline" set="null" line="1788" static="1">
		<f a="this:red:green:blue:alpha">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearColor>
	<clearDepth public="1" get="inline" set="null" line="1795" static="1">
		<f a="this:depth">
			<d/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearDepth>
	<clearStencil public="1" get="inline" set="null" line="1802" static="1">
		<f a="this:s">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clearStencil>
	<clientWaitSync public="1" get="inline" set="null" line="1809" static="1">
		<f a="this:sync:flags:timeout">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</clientWaitSync>
	<colorMask public="1" get="inline" set="null" line="1816" static="1">
		<f a="this:red:green:blue:alpha">
			<d/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</colorMask>
	<compileShader public="1" get="inline" set="null" line="1823" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compileShader>
	<compressedTexImage2D public="1" get="inline" set="null" line="1833" static="1">
		<f a="this:target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexImage3D public="1" set="method" line="1843" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexImage3D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="1855" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<compressedTexSubImage3D public="1" get="inline" set="null" line="1865" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::::0:">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</compressedTexSubImage3D>
	<copyBufferSubData public="1" get="inline" set="null" line="1874" static="1">
		<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyBufferSubData>
	<copyTexImage2D public="1" get="inline" set="null" line="1881" static="1">
		<f a="this:target:level:internalformat:x:y:width:height:border">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexImage2D>
	<copyTexSubImage2D public="1" get="inline" set="null" line="1888" static="1">
		<f a="this:target:level:xoffset:yoffset:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage2D>
	<copyTexSubImage3D public="1" get="inline" set="null" line="1895" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</copyTexSubImage3D>
	<createBuffer public="1" get="inline" set="null" line="1902" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLBuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createBuffer>
	<createFramebuffer public="1" get="inline" set="null" line="1909" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createFramebuffer>
	<createProgram public="1" get="inline" set="null" line="1916" static="1">
		<f a="this">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createProgram>
	<createQuery public="1" get="inline" set="null" line="1923" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createQuery>
	<createRenderbuffer public="1" get="inline" set="null" line="1930" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createRenderbuffer>
	<createSampler public="1" get="inline" set="null" line="1937" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createSampler>
	<createShader public="1" get="inline" set="null" line="1944" static="1">
		<f a="this:type">
			<d/>
			<x path="Int"/>
			<x path="lime.graphics.opengl.GLShader"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createShader>
	<createTexture public="1" get="inline" set="null" line="1951" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLTexture"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTexture>
	<createTransformFeedback public="1" get="inline" set="null" line="1958" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createTransformFeedback>
	<createVertexArray public="1" get="inline" set="null" line="1965" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
		</f>
		<meta><m n=":impl"/></meta>
	</createVertexArray>
	<cullFace public="1" get="inline" set="null" line="1972" static="1">
		<f a="this:mode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</cullFace>
	<deleteBuffer public="1" get="inline" set="null" line="1979" static="1">
		<f a="this:buffer">
			<d/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteBuffer>
	<deleteFramebuffer public="1" get="inline" set="null" line="1986" static="1">
		<f a="this:framebuffer">
			<d/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteFramebuffer>
	<deleteProgram public="1" get="inline" set="null" line="1993" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteProgram>
	<deleteQuery public="1" get="inline" set="null" line="2000" static="1">
		<f a="this:query">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteQuery>
	<deleteRenderbuffer public="1" get="inline" set="null" line="2007" static="1">
		<f a="this:renderbuffer">
			<d/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteRenderbuffer>
	<deleteSampler public="1" get="inline" set="null" line="2014" static="1">
		<f a="this:sampler">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSampler>
	<deleteShader public="1" get="inline" set="null" line="2021" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteShader>
	<deleteSync public="1" get="inline" set="null" line="2028" static="1">
		<f a="this:sync">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteSync>
	<deleteTexture public="1" get="inline" set="null" line="2035" static="1">
		<f a="this:texture">
			<d/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTexture>
	<deleteTransformFeedback public="1" get="inline" set="null" line="2042" static="1">
		<f a="this:transformFeedback">
			<d/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteTransformFeedback>
	<deleteVertexArray public="1" get="inline" set="null" line="2049" static="1">
		<f a="this:vertexArray">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</deleteVertexArray>
	<depthFunc public="1" get="inline" set="null" line="2056" static="1">
		<f a="this:func">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthFunc>
	<depthMask public="1" get="inline" set="null" line="2063" static="1">
		<f a="this:flag">
			<d/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthMask>
	<depthRange public="1" get="inline" set="null" line="2070" static="1">
		<f a="this:zNear:zFar">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</depthRange>
	<detachShader public="1" get="inline" set="null" line="2077" static="1">
		<f a="this:program:shader">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</detachShader>
	<disable public="1" get="inline" set="null" line="2084" static="1">
		<f a="this:cap">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disable>
	<disableVertexAttribArray public="1" get="inline" set="null" line="2091" static="1">
		<f a="this:index">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</disableVertexAttribArray>
	<drawArrays public="1" get="inline" set="null" line="2098" static="1">
		<f a="this:mode:first:count">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArrays>
	<drawArraysInstanced public="1" get="inline" set="null" line="2105" static="1">
		<f a="this:mode:first:count:instanceCount">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawArraysInstanced>
	<drawBuffers public="1" get="inline" set="null" line="2112" static="1">
		<f a="this:buffers">
			<d/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawBuffers>
	<drawElements public="1" get="inline" set="null" line="2119" static="1">
		<f a="this:mode:count:type:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElements>
	<drawElementsInstanced public="1" get="inline" set="null" line="2126" static="1">
		<f a="this:mode:count:type:offset:instanceCount">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawElementsInstanced>
	<drawRangeElements public="1" get="inline" set="null" line="2133" static="1">
		<f a="this:mode:start:end:count:type:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</drawRangeElements>
	<enable public="1" get="inline" set="null" line="2140" static="1">
		<f a="this:cap">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enable>
	<enableVertexAttribArray public="1" get="inline" set="null" line="2147" static="1">
		<f a="this:index">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</enableVertexAttribArray>
	<endQuery public="1" get="inline" set="null" line="2154" static="1">
		<f a="this:target">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endQuery>
	<endTransformFeedback public="1" get="inline" set="null" line="2161" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</endTransformFeedback>
	<fenceSync public="1" get="inline" set="null" line="2168" static="1">
		<f a="this:condition:flags">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLSync"/>
		</f>
		<meta><m n=":impl"/></meta>
	</fenceSync>
	<finish public="1" get="inline" set="null" line="2175" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</finish>
	<flush public="1" get="inline" set="null" line="2182" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</flush>
	<framebufferRenderbuffer public="1" get="inline" set="null" line="2189" static="1">
		<f a="this:target:attachment:renderbuffertarget:renderbuffer">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferRenderbuffer>
	<framebufferTexture2D public="1" get="inline" set="null" line="2196" static="1">
		<f a="this:target:attachment:textarget:texture:level">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTexture2D>
	<framebufferTextureLayer public="1" get="inline" set="null" line="2203" static="1">
		<f a="this:target:attachment:texture:level:layer">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</framebufferTextureLayer>
	<frontFace public="1" get="inline" set="null" line="2210" static="1">
		<f a="this:mode">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</frontFace>
	<generateMipmap public="1" get="inline" set="null" line="2217" static="1">
		<f a="this:target">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</generateMipmap>
	<getActiveAttrib public="1" get="inline" set="null" line="2224" static="1">
		<f a="this:program:index">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveAttrib>
	<getActiveUniform public="1" get="inline" set="null" line="2231" static="1">
		<f a="this:program:index">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniform>
	<getActiveUniformBlockName public="1" get="inline" set="null" line="2238" static="1">
		<f a="this:program:uniformBlockIndex">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockName>
	<getActiveUniformBlockParameter public="1" get="inline" set="null" line="2245" static="1">
		<f a="this:program:uniformBlockIndex:pname">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniformBlockParameter>
	<getActiveUniforms public="1" get="inline" set="null" line="2252" static="1">
		<f a="this:program:uniformIndices:pname">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getActiveUniforms>
	<getAttachedShaders public="1" get="inline" set="null" line="2259" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttachedShaders>
	<getAttribLocation public="1" get="inline" set="null" line="2266" static="1">
		<f a="this:program:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getAttribLocation>
	<getBufferParameter public="1" get="inline" set="null" line="2273" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferParameter>
	<getBufferSubData public="1" get="inline" set="null" line="2283" static="1">
		<f a="this:target:srcByteOffset:dstData:?srcOffset:?length">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<d/>
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getBufferSubData>
	<getContextAttributes public="1" get="inline" set="null" line="2294" static="1">
		<f a="this">
			<d/>
			<t path="lime.graphics.opengl.GLContextAttributes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getContextAttributes>
	<getError public="1" get="inline" set="null" line="2301" static="1">
		<f a="this">
			<d/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getError>
	<getExtension public="1" get="inline" set="null" line="2308" static="1">
		<f a="this:name">
			<d/>
			<c path="String"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getExtension>
	<getFragDataLocation public="1" get="inline" set="null" line="2315" static="1">
		<f a="this:program:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFragDataLocation>
	<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="2322" static="1">
		<f a="this:target:attachment:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getFramebufferAttachmentParameter>
	<getIndexedParameter public="1" get="inline" set="null" line="2329" static="1">
		<f a="this:target:index">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getIndexedParameter>
	<getInternalformatParameter public="1" get="inline" set="null" line="2336" static="1">
		<f a="this:target:internalformat:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getInternalformatParameter>
	<getParameter public="1" get="inline" set="null" line="2343" static="1">
		<f a="this:pname">
			<d/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getParameter>
	<getProgramInfoLog public="1" get="inline" set="null" line="2350" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramInfoLog>
	<getProgramParameter public="1" get="inline" set="null" line="2357" static="1">
		<f a="this:program:pname">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getProgramParameter>
	<getQuery public="1" get="inline" set="null" line="2364" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLQuery"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQuery>
	<getQueryParameter public="1" get="inline" set="null" line="2371" static="1">
		<f a="this:query:pname">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getQueryParameter>
	<getRenderbufferParameter public="1" get="inline" set="null" line="2378" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getRenderbufferParameter>
	<getSamplerParameter public="1" get="inline" set="null" line="2385" static="1">
		<f a="this:sampler:pname">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSamplerParameter>
	<getShaderInfoLog public="1" get="inline" set="null" line="2392" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderInfoLog>
	<getShaderParameter public="1" get="inline" set="null" line="2399" static="1">
		<f a="this:shader:pname">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderParameter>
	<getShaderPrecisionFormat public="1" get="inline" set="null" line="2406" static="1">
		<f a="this:shadertype:precisiontype">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderPrecisionFormat>
	<getShaderSource public="1" get="inline" set="null" line="2413" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getShaderSource>
	<getSupportedExtensions public="1" get="inline" set="null" line="2420" static="1">
		<f a="this">
			<d/>
			<c path="Array"><c path="String"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getSupportedExtensions>
	<getSyncParameter public="1" get="inline" set="null" line="2427" static="1">
		<f a="this:sync:pname">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getSyncParameter>
	<getTexParameter public="1" get="inline" set="null" line="2434" static="1">
		<f a="this:target:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTexParameter>
	<getTransformFeedbackVarying public="1" get="inline" set="null" line="2441" static="1">
		<f a="this:program:index">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<t path="lime.graphics.opengl.GLActiveInfo"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getTransformFeedbackVarying>
	<getUniform public="1" get="inline" set="null" line="2448" static="1">
		<f a="this:program:location">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniform>
	<getUniformBlockIndex public="1" get="inline" set="null" line="2455" static="1">
		<f a="this:program:uniformBlockName">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformBlockIndex>
	<getUniformIndices public="1" get="inline" set="null" line="2462" static="1">
		<f a="this:program:uniformNames">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<c path="Array"><x path="Int"/></c>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformIndices>
	<getUniformLocation public="1" get="inline" set="null" line="2469" static="1">
		<f a="this:program:name">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="String"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getUniformLocation>
	<getVertexAttrib public="1" get="inline" set="null" line="2476" static="1">
		<f a="this:index:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttrib>
	<getVertexAttribOffset public="1" get="inline" set="null" line="2483" static="1">
		<f a="this:index:pname">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta><m n=":impl"/></meta>
	</getVertexAttribOffset>
	<hint public="1" get="inline" set="null" line="2490" static="1">
		<f a="this:target:mode">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</hint>
	<invalidateFramebuffer public="1" get="inline" set="null" line="2497" static="1">
		<f a="this:target:attachments">
			<d/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateFramebuffer>
	<invalidateSubFramebuffer public="1" get="inline" set="null" line="2504" static="1">
		<f a="this:target:attachments:x:y:width:height">
			<d/>
			<x path="Int"/>
			<c path="Array"><x path="Int"/></c>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</invalidateSubFramebuffer>
	<isBuffer public="1" get="inline" set="null" line="2511" static="1">
		<f a="this:buffer">
			<d/>
			<t path="lime.graphics.opengl.GLBuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isBuffer>
	<isContextLost public="1" get="inline" set="null" line="2518" static="1">
		<f a="this">
			<d/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isContextLost>
	<isEnabled public="1" get="inline" set="null" line="2525" static="1">
		<f a="this:cap">
			<d/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isEnabled>
	<isFramebuffer public="1" get="inline" set="null" line="2532" static="1">
		<f a="this:framebuffer">
			<d/>
			<t path="lime.graphics.opengl.GLFramebuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isFramebuffer>
	<isProgram public="1" get="inline" set="null" line="2539" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isProgram>
	<isQuery public="1" get="inline" set="null" line="2546" static="1">
		<f a="this:query">
			<d/>
			<t path="lime.graphics.opengl.GLQuery"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isQuery>
	<isRenderbuffer public="1" get="inline" set="null" line="2553" static="1">
		<f a="this:renderbuffer">
			<d/>
			<t path="lime.graphics.opengl.GLRenderbuffer"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isRenderbuffer>
	<isSampler public="1" get="inline" set="null" line="2560" static="1">
		<f a="this:sampler">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSampler>
	<isShader public="1" get="inline" set="null" line="2567" static="1">
		<f a="this:shader">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isShader>
	<isSync public="1" get="inline" set="null" line="2574" static="1">
		<f a="this:sync">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isSync>
	<isTexture public="1" get="inline" set="null" line="2581" static="1">
		<f a="this:texture">
			<d/>
			<t path="lime.graphics.opengl.GLTexture"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTexture>
	<isTransformFeedback public="1" get="inline" set="null" line="2588" static="1">
		<f a="this:transformFeedback">
			<d/>
			<t path="lime.graphics.opengl.GLTransformFeedback"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isTransformFeedback>
	<isVertexArray public="1" get="inline" set="null" line="2595" static="1">
		<f a="this:vertexArray">
			<d/>
			<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
	</isVertexArray>
	<lineWidth public="1" get="inline" set="null" line="2602" static="1">
		<f a="this:width">
			<d/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</lineWidth>
	<linkProgram public="1" get="inline" set="null" line="2609" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</linkProgram>
	<pauseTransformFeedback public="1" get="inline" set="null" line="2616" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pauseTransformFeedback>
	<pixelStorei public="1" get="inline" set="null" line="2623" static="1">
		<f a="this:pname:param">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</pixelStorei>
	<polygonOffset public="1" get="inline" set="null" line="2630" static="1">
		<f a="this:factor:units">
			<d/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</polygonOffset>
	<readBuffer public="1" get="inline" set="null" line="2637" static="1">
		<f a="this:src">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readBuffer>
	<readPixels public="1" get="inline" set="null" line="2647" static="1">
		<f a="this:x:y:width:height:format:type:pixels:?dstOffset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<renderbufferStorage public="1" get="inline" set="null" line="2656" static="1">
		<f a="this:target:internalformat:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorage>
	<renderbufferStorageMultisample public="1" get="inline" set="null" line="2663" static="1">
		<f a="this:target:samples:internalformat:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</renderbufferStorageMultisample>
	<resumeTransformFeedback public="1" get="inline" set="null" line="2670" static="1">
		<f a="this">
			<d/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</resumeTransformFeedback>
	<sampleCoverage public="1" get="inline" set="null" line="2677" static="1">
		<f a="this:value:invert">
			<d/>
			<x path="Float"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</sampleCoverage>
	<samplerParameterf public="1" get="inline" set="null" line="2684" static="1">
		<f a="this:sampler:pname:param">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameterf>
	<samplerParameteri public="1" get="inline" set="null" line="2691" static="1">
		<f a="this:sampler:pname:param">
			<d/>
			<t path="lime.graphics.opengl.GLSampler"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</samplerParameteri>
	<scissor public="1" get="inline" set="null" line="2698" static="1">
		<f a="this:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</scissor>
	<shaderSource public="1" get="inline" set="null" line="2705" static="1">
		<f a="this:shader:source">
			<d/>
			<x path="lime.graphics.opengl.GLShader"/>
			<c path="String"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</shaderSource>
	<stencilFunc public="1" get="inline" set="null" line="2712" static="1">
		<f a="this:func:ref:mask">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFunc>
	<stencilFuncSeparate public="1" get="inline" set="null" line="2719" static="1">
		<f a="this:face:func:ref:mask">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilFuncSeparate>
	<stencilMask public="1" get="inline" set="null" line="2726" static="1">
		<f a="this:mask">
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMask>
	<stencilMaskSeparate public="1" get="inline" set="null" line="2733" static="1">
		<f a="this:face:mask">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilMaskSeparate>
	<stencilOp public="1" get="inline" set="null" line="2740" static="1">
		<f a="this:fail:zfail:zpass">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOp>
	<stencilOpSeparate public="1" get="inline" set="null" line="2747" static="1">
		<f a="this:face:fail:zfail:zpass">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</stencilOpSeparate>
	<texImage2D public="1" get="inline" set="null" line="2757" static="1">
		<f a="this:foo:target:level:internalformat:width:height:border:?format:?type:?srcData:?srcOffset">
			<d/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texImage3D public="1" get="inline" set="null" line="2768" static="1">
		<f a="this:target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset" v=":::::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texImage3D>
	<texStorage2D public="1" get="inline" set="null" line="2776" static="1">
		<f a="this:target:level:internalformat:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage2D>
	<texStorage3D public="1" get="inline" set="null" line="2783" static="1">
		<f a="this:target:level:internalformat:width:height:depth">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texStorage3D>
	<texParameterf public="1" get="inline" set="null" line="2790" static="1">
		<f a="this:target:pname:param">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameterf>
	<texParameteri public="1" get="inline" set="null" line="2797" static="1">
		<f a="this:target:pname:param">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texParameteri>
	<texSubImage2D public="1" get="inline" set="null" line="2807" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:?type:?srcData:?srcOffset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<d/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texSubImage2D>
	<texSubImage3D public="1" get="inline" set="null" line="2816" static="1">
		<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:srcData:?srcOffset" v="::::::::::::0">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage3D>
	<transformFeedbackVaryings public="1" get="inline" set="null" line="2824" static="1">
		<f a="this:program:varyings:bufferMode">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<c path="Array"><c path="String"/></c>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</transformFeedbackVaryings>
	<uniform1f public="1" get="inline" set="null" line="2831" static="1">
		<f a="this:location:v0">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1f>
	<uniform1fv public="1" get="inline" set="null" line="2841" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1fv>
	<uniform1i public="1" get="inline" set="null" line="2849" static="1">
		<f a="this:location:v0">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1i>
	<uniform1iv public="1" get="inline" set="null" line="2859" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1iv>
	<uniform1ui public="1" get="inline" set="null" line="2867" static="1">
		<f a="this:location:v0">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1ui>
	<uniform1uiv public="1" get="inline" set="null" line="2874" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform1uiv>
	<uniform2f public="1" get="inline" set="null" line="2881" static="1">
		<f a="this:location:v0:v1">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2f>
	<uniform2fv public="1" set="method" line="2891" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2fv>
	<uniform2i public="1" get="inline" set="null" line="2899" static="1">
		<f a="this:location:v0:v1">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2i>
	<uniform2iv public="1" get="inline" set="null" line="2909" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2iv>
	<uniform2ui public="1" get="inline" set="null" line="2917" static="1">
		<f a="this:location:v0:v1">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2ui>
	<uniform2uiv public="1" get="inline" set="null" line="2924" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform2uiv>
	<uniform3f public="1" get="inline" set="null" line="2931" static="1">
		<f a="this:location:v0:v1:v2">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3f>
	<uniform3fv public="1" get="inline" set="null" line="2941" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3fv>
	<uniform3i public="1" get="inline" set="null" line="2949" static="1">
		<f a="this:location:v0:v1:v2">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3i>
	<uniform3iv public="1" get="inline" set="null" line="2959" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3iv>
	<uniform3ui public="1" get="inline" set="null" line="2967" static="1">
		<f a="this:location:v0:v1:v2">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3ui>
	<uniform3uiv public="1" get="inline" set="null" line="2974" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform3uiv>
	<uniform4f public="1" get="inline" set="null" line="2981" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4f>
	<uniform4fv public="1" get="inline" set="null" line="2991" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4fv>
	<uniform4i public="1" get="inline" set="null" line="2999" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4i>
	<uniform4iv public="1" get="inline" set="null" line="3009" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4iv>
	<uniform4ui public="1" get="inline" set="null" line="3017" static="1">
		<f a="this:location:v0:v1:v2:v3">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4ui>
	<uniform4uiv public="1" get="inline" set="null" line="3024" static="1">
		<f a="this:location:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="lime.utils.UInt32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniform4uiv>
	<uniformBlockBinding public="1" get="inline" set="null" line="3031" static="1">
		<f a="this:program:uniformBlockIndex:uniformBlockBinding">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformBlockBinding>
	<uniformMatrix2fv public="1" get="inline" set="null" line="3041" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix2x3fv public="1" set="method" line="3055" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2x3fv>
	<uniformMatrix2x4fv public="1" set="method" line="3068" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix2x4fv>
	<uniformMatrix3fv public="1" get="inline" set="null" line="3084" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix3x2fv public="1" set="method" line="3098" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3x2fv>
	<uniformMatrix3x4fv public="1" set="method" line="3111" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix3x4fv>
	<uniformMatrix4fv public="1" get="inline" set="null" line="3127" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<uniformMatrix4x2fv public="1" set="method" line="3141" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4x2fv>
	<uniformMatrix4x3fv public="1" set="method" line="3154" static="1">
		<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
			<d/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</uniformMatrix4x3fv>
	<useProgram public="1" get="inline" set="null" line="3167" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</useProgram>
	<validateProgram public="1" get="inline" set="null" line="3174" static="1">
		<f a="this:program">
			<d/>
			<x path="lime.graphics.opengl.GLProgram"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</validateProgram>
	<vertexAttrib1f public="1" get="inline" set="null" line="3181" static="1">
		<f a="this:indx:x">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1f>
	<vertexAttrib1fv public="1" get="inline" set="null" line="3188" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib1fv>
	<vertexAttrib2f public="1" get="inline" set="null" line="3195" static="1">
		<f a="this:indx:x:y">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2f>
	<vertexAttrib2fv public="1" get="inline" set="null" line="3202" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib2fv>
	<vertexAttrib3f public="1" get="inline" set="null" line="3209" static="1">
		<f a="this:indx:x:y:z">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3f>
	<vertexAttrib3fv public="1" get="inline" set="null" line="3216" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib3fv>
	<vertexAttrib4f public="1" get="inline" set="null" line="3223" static="1">
		<f a="this:indx:x:y:z:w">
			<d/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4f>
	<vertexAttrib4fv public="1" get="inline" set="null" line="3230" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttrib4fv>
	<vertexAttribDivisor public="1" get="inline" set="null" line="3237" static="1">
		<f a="this:index:divisor">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribDivisor>
	<vertexAttribI4i public="1" get="inline" set="null" line="3244" static="1">
		<f a="this:indx:x:y:z:w">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4i>
	<vertexAttribI4iv public="1" get="inline" set="null" line="3251" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4iv>
	<vertexAttribI4ui public="1" get="inline" set="null" line="3258" static="1">
		<f a="this:indx:x:y:z:w">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4ui>
	<vertexAttribI4uiv public="1" get="inline" set="null" line="3265" static="1">
		<f a="this:indx:values">
			<d/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribI4uiv>
	<vertexAttribIPointer public="1" get="inline" set="null" line="3272" static="1">
		<f a="this:index:size:type:stride:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribIPointer>
	<vertexAttribPointer public="1" get="inline" set="null" line="3279" static="1">
		<f a="this:indx:size:type:normalized:stride:offset">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</vertexAttribPointer>
	<viewport public="1" get="inline" set="null" line="3286" static="1">
		<f a="this:x:y:width:height">
			<d/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</viewport>
	<waitSync public="1" get="inline" set="null" line="3293" static="1">
		<f a="this:sync:flags:timeout">
			<d/>
			<t path="lime.graphics.opengl.GLSync"/>
			<x path="Int"/>
			<x path="haxe.Int64"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</waitSync>
	<fromRenderContext set="method" line="3300" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.WebGL2RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<fromGL set="method" line="3316" static="1">
		<f a="gl">
			<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
			<x path="lime.graphics.WebGL2RenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>lime.graphics.RenderContext</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils.BytePointerData" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/BytePointer.hx" module="lime.utils.BytePointer">
		<bytes public="1"><c path="haxe.io.Bytes"/></bytes>
		<offset public="1"><x path="Int"/></offset>
		<new public="1" set="method" line="250"><f a="bytes:offset">
	<c path="haxe.io.Bytes"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.graphics._WebGL2RenderContext.WebGL2RenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/WebGL2RenderContext.hx" private="1" module="lime.graphics.WebGL2RenderContext">
		<__tempPointer expr="new BytePointer()" line="380" static="1">
			<x path="lime.utils.BytePointer"/>
			<meta><m n=":value"><e>new BytePointer()</e></m></meta>
		</__tempPointer>
		<DEPTH_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POINTS>
		<LINES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINES>
		<LINE_LOOP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ZERO>
		<ONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE>
		<SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT>
		<BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE>
		<BLEND public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLEND>
		<DITHER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CW>
		<CCW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CCW>
		<LINE_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLE_COVERAGE_INVERT>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DONT_CARE>
		<FASTEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FASTEST>
		<NICEST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT>
		<UNSIGNED_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALPHA>
		<RGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB>
		<RGBA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA>
		<LUMINANCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEVER>
		<LESS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LESS>
		<EQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</EQUAL>
		<LEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LEQUAL>
		<GREATER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GREATER>
		<NOTEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</GEQUAL>
		<ALWAYS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALWAYS>
		<KEEP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</KEEP>
		<REPLACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPLACE>
		<INCR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR>
		<DECR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR>
		<INVERT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVERT>
		<INCR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VENDOR>
		<RENDERER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERER>
		<VERSION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERSION>
		<NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST>
		<LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_VEC4>
		<BOOL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<COMPILE_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB5_A1>
		<RGB565 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED>
		<RGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8>
		<RGBA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB>
		<SRGB8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32F>
		<RGB32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32F>
		<RGBA16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16F>
		<RGB16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8UI>
		<RGBA32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA32I>
		<RGB32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB32I>
		<RGBA16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA16I>
		<RGB16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB16I>
		<RGBA8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8I>
		<RGB8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8>
		<RG8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8>
		<R16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16F>
		<R32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32F>
		<RG16F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16F>
		<RG32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32F>
		<R8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8I>
		<R8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8UI>
		<R16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16I>
		<R16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R16UI>
		<R32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32I>
		<R32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R32UI>
		<RG8I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8I>
		<RG8UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8UI>
		<RG16I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16I>
		<RG16UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG16UI>
		<RG32I public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32I>
		<RG32UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG32UI>
		<R8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</HALF_FLOAT>
		<RG public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG>
		<RG_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</COLOR>
		<DEPTH public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH>
		<STENCIL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STENCIL>
		<MIN public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MIN>
		<MAX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<get_DEPTH_BUFFER_BIT get="inline" set="null" line="1003" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_BUFFER_BIT>
		<get_STENCIL_BUFFER_BIT get="inline" set="null" line="1004" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BUFFER_BIT>
		<get_COLOR_BUFFER_BIT get="inline" set="null" line="1005" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_BUFFER_BIT>
		<get_POINTS get="inline" set="null" line="1006" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POINTS>
		<get_LINES get="inline" set="null" line="1007" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINES>
		<get_LINE_LOOP get="inline" set="null" line="1008" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_LOOP>
		<get_LINE_STRIP get="inline" set="null" line="1009" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_STRIP>
		<get_TRIANGLES get="inline" set="null" line="1010" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLES>
		<get_TRIANGLE_STRIP get="inline" set="null" line="1011" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLE_STRIP>
		<get_TRIANGLE_FAN get="inline" set="null" line="1012" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRIANGLE_FAN>
		<get_ZERO get="inline" set="null" line="1013" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ZERO>
		<get_ONE get="inline" set="null" line="1014" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE>
		<get_SRC_COLOR get="inline" set="null" line="1015" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_COLOR>
		<get_ONE_MINUS_SRC_COLOR get="inline" set="null" line="1016" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_SRC_COLOR>
		<get_SRC_ALPHA get="inline" set="null" line="1017" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_ALPHA>
		<get_ONE_MINUS_SRC_ALPHA get="inline" set="null" line="1018" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_SRC_ALPHA>
		<get_DST_ALPHA get="inline" set="null" line="1019" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DST_ALPHA>
		<get_ONE_MINUS_DST_ALPHA get="inline" set="null" line="1020" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_DST_ALPHA>
		<get_DST_COLOR get="inline" set="null" line="1021" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DST_COLOR>
		<get_ONE_MINUS_DST_COLOR get="inline" set="null" line="1022" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_DST_COLOR>
		<get_SRC_ALPHA_SATURATE get="inline" set="null" line="1023" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRC_ALPHA_SATURATE>
		<get_FUNC_ADD get="inline" set="null" line="1024" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_ADD>
		<get_BLEND_EQUATION get="inline" set="null" line="1025" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION>
		<get_BLEND_EQUATION_RGB get="inline" set="null" line="1026" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION_RGB>
		<get_BLEND_EQUATION_ALPHA get="inline" set="null" line="1027" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_EQUATION_ALPHA>
		<get_FUNC_SUBTRACT get="inline" set="null" line="1028" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_SUBTRACT>
		<get_FUNC_REVERSE_SUBTRACT get="inline" set="null" line="1029" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FUNC_REVERSE_SUBTRACT>
		<get_BLEND_DST_RGB get="inline" set="null" line="1030" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_DST_RGB>
		<get_BLEND_SRC_RGB get="inline" set="null" line="1031" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_SRC_RGB>
		<get_BLEND_DST_ALPHA get="inline" set="null" line="1032" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_DST_ALPHA>
		<get_BLEND_SRC_ALPHA get="inline" set="null" line="1033" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_SRC_ALPHA>
		<get_CONSTANT_COLOR get="inline" set="null" line="1034" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONSTANT_COLOR>
		<get_ONE_MINUS_CONSTANT_COLOR get="inline" set="null" line="1035" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_CONSTANT_COLOR>
		<get_CONSTANT_ALPHA get="inline" set="null" line="1036" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONSTANT_ALPHA>
		<get_ONE_MINUS_CONSTANT_ALPHA get="inline" set="null" line="1037" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ONE_MINUS_CONSTANT_ALPHA>
		<get_BLEND_COLOR get="inline" set="null" line="1038" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND_COLOR>
		<get_ARRAY_BUFFER get="inline" set="null" line="1039" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ARRAY_BUFFER>
		<get_ELEMENT_ARRAY_BUFFER get="inline" set="null" line="1040" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ELEMENT_ARRAY_BUFFER>
		<get_ARRAY_BUFFER_BINDING get="inline" set="null" line="1041" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ARRAY_BUFFER_BINDING>
		<get_ELEMENT_ARRAY_BUFFER_BINDING get="inline" set="null" line="1042" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ELEMENT_ARRAY_BUFFER_BINDING>
		<get_STREAM_DRAW get="inline" set="null" line="1043" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_DRAW>
		<get_STATIC_DRAW get="inline" set="null" line="1044" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_DRAW>
		<get_DYNAMIC_DRAW get="inline" set="null" line="1045" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_DRAW>
		<get_BUFFER_SIZE get="inline" set="null" line="1046" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BUFFER_SIZE>
		<get_BUFFER_USAGE get="inline" set="null" line="1047" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BUFFER_USAGE>
		<get_CURRENT_VERTEX_ATTRIB get="inline" set="null" line="1048" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_VERTEX_ATTRIB>
		<get_FRONT get="inline" set="null" line="1049" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT>
		<get_BACK get="inline" set="null" line="1050" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BACK>
		<get_FRONT_AND_BACK get="inline" set="null" line="1051" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT_AND_BACK>
		<get_CULL_FACE get="inline" set="null" line="1052" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CULL_FACE>
		<get_BLEND get="inline" set="null" line="1053" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLEND>
		<get_DITHER get="inline" set="null" line="1054" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DITHER>
		<get_STENCIL_TEST get="inline" set="null" line="1055" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_TEST>
		<get_DEPTH_TEST get="inline" set="null" line="1056" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_TEST>
		<get_SCISSOR_TEST get="inline" set="null" line="1057" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SCISSOR_TEST>
		<get_POLYGON_OFFSET_FILL get="inline" set="null" line="1058" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_FILL>
		<get_SAMPLE_ALPHA_TO_COVERAGE get="inline" set="null" line="1059" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_ALPHA_TO_COVERAGE>
		<get_SAMPLE_COVERAGE get="inline" set="null" line="1060" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE>
		<get_NO_ERROR get="inline" set="null" line="1061" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NO_ERROR>
		<get_INVALID_ENUM get="inline" set="null" line="1062" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_ENUM>
		<get_INVALID_VALUE get="inline" set="null" line="1063" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_VALUE>
		<get_INVALID_OPERATION get="inline" set="null" line="1064" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_OPERATION>
		<get_OUT_OF_MEMORY get="inline" set="null" line="1065" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_OUT_OF_MEMORY>
		<get_CW get="inline" set="null" line="1066" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CW>
		<get_CCW get="inline" set="null" line="1067" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CCW>
		<get_LINE_WIDTH get="inline" set="null" line="1068" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINE_WIDTH>
		<get_ALIASED_POINT_SIZE_RANGE get="inline" set="null" line="1069" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALIASED_POINT_SIZE_RANGE>
		<get_ALIASED_LINE_WIDTH_RANGE get="inline" set="null" line="1070" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALIASED_LINE_WIDTH_RANGE>
		<get_CULL_FACE_MODE get="inline" set="null" line="1071" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CULL_FACE_MODE>
		<get_FRONT_FACE get="inline" set="null" line="1072" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRONT_FACE>
		<get_DEPTH_RANGE get="inline" set="null" line="1073" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_RANGE>
		<get_DEPTH_WRITEMASK get="inline" set="null" line="1074" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_WRITEMASK>
		<get_DEPTH_CLEAR_VALUE get="inline" set="null" line="1075" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_CLEAR_VALUE>
		<get_DEPTH_FUNC get="inline" set="null" line="1076" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_FUNC>
		<get_STENCIL_CLEAR_VALUE get="inline" set="null" line="1077" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_CLEAR_VALUE>
		<get_STENCIL_FUNC get="inline" set="null" line="1078" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_FUNC>
		<get_STENCIL_FAIL get="inline" set="null" line="1079" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_FAIL>
		<get_STENCIL_PASS_DEPTH_FAIL get="inline" set="null" line="1080" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_PASS_DEPTH_FAIL>
		<get_STENCIL_PASS_DEPTH_PASS get="inline" set="null" line="1081" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_PASS_DEPTH_PASS>
		<get_STENCIL_REF get="inline" set="null" line="1082" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_REF>
		<get_STENCIL_VALUE_MASK get="inline" set="null" line="1083" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_VALUE_MASK>
		<get_STENCIL_WRITEMASK get="inline" set="null" line="1084" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_WRITEMASK>
		<get_STENCIL_BACK_FUNC get="inline" set="null" line="1085" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_FUNC>
		<get_STENCIL_BACK_FAIL get="inline" set="null" line="1086" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_FAIL get="inline" set="null" line="1087" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_PASS_DEPTH_FAIL>
		<get_STENCIL_BACK_PASS_DEPTH_PASS get="inline" set="null" line="1088" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_PASS_DEPTH_PASS>
		<get_STENCIL_BACK_REF get="inline" set="null" line="1089" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_REF>
		<get_STENCIL_BACK_VALUE_MASK get="inline" set="null" line="1090" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_VALUE_MASK>
		<get_STENCIL_BACK_WRITEMASK get="inline" set="null" line="1091" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BACK_WRITEMASK>
		<get_VIEWPORT get="inline" set="null" line="1092" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VIEWPORT>
		<get_SCISSOR_BOX get="inline" set="null" line="1093" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SCISSOR_BOX>
		<get_COLOR_CLEAR_VALUE get="inline" set="null" line="1094" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_CLEAR_VALUE>
		<get_COLOR_WRITEMASK get="inline" set="null" line="1095" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_WRITEMASK>
		<get_UNPACK_ALIGNMENT get="inline" set="null" line="1096" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_ALIGNMENT>
		<get_PACK_ALIGNMENT get="inline" set="null" line="1097" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_ALIGNMENT>
		<get_MAX_TEXTURE_SIZE get="inline" set="null" line="1098" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_SIZE>
		<get_MAX_VIEWPORT_DIMS get="inline" set="null" line="1099" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VIEWPORT_DIMS>
		<get_SUBPIXEL_BITS get="inline" set="null" line="1100" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SUBPIXEL_BITS>
		<get_RED_BITS get="inline" set="null" line="1101" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED_BITS>
		<get_GREEN_BITS get="inline" set="null" line="1102" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GREEN_BITS>
		<get_BLUE_BITS get="inline" set="null" line="1103" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BLUE_BITS>
		<get_ALPHA_BITS get="inline" set="null" line="1104" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALPHA_BITS>
		<get_DEPTH_BITS get="inline" set="null" line="1105" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_BITS>
		<get_STENCIL_BITS get="inline" set="null" line="1106" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_BITS>
		<get_POLYGON_OFFSET_UNITS get="inline" set="null" line="1107" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_UNITS>
		<get_POLYGON_OFFSET_FACTOR get="inline" set="null" line="1108" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_POLYGON_OFFSET_FACTOR>
		<get_TEXTURE_BINDING_2D get="inline" set="null" line="1109" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_2D>
		<get_SAMPLE_BUFFERS get="inline" set="null" line="1110" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_BUFFERS>
		<get_SAMPLES get="inline" set="null" line="1111" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLES>
		<get_SAMPLE_COVERAGE_VALUE get="inline" set="null" line="1112" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE_VALUE>
		<get_SAMPLE_COVERAGE_INVERT get="inline" set="null" line="1113" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLE_COVERAGE_INVERT>
		<get_COMPRESSED_TEXTURE_FORMATS get="inline" set="null" line="1114" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPRESSED_TEXTURE_FORMATS>
		<get_DONT_CARE get="inline" set="null" line="1115" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DONT_CARE>
		<get_FASTEST get="inline" set="null" line="1116" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FASTEST>
		<get_NICEST get="inline" set="null" line="1117" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NICEST>
		<get_GENERATE_MIPMAP_HINT get="inline" set="null" line="1118" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GENERATE_MIPMAP_HINT>
		<get_BYTE get="inline" set="null" line="1119" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BYTE>
		<get_UNSIGNED_BYTE get="inline" set="null" line="1120" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_BYTE>
		<get_SHORT get="inline" set="null" line="1121" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHORT>
		<get_UNSIGNED_SHORT get="inline" set="null" line="1122" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT>
		<get_INT get="inline" set="null" line="1123" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT>
		<get_UNSIGNED_INT get="inline" set="null" line="1124" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT>
		<get_FLOAT get="inline" set="null" line="1125" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT>
		<get_DEPTH_COMPONENT get="inline" set="null" line="1126" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT>
		<get_ALPHA get="inline" set="null" line="1127" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALPHA>
		<get_RGB get="inline" set="null" line="1128" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB>
		<get_RGBA get="inline" set="null" line="1129" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA>
		<get_LUMINANCE get="inline" set="null" line="1130" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LUMINANCE>
		<get_LUMINANCE_ALPHA get="inline" set="null" line="1131" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LUMINANCE_ALPHA>
		<get_UNSIGNED_SHORT_4_4_4_4 get="inline" set="null" line="1132" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_4_4_4_4>
		<get_UNSIGNED_SHORT_5_5_5_1 get="inline" set="null" line="1133" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_5_5_5_1>
		<get_UNSIGNED_SHORT_5_6_5 get="inline" set="null" line="1134" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_SHORT_5_6_5>
		<get_FRAGMENT_SHADER get="inline" set="null" line="1135" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAGMENT_SHADER>
		<get_VERTEX_SHADER get="inline" set="null" line="1136" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_SHADER>
		<get_MAX_VERTEX_ATTRIBS get="inline" set="null" line="1137" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_ATTRIBS>
		<get_MAX_VERTEX_UNIFORM_VECTORS get="inline" set="null" line="1138" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_VECTORS>
		<get_MAX_VARYING_VECTORS get="inline" set="null" line="1139" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VARYING_VECTORS>
		<get_MAX_COMBINED_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1140" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<get_MAX_VERTEX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1141" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<get_MAX_TEXTURE_IMAGE_UNITS get="inline" set="null" line="1142" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_IMAGE_UNITS>
		<get_MAX_FRAGMENT_UNIFORM_VECTORS get="inline" set="null" line="1143" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_VECTORS>
		<get_SHADER_TYPE get="inline" set="null" line="1144" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHADER_TYPE>
		<get_DELETE_STATUS get="inline" set="null" line="1145" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DELETE_STATUS>
		<get_LINK_STATUS get="inline" set="null" line="1146" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINK_STATUS>
		<get_VALIDATE_STATUS get="inline" set="null" line="1147" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VALIDATE_STATUS>
		<get_ATTACHED_SHADERS get="inline" set="null" line="1148" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ATTACHED_SHADERS>
		<get_ACTIVE_UNIFORMS get="inline" set="null" line="1149" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_UNIFORMS>
		<get_ACTIVE_ATTRIBUTES get="inline" set="null" line="1150" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_ATTRIBUTES>
		<get_SHADING_LANGUAGE_VERSION get="inline" set="null" line="1151" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SHADING_LANGUAGE_VERSION>
		<get_CURRENT_PROGRAM get="inline" set="null" line="1152" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_PROGRAM>
		<get_NEVER get="inline" set="null" line="1153" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEVER>
		<get_LESS get="inline" set="null" line="1154" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LESS>
		<get_EQUAL get="inline" set="null" line="1155" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_EQUAL>
		<get_LEQUAL get="inline" set="null" line="1156" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LEQUAL>
		<get_GREATER get="inline" set="null" line="1157" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GREATER>
		<get_NOTEQUAL get="inline" set="null" line="1158" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NOTEQUAL>
		<get_GEQUAL get="inline" set="null" line="1159" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_GEQUAL>
		<get_ALWAYS get="inline" set="null" line="1160" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALWAYS>
		<get_KEEP get="inline" set="null" line="1161" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_KEEP>
		<get_REPLACE get="inline" set="null" line="1162" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_REPLACE>
		<get_INCR get="inline" set="null" line="1163" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INCR>
		<get_DECR get="inline" set="null" line="1164" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DECR>
		<get_INVERT get="inline" set="null" line="1165" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVERT>
		<get_INCR_WRAP get="inline" set="null" line="1166" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INCR_WRAP>
		<get_DECR_WRAP get="inline" set="null" line="1167" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DECR_WRAP>
		<get_VENDOR get="inline" set="null" line="1168" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VENDOR>
		<get_RENDERER get="inline" set="null" line="1169" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERER>
		<get_VERSION get="inline" set="null" line="1170" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERSION>
		<get_NEAREST get="inline" set="null" line="1171" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST>
		<get_LINEAR get="inline" set="null" line="1172" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR>
		<get_NEAREST_MIPMAP_NEAREST get="inline" set="null" line="1173" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST_MIPMAP_NEAREST>
		<get_LINEAR_MIPMAP_NEAREST get="inline" set="null" line="1174" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR_MIPMAP_NEAREST>
		<get_NEAREST_MIPMAP_LINEAR get="inline" set="null" line="1175" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NEAREST_MIPMAP_LINEAR>
		<get_LINEAR_MIPMAP_LINEAR get="inline" set="null" line="1176" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LINEAR_MIPMAP_LINEAR>
		<get_TEXTURE_MAG_FILTER get="inline" set="null" line="1177" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAG_FILTER>
		<get_TEXTURE_MIN_FILTER get="inline" set="null" line="1178" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MIN_FILTER>
		<get_TEXTURE_WRAP_S get="inline" set="null" line="1179" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_S>
		<get_TEXTURE_WRAP_T get="inline" set="null" line="1180" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_T>
		<get_TEXTURE_2D get="inline" set="null" line="1181" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_2D>
		<get_TEXTURE get="inline" set="null" line="1182" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE>
		<get_TEXTURE_CUBE_MAP get="inline" set="null" line="1183" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP>
		<get_TEXTURE_BINDING_CUBE_MAP get="inline" set="null" line="1184" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_CUBE_MAP>
		<get_TEXTURE_CUBE_MAP_POSITIVE_X get="inline" set="null" line="1185" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_X>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_X get="inline" set="null" line="1186" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_X>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Y get="inline" set="null" line="1187" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Y>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Y get="inline" set="null" line="1188" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<get_TEXTURE_CUBE_MAP_POSITIVE_Z get="inline" set="null" line="1189" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_POSITIVE_Z>
		<get_TEXTURE_CUBE_MAP_NEGATIVE_Z get="inline" set="null" line="1190" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<get_MAX_CUBE_MAP_TEXTURE_SIZE get="inline" set="null" line="1191" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_CUBE_MAP_TEXTURE_SIZE>
		<get_TEXTURE0 get="inline" set="null" line="1192" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE0>
		<get_TEXTURE1 get="inline" set="null" line="1193" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE1>
		<get_TEXTURE2 get="inline" set="null" line="1194" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE2>
		<get_TEXTURE3 get="inline" set="null" line="1195" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE3>
		<get_TEXTURE4 get="inline" set="null" line="1196" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE4>
		<get_TEXTURE5 get="inline" set="null" line="1197" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE5>
		<get_TEXTURE6 get="inline" set="null" line="1198" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE6>
		<get_TEXTURE7 get="inline" set="null" line="1199" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE7>
		<get_TEXTURE8 get="inline" set="null" line="1200" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE8>
		<get_TEXTURE9 get="inline" set="null" line="1201" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE9>
		<get_TEXTURE10 get="inline" set="null" line="1202" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE10>
		<get_TEXTURE11 get="inline" set="null" line="1203" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE11>
		<get_TEXTURE12 get="inline" set="null" line="1204" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE12>
		<get_TEXTURE13 get="inline" set="null" line="1205" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE13>
		<get_TEXTURE14 get="inline" set="null" line="1206" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE14>
		<get_TEXTURE15 get="inline" set="null" line="1207" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE15>
		<get_TEXTURE16 get="inline" set="null" line="1208" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE16>
		<get_TEXTURE17 get="inline" set="null" line="1209" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE17>
		<get_TEXTURE18 get="inline" set="null" line="1210" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE18>
		<get_TEXTURE19 get="inline" set="null" line="1211" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE19>
		<get_TEXTURE20 get="inline" set="null" line="1212" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE20>
		<get_TEXTURE21 get="inline" set="null" line="1213" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE21>
		<get_TEXTURE22 get="inline" set="null" line="1214" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE22>
		<get_TEXTURE23 get="inline" set="null" line="1215" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE23>
		<get_TEXTURE24 get="inline" set="null" line="1216" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE24>
		<get_TEXTURE25 get="inline" set="null" line="1217" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE25>
		<get_TEXTURE26 get="inline" set="null" line="1218" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE26>
		<get_TEXTURE27 get="inline" set="null" line="1219" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE27>
		<get_TEXTURE28 get="inline" set="null" line="1220" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE28>
		<get_TEXTURE29 get="inline" set="null" line="1221" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE29>
		<get_TEXTURE30 get="inline" set="null" line="1222" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE30>
		<get_TEXTURE31 get="inline" set="null" line="1223" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE31>
		<get_ACTIVE_TEXTURE get="inline" set="null" line="1224" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_TEXTURE>
		<get_REPEAT get="inline" set="null" line="1225" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_REPEAT>
		<get_CLAMP_TO_EDGE get="inline" set="null" line="1226" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CLAMP_TO_EDGE>
		<get_MIRRORED_REPEAT get="inline" set="null" line="1227" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIRRORED_REPEAT>
		<get_FLOAT_VEC2 get="inline" set="null" line="1228" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC2>
		<get_FLOAT_VEC3 get="inline" set="null" line="1229" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC3>
		<get_FLOAT_VEC4 get="inline" set="null" line="1230" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_VEC4>
		<get_INT_VEC2 get="inline" set="null" line="1231" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC2>
		<get_INT_VEC3 get="inline" set="null" line="1232" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC3>
		<get_INT_VEC4 get="inline" set="null" line="1233" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_VEC4>
		<get_BOOL get="inline" set="null" line="1234" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL>
		<get_BOOL_VEC2 get="inline" set="null" line="1235" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC2>
		<get_BOOL_VEC3 get="inline" set="null" line="1236" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC3>
		<get_BOOL_VEC4 get="inline" set="null" line="1237" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BOOL_VEC4>
		<get_FLOAT_MAT2 get="inline" set="null" line="1238" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2>
		<get_FLOAT_MAT3 get="inline" set="null" line="1239" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3>
		<get_FLOAT_MAT4 get="inline" set="null" line="1240" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4>
		<get_SAMPLER_2D get="inline" set="null" line="1241" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D>
		<get_SAMPLER_CUBE get="inline" set="null" line="1242" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_CUBE>
		<get_VERTEX_ATTRIB_ARRAY_ENABLED get="inline" set="null" line="1243" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_ENABLED>
		<get_VERTEX_ATTRIB_ARRAY_SIZE get="inline" set="null" line="1244" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_SIZE>
		<get_VERTEX_ATTRIB_ARRAY_STRIDE get="inline" set="null" line="1245" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_STRIDE>
		<get_VERTEX_ATTRIB_ARRAY_TYPE get="inline" set="null" line="1246" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_TYPE>
		<get_VERTEX_ATTRIB_ARRAY_NORMALIZED get="inline" set="null" line="1247" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_POINTER get="inline" set="null" line="1248" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_POINTER>
		<get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING get="inline" set="null" line="1249" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<get_COMPILE_STATUS get="inline" set="null" line="1250" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPILE_STATUS>
		<get_LOW_FLOAT get="inline" set="null" line="1251" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LOW_FLOAT>
		<get_MEDIUM_FLOAT get="inline" set="null" line="1252" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MEDIUM_FLOAT>
		<get_HIGH_FLOAT get="inline" set="null" line="1253" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HIGH_FLOAT>
		<get_LOW_INT get="inline" set="null" line="1254" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_LOW_INT>
		<get_MEDIUM_INT get="inline" set="null" line="1255" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MEDIUM_INT>
		<get_HIGH_INT get="inline" set="null" line="1256" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HIGH_INT>
		<get_FRAMEBUFFER get="inline" set="null" line="1257" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER>
		<get_RENDERBUFFER get="inline" set="null" line="1258" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER>
		<get_RGBA4 get="inline" set="null" line="1259" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA4>
		<get_RGB5_A1 get="inline" set="null" line="1260" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB5_A1>
		<get_RGB565 get="inline" set="null" line="1261" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB565>
		<get_DEPTH_COMPONENT16 get="inline" set="null" line="1262" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT16>
		<get_STENCIL_INDEX get="inline" set="null" line="1263" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_INDEX>
		<get_STENCIL_INDEX8 get="inline" set="null" line="1264" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_INDEX8>
		<get_DEPTH_STENCIL get="inline" set="null" line="1265" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_STENCIL>
		<get_RENDERBUFFER_WIDTH get="inline" set="null" line="1266" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_WIDTH>
		<get_RENDERBUFFER_HEIGHT get="inline" set="null" line="1267" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_HEIGHT>
		<get_RENDERBUFFER_INTERNAL_FORMAT get="inline" set="null" line="1268" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_INTERNAL_FORMAT>
		<get_RENDERBUFFER_RED_SIZE get="inline" set="null" line="1269" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_RED_SIZE>
		<get_RENDERBUFFER_GREEN_SIZE get="inline" set="null" line="1270" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_GREEN_SIZE>
		<get_RENDERBUFFER_BLUE_SIZE get="inline" set="null" line="1271" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_BLUE_SIZE>
		<get_RENDERBUFFER_ALPHA_SIZE get="inline" set="null" line="1272" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_ALPHA_SIZE>
		<get_RENDERBUFFER_DEPTH_SIZE get="inline" set="null" line="1273" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_DEPTH_SIZE>
		<get_RENDERBUFFER_STENCIL_SIZE get="inline" set="null" line="1274" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_STENCIL_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE get="inline" set="null" line="1275" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME get="inline" set="null" line="1276" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL get="inline" set="null" line="1277" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE get="inline" set="null" line="1278" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<get_COLOR_ATTACHMENT0 get="inline" set="null" line="1279" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT0>
		<get_DEPTH_ATTACHMENT get="inline" set="null" line="1280" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_ATTACHMENT>
		<get_STENCIL_ATTACHMENT get="inline" set="null" line="1281" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL_ATTACHMENT>
		<get_DEPTH_STENCIL_ATTACHMENT get="inline" set="null" line="1282" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_STENCIL_ATTACHMENT>
		<get_NONE get="inline" set="null" line="1283" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_NONE>
		<get_FRAMEBUFFER_COMPLETE get="inline" set="null" line="1284" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_COMPLETE>
		<get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT get="inline" set="null" line="1285" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT get="inline" set="null" line="1286" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS get="inline" set="null" line="1287" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<get_FRAMEBUFFER_UNSUPPORTED get="inline" set="null" line="1288" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_UNSUPPORTED>
		<get_FRAMEBUFFER_BINDING get="inline" set="null" line="1289" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_BINDING get="inline" set="null" line="1290" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_BINDING>
		<get_MAX_RENDERBUFFER_SIZE get="inline" set="null" line="1291" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_RENDERBUFFER_SIZE>
		<get_INVALID_FRAMEBUFFER_OPERATION get="inline" set="null" line="1292" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_FRAMEBUFFER_OPERATION>
		<get_UNPACK_FLIP_Y_WEBGL get="inline" set="null" line="1293" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_FLIP_Y_WEBGL>
		<get_UNPACK_PREMULTIPLY_ALPHA_WEBGL get="inline" set="null" line="1294" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<get_CONTEXT_LOST_WEBGL get="inline" set="null" line="1295" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONTEXT_LOST_WEBGL>
		<get_UNPACK_COLORSPACE_CONVERSION_WEBGL get="inline" set="null" line="1296" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<get_BROWSER_DEFAULT_WEBGL get="inline" set="null" line="1297" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_BROWSER_DEFAULT_WEBGL>
		<get_READ_BUFFER get="inline" set="null" line="1299" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_BUFFER>
		<get_UNPACK_ROW_LENGTH get="inline" set="null" line="1300" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_ROW_LENGTH>
		<get_UNPACK_SKIP_ROWS get="inline" set="null" line="1301" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_ROWS>
		<get_UNPACK_SKIP_PIXELS get="inline" set="null" line="1302" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_PIXELS>
		<get_PACK_ROW_LENGTH get="inline" set="null" line="1303" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_ROW_LENGTH>
		<get_PACK_SKIP_ROWS get="inline" set="null" line="1304" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_SKIP_ROWS>
		<get_PACK_SKIP_PIXELS get="inline" set="null" line="1305" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PACK_SKIP_PIXELS>
		<get_TEXTURE_BINDING_3D get="inline" set="null" line="1306" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_3D>
		<get_UNPACK_SKIP_IMAGES get="inline" set="null" line="1307" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_SKIP_IMAGES>
		<get_UNPACK_IMAGE_HEIGHT get="inline" set="null" line="1308" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNPACK_IMAGE_HEIGHT>
		<get_MAX_3D_TEXTURE_SIZE get="inline" set="null" line="1309" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_3D_TEXTURE_SIZE>
		<get_MAX_ELEMENTS_VERTICES get="inline" set="null" line="1310" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENTS_VERTICES>
		<get_MAX_ELEMENTS_INDICES get="inline" set="null" line="1311" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENTS_INDICES>
		<get_MAX_TEXTURE_LOD_BIAS get="inline" set="null" line="1312" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TEXTURE_LOD_BIAS>
		<get_MAX_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1313" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<get_MAX_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1314" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_ARRAY_TEXTURE_LAYERS get="inline" set="null" line="1315" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ARRAY_TEXTURE_LAYERS>
		<get_MIN_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="1316" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIN_PROGRAM_TEXEL_OFFSET>
		<get_MAX_PROGRAM_TEXEL_OFFSET get="inline" set="null" line="1317" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_PROGRAM_TEXEL_OFFSET>
		<get_MAX_VARYING_COMPONENTS get="inline" set="null" line="1318" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VARYING_COMPONENTS>
		<get_FRAGMENT_SHADER_DERIVATIVE_HINT get="inline" set="null" line="1319" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAGMENT_SHADER_DERIVATIVE_HINT>
		<get_RASTERIZER_DISCARD get="inline" set="null" line="1320" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RASTERIZER_DISCARD>
		<get_VERTEX_ARRAY_BINDING get="inline" set="null" line="1321" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ARRAY_BINDING>
		<get_MAX_VERTEX_OUTPUT_COMPONENTS get="inline" set="null" line="1322" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_OUTPUT_COMPONENTS>
		<get_MAX_FRAGMENT_INPUT_COMPONENTS get="inline" set="null" line="1323" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_INPUT_COMPONENTS>
		<get_MAX_SERVER_WAIT_TIMEOUT get="inline" set="null" line="1324" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_SERVER_WAIT_TIMEOUT>
		<get_MAX_ELEMENT_INDEX get="inline" set="null" line="1325" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_ELEMENT_INDEX>
		<get_RED get="inline" set="null" line="1327" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED>
		<get_RGB8 get="inline" set="null" line="1328" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8>
		<get_RGBA8 get="inline" set="null" line="1329" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8>
		<get_RGB10_A2 get="inline" set="null" line="1330" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB10_A2>
		<get_TEXTURE_3D get="inline" set="null" line="1331" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_3D>
		<get_TEXTURE_WRAP_R get="inline" set="null" line="1332" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_WRAP_R>
		<get_TEXTURE_MIN_LOD get="inline" set="null" line="1333" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MIN_LOD>
		<get_TEXTURE_MAX_LOD get="inline" set="null" line="1334" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAX_LOD>
		<get_TEXTURE_BASE_LEVEL get="inline" set="null" line="1335" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BASE_LEVEL>
		<get_TEXTURE_MAX_LEVEL get="inline" set="null" line="1336" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_MAX_LEVEL>
		<get_TEXTURE_COMPARE_MODE get="inline" set="null" line="1337" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_COMPARE_MODE>
		<get_TEXTURE_COMPARE_FUNC get="inline" set="null" line="1338" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_COMPARE_FUNC>
		<get_SRGB get="inline" set="null" line="1339" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB>
		<get_SRGB8 get="inline" set="null" line="1340" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB8>
		<get_SRGB8_ALPHA8 get="inline" set="null" line="1341" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SRGB8_ALPHA8>
		<get_COMPARE_REF_TO_TEXTURE get="inline" set="null" line="1342" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COMPARE_REF_TO_TEXTURE>
		<get_RGBA32F get="inline" set="null" line="1343" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32F>
		<get_RGB32F get="inline" set="null" line="1344" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32F>
		<get_RGBA16F get="inline" set="null" line="1345" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16F>
		<get_RGB16F get="inline" set="null" line="1346" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16F>
		<get_TEXTURE_2D_ARRAY get="inline" set="null" line="1347" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_2D_ARRAY>
		<get_TEXTURE_BINDING_2D_ARRAY get="inline" set="null" line="1348" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_BINDING_2D_ARRAY>
		<get_R11F_G11F_B10F get="inline" set="null" line="1349" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R11F_G11F_B10F>
		<get_RGB9_E5 get="inline" set="null" line="1350" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB9_E5>
		<get_RGBA32UI get="inline" set="null" line="1351" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32UI>
		<get_RGB32UI get="inline" set="null" line="1352" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32UI>
		<get_RGBA16UI get="inline" set="null" line="1353" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16UI>
		<get_RGB16UI get="inline" set="null" line="1354" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16UI>
		<get_RGBA8UI get="inline" set="null" line="1355" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8UI>
		<get_RGB8UI get="inline" set="null" line="1356" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8UI>
		<get_RGBA32I get="inline" set="null" line="1357" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA32I>
		<get_RGB32I get="inline" set="null" line="1358" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB32I>
		<get_RGBA16I get="inline" set="null" line="1359" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA16I>
		<get_RGB16I get="inline" set="null" line="1360" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB16I>
		<get_RGBA8I get="inline" set="null" line="1361" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8I>
		<get_RGB8I get="inline" set="null" line="1362" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8I>
		<get_RED_INTEGER get="inline" set="null" line="1363" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RED_INTEGER>
		<get_RGB_INTEGER get="inline" set="null" line="1364" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB_INTEGER>
		<get_RGBA_INTEGER get="inline" set="null" line="1365" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA_INTEGER>
		<get_R8 get="inline" set="null" line="1366" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8>
		<get_RG8 get="inline" set="null" line="1367" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8>
		<get_R16F get="inline" set="null" line="1368" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16F>
		<get_R32F get="inline" set="null" line="1369" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32F>
		<get_RG16F get="inline" set="null" line="1370" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16F>
		<get_RG32F get="inline" set="null" line="1371" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32F>
		<get_R8I get="inline" set="null" line="1372" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8I>
		<get_R8UI get="inline" set="null" line="1373" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8UI>
		<get_R16I get="inline" set="null" line="1374" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16I>
		<get_R16UI get="inline" set="null" line="1375" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R16UI>
		<get_R32I get="inline" set="null" line="1376" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32I>
		<get_R32UI get="inline" set="null" line="1377" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R32UI>
		<get_RG8I get="inline" set="null" line="1378" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8I>
		<get_RG8UI get="inline" set="null" line="1379" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8UI>
		<get_RG16I get="inline" set="null" line="1380" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16I>
		<get_RG16UI get="inline" set="null" line="1381" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG16UI>
		<get_RG32I get="inline" set="null" line="1382" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32I>
		<get_RG32UI get="inline" set="null" line="1383" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG32UI>
		<get_R8_SNORM get="inline" set="null" line="1384" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_R8_SNORM>
		<get_RG8_SNORM get="inline" set="null" line="1385" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG8_SNORM>
		<get_RGB8_SNORM get="inline" set="null" line="1386" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB8_SNORM>
		<get_RGBA8_SNORM get="inline" set="null" line="1387" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGBA8_SNORM>
		<get_RGB10_A2UI get="inline" set="null" line="1388" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RGB10_A2UI>
		<get_TEXTURE_IMMUTABLE_FORMAT get="inline" set="null" line="1389" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_IMMUTABLE_FORMAT>
		<get_TEXTURE_IMMUTABLE_LEVELS get="inline" set="null" line="1390" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TEXTURE_IMMUTABLE_LEVELS>
		<get_UNSIGNED_INT_2_10_10_10_REV get="inline" set="null" line="1392" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_2_10_10_10_REV>
		<get_UNSIGNED_INT_10F_11F_11F_REV get="inline" set="null" line="1393" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_10F_11F_11F_REV>
		<get_UNSIGNED_INT_5_9_9_9_REV get="inline" set="null" line="1394" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_5_9_9_9_REV>
		<get_FLOAT_32_UNSIGNED_INT_24_8_REV get="inline" set="null" line="1395" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_32_UNSIGNED_INT_24_8_REV>
		<get_UNSIGNED_INT_24_8 get="inline" set="null" line="1396" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_24_8>
		<get_HALF_FLOAT get="inline" set="null" line="1397" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_HALF_FLOAT>
		<get_RG get="inline" set="null" line="1398" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG>
		<get_RG_INTEGER get="inline" set="null" line="1399" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RG_INTEGER>
		<get_INT_2_10_10_10_REV get="inline" set="null" line="1400" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_2_10_10_10_REV>
		<get_CURRENT_QUERY get="inline" set="null" line="1402" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CURRENT_QUERY>
		<get_QUERY_RESULT get="inline" set="null" line="1403" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_QUERY_RESULT>
		<get_QUERY_RESULT_AVAILABLE get="inline" set="null" line="1404" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_QUERY_RESULT_AVAILABLE>
		<get_ANY_SAMPLES_PASSED get="inline" set="null" line="1405" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ANY_SAMPLES_PASSED>
		<get_ANY_SAMPLES_PASSED_CONSERVATIVE get="inline" set="null" line="1406" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ANY_SAMPLES_PASSED_CONSERVATIVE>
		<get_MAX_DRAW_BUFFERS get="inline" set="null" line="1408" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_DRAW_BUFFERS>
		<get_DRAW_BUFFER0 get="inline" set="null" line="1409" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER0>
		<get_DRAW_BUFFER1 get="inline" set="null" line="1410" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER1>
		<get_DRAW_BUFFER2 get="inline" set="null" line="1411" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER2>
		<get_DRAW_BUFFER3 get="inline" set="null" line="1412" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER3>
		<get_DRAW_BUFFER4 get="inline" set="null" line="1413" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER4>
		<get_DRAW_BUFFER5 get="inline" set="null" line="1414" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER5>
		<get_DRAW_BUFFER6 get="inline" set="null" line="1415" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER6>
		<get_DRAW_BUFFER7 get="inline" set="null" line="1416" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER7>
		<get_DRAW_BUFFER8 get="inline" set="null" line="1417" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER8>
		<get_DRAW_BUFFER9 get="inline" set="null" line="1418" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER9>
		<get_DRAW_BUFFER10 get="inline" set="null" line="1419" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER10>
		<get_DRAW_BUFFER11 get="inline" set="null" line="1420" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER11>
		<get_DRAW_BUFFER12 get="inline" set="null" line="1421" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER12>
		<get_DRAW_BUFFER13 get="inline" set="null" line="1422" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER13>
		<get_DRAW_BUFFER14 get="inline" set="null" line="1423" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER14>
		<get_DRAW_BUFFER15 get="inline" set="null" line="1424" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_BUFFER15>
		<get_MAX_COLOR_ATTACHMENTS get="inline" set="null" line="1425" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COLOR_ATTACHMENTS>
		<get_COLOR_ATTACHMENT1 get="inline" set="null" line="1426" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT1>
		<get_COLOR_ATTACHMENT2 get="inline" set="null" line="1427" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT2>
		<get_COLOR_ATTACHMENT3 get="inline" set="null" line="1428" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT3>
		<get_COLOR_ATTACHMENT4 get="inline" set="null" line="1429" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT4>
		<get_COLOR_ATTACHMENT5 get="inline" set="null" line="1430" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT5>
		<get_COLOR_ATTACHMENT6 get="inline" set="null" line="1431" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT6>
		<get_COLOR_ATTACHMENT7 get="inline" set="null" line="1432" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT7>
		<get_COLOR_ATTACHMENT8 get="inline" set="null" line="1433" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT8>
		<get_COLOR_ATTACHMENT9 get="inline" set="null" line="1434" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT9>
		<get_COLOR_ATTACHMENT10 get="inline" set="null" line="1435" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT10>
		<get_COLOR_ATTACHMENT11 get="inline" set="null" line="1436" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT11>
		<get_COLOR_ATTACHMENT12 get="inline" set="null" line="1437" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT12>
		<get_COLOR_ATTACHMENT13 get="inline" set="null" line="1438" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT13>
		<get_COLOR_ATTACHMENT14 get="inline" set="null" line="1439" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT14>
		<get_COLOR_ATTACHMENT15 get="inline" set="null" line="1440" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR_ATTACHMENT15>
		<get_SAMPLER_3D get="inline" set="null" line="1442" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_3D>
		<get_SAMPLER_2D_SHADOW get="inline" set="null" line="1443" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_SHADOW>
		<get_SAMPLER_2D_ARRAY get="inline" set="null" line="1444" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_ARRAY>
		<get_SAMPLER_2D_ARRAY_SHADOW get="inline" set="null" line="1445" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_2D_ARRAY_SHADOW>
		<get_SAMPLER_CUBE_SHADOW get="inline" set="null" line="1446" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_CUBE_SHADOW>
		<get_INT_SAMPLER_2D get="inline" set="null" line="1447" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_2D>
		<get_INT_SAMPLER_3D get="inline" set="null" line="1448" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_3D>
		<get_INT_SAMPLER_CUBE get="inline" set="null" line="1449" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_CUBE>
		<get_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1450" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INT_SAMPLER_2D_ARRAY>
		<get_UNSIGNED_INT_SAMPLER_2D get="inline" set="null" line="1451" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_2D>
		<get_UNSIGNED_INT_SAMPLER_3D get="inline" set="null" line="1452" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_3D>
		<get_UNSIGNED_INT_SAMPLER_CUBE get="inline" set="null" line="1453" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_CUBE>
		<get_UNSIGNED_INT_SAMPLER_2D_ARRAY get="inline" set="null" line="1454" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<get_MAX_SAMPLES get="inline" set="null" line="1455" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_SAMPLES>
		<get_SAMPLER_BINDING get="inline" set="null" line="1456" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SAMPLER_BINDING>
		<get_PIXEL_PACK_BUFFER get="inline" set="null" line="1458" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_PACK_BUFFER>
		<get_PIXEL_UNPACK_BUFFER get="inline" set="null" line="1459" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_UNPACK_BUFFER>
		<get_PIXEL_PACK_BUFFER_BINDING get="inline" set="null" line="1460" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_PACK_BUFFER_BINDING>
		<get_PIXEL_UNPACK_BUFFER_BINDING get="inline" set="null" line="1461" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_PIXEL_UNPACK_BUFFER_BINDING>
		<get_COPY_READ_BUFFER get="inline" set="null" line="1462" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_READ_BUFFER>
		<get_COPY_WRITE_BUFFER get="inline" set="null" line="1463" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_WRITE_BUFFER>
		<get_COPY_READ_BUFFER_BINDING get="inline" set="null" line="1464" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_READ_BUFFER_BINDING>
		<get_COPY_WRITE_BUFFER_BINDING get="inline" set="null" line="1465" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COPY_WRITE_BUFFER_BINDING>
		<get_FLOAT_MAT2x3 get="inline" set="null" line="1467" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2x3>
		<get_FLOAT_MAT2x4 get="inline" set="null" line="1468" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT2x4>
		<get_FLOAT_MAT3x2 get="inline" set="null" line="1469" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3x2>
		<get_FLOAT_MAT3x4 get="inline" set="null" line="1470" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT3x4>
		<get_FLOAT_MAT4x2 get="inline" set="null" line="1471" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4x2>
		<get_FLOAT_MAT4x3 get="inline" set="null" line="1472" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FLOAT_MAT4x3>
		<get_UNSIGNED_INT_VEC2 get="inline" set="null" line="1473" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC2>
		<get_UNSIGNED_INT_VEC3 get="inline" set="null" line="1474" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC3>
		<get_UNSIGNED_INT_VEC4 get="inline" set="null" line="1475" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_INT_VEC4>
		<get_UNSIGNED_NORMALIZED get="inline" set="null" line="1476" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNED_NORMALIZED>
		<get_SIGNED_NORMALIZED get="inline" set="null" line="1477" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SIGNED_NORMALIZED>
		<get_VERTEX_ATTRIB_ARRAY_INTEGER get="inline" set="null" line="1479" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_INTEGER>
		<get_VERTEX_ATTRIB_ARRAY_DIVISOR get="inline" set="null" line="1480" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_VERTEX_ATTRIB_ARRAY_DIVISOR>
		<get_TRANSFORM_FEEDBACK_BUFFER_MODE get="inline" set="null" line="1482" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_MODE>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS get="inline" set="null" line="1483" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<get_TRANSFORM_FEEDBACK_VARYINGS get="inline" set="null" line="1484" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_VARYINGS>
		<get_TRANSFORM_FEEDBACK_BUFFER_START get="inline" set="null" line="1485" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_START>
		<get_TRANSFORM_FEEDBACK_BUFFER_SIZE get="inline" set="null" line="1486" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN get="inline" set="null" line="1487" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS get="inline" set="null" line="1488" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS get="inline" set="null" line="1489" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<get_INTERLEAVED_ATTRIBS get="inline" set="null" line="1490" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INTERLEAVED_ATTRIBS>
		<get_SEPARATE_ATTRIBS get="inline" set="null" line="1491" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SEPARATE_ATTRIBS>
		<get_TRANSFORM_FEEDBACK_BUFFER get="inline" set="null" line="1492" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER>
		<get_TRANSFORM_FEEDBACK_BUFFER_BINDING get="inline" set="null" line="1493" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<get_TRANSFORM_FEEDBACK get="inline" set="null" line="1494" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK>
		<get_TRANSFORM_FEEDBACK_PAUSED get="inline" set="null" line="1495" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_PAUSED>
		<get_TRANSFORM_FEEDBACK_ACTIVE get="inline" set="null" line="1496" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_ACTIVE>
		<get_TRANSFORM_FEEDBACK_BINDING get="inline" set="null" line="1497" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TRANSFORM_FEEDBACK_BINDING>
		<get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING get="inline" set="null" line="1499" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE get="inline" set="null" line="1500" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<get_FRAMEBUFFER_ATTACHMENT_RED_SIZE get="inline" set="null" line="1501" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE get="inline" set="null" line="1502" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE get="inline" set="null" line="1503" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE get="inline" set="null" line="1504" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE get="inline" set="null" line="1505" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE get="inline" set="null" line="1506" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<get_FRAMEBUFFER_DEFAULT get="inline" set="null" line="1507" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_DEFAULT>
		<get_DEPTH24_STENCIL8 get="inline" set="null" line="1508" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH24_STENCIL8>
		<get_DRAW_FRAMEBUFFER_BINDING get="inline" set="null" line="1509" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_FRAMEBUFFER_BINDING>
		<get_READ_FRAMEBUFFER get="inline" set="null" line="1510" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_FRAMEBUFFER>
		<get_DRAW_FRAMEBUFFER get="inline" set="null" line="1511" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DRAW_FRAMEBUFFER>
		<get_READ_FRAMEBUFFER_BINDING get="inline" set="null" line="1512" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_READ_FRAMEBUFFER_BINDING>
		<get_RENDERBUFFER_SAMPLES get="inline" set="null" line="1513" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_RENDERBUFFER_SAMPLES>
		<get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER get="inline" set="null" line="1514" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE get="inline" set="null" line="1515" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<get_UNIFORM_BUFFER get="inline" set="null" line="1517" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER>
		<get_UNIFORM_BUFFER_BINDING get="inline" set="null" line="1518" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_BINDING>
		<get_UNIFORM_BUFFER_START get="inline" set="null" line="1519" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_START>
		<get_UNIFORM_BUFFER_SIZE get="inline" set="null" line="1520" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_SIZE>
		<get_MAX_VERTEX_UNIFORM_BLOCKS get="inline" set="null" line="1521" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_VERTEX_UNIFORM_BLOCKS>
		<get_MAX_FRAGMENT_UNIFORM_BLOCKS get="inline" set="null" line="1522" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_FRAGMENT_UNIFORM_BLOCKS>
		<get_MAX_COMBINED_UNIFORM_BLOCKS get="inline" set="null" line="1523" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_UNIFORM_BLOCKS>
		<get_MAX_UNIFORM_BUFFER_BINDINGS get="inline" set="null" line="1524" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_UNIFORM_BUFFER_BINDINGS>
		<get_MAX_UNIFORM_BLOCK_SIZE get="inline" set="null" line="1525" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_UNIFORM_BLOCK_SIZE>
		<get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS get="inline" set="null" line="1526" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS get="inline" set="null" line="1527" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<get_UNIFORM_BUFFER_OFFSET_ALIGNMENT get="inline" set="null" line="1528" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<get_ACTIVE_UNIFORM_BLOCKS get="inline" set="null" line="1529" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ACTIVE_UNIFORM_BLOCKS>
		<get_UNIFORM_TYPE get="inline" set="null" line="1530" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_TYPE>
		<get_UNIFORM_SIZE get="inline" set="null" line="1531" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_SIZE>
		<get_UNIFORM_BLOCK_INDEX get="inline" set="null" line="1532" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_INDEX>
		<get_UNIFORM_OFFSET get="inline" set="null" line="1533" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_OFFSET>
		<get_UNIFORM_ARRAY_STRIDE get="inline" set="null" line="1534" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_ARRAY_STRIDE>
		<get_UNIFORM_MATRIX_STRIDE get="inline" set="null" line="1535" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_MATRIX_STRIDE>
		<get_UNIFORM_IS_ROW_MAJOR get="inline" set="null" line="1536" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_IS_ROW_MAJOR>
		<get_UNIFORM_BLOCK_BINDING get="inline" set="null" line="1537" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_BINDING>
		<get_UNIFORM_BLOCK_DATA_SIZE get="inline" set="null" line="1538" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_DATA_SIZE>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORMS get="inline" set="null" line="1539" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES get="inline" set="null" line="1540" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER get="inline" set="null" line="1541" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER get="inline" set="null" line="1542" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<get_OBJECT_TYPE get="inline" set="null" line="1544" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_OBJECT_TYPE>
		<get_SYNC_CONDITION get="inline" set="null" line="1545" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_CONDITION>
		<get_SYNC_STATUS get="inline" set="null" line="1546" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_STATUS>
		<get_SYNC_FLAGS get="inline" set="null" line="1547" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FLAGS>
		<get_SYNC_FENCE get="inline" set="null" line="1548" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FENCE>
		<get_SYNC_GPU_COMMANDS_COMPLETE get="inline" set="null" line="1549" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_GPU_COMMANDS_COMPLETE>
		<get_UNSIGNALED get="inline" set="null" line="1550" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_UNSIGNALED>
		<get_SIGNALED get="inline" set="null" line="1551" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SIGNALED>
		<get_ALREADY_SIGNALED get="inline" set="null" line="1552" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ALREADY_SIGNALED>
		<get_TIMEOUT_EXPIRED get="inline" set="null" line="1553" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TIMEOUT_EXPIRED>
		<get_CONDITION_SATISFIED get="inline" set="null" line="1554" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_CONDITION_SATISFIED>
		<get_WAIT_FAILED get="inline" set="null" line="1555" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_WAIT_FAILED>
		<get_SYNC_FLUSH_COMMANDS_BIT get="inline" set="null" line="1556" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_SYNC_FLUSH_COMMANDS_BIT>
		<get_COLOR get="inline" set="null" line="1558" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_COLOR>
		<get_DEPTH get="inline" set="null" line="1559" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH>
		<get_STENCIL get="inline" set="null" line="1560" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STENCIL>
		<get_MIN get="inline" set="null" line="1561" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MIN>
		<get_MAX get="inline" set="null" line="1562" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX>
		<get_DEPTH_COMPONENT24 get="inline" set="null" line="1563" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT24>
		<get_STREAM_READ get="inline" set="null" line="1564" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_READ>
		<get_STREAM_COPY get="inline" set="null" line="1565" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STREAM_COPY>
		<get_STATIC_READ get="inline" set="null" line="1566" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_READ>
		<get_STATIC_COPY get="inline" set="null" line="1567" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_STATIC_COPY>
		<get_DYNAMIC_READ get="inline" set="null" line="1568" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_READ>
		<get_DYNAMIC_COPY get="inline" set="null" line="1569" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DYNAMIC_COPY>
		<get_DEPTH_COMPONENT32F get="inline" set="null" line="1570" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH_COMPONENT32F>
		<get_DEPTH32F_STENCIL8 get="inline" set="null" line="1571" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_DEPTH32F_STENCIL8>
		<get_INVALID_INDEX get="inline" set="null" line="1572" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_INVALID_INDEX>
		<get_TIMEOUT_IGNORED get="inline" set="null" line="1573" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_TIMEOUT_IGNORED>
		<get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL get="inline" set="null" line="1574" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<activeTexture public="1" get="inline" set="null" line="1577" static="1">
			<f a="this:texture">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</activeTexture>
		<attachShader public="1" get="inline" set="null" line="1584" static="1">
			<f a="this:program:shader">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</attachShader>
		<beginQuery public="1" get="inline" set="null" line="1591" static="1">
			<f a="this:target:query">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="1598" static="1">
			<f a="this:primitiveNode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="1605" static="1">
			<f a="this:program:index:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="1612" static="1">
			<f a="this:target:buffer">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="1619" static="1">
			<f a="this:target:index:buffer">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="1626" static="1">
			<f a="this:target:index:buffer:offset:size">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="1633" static="1">
			<f a="this:target:framebuffer">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="1640" static="1">
			<f a="this:target:renderbuffer">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="1647" static="1">
			<f a="this:unit:sampler">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindSampler>
		<bindTexture public="1" get="inline" set="null" line="1654" static="1">
			<f a="this:target:texture">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="1661" static="1">
			<f a="this:target:transformFeedback">
				<d/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="1668" static="1">
			<f a="this:vertexArray">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bindVertexArray>
		<blendColor public="1" get="inline" set="null" line="1675" static="1">
			<f a="this:red:green:blue:alpha">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendColor>
		<blendEquation public="1" get="inline" set="null" line="1682" static="1">
			<f a="this:mode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="1689" static="1">
			<f a="this:modeRGB:modeAlpha">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="1696" static="1">
			<f a="this:sfactor:dfactor">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="1703" static="1">
			<f a="this:srcRGB:dstRGB:srcAlpha:dstAlpha">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blendFuncSeparate>
		<blitFramebuffer public="1" get="inline" set="null" line="1710" static="1">
			<f a="this:srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</blitFramebuffer>
		<bufferData public="1" get="inline" set="null" line="1720" static="1">
			<f a="this:target:srcData:usage:?srcOffset:?length">
				<d/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="1733" static="1">
			<f a="this:target:offset:srcData:?srcOffset:?length">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<checkFramebufferStatus public="1" get="inline" set="null" line="1743" static="1">
			<f a="this:target">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="1750" static="1">
			<f a="this:mask">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clear>
		<clearBufferfi public="1" get="inline" set="null" line="1757" static="1">
			<f a="this:buffer:drawbuffer:depth:stencil">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferfi>
		<clearBufferfv public="1" set="method" line="1764" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset" v="::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</clearBufferfv>
		<clearBufferiv public="1" set="method" line="1772" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferiv>
		<clearBufferuiv public="1" set="method" line="1780" static="1">
			<f a="this:buffer:drawbuffer:values:?srcOffset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearBufferuiv>
		<clearColor public="1" get="inline" set="null" line="1788" static="1">
			<f a="this:red:green:blue:alpha">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearColor>
		<clearDepth public="1" get="inline" set="null" line="1795" static="1">
			<f a="this:depth">
				<d/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearDepth>
		<clearStencil public="1" get="inline" set="null" line="1802" static="1">
			<f a="this:s">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="1809" static="1">
			<f a="this:sync:flags:timeout">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="1816" static="1">
			<f a="this:red:green:blue:alpha">
				<d/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</colorMask>
		<compileShader public="1" get="inline" set="null" line="1823" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compileShader>
		<compressedTexImage2D public="1" get="inline" set="null" line="1833" static="1">
			<f a="this:target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexImage3D public="1" set="method" line="1843" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride" v=":::::::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexImage3D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="1855" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<compressedTexSubImage3D public="1" get="inline" set="null" line="1865" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride" v=":::::::::::0:">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</compressedTexSubImage3D>
		<copyBufferSubData public="1" get="inline" set="null" line="1874" static="1">
			<f a="this:readTarget:writeTarget:readOffset:writeOffset:size">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyBufferSubData>
		<copyTexImage2D public="1" get="inline" set="null" line="1881" static="1">
			<f a="this:target:level:internalformat:x:y:width:height:border">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="1888" static="1">
			<f a="this:target:level:xoffset:yoffset:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="1895" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="1902" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLBuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="1909" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="1916" static="1">
			<f a="this">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createProgram>
		<createQuery public="1" get="inline" set="null" line="1923" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="1930" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="1937" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createSampler>
		<createShader public="1" get="inline" set="null" line="1944" static="1">
			<f a="this:type">
				<d/>
				<x path="Int"/>
				<x path="lime.graphics.opengl.GLShader"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createShader>
		<createTexture public="1" get="inline" set="null" line="1951" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLTexture"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="1958" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="1965" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
			</f>
			<meta><m n=":impl"/></meta>
		</createVertexArray>
		<cullFace public="1" get="inline" set="null" line="1972" static="1">
			<f a="this:mode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="1979" static="1">
			<f a="this:buffer">
				<d/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="1986" static="1">
			<f a="this:framebuffer">
				<d/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="1993" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="2000" static="1">
			<f a="this:query">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="2007" static="1">
			<f a="this:renderbuffer">
				<d/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="2014" static="1">
			<f a="this:sampler">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="2021" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteShader>
		<deleteSync public="1" get="inline" set="null" line="2028" static="1">
			<f a="this:sync">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="2035" static="1">
			<f a="this:texture">
				<d/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="2042" static="1">
			<f a="this:transformFeedback">
				<d/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="2049" static="1">
			<f a="this:vertexArray">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="2056" static="1">
			<f a="this:func">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthFunc>
		<depthMask public="1" get="inline" set="null" line="2063" static="1">
			<f a="this:flag">
				<d/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthMask>
		<depthRange public="1" get="inline" set="null" line="2070" static="1">
			<f a="this:zNear:zFar">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</depthRange>
		<detachShader public="1" get="inline" set="null" line="2077" static="1">
			<f a="this:program:shader">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</detachShader>
		<disable public="1" get="inline" set="null" line="2084" static="1">
			<f a="this:cap">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="2091" static="1">
			<f a="this:index">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="2098" static="1">
			<f a="this:mode:first:count">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="2105" static="1">
			<f a="this:mode:first:count:instanceCount">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="2112" static="1">
			<f a="this:buffers">
				<d/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawBuffers>
		<drawElements public="1" get="inline" set="null" line="2119" static="1">
			<f a="this:mode:count:type:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="2126" static="1">
			<f a="this:mode:count:type:offset:instanceCount">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="2133" static="1">
			<f a="this:mode:start:end:count:type:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</drawRangeElements>
		<enable public="1" get="inline" set="null" line="2140" static="1">
			<f a="this:cap">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="2147" static="1">
			<f a="this:index">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="2154" static="1">
			<f a="this:target">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="2161" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="2168" static="1">
			<f a="this:condition:flags">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLSync"/>
			</f>
			<meta><m n=":impl"/></meta>
		</fenceSync>
		<finish public="1" get="inline" set="null" line="2175" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</finish>
		<flush public="1" get="inline" set="null" line="2182" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="2189" static="1">
			<f a="this:target:attachment:renderbuffertarget:renderbuffer">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="2196" static="1">
			<f a="this:target:attachment:textarget:texture:level">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="2203" static="1">
			<f a="this:target:attachment:texture:level:layer">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="2210" static="1">
			<f a="this:mode">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</frontFace>
		<generateMipmap public="1" get="inline" set="null" line="2217" static="1">
			<f a="this:target">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="2224" static="1">
			<f a="this:program:index">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="2231" static="1">
			<f a="this:program:index">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniform>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="2238" static="1">
			<f a="this:program:uniformBlockIndex">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" get="inline" set="null" line="2245" static="1">
			<f a="this:program:uniformBlockIndex:pname">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniformBlockParameter>
		<getActiveUniforms public="1" get="inline" set="null" line="2252" static="1">
			<f a="this:program:uniformIndices:pname">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getActiveUniforms>
		<getAttachedShaders public="1" get="inline" set="null" line="2259" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="2266" static="1">
			<f a="this:program:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getAttribLocation>
		<getBufferParameter public="1" get="inline" set="null" line="2273" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferParameter>
		<getBufferSubData public="1" get="inline" set="null" line="2283" static="1">
			<f a="this:target:srcByteOffset:dstData:?srcOffset:?length">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<d/>
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getBufferSubData>
		<getContextAttributes public="1" get="inline" set="null" line="2294" static="1">
			<f a="this">
				<d/>
				<t path="lime.graphics.opengl.GLContextAttributes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getContextAttributes>
		<getError public="1" get="inline" set="null" line="2301" static="1">
			<f a="this">
				<d/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getError>
		<getExtension public="1" get="inline" set="null" line="2308" static="1">
			<f a="this:name">
				<d/>
				<c path="String"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getExtension>
		<getFragDataLocation public="1" get="inline" set="null" line="2315" static="1">
			<f a="this:program:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="2322" static="1">
			<f a="this:target:attachment:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getFramebufferAttachmentParameter>
		<getIndexedParameter public="1" get="inline" set="null" line="2329" static="1">
			<f a="this:target:index">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getIndexedParameter>
		<getInternalformatParameter public="1" get="inline" set="null" line="2336" static="1">
			<f a="this:target:internalformat:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getInternalformatParameter>
		<getParameter public="1" get="inline" set="null" line="2343" static="1">
			<f a="this:pname">
				<d/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getParameter>
		<getProgramInfoLog public="1" get="inline" set="null" line="2350" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="2357" static="1">
			<f a="this:program:pname">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getProgramParameter>
		<getQuery public="1" get="inline" set="null" line="2364" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLQuery"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQuery>
		<getQueryParameter public="1" get="inline" set="null" line="2371" static="1">
			<f a="this:query:pname">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getQueryParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="2378" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getRenderbufferParameter>
		<getSamplerParameter public="1" get="inline" set="null" line="2385" static="1">
			<f a="this:sampler:pname">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSamplerParameter>
		<getShaderInfoLog public="1" get="inline" set="null" line="2392" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="2399" static="1">
			<f a="this:shader:pname">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="2406" static="1">
			<f a="this:shadertype:precisiontype">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="2413" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getShaderSource>
		<getSupportedExtensions public="1" get="inline" set="null" line="2420" static="1">
			<f a="this">
				<d/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getSupportedExtensions>
		<getSyncParameter public="1" get="inline" set="null" line="2427" static="1">
			<f a="this:sync:pname">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getSyncParameter>
		<getTexParameter public="1" get="inline" set="null" line="2434" static="1">
			<f a="this:target:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTexParameter>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="2441" static="1">
			<f a="this:program:index">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<t path="lime.graphics.opengl.GLActiveInfo"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getTransformFeedbackVarying>
		<getUniform public="1" get="inline" set="null" line="2448" static="1">
			<f a="this:program:location">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniform>
		<getUniformBlockIndex public="1" get="inline" set="null" line="2455" static="1">
			<f a="this:program:uniformBlockName">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="2462" static="1">
			<f a="this:program:uniformNames">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<c path="Array"><x path="Int"/></c>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="2469" static="1">
			<f a="this:program:name">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="String"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="2476" static="1">
			<f a="this:index:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="2483" static="1">
			<f a="this:index:pname">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta><m n=":impl"/></meta>
		</getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="2490" static="1">
			<f a="this:target:mode">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="2497" static="1">
			<f a="this:target:attachments">
				<d/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="2504" static="1">
			<f a="this:target:attachments:x:y:width:height">
				<d/>
				<x path="Int"/>
				<c path="Array"><x path="Int"/></c>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="2511" static="1">
			<f a="this:buffer">
				<d/>
				<t path="lime.graphics.opengl.GLBuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isBuffer>
		<isContextLost public="1" get="inline" set="null" line="2518" static="1">
			<f a="this">
				<d/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isContextLost>
		<isEnabled public="1" get="inline" set="null" line="2525" static="1">
			<f a="this:cap">
				<d/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="2532" static="1">
			<f a="this:framebuffer">
				<d/>
				<t path="lime.graphics.opengl.GLFramebuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="2539" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isProgram>
		<isQuery public="1" get="inline" set="null" line="2546" static="1">
			<f a="this:query">
				<d/>
				<t path="lime.graphics.opengl.GLQuery"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="2553" static="1">
			<f a="this:renderbuffer">
				<d/>
				<t path="lime.graphics.opengl.GLRenderbuffer"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="2560" static="1">
			<f a="this:sampler">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSampler>
		<isShader public="1" get="inline" set="null" line="2567" static="1">
			<f a="this:shader">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isShader>
		<isSync public="1" get="inline" set="null" line="2574" static="1">
			<f a="this:sync">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isSync>
		<isTexture public="1" get="inline" set="null" line="2581" static="1">
			<f a="this:texture">
				<d/>
				<t path="lime.graphics.opengl.GLTexture"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="2588" static="1">
			<f a="this:transformFeedback">
				<d/>
				<t path="lime.graphics.opengl.GLTransformFeedback"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="2595" static="1">
			<f a="this:vertexArray">
				<d/>
				<t path="lime.graphics.opengl.GLVertexArrayObject"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
		</isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="2602" static="1">
			<f a="this:width">
				<d/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</lineWidth>
		<linkProgram public="1" get="inline" set="null" line="2609" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</linkProgram>
		<pauseTransformFeedback public="1" get="inline" set="null" line="2616" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="2623" static="1">
			<f a="this:pname:param">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="2630" static="1">
			<f a="this:factor:units">
				<d/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</polygonOffset>
		<readBuffer public="1" get="inline" set="null" line="2637" static="1">
			<f a="this:src">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readBuffer>
		<readPixels public="1" get="inline" set="null" line="2647" static="1">
			<f a="this:x:y:width:height:format:type:pixels:?dstOffset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<renderbufferStorage public="1" get="inline" set="null" line="2656" static="1">
			<f a="this:target:internalformat:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="2663" static="1">
			<f a="this:target:samples:internalformat:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="2670" static="1">
			<f a="this">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="2677" static="1">
			<f a="this:value:invert">
				<d/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="2684" static="1">
			<f a="this:sampler:pname:param">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="2691" static="1">
			<f a="this:sampler:pname:param">
				<d/>
				<t path="lime.graphics.opengl.GLSampler"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</samplerParameteri>
		<scissor public="1" get="inline" set="null" line="2698" static="1">
			<f a="this:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</scissor>
		<shaderSource public="1" get="inline" set="null" line="2705" static="1">
			<f a="this:shader:source">
				<d/>
				<x path="lime.graphics.opengl.GLShader"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="2712" static="1">
			<f a="this:func:ref:mask">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="2719" static="1">
			<f a="this:face:func:ref:mask">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="2726" static="1">
			<f a="this:mask">
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="2733" static="1">
			<f a="this:face:mask">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="2740" static="1">
			<f a="this:fail:zfail:zpass">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="2747" static="1">
			<f a="this:face:fail:zfail:zpass">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</stencilOpSeparate>
		<texImage2D public="1" get="inline" set="null" line="2757" static="1">
			<f a="this:foo:target:level:internalformat:width:height:border:?format:?type:?srcData:?srcOffset">
				<d/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texImage3D public="1" get="inline" set="null" line="2768" static="1">
			<f a="this:target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset" v=":::::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texImage3D>
		<texStorage2D public="1" get="inline" set="null" line="2776" static="1">
			<f a="this:target:level:internalformat:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="2783" static="1">
			<f a="this:target:level:internalformat:width:height:depth">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="2790" static="1">
			<f a="this:target:pname:param">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameterf>
		<texParameteri public="1" get="inline" set="null" line="2797" static="1">
			<f a="this:target:pname:param">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texParameteri>
		<texSubImage2D public="1" get="inline" set="null" line="2807" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:?type:?srcData:?srcOffset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<d/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texSubImage2D>
		<texSubImage3D public="1" get="inline" set="null" line="2816" static="1">
			<f a="this:target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:srcData:?srcOffset" v="::::::::::::0">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage3D>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="2824" static="1">
			<f a="this:program:varyings:bufferMode">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<c path="Array"><c path="String"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="2831" static="1">
			<f a="this:location:v0">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1f>
		<uniform1fv public="1" get="inline" set="null" line="2841" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1fv>
		<uniform1i public="1" get="inline" set="null" line="2849" static="1">
			<f a="this:location:v0">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1i>
		<uniform1iv public="1" get="inline" set="null" line="2859" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1iv>
		<uniform1ui public="1" get="inline" set="null" line="2867" static="1">
			<f a="this:location:v0">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1ui>
		<uniform1uiv public="1" get="inline" set="null" line="2874" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform1uiv>
		<uniform2f public="1" get="inline" set="null" line="2881" static="1">
			<f a="this:location:v0:v1">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2f>
		<uniform2fv public="1" set="method" line="2891" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2fv>
		<uniform2i public="1" get="inline" set="null" line="2899" static="1">
			<f a="this:location:v0:v1">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2i>
		<uniform2iv public="1" get="inline" set="null" line="2909" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2iv>
		<uniform2ui public="1" get="inline" set="null" line="2917" static="1">
			<f a="this:location:v0:v1">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2ui>
		<uniform2uiv public="1" get="inline" set="null" line="2924" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform2uiv>
		<uniform3f public="1" get="inline" set="null" line="2931" static="1">
			<f a="this:location:v0:v1:v2">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3f>
		<uniform3fv public="1" get="inline" set="null" line="2941" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3fv>
		<uniform3i public="1" get="inline" set="null" line="2949" static="1">
			<f a="this:location:v0:v1:v2">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3i>
		<uniform3iv public="1" get="inline" set="null" line="2959" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3iv>
		<uniform3ui public="1" get="inline" set="null" line="2967" static="1">
			<f a="this:location:v0:v1:v2">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3ui>
		<uniform3uiv public="1" get="inline" set="null" line="2974" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform3uiv>
		<uniform4f public="1" get="inline" set="null" line="2981" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4f>
		<uniform4fv public="1" get="inline" set="null" line="2991" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4fv>
		<uniform4i public="1" get="inline" set="null" line="2999" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4i>
		<uniform4iv public="1" get="inline" set="null" line="3009" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4iv>
		<uniform4ui public="1" get="inline" set="null" line="3017" static="1">
			<f a="this:location:v0:v1:v2:v3">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4ui>
		<uniform4uiv public="1" get="inline" set="null" line="3024" static="1">
			<f a="this:location:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="lime.utils.UInt32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniform4uiv>
		<uniformBlockBinding public="1" get="inline" set="null" line="3031" static="1">
			<f a="this:program:uniformBlockIndex:uniformBlockBinding">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformBlockBinding>
		<uniformMatrix2fv public="1" get="inline" set="null" line="3041" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix2x3fv public="1" set="method" line="3055" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2x3fv>
		<uniformMatrix2x4fv public="1" set="method" line="3068" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix2x4fv>
		<uniformMatrix3fv public="1" get="inline" set="null" line="3084" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix3x2fv public="1" set="method" line="3098" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3x2fv>
		<uniformMatrix3x4fv public="1" set="method" line="3111" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix3x4fv>
		<uniformMatrix4fv public="1" get="inline" set="null" line="3127" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<uniformMatrix4x2fv public="1" set="method" line="3141" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4x2fv>
		<uniformMatrix4x3fv public="1" set="method" line="3154" static="1">
			<f a="this:location:transpose:v:?srcOffset:?srcLength" v="::::0:">
				<d/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</uniformMatrix4x3fv>
		<useProgram public="1" get="inline" set="null" line="3167" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</useProgram>
		<validateProgram public="1" get="inline" set="null" line="3174" static="1">
			<f a="this:program">
				<d/>
				<x path="lime.graphics.opengl.GLProgram"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="3181" static="1">
			<f a="this:indx:x">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="3188" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib1fv>
		<vertexAttrib2f public="1" get="inline" set="null" line="3195" static="1">
			<f a="this:indx:x:y">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="3202" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib2fv>
		<vertexAttrib3f public="1" get="inline" set="null" line="3209" static="1">
			<f a="this:indx:x:y:z">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="3216" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib3fv>
		<vertexAttrib4f public="1" get="inline" set="null" line="3223" static="1">
			<f a="this:indx:x:y:z:w">
				<d/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="3230" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttrib4fv>
		<vertexAttribDivisor public="1" get="inline" set="null" line="3237" static="1">
			<f a="this:index:divisor">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="3244" static="1">
			<f a="this:indx:x:y:z:w">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="3251" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4iv>
		<vertexAttribI4ui public="1" get="inline" set="null" line="3258" static="1">
			<f a="this:indx:x:y:z:w">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="3265" static="1">
			<f a="this:indx:values">
				<d/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribI4uiv>
		<vertexAttribIPointer public="1" get="inline" set="null" line="3272" static="1">
			<f a="this:index:size:type:stride:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="3279" static="1">
			<f a="this:indx:size:type:normalized:stride:offset">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="3286" static="1">
			<f a="this:x:y:width:height">
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</viewport>
		<waitSync public="1" get="inline" set="null" line="3293" static="1">
			<f a="this:sync:flags:timeout">
				<d/>
				<t path="lime.graphics.opengl.GLSync"/>
				<x path="Int"/>
				<x path="haxe.Int64"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</waitSync>
		<fromRenderContext set="method" line="3300" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.WebGL2RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<fromGL set="method" line="3316" static="1">
			<f a="gl">
				<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
				<x path="lime.graphics.WebGL2RenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>lime.graphics.RenderContext</e></m>
		</meta>
	</class>
	<abstract path="lime.graphics.WebGLRenderContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/WebGLRenderContext.hx">
		<from>
			<icast field="fromWebGL2RenderContext"><x path="lime.graphics.WebGL2RenderContext"/></icast>
			<icast field="fromRenderContext"><c path="lime.graphics.RenderContext"/></icast>
			<icast field="fromGL"><x path="Class"><c path="lime.graphics.opengl.GL"/></x></icast>
		</from>
		<this><x path="lime.graphics.WebGL2RenderContext"/></this>
		<haxe_doc>The `WebGLRenderContext` allows access to WebGL features when OpenGL, OpenGL ES or
	WebGL is the render context type of the `Window`.

	Using a WebGL context on a desktop or mobile platform enables support for cross-platform
	code that should run all platforms (when hardware acceleration is supported).

	You can convert from `lime.graphics.RenderContext`, `lime.graphics.OpenGLRenderContext`,
	`lime.graphics.OpenGLES3RenderContext`, `lime.graphics.OpenGLES2RenderContext`,
	`lime.graphics.WebGL2RenderContext` or `lime.graphics.opengl.GL` directly if desired:

	```haxe
	var webgl:WebGLRenderContext = window.context;
	var webgl:WebGLRenderContext = gl;
	var webgl:WebGLRenderContext = gles3;
	var webgl:WebGLRenderContext = gles2;
	var webgl:WebGLRenderContext = webgl2;
	var webgl:WebGLRenderContext = GL;
	```</haxe_doc>
		<meta><m n=":forward">
	<e>DEPTH_BUFFER_BIT</e>
	<e>STENCIL_BUFFER_BIT</e>
	<e>COLOR_BUFFER_BIT</e>
	<e>POINTS</e>
	<e>LINES</e>
	<e>LINE_LOOP</e>
	<e>LINE_STRIP</e>
	<e>TRIANGLES</e>
	<e>TRIANGLE_STRIP</e>
	<e>TRIANGLE_FAN</e>
	<e>ZERO</e>
	<e>ONE</e>
	<e>SRC_COLOR</e>
	<e>ONE_MINUS_SRC_COLOR</e>
	<e>SRC_ALPHA</e>
	<e>ONE_MINUS_SRC_ALPHA</e>
	<e>DST_ALPHA</e>
	<e>ONE_MINUS_DST_ALPHA</e>
	<e>DST_COLOR</e>
	<e>ONE_MINUS_DST_COLOR</e>
	<e>SRC_ALPHA_SATURATE</e>
	<e>FUNC_ADD</e>
	<e>BLEND_EQUATION</e>
	<e>BLEND_EQUATION_RGB</e>
	<e>BLEND_EQUATION_ALPHA</e>
	<e>FUNC_SUBTRACT</e>
	<e>FUNC_REVERSE_SUBTRACT</e>
	<e>BLEND_DST_RGB</e>
	<e>BLEND_SRC_RGB</e>
	<e>BLEND_DST_ALPHA</e>
	<e>BLEND_SRC_ALPHA</e>
	<e>CONSTANT_COLOR</e>
	<e>ONE_MINUS_CONSTANT_COLOR</e>
	<e>CONSTANT_ALPHA</e>
	<e>ONE_MINUS_CONSTANT_ALPHA</e>
	<e>BLEND_COLOR</e>
	<e>ARRAY_BUFFER</e>
	<e>ELEMENT_ARRAY_BUFFER</e>
	<e>ARRAY_BUFFER_BINDING</e>
	<e>ELEMENT_ARRAY_BUFFER_BINDING</e>
	<e>STREAM_DRAW</e>
	<e>STATIC_DRAW</e>
	<e>DYNAMIC_DRAW</e>
	<e>BUFFER_SIZE</e>
	<e>BUFFER_USAGE</e>
	<e>CURRENT_VERTEX_ATTRIB</e>
	<e>FRONT</e>
	<e>BACK</e>
	<e>FRONT_AND_BACK</e>
	<e>CULL_FACE</e>
	<e>BLEND</e>
	<e>DITHER</e>
	<e>STENCIL_TEST</e>
	<e>DEPTH_TEST</e>
	<e>SCISSOR_TEST</e>
	<e>POLYGON_OFFSET_FILL</e>
	<e>SAMPLE_ALPHA_TO_COVERAGE</e>
	<e>SAMPLE_COVERAGE</e>
	<e>NO_ERROR</e>
	<e>INVALID_ENUM</e>
	<e>INVALID_VALUE</e>
	<e>INVALID_OPERATION</e>
	<e>OUT_OF_MEMORY</e>
	<e>CW</e>
	<e>CCW</e>
	<e>LINE_WIDTH</e>
	<e>ALIASED_POINT_SIZE_RANGE</e>
	<e>ALIASED_LINE_WIDTH_RANGE</e>
	<e>CULL_FACE_MODE</e>
	<e>FRONT_FACE</e>
	<e>DEPTH_RANGE</e>
	<e>DEPTH_WRITEMASK</e>
	<e>DEPTH_CLEAR_VALUE</e>
	<e>DEPTH_FUNC</e>
	<e>STENCIL_CLEAR_VALUE</e>
	<e>STENCIL_FUNC</e>
	<e>STENCIL_FAIL</e>
	<e>STENCIL_PASS_DEPTH_FAIL</e>
	<e>STENCIL_PASS_DEPTH_PASS</e>
	<e>STENCIL_REF</e>
	<e>STENCIL_VALUE_MASK</e>
	<e>STENCIL_WRITEMASK</e>
	<e>STENCIL_BACK_FUNC</e>
	<e>STENCIL_BACK_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_FAIL</e>
	<e>STENCIL_BACK_PASS_DEPTH_PASS</e>
	<e>STENCIL_BACK_REF</e>
	<e>STENCIL_BACK_VALUE_MASK</e>
	<e>STENCIL_BACK_WRITEMASK</e>
	<e>VIEWPORT</e>
	<e>SCISSOR_BOX</e>
	<e>COLOR_CLEAR_VALUE</e>
	<e>COLOR_WRITEMASK</e>
	<e>UNPACK_ALIGNMENT</e>
	<e>PACK_ALIGNMENT</e>
	<e>MAX_TEXTURE_SIZE</e>
	<e>MAX_VIEWPORT_DIMS</e>
	<e>SUBPIXEL_BITS</e>
	<e>RED_BITS</e>
	<e>GREEN_BITS</e>
	<e>BLUE_BITS</e>
	<e>ALPHA_BITS</e>
	<e>DEPTH_BITS</e>
	<e>STENCIL_BITS</e>
	<e>POLYGON_OFFSET_UNITS</e>
	<e>POLYGON_OFFSET_FACTOR</e>
	<e>TEXTURE_BINDING_2D</e>
	<e>SAMPLE_BUFFERS</e>
	<e>SAMPLES</e>
	<e>SAMPLE_COVERAGE_VALUE</e>
	<e>SAMPLE_COVERAGE_INVERT</e>
	<e>COMPRESSED_TEXTURE_FORMATS</e>
	<e>DONT_CARE</e>
	<e>FASTEST</e>
	<e>NICEST</e>
	<e>GENERATE_MIPMAP_HINT</e>
	<e>BYTE</e>
	<e>UNSIGNED_BYTE</e>
	<e>SHORT</e>
	<e>UNSIGNED_SHORT</e>
	<e>INT</e>
	<e>UNSIGNED_INT</e>
	<e>FLOAT</e>
	<e>DEPTH_COMPONENT</e>
	<e>ALPHA</e>
	<e>RGB</e>
	<e>RGBA</e>
	<e>LUMINANCE</e>
	<e>LUMINANCE_ALPHA</e>
	<e>UNSIGNED_SHORT_4_4_4_4</e>
	<e>UNSIGNED_SHORT_5_5_5_1</e>
	<e>UNSIGNED_SHORT_5_6_5</e>
	<e>FRAGMENT_SHADER</e>
	<e>VERTEX_SHADER</e>
	<e>MAX_VERTEX_ATTRIBS</e>
	<e>MAX_VERTEX_UNIFORM_VECTORS</e>
	<e>MAX_VARYING_VECTORS</e>
	<e>MAX_COMBINED_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_VERTEX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_TEXTURE_IMAGE_UNITS</e>
	<e>MAX_FRAGMENT_UNIFORM_VECTORS</e>
	<e>SHADER_TYPE</e>
	<e>DELETE_STATUS</e>
	<e>LINK_STATUS</e>
	<e>VALIDATE_STATUS</e>
	<e>ATTACHED_SHADERS</e>
	<e>ACTIVE_UNIFORMS</e>
	<e>ACTIVE_ATTRIBUTES</e>
	<e>SHADING_LANGUAGE_VERSION</e>
	<e>CURRENT_PROGRAM</e>
	<e>NEVER</e>
	<e>LESS</e>
	<e>EQUAL</e>
	<e>LEQUAL</e>
	<e>GREATER</e>
	<e>NOTEQUAL</e>
	<e>GEQUAL</e>
	<e>ALWAYS</e>
	<e>KEEP</e>
	<e>REPLACE</e>
	<e>INCR</e>
	<e>DECR</e>
	<e>INVERT</e>
	<e>INCR_WRAP</e>
	<e>DECR_WRAP</e>
	<e>VENDOR</e>
	<e>RENDERER</e>
	<e>VERSION</e>
	<e>NEAREST</e>
	<e>LINEAR</e>
	<e>NEAREST_MIPMAP_NEAREST</e>
	<e>LINEAR_MIPMAP_NEAREST</e>
	<e>NEAREST_MIPMAP_LINEAR</e>
	<e>LINEAR_MIPMAP_LINEAR</e>
	<e>TEXTURE_MAG_FILTER</e>
	<e>TEXTURE_MIN_FILTER</e>
	<e>TEXTURE_WRAP_S</e>
	<e>TEXTURE_WRAP_T</e>
	<e>TEXTURE_2D</e>
	<e>TEXTURE</e>
	<e>TEXTURE_CUBE_MAP</e>
	<e>TEXTURE_BINDING_CUBE_MAP</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_X</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_X</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Y</e>
	<e>TEXTURE_CUBE_MAP_POSITIVE_Z</e>
	<e>TEXTURE_CUBE_MAP_NEGATIVE_Z</e>
	<e>MAX_CUBE_MAP_TEXTURE_SIZE</e>
	<e>TEXTURE0</e>
	<e>TEXTURE1</e>
	<e>TEXTURE2</e>
	<e>TEXTURE3</e>
	<e>TEXTURE4</e>
	<e>TEXTURE5</e>
	<e>TEXTURE6</e>
	<e>TEXTURE7</e>
	<e>TEXTURE8</e>
	<e>TEXTURE9</e>
	<e>TEXTURE10</e>
	<e>TEXTURE11</e>
	<e>TEXTURE12</e>
	<e>TEXTURE13</e>
	<e>TEXTURE14</e>
	<e>TEXTURE15</e>
	<e>TEXTURE16</e>
	<e>TEXTURE17</e>
	<e>TEXTURE18</e>
	<e>TEXTURE19</e>
	<e>TEXTURE20</e>
	<e>TEXTURE21</e>
	<e>TEXTURE22</e>
	<e>TEXTURE23</e>
	<e>TEXTURE24</e>
	<e>TEXTURE25</e>
	<e>TEXTURE26</e>
	<e>TEXTURE27</e>
	<e>TEXTURE28</e>
	<e>TEXTURE29</e>
	<e>TEXTURE30</e>
	<e>TEXTURE31</e>
	<e>ACTIVE_TEXTURE</e>
	<e>REPEAT</e>
	<e>CLAMP_TO_EDGE</e>
	<e>MIRRORED_REPEAT</e>
	<e>FLOAT_VEC2</e>
	<e>FLOAT_VEC3</e>
	<e>FLOAT_VEC4</e>
	<e>INT_VEC2</e>
	<e>INT_VEC3</e>
	<e>INT_VEC4</e>
	<e>BOOL</e>
	<e>BOOL_VEC2</e>
	<e>BOOL_VEC3</e>
	<e>BOOL_VEC4</e>
	<e>FLOAT_MAT2</e>
	<e>FLOAT_MAT3</e>
	<e>FLOAT_MAT4</e>
	<e>SAMPLER_2D</e>
	<e>SAMPLER_CUBE</e>
	<e>VERTEX_ATTRIB_ARRAY_ENABLED</e>
	<e>VERTEX_ATTRIB_ARRAY_SIZE</e>
	<e>VERTEX_ATTRIB_ARRAY_STRIDE</e>
	<e>VERTEX_ATTRIB_ARRAY_TYPE</e>
	<e>VERTEX_ATTRIB_ARRAY_NORMALIZED</e>
	<e>VERTEX_ATTRIB_ARRAY_POINTER</e>
	<e>VERTEX_ATTRIB_ARRAY_BUFFER_BINDING</e>
	<e>COMPILE_STATUS</e>
	<e>LOW_FLOAT</e>
	<e>MEDIUM_FLOAT</e>
	<e>HIGH_FLOAT</e>
	<e>LOW_INT</e>
	<e>MEDIUM_INT</e>
	<e>HIGH_INT</e>
	<e>FRAMEBUFFER</e>
	<e>RENDERBUFFER</e>
	<e>RGBA4</e>
	<e>RGB5_A1</e>
	<e>RGB565</e>
	<e>DEPTH_COMPONENT16</e>
	<e>STENCIL_INDEX</e>
	<e>STENCIL_INDEX8</e>
	<e>DEPTH_STENCIL</e>
	<e>RENDERBUFFER_WIDTH</e>
	<e>RENDERBUFFER_HEIGHT</e>
	<e>RENDERBUFFER_INTERNAL_FORMAT</e>
	<e>RENDERBUFFER_RED_SIZE</e>
	<e>RENDERBUFFER_GREEN_SIZE</e>
	<e>RENDERBUFFER_BLUE_SIZE</e>
	<e>RENDERBUFFER_ALPHA_SIZE</e>
	<e>RENDERBUFFER_DEPTH_SIZE</e>
	<e>RENDERBUFFER_STENCIL_SIZE</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE</e>
	<e>FRAMEBUFFER_ATTACHMENT_OBJECT_NAME</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL</e>
	<e>FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE</e>
	<e>COLOR_ATTACHMENT0</e>
	<e>DEPTH_ATTACHMENT</e>
	<e>STENCIL_ATTACHMENT</e>
	<e>DEPTH_STENCIL_ATTACHMENT</e>
	<e>NONE</e>
	<e>FRAMEBUFFER_COMPLETE</e>
	<e>FRAMEBUFFER_INCOMPLETE_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT</e>
	<e>FRAMEBUFFER_INCOMPLETE_DIMENSIONS</e>
	<e>FRAMEBUFFER_UNSUPPORTED</e>
	<e>FRAMEBUFFER_BINDING</e>
	<e>RENDERBUFFER_BINDING</e>
	<e>MAX_RENDERBUFFER_SIZE</e>
	<e>INVALID_FRAMEBUFFER_OPERATION</e>
	<e>UNPACK_FLIP_Y_WEBGL</e>
	<e>UNPACK_PREMULTIPLY_ALPHA_WEBGL</e>
	<e>CONTEXT_LOST_WEBGL</e>
	<e>UNPACK_COLORSPACE_CONVERSION_WEBGL</e>
	<e>BROWSER_DEFAULT_WEBGL</e>
	<e>type</e>
	<e>version</e>
	<e>activeTexture</e>
	<e>attachShader</e>
	<e>bindAttribLocation</e>
	<e>bindBuffer</e>
	<e>bindFramebuffer</e>
	<e>bindRenderbuffer</e>
	<e>bindTexture</e>
	<e>blendColor</e>
	<e>blendEquation</e>
	<e>blendEquationSeparate</e>
	<e>blendFunc</e>
	<e>blendFuncSeparate</e>
	<e>checkFramebufferStatus</e>
	<e>clear</e>
	<e>clearColor</e>
	<e>clearDepth</e>
	<e>clearStencil</e>
	<e>colorMask</e>
	<e>compileShader</e>
	<e>copyTexImage2D</e>
	<e>copyTexSubImage2D</e>
	<e>createBuffer</e>
	<e>createFramebuffer</e>
	<e>createProgram</e>
	<e>createRenderbuffer</e>
	<e>createShader</e>
	<e>createTexture</e>
	<e>cullFace</e>
	<e>cullFace</e>
	<e>deleteBuffer</e>
	<e>deleteFramebuffer</e>
	<e>deleteProgram</e>
	<e>deleteRenderbuffer</e>
	<e>deleteShader</e>
	<e>deleteTexture</e>
	<e>depthFunc</e>
	<e>depthMask</e>
	<e>depthRange</e>
	<e>detachShader</e>
	<e>disable</e>
	<e>disableVertexAttribArray</e>
	<e>drawArrays</e>
	<e>drawElements</e>
	<e>enable</e>
	<e>enableVertexAttribArray</e>
	<e>finish</e>
	<e>flush</e>
	<e>framebufferRenderbuffer</e>
	<e>framebufferTexture2D</e>
	<e>frontFace</e>
	<e>generateMipmap</e>
	<e>getActiveAttrib</e>
	<e>getActiveUniform</e>
	<e>getAttachedShaders</e>
	<e>getAttribLocation</e>
	<e>getBufferParameter</e>
	<e>getContextAttributes</e>
	<e>getError</e>
	<e>getExtension</e>
	<e>getFramebufferAttachmentParameter</e>
	<e>getParameter</e>
	<e>getProgramInfoLog</e>
	<e>getProgramParameter</e>
	<e>getRenderbufferParameter</e>
	<e>getShaderInfoLog</e>
	<e>getShaderParameter</e>
	<e>getShaderPrecisionFormat</e>
	<e>getShaderSource</e>
	<e>getSupportedExtensions</e>
	<e>getTexParameter</e>
	<e>getUniform</e>
	<e>getUniformLocation</e>
	<e>getVertexAttrib</e>
	<e>getVertexAttribOffset</e>
	<e>hint</e>
	<e>isBuffer</e>
	<e>isContextLost</e>
	<e>isEnabled</e>
	<e>isFramebuffer</e>
	<e>isProgram</e>
	<e>isRenderbuffer</e>
	<e>isShader</e>
	<e>isTexture</e>
	<e>lineWidth</e>
	<e>linkProgram</e>
	<e>pixelStorei</e>
	<e>polygonOffset</e>
	<e>renderbufferStorage</e>
	<e>sampleCoverage</e>
	<e>scissor</e>
	<e>shaderSource</e>
	<e>stencilFunc</e>
	<e>stencilFuncSeparate</e>
	<e>stencilMask</e>
	<e>stencilMaskSeparate</e>
	<e>stencilOp</e>
	<e>stencilOpSeparate</e>
	<e>texParameterf</e>
	<e>texParameteri</e>
	<e>uniform1f</e>
	<e>uniform1fv</e>
	<e>uniform1i</e>
	<e>uniform1iv</e>
	<e>uniform2f</e>
	<e>uniform2fv</e>
	<e>uniform2i</e>
	<e>uniform2iv</e>
	<e>uniform3f</e>
	<e>uniform3fv</e>
	<e>uniform3i</e>
	<e>uniform3iv</e>
	<e>uniform4f</e>
	<e>uniform4fv</e>
	<e>uniform4i</e>
	<e>uniform4iv</e>
	<e>useProgram</e>
	<e>validateProgram</e>
	<e>vertexAttrib1f</e>
	<e>vertexAttrib1fv</e>
	<e>vertexAttrib2f</e>
	<e>vertexAttrib2fv</e>
	<e>vertexAttrib3f</e>
	<e>vertexAttrib3fv</e>
	<e>vertexAttrib4f</e>
	<e>vertexAttrib4fv</e>
	<e>vertexAttribPointer</e>
	<e>viewport</e>
</m></meta>
		<impl><class path="lime.graphics._WebGLRenderContext.WebGLRenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/WebGLRenderContext.hx" private="1" module="lime.graphics.WebGLRenderContext">
	<bufferData public="1" set="method" line="37" static="1">
		<f a="this:target:srcData:usage">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferData>
	<bufferSubData public="1" get="inline" set="null" line="44" static="1">
		<f a="this:target:offset:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</bufferSubData>
	<compressedTexImage2D public="1" set="method" line="51" static="1">
		<f a="this:target:level:internalformat:width:height:border:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexImage2D>
	<compressedTexSubImage2D public="1" get="inline" set="null" line="58" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compressedTexSubImage2D>
	<readPixels public="1" get="inline" set="null" line="65" static="1">
		<f a="this:x:y:width:height:format:type:pixels">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</readPixels>
	<texImage2D public="1" get="inline" set="null" line="73" static="1">
		<f a="this:target:level:internalformat:width:height:border:format:type:srcData">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</texImage2D>
	<texSubImage2D public="1" get="inline" set="null" line="94" static="1">
		<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ srcOffset : 0 }</e></m>
			<m n=":impl"/>
		</meta>
	</texSubImage2D>
	<uniformMatrix2fv public="1" set="method" line="114" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix2fv>
	<uniformMatrix3fv public="1" set="method" line="121" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix3fv>
	<uniformMatrix4fv public="1" set="method" line="128" static="1">
		<f a="this:location:transpose:v">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<t path="lime.graphics.opengl.GLUniformLocation"/>
			<x path="Bool"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</uniformMatrix4fv>
	<fromWebGL2RenderContext set="method" line="135" static="1">
		<f a="gl">
			<x path="lime.graphics.WebGL2RenderContext"/>
			<x path="lime.graphics.WebGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromWebGL2RenderContext>
	<fromRenderContext set="method" line="142" static="1">
		<f a="context">
			<c path="lime.graphics.RenderContext"/>
			<x path="lime.graphics.WebGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromRenderContext>
	<fromGL set="method" line="149" static="1">
		<f a="gl">
			<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
			<x path="lime.graphics.WebGLRenderContext"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromGL>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics._WebGLRenderContext.WebGLRenderContext_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/WebGLRenderContext.hx" private="1" module="lime.graphics.WebGLRenderContext">
		<bufferData public="1" set="method" line="37" static="1">
			<f a="this:target:srcData:usage">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferData>
		<bufferSubData public="1" get="inline" set="null" line="44" static="1">
			<f a="this:target:offset:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</bufferSubData>
		<compressedTexImage2D public="1" set="method" line="51" static="1">
			<f a="this:target:level:internalformat:width:height:border:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexImage2D>
		<compressedTexSubImage2D public="1" get="inline" set="null" line="58" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compressedTexSubImage2D>
		<readPixels public="1" get="inline" set="null" line="65" static="1">
			<f a="this:x:y:width:height:format:type:pixels">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</readPixels>
		<texImage2D public="1" get="inline" set="null" line="73" static="1">
			<f a="this:target:level:internalformat:width:height:border:format:type:srcData">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</texImage2D>
		<texSubImage2D public="1" get="inline" set="null" line="94" static="1">
			<f a="this:target:level:xoffset:yoffset:width:height:format:type:srcData:?srcOffset" v="::::::::::0">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ srcOffset : 0 }</e></m>
				<m n=":impl"/>
			</meta>
		</texSubImage2D>
		<uniformMatrix2fv public="1" set="method" line="114" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix2fv>
		<uniformMatrix3fv public="1" set="method" line="121" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix3fv>
		<uniformMatrix4fv public="1" set="method" line="128" static="1">
			<f a="this:location:transpose:v">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<t path="lime.graphics.opengl.GLUniformLocation"/>
				<x path="Bool"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</uniformMatrix4fv>
		<fromWebGL2RenderContext set="method" line="135" static="1">
			<f a="gl">
				<x path="lime.graphics.WebGL2RenderContext"/>
				<x path="lime.graphics.WebGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromWebGL2RenderContext>
		<fromRenderContext set="method" line="142" static="1">
			<f a="context">
				<c path="lime.graphics.RenderContext"/>
				<x path="lime.graphics.WebGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromRenderContext>
		<fromGL set="method" line="149" static="1">
			<f a="gl">
				<x path="Class"><c path="lime.graphics.opengl.GL"/></x>
				<x path="lime.graphics.WebGLRenderContext"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromGL>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.graphics.opengl.GL" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GL.hx">
		<DEPTH_BUFFER_BIT public="1" get="inline" set="null" expr="0x00000100" line="24" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000100</e></m></meta>
		</DEPTH_BUFFER_BIT>
		<STENCIL_BUFFER_BIT public="1" get="inline" set="null" expr="0x00000400" line="25" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000400</e></m></meta>
		</STENCIL_BUFFER_BIT>
		<COLOR_BUFFER_BIT public="1" get="inline" set="null" expr="0x00004000" line="26" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00004000</e></m></meta>
		</COLOR_BUFFER_BIT>
		<POINTS public="1" get="inline" set="null" expr="0x0000" line="28" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</POINTS>
		<LINES public="1" get="inline" set="null" expr="0x0001" line="29" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LINES>
		<LINE_LOOP public="1" get="inline" set="null" expr="0x0002" line="30" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</LINE_LOOP>
		<LINE_STRIP public="1" get="inline" set="null" expr="0x0003" line="31" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0003</e></m></meta>
		</LINE_STRIP>
		<TRIANGLES public="1" get="inline" set="null" expr="0x0004" line="32" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0004</e></m></meta>
		</TRIANGLES>
		<TRIANGLE_STRIP public="1" get="inline" set="null" expr="0x0005" line="33" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0005</e></m></meta>
		</TRIANGLE_STRIP>
		<TRIANGLE_FAN public="1" get="inline" set="null" expr="0x0006" line="34" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0006</e></m></meta>
		</TRIANGLE_FAN>
		<ZERO public="1" get="inline" set="null" expr="0" line="36" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</ZERO>
		<ONE public="1" get="inline" set="null" expr="1" line="37" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</ONE>
		<SRC_COLOR public="1" get="inline" set="null" expr="0x0300" line="38" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0300</e></m></meta>
		</SRC_COLOR>
		<ONE_MINUS_SRC_COLOR public="1" get="inline" set="null" expr="0x0301" line="39" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0301</e></m></meta>
		</ONE_MINUS_SRC_COLOR>
		<SRC_ALPHA public="1" get="inline" set="null" expr="0x0302" line="40" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0302</e></m></meta>
		</SRC_ALPHA>
		<ONE_MINUS_SRC_ALPHA public="1" get="inline" set="null" expr="0x0303" line="41" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0303</e></m></meta>
		</ONE_MINUS_SRC_ALPHA>
		<DST_ALPHA public="1" get="inline" set="null" expr="0x0304" line="42" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0304</e></m></meta>
		</DST_ALPHA>
		<ONE_MINUS_DST_ALPHA public="1" get="inline" set="null" expr="0x0305" line="43" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0305</e></m></meta>
		</ONE_MINUS_DST_ALPHA>
		<DST_COLOR public="1" get="inline" set="null" expr="0x0306" line="45" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0306</e></m></meta>
		</DST_COLOR>
		<ONE_MINUS_DST_COLOR public="1" get="inline" set="null" expr="0x0307" line="46" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0307</e></m></meta>
		</ONE_MINUS_DST_COLOR>
		<SRC_ALPHA_SATURATE public="1" get="inline" set="null" expr="0x0308" line="47" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0308</e></m></meta>
		</SRC_ALPHA_SATURATE>
		<FUNC_ADD public="1" get="inline" set="null" expr="0x8006" line="49" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8006</e></m></meta>
		</FUNC_ADD>
		<BLEND_EQUATION public="1" get="inline" set="null" expr="0x8009" line="50" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION>
		<BLEND_EQUATION_RGB public="1" get="inline" set="null" expr="0x8009" line="51" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8009</e></m></meta>
		</BLEND_EQUATION_RGB>
		<BLEND_EQUATION_ALPHA public="1" get="inline" set="null" expr="0x883D" line="52" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x883D</e></m></meta>
		</BLEND_EQUATION_ALPHA>
		<FUNC_SUBTRACT public="1" get="inline" set="null" expr="0x800A" line="54" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800A</e></m></meta>
		</FUNC_SUBTRACT>
		<FUNC_REVERSE_SUBTRACT public="1" get="inline" set="null" expr="0x800B" line="55" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x800B</e></m></meta>
		</FUNC_REVERSE_SUBTRACT>
		<BLEND_DST_RGB public="1" get="inline" set="null" expr="0x80C8" line="57" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C8</e></m></meta>
		</BLEND_DST_RGB>
		<BLEND_SRC_RGB public="1" get="inline" set="null" expr="0x80C9" line="58" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80C9</e></m></meta>
		</BLEND_SRC_RGB>
		<BLEND_DST_ALPHA public="1" get="inline" set="null" expr="0x80CA" line="59" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CA</e></m></meta>
		</BLEND_DST_ALPHA>
		<BLEND_SRC_ALPHA public="1" get="inline" set="null" expr="0x80CB" line="60" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80CB</e></m></meta>
		</BLEND_SRC_ALPHA>
		<CONSTANT_COLOR public="1" get="inline" set="null" expr="0x8001" line="61" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8001</e></m></meta>
		</CONSTANT_COLOR>
		<ONE_MINUS_CONSTANT_COLOR public="1" get="inline" set="null" expr="0x8002" line="62" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8002</e></m></meta>
		</ONE_MINUS_CONSTANT_COLOR>
		<CONSTANT_ALPHA public="1" get="inline" set="null" expr="0x8003" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8003</e></m></meta>
		</CONSTANT_ALPHA>
		<ONE_MINUS_CONSTANT_ALPHA public="1" get="inline" set="null" expr="0x8004" line="64" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8004</e></m></meta>
		</ONE_MINUS_CONSTANT_ALPHA>
		<BLEND_COLOR public="1" get="inline" set="null" expr="0x8005" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8005</e></m></meta>
		</BLEND_COLOR>
		<ARRAY_BUFFER public="1" get="inline" set="null" expr="0x8892" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8892</e></m></meta>
		</ARRAY_BUFFER>
		<ELEMENT_ARRAY_BUFFER public="1" get="inline" set="null" expr="0x8893" line="68" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8893</e></m></meta>
		</ELEMENT_ARRAY_BUFFER>
		<ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8894" line="69" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8894</e></m></meta>
		</ARRAY_BUFFER_BINDING>
		<ELEMENT_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8895" line="70" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8895</e></m></meta>
		</ELEMENT_ARRAY_BUFFER_BINDING>
		<STREAM_DRAW public="1" get="inline" set="null" expr="0x88E0" line="72" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E0</e></m></meta>
		</STREAM_DRAW>
		<STATIC_DRAW public="1" get="inline" set="null" expr="0x88E4" line="73" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E4</e></m></meta>
		</STATIC_DRAW>
		<DYNAMIC_DRAW public="1" get="inline" set="null" expr="0x88E8" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E8</e></m></meta>
		</DYNAMIC_DRAW>
		<BUFFER_SIZE public="1" get="inline" set="null" expr="0x8764" line="76" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8764</e></m></meta>
		</BUFFER_SIZE>
		<BUFFER_USAGE public="1" get="inline" set="null" expr="0x8765" line="77" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8765</e></m></meta>
		</BUFFER_USAGE>
		<CURRENT_VERTEX_ATTRIB public="1" get="inline" set="null" expr="0x8626" line="79" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8626</e></m></meta>
		</CURRENT_VERTEX_ATTRIB>
		<FRONT public="1" get="inline" set="null" expr="0x0404" line="81" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0404</e></m></meta>
		</FRONT>
		<BACK public="1" get="inline" set="null" expr="0x0405" line="82" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0405</e></m></meta>
		</BACK>
		<FRONT_AND_BACK public="1" get="inline" set="null" expr="0x0408" line="83" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0408</e></m></meta>
		</FRONT_AND_BACK>
		<CULL_FACE public="1" get="inline" set="null" expr="0x0B44" line="85" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B44</e></m></meta>
		</CULL_FACE>
		<BLEND public="1" get="inline" set="null" expr="0x0BE2" line="86" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BE2</e></m></meta>
		</BLEND>
		<DITHER public="1" get="inline" set="null" expr="0x0BD0" line="87" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BD0</e></m></meta>
		</DITHER>
		<STENCIL_TEST public="1" get="inline" set="null" expr="0x0B90" line="88" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B90</e></m></meta>
		</STENCIL_TEST>
		<DEPTH_TEST public="1" get="inline" set="null" expr="0x0B71" line="89" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B71</e></m></meta>
		</DEPTH_TEST>
		<SCISSOR_TEST public="1" get="inline" set="null" expr="0x0C11" line="90" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C11</e></m></meta>
		</SCISSOR_TEST>
		<POLYGON_OFFSET_FILL public="1" get="inline" set="null" expr="0x8037" line="91" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8037</e></m></meta>
		</POLYGON_OFFSET_FILL>
		<SAMPLE_ALPHA_TO_COVERAGE public="1" get="inline" set="null" expr="0x809E" line="92" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x809E</e></m></meta>
		</SAMPLE_ALPHA_TO_COVERAGE>
		<SAMPLE_COVERAGE public="1" get="inline" set="null" expr="0x80A0" line="93" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A0</e></m></meta>
		</SAMPLE_COVERAGE>
		<NO_ERROR public="1" get="inline" set="null" expr="0" line="95" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NO_ERROR>
		<INVALID_ENUM public="1" get="inline" set="null" expr="0x0500" line="96" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0500</e></m></meta>
		</INVALID_ENUM>
		<INVALID_VALUE public="1" get="inline" set="null" expr="0x0501" line="97" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0501</e></m></meta>
		</INVALID_VALUE>
		<INVALID_OPERATION public="1" get="inline" set="null" expr="0x0502" line="98" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0502</e></m></meta>
		</INVALID_OPERATION>
		<OUT_OF_MEMORY public="1" get="inline" set="null" expr="0x0505" line="99" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0505</e></m></meta>
		</OUT_OF_MEMORY>
		<CW public="1" get="inline" set="null" expr="0x0900" line="101" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0900</e></m></meta>
		</CW>
		<CCW public="1" get="inline" set="null" expr="0x0901" line="102" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0901</e></m></meta>
		</CCW>
		<LINE_WIDTH public="1" get="inline" set="null" expr="0x0B21" line="104" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B21</e></m></meta>
		</LINE_WIDTH>
		<ALIASED_POINT_SIZE_RANGE public="1" get="inline" set="null" expr="0x846D" line="105" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846D</e></m></meta>
		</ALIASED_POINT_SIZE_RANGE>
		<ALIASED_LINE_WIDTH_RANGE public="1" get="inline" set="null" expr="0x846E" line="106" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x846E</e></m></meta>
		</ALIASED_LINE_WIDTH_RANGE>
		<CULL_FACE_MODE public="1" get="inline" set="null" expr="0x0B45" line="107" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B45</e></m></meta>
		</CULL_FACE_MODE>
		<FRONT_FACE public="1" get="inline" set="null" expr="0x0B46" line="108" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B46</e></m></meta>
		</FRONT_FACE>
		<DEPTH_RANGE public="1" get="inline" set="null" expr="0x0B70" line="109" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B70</e></m></meta>
		</DEPTH_RANGE>
		<DEPTH_WRITEMASK public="1" get="inline" set="null" expr="0x0B72" line="110" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B72</e></m></meta>
		</DEPTH_WRITEMASK>
		<DEPTH_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0B73" line="111" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B73</e></m></meta>
		</DEPTH_CLEAR_VALUE>
		<DEPTH_FUNC public="1" get="inline" set="null" expr="0x0B74" line="112" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B74</e></m></meta>
		</DEPTH_FUNC>
		<STENCIL_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0B91" line="113" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B91</e></m></meta>
		</STENCIL_CLEAR_VALUE>
		<STENCIL_FUNC public="1" get="inline" set="null" expr="0x0B92" line="114" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B92</e></m></meta>
		</STENCIL_FUNC>
		<STENCIL_FAIL public="1" get="inline" set="null" expr="0x0B94" line="115" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B94</e></m></meta>
		</STENCIL_FAIL>
		<STENCIL_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="0x0B95" line="116" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B95</e></m></meta>
		</STENCIL_PASS_DEPTH_FAIL>
		<STENCIL_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="0x0B96" line="117" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B96</e></m></meta>
		</STENCIL_PASS_DEPTH_PASS>
		<STENCIL_REF public="1" get="inline" set="null" expr="0x0B97" line="118" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B97</e></m></meta>
		</STENCIL_REF>
		<STENCIL_VALUE_MASK public="1" get="inline" set="null" expr="0x0B93" line="119" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B93</e></m></meta>
		</STENCIL_VALUE_MASK>
		<STENCIL_WRITEMASK public="1" get="inline" set="null" expr="0x0B98" line="120" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0B98</e></m></meta>
		</STENCIL_WRITEMASK>
		<STENCIL_BACK_FUNC public="1" get="inline" set="null" expr="0x8800" line="121" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8800</e></m></meta>
		</STENCIL_BACK_FUNC>
		<STENCIL_BACK_FAIL public="1" get="inline" set="null" expr="0x8801" line="122" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8801</e></m></meta>
		</STENCIL_BACK_FAIL>
		<STENCIL_BACK_PASS_DEPTH_FAIL public="1" get="inline" set="null" expr="0x8802" line="123" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8802</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_FAIL>
		<STENCIL_BACK_PASS_DEPTH_PASS public="1" get="inline" set="null" expr="0x8803" line="124" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8803</e></m></meta>
		</STENCIL_BACK_PASS_DEPTH_PASS>
		<STENCIL_BACK_REF public="1" get="inline" set="null" expr="0x8CA3" line="125" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA3</e></m></meta>
		</STENCIL_BACK_REF>
		<STENCIL_BACK_VALUE_MASK public="1" get="inline" set="null" expr="0x8CA4" line="126" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA4</e></m></meta>
		</STENCIL_BACK_VALUE_MASK>
		<STENCIL_BACK_WRITEMASK public="1" get="inline" set="null" expr="0x8CA5" line="127" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA5</e></m></meta>
		</STENCIL_BACK_WRITEMASK>
		<VIEWPORT public="1" get="inline" set="null" expr="0x0BA2" line="128" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0BA2</e></m></meta>
		</VIEWPORT>
		<SCISSOR_BOX public="1" get="inline" set="null" expr="0x0C10" line="129" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C10</e></m></meta>
		</SCISSOR_BOX>
		<COLOR_CLEAR_VALUE public="1" get="inline" set="null" expr="0x0C22" line="131" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C22</e></m></meta>
		</COLOR_CLEAR_VALUE>
		<COLOR_WRITEMASK public="1" get="inline" set="null" expr="0x0C23" line="132" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C23</e></m></meta>
		</COLOR_WRITEMASK>
		<UNPACK_ALIGNMENT public="1" get="inline" set="null" expr="0x0CF5" line="133" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF5</e></m></meta>
		</UNPACK_ALIGNMENT>
		<PACK_ALIGNMENT public="1" get="inline" set="null" expr="0x0D05" line="134" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D05</e></m></meta>
		</PACK_ALIGNMENT>
		<MAX_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x0D33" line="135" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D33</e></m></meta>
		</MAX_TEXTURE_SIZE>
		<MAX_VIEWPORT_DIMS public="1" get="inline" set="null" expr="0x0D3A" line="136" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D3A</e></m></meta>
		</MAX_VIEWPORT_DIMS>
		<SUBPIXEL_BITS public="1" get="inline" set="null" expr="0x0D50" line="137" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D50</e></m></meta>
		</SUBPIXEL_BITS>
		<RED_BITS public="1" get="inline" set="null" expr="0x0D52" line="138" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D52</e></m></meta>
		</RED_BITS>
		<GREEN_BITS public="1" get="inline" set="null" expr="0x0D53" line="139" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D53</e></m></meta>
		</GREEN_BITS>
		<BLUE_BITS public="1" get="inline" set="null" expr="0x0D54" line="140" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D54</e></m></meta>
		</BLUE_BITS>
		<ALPHA_BITS public="1" get="inline" set="null" expr="0x0D55" line="141" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D55</e></m></meta>
		</ALPHA_BITS>
		<DEPTH_BITS public="1" get="inline" set="null" expr="0x0D56" line="142" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D56</e></m></meta>
		</DEPTH_BITS>
		<STENCIL_BITS public="1" get="inline" set="null" expr="0x0D57" line="143" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D57</e></m></meta>
		</STENCIL_BITS>
		<POLYGON_OFFSET_UNITS public="1" get="inline" set="null" expr="0x2A00" line="144" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2A00</e></m></meta>
		</POLYGON_OFFSET_UNITS>
		<POLYGON_OFFSET_FACTOR public="1" get="inline" set="null" expr="0x8038" line="146" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8038</e></m></meta>
		</POLYGON_OFFSET_FACTOR>
		<TEXTURE_BINDING_2D public="1" get="inline" set="null" expr="0x8069" line="147" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8069</e></m></meta>
		</TEXTURE_BINDING_2D>
		<SAMPLE_BUFFERS public="1" get="inline" set="null" expr="0x80A8" line="148" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A8</e></m></meta>
		</SAMPLE_BUFFERS>
		<SAMPLES public="1" get="inline" set="null" expr="0x80A9" line="149" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80A9</e></m></meta>
		</SAMPLES>
		<SAMPLE_COVERAGE_VALUE public="1" get="inline" set="null" expr="0x80AA" line="150" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AA</e></m></meta>
		</SAMPLE_COVERAGE_VALUE>
		<SAMPLE_COVERAGE_INVERT public="1" get="inline" set="null" expr="0x80AB" line="151" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80AB</e></m></meta>
		</SAMPLE_COVERAGE_INVERT>
		<NUM_COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="0x86A2" line="153" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A2</e></m></meta>
		</NUM_COMPRESSED_TEXTURE_FORMATS>
		<COMPRESSED_TEXTURE_FORMATS public="1" get="inline" set="null" expr="0x86A3" line="154" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x86A3</e></m></meta>
		</COMPRESSED_TEXTURE_FORMATS>
		<DONT_CARE public="1" get="inline" set="null" expr="0x1100" line="156" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1100</e></m></meta>
		</DONT_CARE>
		<FASTEST public="1" get="inline" set="null" expr="0x1101" line="157" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1101</e></m></meta>
		</FASTEST>
		<NICEST public="1" get="inline" set="null" expr="0x1102" line="158" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1102</e></m></meta>
		</NICEST>
		<GENERATE_MIPMAP_HINT public="1" get="inline" set="null" expr="0x8192" line="160" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8192</e></m></meta>
		</GENERATE_MIPMAP_HINT>
		<BYTE public="1" get="inline" set="null" expr="0x1400" line="162" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1400</e></m></meta>
		</BYTE>
		<UNSIGNED_BYTE public="1" get="inline" set="null" expr="0x1401" line="163" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1401</e></m></meta>
		</UNSIGNED_BYTE>
		<SHORT public="1" get="inline" set="null" expr="0x1402" line="164" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1402</e></m></meta>
		</SHORT>
		<UNSIGNED_SHORT public="1" get="inline" set="null" expr="0x1403" line="165" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1403</e></m></meta>
		</UNSIGNED_SHORT>
		<INT public="1" get="inline" set="null" expr="0x1404" line="166" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1404</e></m></meta>
		</INT>
		<UNSIGNED_INT public="1" get="inline" set="null" expr="0x1405" line="167" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1405</e></m></meta>
		</UNSIGNED_INT>
		<FLOAT public="1" get="inline" set="null" expr="0x1406" line="168" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1406</e></m></meta>
		</FLOAT>
		<DEPTH_COMPONENT public="1" get="inline" set="null" expr="0x1902" line="170" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1902</e></m></meta>
		</DEPTH_COMPONENT>
		<ALPHA public="1" get="inline" set="null" expr="0x1906" line="171" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1906</e></m></meta>
		</ALPHA>
		<RGB public="1" get="inline" set="null" expr="0x1907" line="172" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1907</e></m></meta>
		</RGB>
		<RGBA public="1" get="inline" set="null" expr="0x1908" line="173" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1908</e></m></meta>
		</RGBA>
		<LUMINANCE public="1" get="inline" set="null" expr="0x1909" line="174" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1909</e></m></meta>
		</LUMINANCE>
		<LUMINANCE_ALPHA public="1" get="inline" set="null" expr="0x190A" line="175" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x190A</e></m></meta>
		</LUMINANCE_ALPHA>
		<UNSIGNED_SHORT_4_4_4_4 public="1" get="inline" set="null" expr="0x8033" line="177" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8033</e></m></meta>
		</UNSIGNED_SHORT_4_4_4_4>
		<UNSIGNED_SHORT_5_5_5_1 public="1" get="inline" set="null" expr="0x8034" line="178" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8034</e></m></meta>
		</UNSIGNED_SHORT_5_5_5_1>
		<UNSIGNED_SHORT_5_6_5 public="1" get="inline" set="null" expr="0x8363" line="179" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8363</e></m></meta>
		</UNSIGNED_SHORT_5_6_5>
		<FRAGMENT_SHADER public="1" get="inline" set="null" expr="0x8B30" line="181" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B30</e></m></meta>
		</FRAGMENT_SHADER>
		<VERTEX_SHADER public="1" get="inline" set="null" expr="0x8B31" line="182" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B31</e></m></meta>
		</VERTEX_SHADER>
		<MAX_VERTEX_ATTRIBS public="1" get="inline" set="null" expr="0x8869" line="183" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8869</e></m></meta>
		</MAX_VERTEX_ATTRIBS>
		<MAX_VERTEX_UNIFORM_VECTORS public="1" get="inline" set="null" expr="0x8DFB" line="184" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFB</e></m></meta>
		</MAX_VERTEX_UNIFORM_VECTORS>
		<MAX_VARYING_VECTORS public="1" get="inline" set="null" expr="0x8DFC" line="185" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFC</e></m></meta>
		</MAX_VARYING_VECTORS>
		<MAX_COMBINED_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8B4D" line="186" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4D</e></m></meta>
		</MAX_COMBINED_TEXTURE_IMAGE_UNITS>
		<MAX_VERTEX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8B4C" line="187" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4C</e></m></meta>
		</MAX_VERTEX_TEXTURE_IMAGE_UNITS>
		<MAX_TEXTURE_IMAGE_UNITS public="1" get="inline" set="null" expr="0x8872" line="188" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8872</e></m></meta>
		</MAX_TEXTURE_IMAGE_UNITS>
		<MAX_FRAGMENT_UNIFORM_VECTORS public="1" get="inline" set="null" expr="0x8DFD" line="189" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DFD</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_VECTORS>
		<SHADER_TYPE public="1" get="inline" set="null" expr="0x8B4F" line="190" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4F</e></m></meta>
		</SHADER_TYPE>
		<DELETE_STATUS public="1" get="inline" set="null" expr="0x8B80" line="191" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B80</e></m></meta>
		</DELETE_STATUS>
		<LINK_STATUS public="1" get="inline" set="null" expr="0x8B82" line="192" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B82</e></m></meta>
		</LINK_STATUS>
		<VALIDATE_STATUS public="1" get="inline" set="null" expr="0x8B83" line="193" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B83</e></m></meta>
		</VALIDATE_STATUS>
		<ATTACHED_SHADERS public="1" get="inline" set="null" expr="0x8B85" line="194" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B85</e></m></meta>
		</ATTACHED_SHADERS>
		<ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="0x8B86" line="195" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B86</e></m></meta>
		</ACTIVE_UNIFORMS>
		<ACTIVE_ATTRIBUTES public="1" get="inline" set="null" expr="0x8B89" line="196" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B89</e></m></meta>
		</ACTIVE_ATTRIBUTES>
		<SHADING_LANGUAGE_VERSION public="1" get="inline" set="null" expr="0x8B8C" line="197" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8C</e></m></meta>
		</SHADING_LANGUAGE_VERSION>
		<CURRENT_PROGRAM public="1" get="inline" set="null" expr="0x8B8D" line="198" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8D</e></m></meta>
		</CURRENT_PROGRAM>
		<NEVER public="1" get="inline" set="null" expr="0x0200" line="200" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</NEVER>
		<LESS public="1" get="inline" set="null" expr="0x0201" line="201" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0201</e></m></meta>
		</LESS>
		<EQUAL public="1" get="inline" set="null" expr="0x0202" line="202" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0202</e></m></meta>
		</EQUAL>
		<LEQUAL public="1" get="inline" set="null" expr="0x0203" line="203" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0203</e></m></meta>
		</LEQUAL>
		<GREATER public="1" get="inline" set="null" expr="0x0204" line="204" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0204</e></m></meta>
		</GREATER>
		<NOTEQUAL public="1" get="inline" set="null" expr="0x0205" line="205" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0205</e></m></meta>
		</NOTEQUAL>
		<GEQUAL public="1" get="inline" set="null" expr="0x0206" line="206" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0206</e></m></meta>
		</GEQUAL>
		<ALWAYS public="1" get="inline" set="null" expr="0x0207" line="207" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0207</e></m></meta>
		</ALWAYS>
		<KEEP public="1" get="inline" set="null" expr="0x1E00" line="209" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E00</e></m></meta>
		</KEEP>
		<REPLACE public="1" get="inline" set="null" expr="0x1E01" line="210" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E01</e></m></meta>
		</REPLACE>
		<INCR public="1" get="inline" set="null" expr="0x1E02" line="211" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E02</e></m></meta>
		</INCR>
		<DECR public="1" get="inline" set="null" expr="0x1E03" line="212" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1E03</e></m></meta>
		</DECR>
		<INVERT public="1" get="inline" set="null" expr="0x150A" line="213" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x150A</e></m></meta>
		</INVERT>
		<INCR_WRAP public="1" get="inline" set="null" expr="0x8507" line="214" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8507</e></m></meta>
		</INCR_WRAP>
		<DECR_WRAP public="1" get="inline" set="null" expr="0x8508" line="215" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8508</e></m></meta>
		</DECR_WRAP>
		<VENDOR public="1" get="inline" set="null" expr="0x1F00" line="217" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F00</e></m></meta>
		</VENDOR>
		<RENDERER public="1" get="inline" set="null" expr="0x1F01" line="218" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F01</e></m></meta>
		</RENDERER>
		<VERSION public="1" get="inline" set="null" expr="0x1F02" line="219" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F02</e></m></meta>
		</VERSION>
		<EXTENSIONS public="1" get="inline" set="null" expr="0x1F03" line="220" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1F03</e></m></meta>
		</EXTENSIONS>
		<NEAREST public="1" get="inline" set="null" expr="0x2600" line="222" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2600</e></m></meta>
		</NEAREST>
		<LINEAR public="1" get="inline" set="null" expr="0x2601" line="223" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2601</e></m></meta>
		</LINEAR>
		<NEAREST_MIPMAP_NEAREST public="1" get="inline" set="null" expr="0x2700" line="225" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2700</e></m></meta>
		</NEAREST_MIPMAP_NEAREST>
		<LINEAR_MIPMAP_NEAREST public="1" get="inline" set="null" expr="0x2701" line="226" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2701</e></m></meta>
		</LINEAR_MIPMAP_NEAREST>
		<NEAREST_MIPMAP_LINEAR public="1" get="inline" set="null" expr="0x2702" line="227" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2702</e></m></meta>
		</NEAREST_MIPMAP_LINEAR>
		<LINEAR_MIPMAP_LINEAR public="1" get="inline" set="null" expr="0x2703" line="228" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2703</e></m></meta>
		</LINEAR_MIPMAP_LINEAR>
		<TEXTURE_MAG_FILTER public="1" get="inline" set="null" expr="0x2800" line="230" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2800</e></m></meta>
		</TEXTURE_MAG_FILTER>
		<TEXTURE_MIN_FILTER public="1" get="inline" set="null" expr="0x2801" line="231" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2801</e></m></meta>
		</TEXTURE_MIN_FILTER>
		<TEXTURE_WRAP_S public="1" get="inline" set="null" expr="0x2802" line="232" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2802</e></m></meta>
		</TEXTURE_WRAP_S>
		<TEXTURE_WRAP_T public="1" get="inline" set="null" expr="0x2803" line="233" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2803</e></m></meta>
		</TEXTURE_WRAP_T>
		<TEXTURE_2D public="1" get="inline" set="null" expr="0x0DE1" line="235" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0DE1</e></m></meta>
		</TEXTURE_2D>
		<TEXTURE public="1" get="inline" set="null" expr="0x1702" line="236" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1702</e></m></meta>
		</TEXTURE>
		<TEXTURE_CUBE_MAP public="1" get="inline" set="null" expr="0x8513" line="238" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8513</e></m></meta>
		</TEXTURE_CUBE_MAP>
		<TEXTURE_BINDING_CUBE_MAP public="1" get="inline" set="null" expr="0x8514" line="239" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8514</e></m></meta>
		</TEXTURE_BINDING_CUBE_MAP>
		<TEXTURE_CUBE_MAP_POSITIVE_X public="1" get="inline" set="null" expr="0x8515" line="240" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8515</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_X>
		<TEXTURE_CUBE_MAP_NEGATIVE_X public="1" get="inline" set="null" expr="0x8516" line="241" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8516</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_X>
		<TEXTURE_CUBE_MAP_POSITIVE_Y public="1" get="inline" set="null" expr="0x8517" line="242" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8517</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Y>
		<TEXTURE_CUBE_MAP_NEGATIVE_Y public="1" get="inline" set="null" expr="0x8518" line="243" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8518</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Y>
		<TEXTURE_CUBE_MAP_POSITIVE_Z public="1" get="inline" set="null" expr="0x8519" line="244" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8519</e></m></meta>
		</TEXTURE_CUBE_MAP_POSITIVE_Z>
		<TEXTURE_CUBE_MAP_NEGATIVE_Z public="1" get="inline" set="null" expr="0x851A" line="245" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851A</e></m></meta>
		</TEXTURE_CUBE_MAP_NEGATIVE_Z>
		<MAX_CUBE_MAP_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x851C" line="246" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x851C</e></m></meta>
		</MAX_CUBE_MAP_TEXTURE_SIZE>
		<TEXTURE0 public="1" get="inline" set="null" expr="0x84C0" line="248" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C0</e></m></meta>
		</TEXTURE0>
		<TEXTURE1 public="1" get="inline" set="null" expr="0x84C1" line="249" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C1</e></m></meta>
		</TEXTURE1>
		<TEXTURE2 public="1" get="inline" set="null" expr="0x84C2" line="250" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C2</e></m></meta>
		</TEXTURE2>
		<TEXTURE3 public="1" get="inline" set="null" expr="0x84C3" line="251" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C3</e></m></meta>
		</TEXTURE3>
		<TEXTURE4 public="1" get="inline" set="null" expr="0x84C4" line="252" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C4</e></m></meta>
		</TEXTURE4>
		<TEXTURE5 public="1" get="inline" set="null" expr="0x84C5" line="253" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C5</e></m></meta>
		</TEXTURE5>
		<TEXTURE6 public="1" get="inline" set="null" expr="0x84C6" line="254" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C6</e></m></meta>
		</TEXTURE6>
		<TEXTURE7 public="1" get="inline" set="null" expr="0x84C7" line="255" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C7</e></m></meta>
		</TEXTURE7>
		<TEXTURE8 public="1" get="inline" set="null" expr="0x84C8" line="256" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C8</e></m></meta>
		</TEXTURE8>
		<TEXTURE9 public="1" get="inline" set="null" expr="0x84C9" line="257" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84C9</e></m></meta>
		</TEXTURE9>
		<TEXTURE10 public="1" get="inline" set="null" expr="0x84CA" line="258" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CA</e></m></meta>
		</TEXTURE10>
		<TEXTURE11 public="1" get="inline" set="null" expr="0x84CB" line="259" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CB</e></m></meta>
		</TEXTURE11>
		<TEXTURE12 public="1" get="inline" set="null" expr="0x84CC" line="260" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CC</e></m></meta>
		</TEXTURE12>
		<TEXTURE13 public="1" get="inline" set="null" expr="0x84CD" line="261" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CD</e></m></meta>
		</TEXTURE13>
		<TEXTURE14 public="1" get="inline" set="null" expr="0x84CE" line="262" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CE</e></m></meta>
		</TEXTURE14>
		<TEXTURE15 public="1" get="inline" set="null" expr="0x84CF" line="263" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84CF</e></m></meta>
		</TEXTURE15>
		<TEXTURE16 public="1" get="inline" set="null" expr="0x84D0" line="264" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D0</e></m></meta>
		</TEXTURE16>
		<TEXTURE17 public="1" get="inline" set="null" expr="0x84D1" line="265" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D1</e></m></meta>
		</TEXTURE17>
		<TEXTURE18 public="1" get="inline" set="null" expr="0x84D2" line="266" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D2</e></m></meta>
		</TEXTURE18>
		<TEXTURE19 public="1" get="inline" set="null" expr="0x84D3" line="267" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D3</e></m></meta>
		</TEXTURE19>
		<TEXTURE20 public="1" get="inline" set="null" expr="0x84D4" line="268" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D4</e></m></meta>
		</TEXTURE20>
		<TEXTURE21 public="1" get="inline" set="null" expr="0x84D5" line="269" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D5</e></m></meta>
		</TEXTURE21>
		<TEXTURE22 public="1" get="inline" set="null" expr="0x84D6" line="270" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D6</e></m></meta>
		</TEXTURE22>
		<TEXTURE23 public="1" get="inline" set="null" expr="0x84D7" line="271" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D7</e></m></meta>
		</TEXTURE23>
		<TEXTURE24 public="1" get="inline" set="null" expr="0x84D8" line="272" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D8</e></m></meta>
		</TEXTURE24>
		<TEXTURE25 public="1" get="inline" set="null" expr="0x84D9" line="273" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84D9</e></m></meta>
		</TEXTURE25>
		<TEXTURE26 public="1" get="inline" set="null" expr="0x84DA" line="274" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DA</e></m></meta>
		</TEXTURE26>
		<TEXTURE27 public="1" get="inline" set="null" expr="0x84DB" line="275" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DB</e></m></meta>
		</TEXTURE27>
		<TEXTURE28 public="1" get="inline" set="null" expr="0x84DC" line="276" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DC</e></m></meta>
		</TEXTURE28>
		<TEXTURE29 public="1" get="inline" set="null" expr="0x84DD" line="277" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DD</e></m></meta>
		</TEXTURE29>
		<TEXTURE30 public="1" get="inline" set="null" expr="0x84DE" line="278" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DE</e></m></meta>
		</TEXTURE30>
		<TEXTURE31 public="1" get="inline" set="null" expr="0x84DF" line="279" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84DF</e></m></meta>
		</TEXTURE31>
		<ACTIVE_TEXTURE public="1" get="inline" set="null" expr="0x84E0" line="280" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E0</e></m></meta>
		</ACTIVE_TEXTURE>
		<REPEAT public="1" get="inline" set="null" expr="0x2901" line="282" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x2901</e></m></meta>
		</REPEAT>
		<CLAMP_TO_EDGE public="1" get="inline" set="null" expr="0x812F" line="283" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x812F</e></m></meta>
		</CLAMP_TO_EDGE>
		<MIRRORED_REPEAT public="1" get="inline" set="null" expr="0x8370" line="284" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8370</e></m></meta>
		</MIRRORED_REPEAT>
		<FLOAT_VEC2 public="1" get="inline" set="null" expr="0x8B50" line="286" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B50</e></m></meta>
		</FLOAT_VEC2>
		<FLOAT_VEC3 public="1" get="inline" set="null" expr="0x8B51" line="287" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B51</e></m></meta>
		</FLOAT_VEC3>
		<FLOAT_VEC4 public="1" get="inline" set="null" expr="0x8B52" line="288" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B52</e></m></meta>
		</FLOAT_VEC4>
		<INT_VEC2 public="1" get="inline" set="null" expr="0x8B53" line="289" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B53</e></m></meta>
		</INT_VEC2>
		<INT_VEC3 public="1" get="inline" set="null" expr="0x8B54" line="290" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B54</e></m></meta>
		</INT_VEC3>
		<INT_VEC4 public="1" get="inline" set="null" expr="0x8B55" line="291" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B55</e></m></meta>
		</INT_VEC4>
		<BOOL public="1" get="inline" set="null" expr="0x8B56" line="292" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B56</e></m></meta>
		</BOOL>
		<BOOL_VEC2 public="1" get="inline" set="null" expr="0x8B57" line="293" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B57</e></m></meta>
		</BOOL_VEC2>
		<BOOL_VEC3 public="1" get="inline" set="null" expr="0x8B58" line="294" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B58</e></m></meta>
		</BOOL_VEC3>
		<BOOL_VEC4 public="1" get="inline" set="null" expr="0x8B59" line="295" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B59</e></m></meta>
		</BOOL_VEC4>
		<FLOAT_MAT2 public="1" get="inline" set="null" expr="0x8B5A" line="296" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5A</e></m></meta>
		</FLOAT_MAT2>
		<FLOAT_MAT3 public="1" get="inline" set="null" expr="0x8B5B" line="297" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5B</e></m></meta>
		</FLOAT_MAT3>
		<FLOAT_MAT4 public="1" get="inline" set="null" expr="0x8B5C" line="298" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5C</e></m></meta>
		</FLOAT_MAT4>
		<SAMPLER_2D public="1" get="inline" set="null" expr="0x8B5E" line="299" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5E</e></m></meta>
		</SAMPLER_2D>
		<SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8B60" line="300" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B60</e></m></meta>
		</SAMPLER_CUBE>
		<VERTEX_ATTRIB_ARRAY_ENABLED public="1" get="inline" set="null" expr="0x8622" line="302" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8622</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_ENABLED>
		<VERTEX_ATTRIB_ARRAY_SIZE public="1" get="inline" set="null" expr="0x8623" line="303" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8623</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_SIZE>
		<VERTEX_ATTRIB_ARRAY_STRIDE public="1" get="inline" set="null" expr="0x8624" line="304" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8624</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_STRIDE>
		<VERTEX_ATTRIB_ARRAY_TYPE public="1" get="inline" set="null" expr="0x8625" line="305" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8625</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_TYPE>
		<VERTEX_ATTRIB_ARRAY_NORMALIZED public="1" get="inline" set="null" expr="0x886A" line="306" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x886A</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_POINTER public="1" get="inline" set="null" expr="0x8645" line="307" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8645</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_POINTER>
		<VERTEX_ATTRIB_ARRAY_BUFFER_BINDING public="1" get="inline" set="null" expr="0x889F" line="308" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x889F</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_BUFFER_BINDING>
		<IMPLEMENTATION_COLOR_READ_TYPE public="1" get="inline" set="null" expr="0x8B9A" line="310" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9A</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_TYPE>
		<IMPLEMENTATION_COLOR_READ_FORMAT public="1" get="inline" set="null" expr="0x8B9B" line="311" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B9B</e></m></meta>
		</IMPLEMENTATION_COLOR_READ_FORMAT>
		<VERTEX_PROGRAM_POINT_SIZE public="1" get="inline" set="null" expr="0x8642" line="313" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8642</e></m></meta>
		</VERTEX_PROGRAM_POINT_SIZE>
		<POINT_SPRITE public="1" get="inline" set="null" expr="0x8861" line="314" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8861</e></m></meta>
		</POINT_SPRITE>
		<COMPILE_STATUS public="1" get="inline" set="null" expr="0x8B81" line="316" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B81</e></m></meta>
		</COMPILE_STATUS>
		<LOW_FLOAT public="1" get="inline" set="null" expr="0x8DF0" line="318" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF0</e></m></meta>
		</LOW_FLOAT>
		<MEDIUM_FLOAT public="1" get="inline" set="null" expr="0x8DF1" line="319" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF1</e></m></meta>
		</MEDIUM_FLOAT>
		<HIGH_FLOAT public="1" get="inline" set="null" expr="0x8DF2" line="320" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF2</e></m></meta>
		</HIGH_FLOAT>
		<LOW_INT public="1" get="inline" set="null" expr="0x8DF3" line="321" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF3</e></m></meta>
		</LOW_INT>
		<MEDIUM_INT public="1" get="inline" set="null" expr="0x8DF4" line="322" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF4</e></m></meta>
		</MEDIUM_INT>
		<HIGH_INT public="1" get="inline" set="null" expr="0x8DF5" line="323" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DF5</e></m></meta>
		</HIGH_INT>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="0x8D40" line="325" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D40</e></m></meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="0x8D41" line="326" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D41</e></m></meta>
		</RENDERBUFFER>
		<RGBA4 public="1" get="inline" set="null" expr="0x8056" line="328" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8056</e></m></meta>
		</RGBA4>
		<RGB5_A1 public="1" get="inline" set="null" expr="0x8057" line="329" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8057</e></m></meta>
		</RGB5_A1>
		<RGB565 public="1" get="inline" set="null" expr="0x8D62" line="330" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D62</e></m></meta>
		</RGB565>
		<DEPTH_COMPONENT16 public="1" get="inline" set="null" expr="0x81A5" line="331" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A5</e></m></meta>
		</DEPTH_COMPONENT16>
		<STENCIL_INDEX public="1" get="inline" set="null" expr="0x1901" line="332" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1901</e></m></meta>
		</STENCIL_INDEX>
		<STENCIL_INDEX8 public="1" get="inline" set="null" expr="0x8D48" line="333" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D48</e></m></meta>
		</STENCIL_INDEX8>
		<DEPTH_STENCIL public="1" get="inline" set="null" expr="0x84F9" line="334" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84F9</e></m></meta>
		</DEPTH_STENCIL>
		<RENDERBUFFER_WIDTH public="1" get="inline" set="null" expr="0x8D42" line="336" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D42</e></m></meta>
		</RENDERBUFFER_WIDTH>
		<RENDERBUFFER_HEIGHT public="1" get="inline" set="null" expr="0x8D43" line="337" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D43</e></m></meta>
		</RENDERBUFFER_HEIGHT>
		<RENDERBUFFER_INTERNAL_FORMAT public="1" get="inline" set="null" expr="0x8D44" line="338" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D44</e></m></meta>
		</RENDERBUFFER_INTERNAL_FORMAT>
		<RENDERBUFFER_RED_SIZE public="1" get="inline" set="null" expr="0x8D50" line="339" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D50</e></m></meta>
		</RENDERBUFFER_RED_SIZE>
		<RENDERBUFFER_GREEN_SIZE public="1" get="inline" set="null" expr="0x8D51" line="340" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D51</e></m></meta>
		</RENDERBUFFER_GREEN_SIZE>
		<RENDERBUFFER_BLUE_SIZE public="1" get="inline" set="null" expr="0x8D52" line="341" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D52</e></m></meta>
		</RENDERBUFFER_BLUE_SIZE>
		<RENDERBUFFER_ALPHA_SIZE public="1" get="inline" set="null" expr="0x8D53" line="342" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D53</e></m></meta>
		</RENDERBUFFER_ALPHA_SIZE>
		<RENDERBUFFER_DEPTH_SIZE public="1" get="inline" set="null" expr="0x8D54" line="343" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D54</e></m></meta>
		</RENDERBUFFER_DEPTH_SIZE>
		<RENDERBUFFER_STENCIL_SIZE public="1" get="inline" set="null" expr="0x8D55" line="344" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D55</e></m></meta>
		</RENDERBUFFER_STENCIL_SIZE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE public="1" get="inline" set="null" expr="0x8CD0" line="346" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD0</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_OBJECT_NAME public="1" get="inline" set="null" expr="0x8CD1" line="347" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD1</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_OBJECT_NAME>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL public="1" get="inline" set="null" expr="0x8CD2" line="348" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD2</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE public="1" get="inline" set="null" expr="0x8CD3" line="349" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD3</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE>
		<COLOR_ATTACHMENT0 public="1" get="inline" set="null" expr="0x8CE0" line="351" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE0</e></m></meta>
		</COLOR_ATTACHMENT0>
		<DEPTH_ATTACHMENT public="1" get="inline" set="null" expr="0x8D00" line="352" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D00</e></m></meta>
		</DEPTH_ATTACHMENT>
		<STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="0x8D20" line="353" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D20</e></m></meta>
		</STENCIL_ATTACHMENT>
		<DEPTH_STENCIL_ATTACHMENT public="1" get="inline" set="null" expr="0x821A" line="354" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x821A</e></m></meta>
		</DEPTH_STENCIL_ATTACHMENT>
		<NONE public="1" get="inline" set="null" expr="0" line="356" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NONE>
		<FRAMEBUFFER_COMPLETE public="1" get="inline" set="null" expr="0x8CD5" line="358" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD5</e></m></meta>
		</FRAMEBUFFER_COMPLETE>
		<FRAMEBUFFER_INCOMPLETE_ATTACHMENT public="1" get="inline" set="null" expr="0x8CD6" line="359" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD6</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT public="1" get="inline" set="null" expr="0x8CD7" line="360" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD7</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT>
		<FRAMEBUFFER_INCOMPLETE_DIMENSIONS public="1" get="inline" set="null" expr="0x8CD9" line="361" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD9</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_DIMENSIONS>
		<FRAMEBUFFER_UNSUPPORTED public="1" get="inline" set="null" expr="0x8CDD" line="362" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDD</e></m></meta>
		</FRAMEBUFFER_UNSUPPORTED>
		<FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA6" line="364" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</FRAMEBUFFER_BINDING>
		<RENDERBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA7" line="365" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA7</e></m></meta>
		</RENDERBUFFER_BINDING>
		<MAX_RENDERBUFFER_SIZE public="1" get="inline" set="null" expr="0x84E8" line="366" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84E8</e></m></meta>
		</MAX_RENDERBUFFER_SIZE>
		<INVALID_FRAMEBUFFER_OPERATION public="1" get="inline" set="null" expr="0x0506" line="368" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0506</e></m></meta>
		</INVALID_FRAMEBUFFER_OPERATION>
		<UNPACK_FLIP_Y_WEBGL public="1" get="inline" set="null" expr="0x9240" line="370" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9240</e></m></meta>
		</UNPACK_FLIP_Y_WEBGL>
		<UNPACK_PREMULTIPLY_ALPHA_WEBGL public="1" get="inline" set="null" expr="0x9241" line="371" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9241</e></m></meta>
		</UNPACK_PREMULTIPLY_ALPHA_WEBGL>
		<CONTEXT_LOST_WEBGL public="1" get="inline" set="null" expr="0x9242" line="372" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9242</e></m></meta>
		</CONTEXT_LOST_WEBGL>
		<UNPACK_COLORSPACE_CONVERSION_WEBGL public="1" get="inline" set="null" expr="0x9243" line="373" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9243</e></m></meta>
		</UNPACK_COLORSPACE_CONVERSION_WEBGL>
		<BROWSER_DEFAULT_WEBGL public="1" get="inline" set="null" expr="0x9244" line="374" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9244</e></m></meta>
		</BROWSER_DEFAULT_WEBGL>
		<READ_BUFFER public="1" get="inline" set="null" expr="0x0C02" line="376" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0C02</e></m></meta>
		</READ_BUFFER>
		<UNPACK_ROW_LENGTH public="1" get="inline" set="null" expr="0x0CF2" line="377" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF2</e></m></meta>
		</UNPACK_ROW_LENGTH>
		<UNPACK_SKIP_ROWS public="1" get="inline" set="null" expr="0x0CF3" line="378" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF3</e></m></meta>
		</UNPACK_SKIP_ROWS>
		<UNPACK_SKIP_PIXELS public="1" get="inline" set="null" expr="0x0CF4" line="379" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0CF4</e></m></meta>
		</UNPACK_SKIP_PIXELS>
		<PACK_ROW_LENGTH public="1" get="inline" set="null" expr="0x0D02" line="380" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D02</e></m></meta>
		</PACK_ROW_LENGTH>
		<PACK_SKIP_ROWS public="1" get="inline" set="null" expr="0x0D03" line="381" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D03</e></m></meta>
		</PACK_SKIP_ROWS>
		<PACK_SKIP_PIXELS public="1" get="inline" set="null" expr="0x0D04" line="382" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x0D04</e></m></meta>
		</PACK_SKIP_PIXELS>
		<TEXTURE_BINDING_3D public="1" get="inline" set="null" expr="0x806A" line="383" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806A</e></m></meta>
		</TEXTURE_BINDING_3D>
		<UNPACK_SKIP_IMAGES public="1" get="inline" set="null" expr="0x806D" line="384" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806D</e></m></meta>
		</UNPACK_SKIP_IMAGES>
		<UNPACK_IMAGE_HEIGHT public="1" get="inline" set="null" expr="0x806E" line="385" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806E</e></m></meta>
		</UNPACK_IMAGE_HEIGHT>
		<MAX_3D_TEXTURE_SIZE public="1" get="inline" set="null" expr="0x8073" line="386" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8073</e></m></meta>
		</MAX_3D_TEXTURE_SIZE>
		<MAX_ELEMENTS_VERTICES public="1" get="inline" set="null" expr="0x80E8" line="387" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E8</e></m></meta>
		</MAX_ELEMENTS_VERTICES>
		<MAX_ELEMENTS_INDICES public="1" get="inline" set="null" expr="0x80E9" line="388" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x80E9</e></m></meta>
		</MAX_ELEMENTS_INDICES>
		<MAX_TEXTURE_LOD_BIAS public="1" get="inline" set="null" expr="0x84FD" line="389" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FD</e></m></meta>
		</MAX_TEXTURE_LOD_BIAS>
		<MAX_FRAGMENT_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8B49" line="390" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B49</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_COMPONENTS>
		<MAX_VERTEX_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8B4A" line="391" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4A</e></m></meta>
		</MAX_VERTEX_UNIFORM_COMPONENTS>
		<MAX_ARRAY_TEXTURE_LAYERS public="1" get="inline" set="null" expr="0x88FF" line="392" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FF</e></m></meta>
		</MAX_ARRAY_TEXTURE_LAYERS>
		<MIN_PROGRAM_TEXEL_OFFSET public="1" get="inline" set="null" expr="0x8904" line="393" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8904</e></m></meta>
		</MIN_PROGRAM_TEXEL_OFFSET>
		<MAX_PROGRAM_TEXEL_OFFSET public="1" get="inline" set="null" expr="0x8905" line="394" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8905</e></m></meta>
		</MAX_PROGRAM_TEXEL_OFFSET>
		<MAX_VARYING_COMPONENTS public="1" get="inline" set="null" expr="0x8B4B" line="395" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B4B</e></m></meta>
		</MAX_VARYING_COMPONENTS>
		<FRAGMENT_SHADER_DERIVATIVE_HINT public="1" get="inline" set="null" expr="0x8B8B" line="396" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B8B</e></m></meta>
		</FRAGMENT_SHADER_DERIVATIVE_HINT>
		<RASTERIZER_DISCARD public="1" get="inline" set="null" expr="0x8C89" line="397" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C89</e></m></meta>
		</RASTERIZER_DISCARD>
		<VERTEX_ARRAY_BINDING public="1" get="inline" set="null" expr="0x85B5" line="398" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x85B5</e></m></meta>
		</VERTEX_ARRAY_BINDING>
		<MAX_VERTEX_OUTPUT_COMPONENTS public="1" get="inline" set="null" expr="0x9122" line="399" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9122</e></m></meta>
		</MAX_VERTEX_OUTPUT_COMPONENTS>
		<MAX_FRAGMENT_INPUT_COMPONENTS public="1" get="inline" set="null" expr="0x9125" line="400" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9125</e></m></meta>
		</MAX_FRAGMENT_INPUT_COMPONENTS>
		<MAX_SERVER_WAIT_TIMEOUT public="1" get="inline" set="null" expr="0x9111" line="401" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9111</e></m></meta>
		</MAX_SERVER_WAIT_TIMEOUT>
		<MAX_ELEMENT_INDEX public="1" get="inline" set="null" expr="0x8D6B" line="402" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6B</e></m></meta>
		</MAX_ELEMENT_INDEX>
		<RED public="1" get="inline" set="null" expr="0x1903" line="404" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1903</e></m></meta>
		</RED>
		<RGB8 public="1" get="inline" set="null" expr="0x8051" line="405" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8051</e></m></meta>
		</RGB8>
		<RGBA8 public="1" get="inline" set="null" expr="0x8058" line="406" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8058</e></m></meta>
		</RGBA8>
		<RGB10_A2 public="1" get="inline" set="null" expr="0x8059" line="407" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8059</e></m></meta>
		</RGB10_A2>
		<TEXTURE_3D public="1" get="inline" set="null" expr="0x806F" line="408" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x806F</e></m></meta>
		</TEXTURE_3D>
		<TEXTURE_WRAP_R public="1" get="inline" set="null" expr="0x8072" line="409" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8072</e></m></meta>
		</TEXTURE_WRAP_R>
		<TEXTURE_MIN_LOD public="1" get="inline" set="null" expr="0x813A" line="410" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813A</e></m></meta>
		</TEXTURE_MIN_LOD>
		<TEXTURE_MAX_LOD public="1" get="inline" set="null" expr="0x813B" line="411" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813B</e></m></meta>
		</TEXTURE_MAX_LOD>
		<TEXTURE_BASE_LEVEL public="1" get="inline" set="null" expr="0x813C" line="412" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813C</e></m></meta>
		</TEXTURE_BASE_LEVEL>
		<TEXTURE_MAX_LEVEL public="1" get="inline" set="null" expr="0x813D" line="413" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x813D</e></m></meta>
		</TEXTURE_MAX_LEVEL>
		<TEXTURE_COMPARE_MODE public="1" get="inline" set="null" expr="0x884C" line="414" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884C</e></m></meta>
		</TEXTURE_COMPARE_MODE>
		<TEXTURE_COMPARE_FUNC public="1" get="inline" set="null" expr="0x884D" line="415" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884D</e></m></meta>
		</TEXTURE_COMPARE_FUNC>
		<SRGB public="1" get="inline" set="null" expr="0x8C40" line="416" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C40</e></m></meta>
		</SRGB>
		<SRGB8 public="1" get="inline" set="null" expr="0x8C41" line="417" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C41</e></m></meta>
		</SRGB8>
		<SRGB8_ALPHA8 public="1" get="inline" set="null" expr="0x8C43" line="418" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C43</e></m></meta>
		</SRGB8_ALPHA8>
		<COMPARE_REF_TO_TEXTURE public="1" get="inline" set="null" expr="0x884E" line="419" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x884E</e></m></meta>
		</COMPARE_REF_TO_TEXTURE>
		<RGBA32F public="1" get="inline" set="null" expr="0x8814" line="420" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8814</e></m></meta>
		</RGBA32F>
		<RGB32F public="1" get="inline" set="null" expr="0x8815" line="421" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8815</e></m></meta>
		</RGB32F>
		<RGBA16F public="1" get="inline" set="null" expr="0x881A" line="422" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881A</e></m></meta>
		</RGBA16F>
		<RGB16F public="1" get="inline" set="null" expr="0x881B" line="423" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x881B</e></m></meta>
		</RGB16F>
		<TEXTURE_2D_ARRAY public="1" get="inline" set="null" expr="0x8C1A" line="424" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1A</e></m></meta>
		</TEXTURE_2D_ARRAY>
		<TEXTURE_BINDING_2D_ARRAY public="1" get="inline" set="null" expr="0x8C1D" line="425" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C1D</e></m></meta>
		</TEXTURE_BINDING_2D_ARRAY>
		<R11F_G11F_B10F public="1" get="inline" set="null" expr="0x8C3A" line="426" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3A</e></m></meta>
		</R11F_G11F_B10F>
		<RGB9_E5 public="1" get="inline" set="null" expr="0x8C3D" line="427" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3D</e></m></meta>
		</RGB9_E5>
		<RGBA32UI public="1" get="inline" set="null" expr="0x8D70" line="428" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D70</e></m></meta>
		</RGBA32UI>
		<RGB32UI public="1" get="inline" set="null" expr="0x8D71" line="429" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D71</e></m></meta>
		</RGB32UI>
		<RGBA16UI public="1" get="inline" set="null" expr="0x8D76" line="430" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D76</e></m></meta>
		</RGBA16UI>
		<RGB16UI public="1" get="inline" set="null" expr="0x8D77" line="431" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D77</e></m></meta>
		</RGB16UI>
		<RGBA8UI public="1" get="inline" set="null" expr="0x8D7C" line="432" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7C</e></m></meta>
		</RGBA8UI>
		<RGB8UI public="1" get="inline" set="null" expr="0x8D7D" line="433" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D7D</e></m></meta>
		</RGB8UI>
		<RGBA32I public="1" get="inline" set="null" expr="0x8D82" line="434" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D82</e></m></meta>
		</RGBA32I>
		<RGB32I public="1" get="inline" set="null" expr="0x8D83" line="435" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D83</e></m></meta>
		</RGB32I>
		<RGBA16I public="1" get="inline" set="null" expr="0x8D88" line="436" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D88</e></m></meta>
		</RGBA16I>
		<RGB16I public="1" get="inline" set="null" expr="0x8D89" line="437" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D89</e></m></meta>
		</RGB16I>
		<RGBA8I public="1" get="inline" set="null" expr="0x8D8E" line="438" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8E</e></m></meta>
		</RGBA8I>
		<RGB8I public="1" get="inline" set="null" expr="0x8D8F" line="439" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D8F</e></m></meta>
		</RGB8I>
		<RED_INTEGER public="1" get="inline" set="null" expr="0x8D94" line="440" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D94</e></m></meta>
		</RED_INTEGER>
		<RGB_INTEGER public="1" get="inline" set="null" expr="0x8D98" line="441" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D98</e></m></meta>
		</RGB_INTEGER>
		<RGBA_INTEGER public="1" get="inline" set="null" expr="0x8D99" line="442" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D99</e></m></meta>
		</RGBA_INTEGER>
		<R8 public="1" get="inline" set="null" expr="0x8229" line="443" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8229</e></m></meta>
		</R8>
		<RG8 public="1" get="inline" set="null" expr="0x822B" line="444" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822B</e></m></meta>
		</RG8>
		<R16F public="1" get="inline" set="null" expr="0x822D" line="445" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822D</e></m></meta>
		</R16F>
		<R32F public="1" get="inline" set="null" expr="0x822E" line="446" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822E</e></m></meta>
		</R32F>
		<RG16F public="1" get="inline" set="null" expr="0x822F" line="447" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x822F</e></m></meta>
		</RG16F>
		<RG32F public="1" get="inline" set="null" expr="0x8230" line="448" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8230</e></m></meta>
		</RG32F>
		<R8I public="1" get="inline" set="null" expr="0x8231" line="449" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8231</e></m></meta>
		</R8I>
		<R8UI public="1" get="inline" set="null" expr="0x8232" line="450" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8232</e></m></meta>
		</R8UI>
		<R16I public="1" get="inline" set="null" expr="0x8233" line="451" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8233</e></m></meta>
		</R16I>
		<R16UI public="1" get="inline" set="null" expr="0x8234" line="452" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8234</e></m></meta>
		</R16UI>
		<R32I public="1" get="inline" set="null" expr="0x8235" line="453" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8235</e></m></meta>
		</R32I>
		<R32UI public="1" get="inline" set="null" expr="0x8236" line="454" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8236</e></m></meta>
		</R32UI>
		<RG8I public="1" get="inline" set="null" expr="0x8237" line="455" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8237</e></m></meta>
		</RG8I>
		<RG8UI public="1" get="inline" set="null" expr="0x8238" line="456" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8238</e></m></meta>
		</RG8UI>
		<RG16I public="1" get="inline" set="null" expr="0x8239" line="457" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8239</e></m></meta>
		</RG16I>
		<RG16UI public="1" get="inline" set="null" expr="0x823A" line="458" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823A</e></m></meta>
		</RG16UI>
		<RG32I public="1" get="inline" set="null" expr="0x823B" line="459" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823B</e></m></meta>
		</RG32I>
		<RG32UI public="1" get="inline" set="null" expr="0x823C" line="460" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x823C</e></m></meta>
		</RG32UI>
		<R8_SNORM public="1" get="inline" set="null" expr="0x8F94" line="461" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F94</e></m></meta>
		</R8_SNORM>
		<RG8_SNORM public="1" get="inline" set="null" expr="0x8F95" line="462" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F95</e></m></meta>
		</RG8_SNORM>
		<RGB8_SNORM public="1" get="inline" set="null" expr="0x8F96" line="463" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F96</e></m></meta>
		</RGB8_SNORM>
		<RGBA8_SNORM public="1" get="inline" set="null" expr="0x8F97" line="464" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F97</e></m></meta>
		</RGBA8_SNORM>
		<RGB10_A2UI public="1" get="inline" set="null" expr="0x906F" line="465" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x906F</e></m></meta>
		</RGB10_A2UI>
		<TEXTURE_IMMUTABLE_FORMAT public="1" get="inline" set="null" expr="0x912F" line="466" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x912F</e></m></meta>
		</TEXTURE_IMMUTABLE_FORMAT>
		<TEXTURE_IMMUTABLE_LEVELS public="1" get="inline" set="null" expr="0x82DF" line="467" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x82DF</e></m></meta>
		</TEXTURE_IMMUTABLE_LEVELS>
		<UNSIGNED_INT_2_10_10_10_REV public="1" get="inline" set="null" expr="0x8368" line="469" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8368</e></m></meta>
		</UNSIGNED_INT_2_10_10_10_REV>
		<UNSIGNED_INT_10F_11F_11F_REV public="1" get="inline" set="null" expr="0x8C3B" line="470" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3B</e></m></meta>
		</UNSIGNED_INT_10F_11F_11F_REV>
		<UNSIGNED_INT_5_9_9_9_REV public="1" get="inline" set="null" expr="0x8C3E" line="471" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C3E</e></m></meta>
		</UNSIGNED_INT_5_9_9_9_REV>
		<FLOAT_32_UNSIGNED_INT_24_8_REV public="1" get="inline" set="null" expr="0x8DAD" line="472" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DAD</e></m></meta>
		</FLOAT_32_UNSIGNED_INT_24_8_REV>
		<UNSIGNED_INT_24_8 public="1" get="inline" set="null" expr="0x84FA" line="473" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x84FA</e></m></meta>
		</UNSIGNED_INT_24_8>
		<HALF_FLOAT public="1" get="inline" set="null" expr="0x140B" line="474" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x140B</e></m></meta>
		</HALF_FLOAT>
		<RG public="1" get="inline" set="null" expr="0x8227" line="475" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8227</e></m></meta>
		</RG>
		<RG_INTEGER public="1" get="inline" set="null" expr="0x8228" line="476" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8228</e></m></meta>
		</RG_INTEGER>
		<INT_2_10_10_10_REV public="1" get="inline" set="null" expr="0x8D9F" line="477" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D9F</e></m></meta>
		</INT_2_10_10_10_REV>
		<CURRENT_QUERY public="1" get="inline" set="null" expr="0x8865" line="479" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8865</e></m></meta>
		</CURRENT_QUERY>
		<QUERY_RESULT public="1" get="inline" set="null" expr="0x8866" line="480" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8866</e></m></meta>
		</QUERY_RESULT>
		<QUERY_RESULT_AVAILABLE public="1" get="inline" set="null" expr="0x8867" line="481" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8867</e></m></meta>
		</QUERY_RESULT_AVAILABLE>
		<ANY_SAMPLES_PASSED public="1" get="inline" set="null" expr="0x8C2F" line="482" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C2F</e></m></meta>
		</ANY_SAMPLES_PASSED>
		<ANY_SAMPLES_PASSED_CONSERVATIVE public="1" get="inline" set="null" expr="0x8D6A" line="483" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D6A</e></m></meta>
		</ANY_SAMPLES_PASSED_CONSERVATIVE>
		<MAX_DRAW_BUFFERS public="1" get="inline" set="null" expr="0x8824" line="485" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8824</e></m></meta>
		</MAX_DRAW_BUFFERS>
		<DRAW_BUFFER0 public="1" get="inline" set="null" expr="0x8825" line="486" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8825</e></m></meta>
		</DRAW_BUFFER0>
		<DRAW_BUFFER1 public="1" get="inline" set="null" expr="0x8826" line="487" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8826</e></m></meta>
		</DRAW_BUFFER1>
		<DRAW_BUFFER2 public="1" get="inline" set="null" expr="0x8827" line="488" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8827</e></m></meta>
		</DRAW_BUFFER2>
		<DRAW_BUFFER3 public="1" get="inline" set="null" expr="0x8828" line="489" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8828</e></m></meta>
		</DRAW_BUFFER3>
		<DRAW_BUFFER4 public="1" get="inline" set="null" expr="0x8829" line="490" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8829</e></m></meta>
		</DRAW_BUFFER4>
		<DRAW_BUFFER5 public="1" get="inline" set="null" expr="0x882A" line="491" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882A</e></m></meta>
		</DRAW_BUFFER5>
		<DRAW_BUFFER6 public="1" get="inline" set="null" expr="0x882B" line="492" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882B</e></m></meta>
		</DRAW_BUFFER6>
		<DRAW_BUFFER7 public="1" get="inline" set="null" expr="0x882C" line="493" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882C</e></m></meta>
		</DRAW_BUFFER7>
		<DRAW_BUFFER8 public="1" get="inline" set="null" expr="0x882D" line="494" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882D</e></m></meta>
		</DRAW_BUFFER8>
		<DRAW_BUFFER9 public="1" get="inline" set="null" expr="0x882E" line="495" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882E</e></m></meta>
		</DRAW_BUFFER9>
		<DRAW_BUFFER10 public="1" get="inline" set="null" expr="0x882F" line="496" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x882F</e></m></meta>
		</DRAW_BUFFER10>
		<DRAW_BUFFER11 public="1" get="inline" set="null" expr="0x8830" line="497" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8830</e></m></meta>
		</DRAW_BUFFER11>
		<DRAW_BUFFER12 public="1" get="inline" set="null" expr="0x8831" line="498" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8831</e></m></meta>
		</DRAW_BUFFER12>
		<DRAW_BUFFER13 public="1" get="inline" set="null" expr="0x8832" line="499" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8832</e></m></meta>
		</DRAW_BUFFER13>
		<DRAW_BUFFER14 public="1" get="inline" set="null" expr="0x8833" line="500" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8833</e></m></meta>
		</DRAW_BUFFER14>
		<DRAW_BUFFER15 public="1" get="inline" set="null" expr="0x8834" line="501" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8834</e></m></meta>
		</DRAW_BUFFER15>
		<MAX_COLOR_ATTACHMENTS public="1" get="inline" set="null" expr="0x8CDF" line="502" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CDF</e></m></meta>
		</MAX_COLOR_ATTACHMENTS>
		<COLOR_ATTACHMENT1 public="1" get="inline" set="null" expr="0x8CE1" line="503" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE1</e></m></meta>
		</COLOR_ATTACHMENT1>
		<COLOR_ATTACHMENT2 public="1" get="inline" set="null" expr="0x8CE2" line="504" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE2</e></m></meta>
		</COLOR_ATTACHMENT2>
		<COLOR_ATTACHMENT3 public="1" get="inline" set="null" expr="0x8CE3" line="505" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE3</e></m></meta>
		</COLOR_ATTACHMENT3>
		<COLOR_ATTACHMENT4 public="1" get="inline" set="null" expr="0x8CE4" line="506" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE4</e></m></meta>
		</COLOR_ATTACHMENT4>
		<COLOR_ATTACHMENT5 public="1" get="inline" set="null" expr="0x8CE5" line="507" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE5</e></m></meta>
		</COLOR_ATTACHMENT5>
		<COLOR_ATTACHMENT6 public="1" get="inline" set="null" expr="0x8CE6" line="508" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE6</e></m></meta>
		</COLOR_ATTACHMENT6>
		<COLOR_ATTACHMENT7 public="1" get="inline" set="null" expr="0x8CE7" line="509" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE7</e></m></meta>
		</COLOR_ATTACHMENT7>
		<COLOR_ATTACHMENT8 public="1" get="inline" set="null" expr="0x8CE8" line="510" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE8</e></m></meta>
		</COLOR_ATTACHMENT8>
		<COLOR_ATTACHMENT9 public="1" get="inline" set="null" expr="0x8CE9" line="511" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CE9</e></m></meta>
		</COLOR_ATTACHMENT9>
		<COLOR_ATTACHMENT10 public="1" get="inline" set="null" expr="0x8CEA" line="512" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEA</e></m></meta>
		</COLOR_ATTACHMENT10>
		<COLOR_ATTACHMENT11 public="1" get="inline" set="null" expr="0x8CEB" line="513" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEB</e></m></meta>
		</COLOR_ATTACHMENT11>
		<COLOR_ATTACHMENT12 public="1" get="inline" set="null" expr="0x8CEC" line="514" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEC</e></m></meta>
		</COLOR_ATTACHMENT12>
		<COLOR_ATTACHMENT13 public="1" get="inline" set="null" expr="0x8CED" line="515" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CED</e></m></meta>
		</COLOR_ATTACHMENT13>
		<COLOR_ATTACHMENT14 public="1" get="inline" set="null" expr="0x8CEE" line="516" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEE</e></m></meta>
		</COLOR_ATTACHMENT14>
		<COLOR_ATTACHMENT15 public="1" get="inline" set="null" expr="0x8CEF" line="517" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CEF</e></m></meta>
		</COLOR_ATTACHMENT15>
		<SAMPLER_3D public="1" get="inline" set="null" expr="0x8B5F" line="519" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B5F</e></m></meta>
		</SAMPLER_3D>
		<SAMPLER_2D_SHADOW public="1" get="inline" set="null" expr="0x8B62" line="520" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B62</e></m></meta>
		</SAMPLER_2D_SHADOW>
		<SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DC1" line="521" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC1</e></m></meta>
		</SAMPLER_2D_ARRAY>
		<SAMPLER_2D_ARRAY_SHADOW public="1" get="inline" set="null" expr="0x8DC4" line="522" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC4</e></m></meta>
		</SAMPLER_2D_ARRAY_SHADOW>
		<SAMPLER_CUBE_SHADOW public="1" get="inline" set="null" expr="0x8DC5" line="523" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC5</e></m></meta>
		</SAMPLER_CUBE_SHADOW>
		<INT_SAMPLER_2D public="1" get="inline" set="null" expr="0x8DCA" line="524" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCA</e></m></meta>
		</INT_SAMPLER_2D>
		<INT_SAMPLER_3D public="1" get="inline" set="null" expr="0x8DCB" line="525" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCB</e></m></meta>
		</INT_SAMPLER_3D>
		<INT_SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8DCC" line="526" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCC</e></m></meta>
		</INT_SAMPLER_CUBE>
		<INT_SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DCF" line="527" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DCF</e></m></meta>
		</INT_SAMPLER_2D_ARRAY>
		<UNSIGNED_INT_SAMPLER_2D public="1" get="inline" set="null" expr="0x8DD2" line="528" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD2</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D>
		<UNSIGNED_INT_SAMPLER_3D public="1" get="inline" set="null" expr="0x8DD3" line="529" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD3</e></m></meta>
		</UNSIGNED_INT_SAMPLER_3D>
		<UNSIGNED_INT_SAMPLER_CUBE public="1" get="inline" set="null" expr="0x8DD4" line="530" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD4</e></m></meta>
		</UNSIGNED_INT_SAMPLER_CUBE>
		<UNSIGNED_INT_SAMPLER_2D_ARRAY public="1" get="inline" set="null" expr="0x8DD7" line="531" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DD7</e></m></meta>
		</UNSIGNED_INT_SAMPLER_2D_ARRAY>
		<MAX_SAMPLES public="1" get="inline" set="null" expr="0x8D57" line="532" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D57</e></m></meta>
		</MAX_SAMPLES>
		<SAMPLER_BINDING public="1" get="inline" set="null" expr="0x8919" line="533" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8919</e></m></meta>
		</SAMPLER_BINDING>
		<PIXEL_PACK_BUFFER public="1" get="inline" set="null" expr="0x88EB" line="535" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EB</e></m></meta>
		</PIXEL_PACK_BUFFER>
		<PIXEL_UNPACK_BUFFER public="1" get="inline" set="null" expr="0x88EC" line="536" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EC</e></m></meta>
		</PIXEL_UNPACK_BUFFER>
		<PIXEL_PACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x88ED" line="537" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88ED</e></m></meta>
		</PIXEL_PACK_BUFFER_BINDING>
		<PIXEL_UNPACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x88EF" line="538" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EF</e></m></meta>
		</PIXEL_UNPACK_BUFFER_BINDING>
		<COPY_READ_BUFFER public="1" get="inline" set="null" expr="0x8F36" line="539" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER>
		<COPY_WRITE_BUFFER public="1" get="inline" set="null" expr="0x8F37" line="540" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER>
		<COPY_READ_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8F36" line="541" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F36</e></m></meta>
		</COPY_READ_BUFFER_BINDING>
		<COPY_WRITE_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8F37" line="542" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F37</e></m></meta>
		</COPY_WRITE_BUFFER_BINDING>
		<FLOAT_MAT2x3 public="1" get="inline" set="null" expr="0x8B65" line="544" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B65</e></m></meta>
		</FLOAT_MAT2x3>
		<FLOAT_MAT2x4 public="1" get="inline" set="null" expr="0x8B66" line="545" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B66</e></m></meta>
		</FLOAT_MAT2x4>
		<FLOAT_MAT3x2 public="1" get="inline" set="null" expr="0x8B67" line="546" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B67</e></m></meta>
		</FLOAT_MAT3x2>
		<FLOAT_MAT3x4 public="1" get="inline" set="null" expr="0x8B68" line="547" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B68</e></m></meta>
		</FLOAT_MAT3x4>
		<FLOAT_MAT4x2 public="1" get="inline" set="null" expr="0x8B69" line="548" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B69</e></m></meta>
		</FLOAT_MAT4x2>
		<FLOAT_MAT4x3 public="1" get="inline" set="null" expr="0x8B6A" line="549" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8B6A</e></m></meta>
		</FLOAT_MAT4x3>
		<UNSIGNED_INT_VEC2 public="1" get="inline" set="null" expr="0x8DC6" line="550" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC6</e></m></meta>
		</UNSIGNED_INT_VEC2>
		<UNSIGNED_INT_VEC3 public="1" get="inline" set="null" expr="0x8DC7" line="551" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC7</e></m></meta>
		</UNSIGNED_INT_VEC3>
		<UNSIGNED_INT_VEC4 public="1" get="inline" set="null" expr="0x8DC8" line="552" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8DC8</e></m></meta>
		</UNSIGNED_INT_VEC4>
		<UNSIGNED_NORMALIZED public="1" get="inline" set="null" expr="0x8C17" line="553" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C17</e></m></meta>
		</UNSIGNED_NORMALIZED>
		<SIGNED_NORMALIZED public="1" get="inline" set="null" expr="0x8F9C" line="554" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8F9C</e></m></meta>
		</SIGNED_NORMALIZED>
		<VERTEX_ATTRIB_ARRAY_INTEGER public="1" get="inline" set="null" expr="0x88FD" line="556" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FD</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_INTEGER>
		<VERTEX_ATTRIB_ARRAY_DIVISOR public="1" get="inline" set="null" expr="0x88FE" line="557" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88FE</e></m></meta>
		</VERTEX_ATTRIB_ARRAY_DIVISOR>
		<TRANSFORM_FEEDBACK_BUFFER_MODE public="1" get="inline" set="null" expr="0x8C7F" line="559" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C7F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_MODE>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS public="1" get="inline" set="null" expr="0x8C80" line="560" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C80</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS>
		<TRANSFORM_FEEDBACK_VARYINGS public="1" get="inline" set="null" expr="0x8C83" line="561" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C83</e></m></meta>
		</TRANSFORM_FEEDBACK_VARYINGS>
		<TRANSFORM_FEEDBACK_BUFFER_START public="1" get="inline" set="null" expr="0x8C84" line="562" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C84</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_START>
		<TRANSFORM_FEEDBACK_BUFFER_SIZE public="1" get="inline" set="null" expr="0x8C85" line="563" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C85</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_SIZE>
		<TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN public="1" get="inline" set="null" expr="0x8C88" line="564" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C88</e></m></meta>
		</TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN>
		<MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS public="1" get="inline" set="null" expr="0x8C8A" line="565" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8A</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS>
		<MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS public="1" get="inline" set="null" expr="0x8C8B" line="566" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8B</e></m></meta>
		</MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS>
		<INTERLEAVED_ATTRIBS public="1" get="inline" set="null" expr="0x8C8C" line="567" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8C</e></m></meta>
		</INTERLEAVED_ATTRIBS>
		<SEPARATE_ATTRIBS public="1" get="inline" set="null" expr="0x8C8D" line="568" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8D</e></m></meta>
		</SEPARATE_ATTRIBS>
		<TRANSFORM_FEEDBACK_BUFFER public="1" get="inline" set="null" expr="0x8C8E" line="569" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8E</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER>
		<TRANSFORM_FEEDBACK_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8C8F" line="570" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8C8F</e></m></meta>
		</TRANSFORM_FEEDBACK_BUFFER_BINDING>
		<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="0x8E22" line="571" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E22</e></m></meta>
		</TRANSFORM_FEEDBACK>
		<TRANSFORM_FEEDBACK_PAUSED public="1" get="inline" set="null" expr="0x8E23" line="572" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E23</e></m></meta>
		</TRANSFORM_FEEDBACK_PAUSED>
		<TRANSFORM_FEEDBACK_ACTIVE public="1" get="inline" set="null" expr="0x8E24" line="573" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E24</e></m></meta>
		</TRANSFORM_FEEDBACK_ACTIVE>
		<TRANSFORM_FEEDBACK_BINDING public="1" get="inline" set="null" expr="0x8E25" line="574" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8E25</e></m></meta>
		</TRANSFORM_FEEDBACK_BINDING>
		<FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING public="1" get="inline" set="null" expr="0x8210" line="576" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8210</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING>
		<FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE public="1" get="inline" set="null" expr="0x8211" line="577" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8211</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE>
		<FRAMEBUFFER_ATTACHMENT_RED_SIZE public="1" get="inline" set="null" expr="0x8212" line="578" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8212</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_RED_SIZE>
		<FRAMEBUFFER_ATTACHMENT_GREEN_SIZE public="1" get="inline" set="null" expr="0x8213" line="579" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8213</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_GREEN_SIZE>
		<FRAMEBUFFER_ATTACHMENT_BLUE_SIZE public="1" get="inline" set="null" expr="0x8214" line="580" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8214</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_BLUE_SIZE>
		<FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE public="1" get="inline" set="null" expr="0x8215" line="581" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8215</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE>
		<FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE public="1" get="inline" set="null" expr="0x8216" line="582" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8216</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE>
		<FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE public="1" get="inline" set="null" expr="0x8217" line="583" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8217</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE>
		<FRAMEBUFFER_DEFAULT public="1" get="inline" set="null" expr="0x8218" line="584" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8218</e></m></meta>
		</FRAMEBUFFER_DEFAULT>
		<DEPTH24_STENCIL8 public="1" get="inline" set="null" expr="0x88F0" line="585" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88F0</e></m></meta>
		</DEPTH24_STENCIL8>
		<DRAW_FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CA6" line="586" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA6</e></m></meta>
		</DRAW_FRAMEBUFFER_BINDING>
		<READ_FRAMEBUFFER public="1" get="inline" set="null" expr="0x8CA8" line="587" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA8</e></m></meta>
		</READ_FRAMEBUFFER>
		<DRAW_FRAMEBUFFER public="1" get="inline" set="null" expr="0x8CA9" line="588" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CA9</e></m></meta>
		</DRAW_FRAMEBUFFER>
		<READ_FRAMEBUFFER_BINDING public="1" get="inline" set="null" expr="0x8CAA" line="589" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAA</e></m></meta>
		</READ_FRAMEBUFFER_BINDING>
		<RENDERBUFFER_SAMPLES public="1" get="inline" set="null" expr="0x8CAB" line="590" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAB</e></m></meta>
		</RENDERBUFFER_SAMPLES>
		<FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER public="1" get="inline" set="null" expr="0x8CD4" line="591" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CD4</e></m></meta>
		</FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER>
		<FRAMEBUFFER_INCOMPLETE_MULTISAMPLE public="1" get="inline" set="null" expr="0x8D56" line="592" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8D56</e></m></meta>
		</FRAMEBUFFER_INCOMPLETE_MULTISAMPLE>
		<UNIFORM_BUFFER public="1" get="inline" set="null" expr="0x8A11" line="594" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A11</e></m></meta>
		</UNIFORM_BUFFER>
		<UNIFORM_BUFFER_BINDING public="1" get="inline" set="null" expr="0x8A28" line="595" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A28</e></m></meta>
		</UNIFORM_BUFFER_BINDING>
		<UNIFORM_BUFFER_START public="1" get="inline" set="null" expr="0x8A29" line="596" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A29</e></m></meta>
		</UNIFORM_BUFFER_START>
		<UNIFORM_BUFFER_SIZE public="1" get="inline" set="null" expr="0x8A2A" line="597" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2A</e></m></meta>
		</UNIFORM_BUFFER_SIZE>
		<MAX_VERTEX_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2B" line="598" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2B</e></m></meta>
		</MAX_VERTEX_UNIFORM_BLOCKS>
		<MAX_FRAGMENT_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2D" line="599" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2D</e></m></meta>
		</MAX_FRAGMENT_UNIFORM_BLOCKS>
		<MAX_COMBINED_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A2E" line="600" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2E</e></m></meta>
		</MAX_COMBINED_UNIFORM_BLOCKS>
		<MAX_UNIFORM_BUFFER_BINDINGS public="1" get="inline" set="null" expr="0x8A2F" line="601" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A2F</e></m></meta>
		</MAX_UNIFORM_BUFFER_BINDINGS>
		<MAX_UNIFORM_BLOCK_SIZE public="1" get="inline" set="null" expr="0x8A30" line="602" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A30</e></m></meta>
		</MAX_UNIFORM_BLOCK_SIZE>
		<MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8A31" line="603" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A31</e></m></meta>
		</MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS>
		<MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS public="1" get="inline" set="null" expr="0x8A33" line="604" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A33</e></m></meta>
		</MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS>
		<UNIFORM_BUFFER_OFFSET_ALIGNMENT public="1" get="inline" set="null" expr="0x8A34" line="605" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A34</e></m></meta>
		</UNIFORM_BUFFER_OFFSET_ALIGNMENT>
		<ACTIVE_UNIFORM_BLOCKS public="1" get="inline" set="null" expr="0x8A36" line="606" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A36</e></m></meta>
		</ACTIVE_UNIFORM_BLOCKS>
		<UNIFORM_TYPE public="1" get="inline" set="null" expr="0x8A37" line="607" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A37</e></m></meta>
		</UNIFORM_TYPE>
		<UNIFORM_SIZE public="1" get="inline" set="null" expr="0x8A38" line="608" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A38</e></m></meta>
		</UNIFORM_SIZE>
		<UNIFORM_BLOCK_INDEX public="1" get="inline" set="null" expr="0x8A3A" line="609" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3A</e></m></meta>
		</UNIFORM_BLOCK_INDEX>
		<UNIFORM_OFFSET public="1" get="inline" set="null" expr="0x8A3B" line="610" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3B</e></m></meta>
		</UNIFORM_OFFSET>
		<UNIFORM_ARRAY_STRIDE public="1" get="inline" set="null" expr="0x8A3C" line="611" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3C</e></m></meta>
		</UNIFORM_ARRAY_STRIDE>
		<UNIFORM_MATRIX_STRIDE public="1" get="inline" set="null" expr="0x8A3D" line="612" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3D</e></m></meta>
		</UNIFORM_MATRIX_STRIDE>
		<UNIFORM_IS_ROW_MAJOR public="1" get="inline" set="null" expr="0x8A3E" line="613" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3E</e></m></meta>
		</UNIFORM_IS_ROW_MAJOR>
		<UNIFORM_BLOCK_BINDING public="1" get="inline" set="null" expr="0x8A3F" line="614" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A3F</e></m></meta>
		</UNIFORM_BLOCK_BINDING>
		<UNIFORM_BLOCK_DATA_SIZE public="1" get="inline" set="null" expr="0x8A40" line="615" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A40</e></m></meta>
		</UNIFORM_BLOCK_DATA_SIZE>
		<UNIFORM_BLOCK_ACTIVE_UNIFORMS public="1" get="inline" set="null" expr="0x8A42" line="616" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A42</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORMS>
		<UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES public="1" get="inline" set="null" expr="0x8A43" line="617" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A43</e></m></meta>
		</UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES>
		<UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER public="1" get="inline" set="null" expr="0x8A44" line="618" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A44</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER>
		<UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER public="1" get="inline" set="null" expr="0x8A46" line="619" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8A46</e></m></meta>
		</UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER>
		<OBJECT_TYPE public="1" get="inline" set="null" expr="0x9112" line="621" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9112</e></m></meta>
		</OBJECT_TYPE>
		<SYNC_CONDITION public="1" get="inline" set="null" expr="0x9113" line="622" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9113</e></m></meta>
		</SYNC_CONDITION>
		<SYNC_STATUS public="1" get="inline" set="null" expr="0x9114" line="623" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9114</e></m></meta>
		</SYNC_STATUS>
		<SYNC_FLAGS public="1" get="inline" set="null" expr="0x9115" line="624" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9115</e></m></meta>
		</SYNC_FLAGS>
		<SYNC_FENCE public="1" get="inline" set="null" expr="0x9116" line="625" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9116</e></m></meta>
		</SYNC_FENCE>
		<SYNC_GPU_COMMANDS_COMPLETE public="1" get="inline" set="null" expr="0x9117" line="626" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9117</e></m></meta>
		</SYNC_GPU_COMMANDS_COMPLETE>
		<UNSIGNALED public="1" get="inline" set="null" expr="0x9118" line="627" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9118</e></m></meta>
		</UNSIGNALED>
		<SIGNALED public="1" get="inline" set="null" expr="0x9119" line="628" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9119</e></m></meta>
		</SIGNALED>
		<ALREADY_SIGNALED public="1" get="inline" set="null" expr="0x911A" line="629" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911A</e></m></meta>
		</ALREADY_SIGNALED>
		<TIMEOUT_EXPIRED public="1" get="inline" set="null" expr="0x911B" line="630" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911B</e></m></meta>
		</TIMEOUT_EXPIRED>
		<CONDITION_SATISFIED public="1" get="inline" set="null" expr="0x911C" line="631" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911C</e></m></meta>
		</CONDITION_SATISFIED>
		<WAIT_FAILED public="1" get="inline" set="null" expr="0x911D" line="632" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x911D</e></m></meta>
		</WAIT_FAILED>
		<SYNC_FLUSH_COMMANDS_BIT public="1" get="inline" set="null" expr="0x00000001" line="633" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x00000001</e></m></meta>
		</SYNC_FLUSH_COMMANDS_BIT>
		<COLOR public="1" get="inline" set="null" expr="0x1800" line="635" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1800</e></m></meta>
		</COLOR>
		<DEPTH public="1" get="inline" set="null" expr="0x1801" line="636" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1801</e></m></meta>
		</DEPTH>
		<STENCIL public="1" get="inline" set="null" expr="0x1802" line="637" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x1802</e></m></meta>
		</STENCIL>
		<MIN public="1" get="inline" set="null" expr="0x8007" line="638" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8007</e></m></meta>
		</MIN>
		<MAX public="1" get="inline" set="null" expr="0x8008" line="639" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8008</e></m></meta>
		</MAX>
		<DEPTH_COMPONENT24 public="1" get="inline" set="null" expr="0x81A6" line="640" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x81A6</e></m></meta>
		</DEPTH_COMPONENT24>
		<STREAM_READ public="1" get="inline" set="null" expr="0x88E1" line="641" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E1</e></m></meta>
		</STREAM_READ>
		<STREAM_COPY public="1" get="inline" set="null" expr="0x88E2" line="642" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E2</e></m></meta>
		</STREAM_COPY>
		<STATIC_READ public="1" get="inline" set="null" expr="0x88E5" line="643" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E5</e></m></meta>
		</STATIC_READ>
		<STATIC_COPY public="1" get="inline" set="null" expr="0x88E6" line="644" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E6</e></m></meta>
		</STATIC_COPY>
		<DYNAMIC_READ public="1" get="inline" set="null" expr="0x88E9" line="645" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88E9</e></m></meta>
		</DYNAMIC_READ>
		<DYNAMIC_COPY public="1" get="inline" set="null" expr="0x88EA" line="646" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x88EA</e></m></meta>
		</DYNAMIC_COPY>
		<DEPTH_COMPONENT32F public="1" get="inline" set="null" expr="0x8CAC" line="647" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAC</e></m></meta>
		</DEPTH_COMPONENT32F>
		<DEPTH32F_STENCIL8 public="1" get="inline" set="null" expr="0x8CAD" line="648" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x8CAD</e></m></meta>
		</DEPTH32F_STENCIL8>
		<INVALID_INDEX public="1" get="inline" set="null" expr="0xFFFFFFFF" line="649" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0xFFFFFFFF</e></m></meta>
		</INVALID_INDEX>
		<TIMEOUT_IGNORED public="1" get="inline" set="null" expr="-1" line="650" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</TIMEOUT_IGNORED>
		<MAX_CLIENT_WAIT_TIMEOUT_WEBGL public="1" get="inline" set="null" expr="0x9247" line="651" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>0x9247</e></m></meta>
		</MAX_CLIENT_WAIT_TIMEOUT_WEBGL>
		<context public="1" set="null" static="1"><x path="lime.graphics.WebGL2RenderContext"/></context>
		<type public="1" set="null" static="1"><x path="lime.graphics.RenderContextType"/></type>
		<version public="1" set="null" static="1"><x path="Float"/></version>
		<activeTexture public="1" get="inline" set="null" line="668" static="1"><f a="texture">
	<x path="Int"/>
	<x path="Void"/>
</f></activeTexture>
		<attachShader public="1" get="inline" set="null" line="675" static="1"><f a="program:shader">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></attachShader>
		<beginQuery public="1" get="inline" set="null" line="682" static="1"><f a="target:query">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></beginQuery>
		<beginTransformFeedback public="1" get="inline" set="null" line="689" static="1"><f a="primitiveNode">
	<x path="Int"/>
	<x path="Void"/>
</f></beginTransformFeedback>
		<bindAttribLocation public="1" get="inline" set="null" line="696" static="1"><f a="program:index:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
	<x path="Void"/>
</f></bindAttribLocation>
		<bindBuffer public="1" get="inline" set="null" line="703" static="1"><f a="target:buffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBuffer>
		<bindBufferBase public="1" get="inline" set="null" line="710" static="1"><f a="target:index:buffer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></bindBufferBase>
		<bindBufferRange public="1" get="inline" set="null" line="717" static="1"><f a="target:index:buffer:offset:size">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bindBufferRange>
		<bindFramebuffer public="1" get="inline" set="null" line="724" static="1"><f a="target:framebuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></bindFramebuffer>
		<bindRenderbuffer public="1" get="inline" set="null" line="731" static="1"><f a="target:renderbuffer">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></bindRenderbuffer>
		<bindSampler public="1" get="inline" set="null" line="738" static="1"><f a="unit:sampler">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></bindSampler>
		<bindTexture public="1" get="inline" set="null" line="745" static="1"><f a="target:texture">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></bindTexture>
		<bindTransformFeedback public="1" get="inline" set="null" line="752" static="1"><f a="target:transformFeedback">
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></bindTransformFeedback>
		<bindVertexArray public="1" get="inline" set="null" line="759" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></bindVertexArray>
		<blitFramebuffer public="1" get="inline" set="null" line="766" static="1"><f a="srcX0:srcY0:srcX1:srcY1:dstX0:dstY0:dstX1:dstY1:mask:filter">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blitFramebuffer>
		<blendColor public="1" get="inline" set="null" line="773" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></blendColor>
		<blendEquation public="1" get="inline" set="null" line="780" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquation>
		<blendEquationSeparate public="1" get="inline" set="null" line="787" static="1"><f a="modeRGB:modeAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendEquationSeparate>
		<blendFunc public="1" get="inline" set="null" line="794" static="1"><f a="sfactor:dfactor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFunc>
		<blendFuncSeparate public="1" get="inline" set="null" line="801" static="1"><f a="srcRGB:dstRGB:srcAlpha:dstAlpha">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></blendFuncSeparate>
		<bufferDataWEBGL public="1" get="inline" set="null" line="818" static="1"><f a="target:srcData:usage:?srcOffset:?length">
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferDataWEBGL>
		<bufferSubDataWEBGL public="1" get="inline" set="null" line="836" static="1"><f a="target:dstByteOffset:srcData:?srcOffset:?length">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></bufferSubDataWEBGL>
		<checkFramebufferStatus public="1" get="inline" set="null" line="844" static="1"><f a="target">
	<x path="Int"/>
	<x path="Int"/>
</f></checkFramebufferStatus>
		<clear public="1" get="inline" set="null" line="851" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></clear>
		<clearBufferfi public="1" get="inline" set="null" line="858" static="1"><f a="buffer:drawbuffer:depth:stencil">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferfi>
		<clearBufferfvWEBGL public="1" get="inline" set="null" line="875" static="1"><f a="buffer:drawbuffer:values:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferfvWEBGL>
		<clearBufferivWEBGL public="1" get="inline" set="null" line="893" static="1"><f a="buffer:drawbuffer:values:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferivWEBGL>
		<clearBufferuivWEBGL public="1" get="inline" set="null" line="911" static="1"><f a="buffer:drawbuffer:values:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></clearBufferuivWEBGL>
		<clearColor public="1" get="inline" set="null" line="919" static="1"><f a="red:green:blue:alpha">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></clearColor>
		<clearDepth public="1" get="inline" set="null" line="927" static="1"><f a="depth">
	<x path="Float"/>
	<x path="Void"/>
</f></clearDepth>
		<clearStencil public="1" get="inline" set="null" line="944" static="1"><f a="s">
	<x path="Int"/>
	<x path="Void"/>
</f></clearStencil>
		<clientWaitSync public="1" get="inline" set="null" line="951" static="1"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Int"/>
</f></clientWaitSync>
		<colorMask public="1" get="inline" set="null" line="958" static="1"><f a="red:green:blue:alpha">
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></colorMask>
		<compileShader public="1" get="inline" set="null" line="965" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></compileShader>
		<compressedTexImage2DWEBGL public="1" get="inline" set="null" line="982" static="1"><f a="target:level:internalformat:width:height:border:srcData:?srcOffset:?srcLengthOverride">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></compressedTexImage2DWEBGL>
		<compressedTexImage3DWEBGL public="1" get="inline" set="null" line="1000" static="1"><f a="target:level:internalformat:width:height:depth:border:srcData:?srcOffset:?srcLengthOverride">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></compressedTexImage3DWEBGL>
		<compressedTexSubImage2DWEBGL public="1" get="inline" set="null" line="1018" static="1"><f a="target:level:xoffset:yoffset:width:height:format:srcData:?srcOffset:?srcLengthOverride">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></compressedTexSubImage2DWEBGL>
		<compressedTexSubImage3DWEBGL public="1" get="inline" set="null" line="1036" static="1"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:srcData:?srcOffset:?srcLengthOverride">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></compressedTexSubImage3DWEBGL>
		<copyTexImage2D public="1" get="inline" set="null" line="1053" static="1"><f a="target:level:internalformat:x:y:width:height:border">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexImage2D>
		<copyTexSubImage2D public="1" get="inline" set="null" line="1060" static="1"><f a="target:level:xoffset:yoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage2D>
		<copyTexSubImage3D public="1" get="inline" set="null" line="1067" static="1"><f a="target:level:xoffset:yoffset:zoffset:x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></copyTexSubImage3D>
		<createBuffer public="1" get="inline" set="null" line="1074" static="1"><f a=""><t path="lime.graphics.opengl.GLBuffer"/></f></createBuffer>
		<createFramebuffer public="1" get="inline" set="null" line="1081" static="1"><f a=""><t path="lime.graphics.opengl.GLFramebuffer"/></f></createFramebuffer>
		<createProgram public="1" get="inline" set="null" line="1088" static="1"><f a=""><x path="lime.graphics.opengl.GLProgram"/></f></createProgram>
		<createQuery public="1" get="inline" set="null" line="1095" static="1"><f a=""><t path="lime.graphics.opengl.GLQuery"/></f></createQuery>
		<createRenderbuffer public="1" get="inline" set="null" line="1102" static="1"><f a=""><t path="lime.graphics.opengl.GLRenderbuffer"/></f></createRenderbuffer>
		<createSampler public="1" get="inline" set="null" line="1109" static="1"><f a=""><t path="lime.graphics.opengl.GLSampler"/></f></createSampler>
		<createShader public="1" get="inline" set="null" line="1116" static="1"><f a="type">
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></createShader>
		<createTexture public="1" get="inline" set="null" line="1123" static="1"><f a=""><t path="lime.graphics.opengl.GLTexture"/></f></createTexture>
		<createTransformFeedback public="1" get="inline" set="null" line="1130" static="1"><f a=""><t path="lime.graphics.opengl.GLTransformFeedback"/></f></createTransformFeedback>
		<createVertexArray public="1" get="inline" set="null" line="1137" static="1"><f a=""><t path="lime.graphics.opengl.GLVertexArrayObject"/></f></createVertexArray>
		<cullFace public="1" get="inline" set="null" line="1144" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></cullFace>
		<deleteBuffer public="1" get="inline" set="null" line="1151" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Void"/>
</f></deleteBuffer>
		<deleteFramebuffer public="1" get="inline" set="null" line="1158" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Void"/>
</f></deleteFramebuffer>
		<deleteProgram public="1" get="inline" set="null" line="1165" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></deleteProgram>
		<deleteQuery public="1" get="inline" set="null" line="1172" static="1"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Void"/>
</f></deleteQuery>
		<deleteRenderbuffer public="1" get="inline" set="null" line="1179" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></deleteRenderbuffer>
		<deleteSampler public="1" get="inline" set="null" line="1186" static="1"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Void"/>
</f></deleteSampler>
		<deleteShader public="1" get="inline" set="null" line="1193" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></deleteShader>
		<deleteSync public="1" get="inline" set="null" line="1200" static="1"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Void"/>
</f></deleteSync>
		<deleteTexture public="1" get="inline" set="null" line="1207" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Void"/>
</f></deleteTexture>
		<deleteTransformFeedback public="1" get="inline" set="null" line="1214" static="1"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Void"/>
</f></deleteTransformFeedback>
		<deleteVertexArray public="1" get="inline" set="null" line="1221" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Void"/>
</f></deleteVertexArray>
		<depthFunc public="1" get="inline" set="null" line="1228" static="1"><f a="func">
	<x path="Int"/>
	<x path="Void"/>
</f></depthFunc>
		<depthMask public="1" get="inline" set="null" line="1235" static="1"><f a="flag">
	<x path="Bool"/>
	<x path="Void"/>
</f></depthMask>
		<depthRange public="1" get="inline" set="null" line="1243" static="1"><f a="zNear:zFar">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></depthRange>
		<detachShader public="1" get="inline" set="null" line="1260" static="1"><f a="program:shader">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Void"/>
</f></detachShader>
		<disable public="1" get="inline" set="null" line="1267" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></disable>
		<disableVertexAttribArray public="1" get="inline" set="null" line="1274" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></disableVertexAttribArray>
		<drawArrays public="1" get="inline" set="null" line="1281" static="1"><f a="mode:first:count">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArrays>
		<drawArraysInstanced public="1" get="inline" set="null" line="1288" static="1"><f a="mode:first:count:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawArraysInstanced>
		<drawBuffers public="1" get="inline" set="null" line="1295" static="1"><f a="buffers">
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></drawBuffers>
		<drawElements public="1" get="inline" set="null" line="1302" static="1"><f a="mode:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElements>
		<drawElementsInstanced public="1" get="inline" set="null" line="1309" static="1"><f a="mode:count:type:offset:instanceCount">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="Void"/>
</f></drawElementsInstanced>
		<drawRangeElements public="1" get="inline" set="null" line="1316" static="1"><f a="mode:start:end:count:type:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></drawRangeElements>
		<enable public="1" get="inline" set="null" line="1323" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Void"/>
</f></enable>
		<enableVertexAttribArray public="1" get="inline" set="null" line="1330" static="1"><f a="index">
	<x path="Int"/>
	<x path="Void"/>
</f></enableVertexAttribArray>
		<endQuery public="1" get="inline" set="null" line="1337" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></endQuery>
		<endTransformFeedback public="1" get="inline" set="null" line="1344" static="1"><f a=""><x path="Void"/></f></endTransformFeedback>
		<fenceSync public="1" get="inline" set="null" line="1351" static="1"><f a="condition:flags">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLSync"/>
</f></fenceSync>
		<finish public="1" get="inline" set="null" line="1358" static="1"><f a=""><x path="Void"/></f></finish>
		<flush public="1" get="inline" set="null" line="1365" static="1"><f a=""><x path="Void"/></f></flush>
		<framebufferRenderbuffer public="1" get="inline" set="null" line="1372" static="1"><f a="target:attachment:renderbuffertarget:renderbuffer">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Void"/>
</f></framebufferRenderbuffer>
		<framebufferTexture2D public="1" get="inline" set="null" line="1379" static="1"><f a="target:attachment:textarget:texture:level">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTexture2D>
		<framebufferTextureLayer public="1" get="inline" set="null" line="1386" static="1"><f a="target:attachment:texture:level:layer">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></framebufferTextureLayer>
		<frontFace public="1" get="inline" set="null" line="1393" static="1"><f a="mode">
	<x path="Int"/>
	<x path="Void"/>
</f></frontFace>
		<generateMipmap public="1" get="inline" set="null" line="1400" static="1"><f a="target">
	<x path="Int"/>
	<x path="Void"/>
</f></generateMipmap>
		<getActiveAttrib public="1" get="inline" set="null" line="1407" static="1"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveAttrib>
		<getActiveUniform public="1" get="inline" set="null" line="1414" static="1"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getActiveUniform>
		<getActiveUniformBlockName public="1" get="inline" set="null" line="1439" static="1"><f a="program:uniformBlockIndex">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<c path="String"/>
</f></getActiveUniformBlockName>
		<getActiveUniformBlockParameter public="1" get="inline" set="null" line="1446" static="1"><f a="program:uniformBlockIndex:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getActiveUniformBlockParameter>
		<getActiveUniforms public="1" get="inline" set="null" line="1453" static="1"><f a="program:uniformIndices:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<d/>
</f></getActiveUniforms>
		<getAttachedShaders public="1" get="inline" set="null" line="1469" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><x path="lime.graphics.opengl.GLShader"/></c>
</f></getAttachedShaders>
		<getAttribLocation public="1" get="inline" set="null" line="1476" static="1"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getAttribLocation>
		<getBufferParameter public="1" get="inline" set="null" line="1501" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getBufferParameter>
		<getBufferSubDataWEBGL public="1" get="inline" set="null" line="1554" static="1"><f a="target:srcByteOffset:dstData:?srcOffset:?length">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<d/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></getBufferSubDataWEBGL>
		<getContextAttributes public="1" get="inline" set="null" line="1562" static="1"><f a=""><t path="lime.graphics.opengl.GLContextAttributes"/></f></getContextAttributes>
		<getError public="1" get="inline" set="null" line="1569" static="1"><f a=""><x path="Int"/></f></getError>
		<getExtension public="1" get="inline" set="null" line="1576" static="1"><f a="name">
	<c path="String"/>
	<d/>
</f></getExtension>
		<getFragDataLocation public="1" get="inline" set="null" line="1601" static="1"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getFragDataLocation>
		<getFramebufferAttachmentParameter public="1" get="inline" set="null" line="1608" static="1"><f a="target:attachment:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getFramebufferAttachmentParameter>
		<getIndexedParameter public="1" get="inline" set="null" line="1633" static="1"><f a="target:index">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getIndexedParameter>
		<getInternalformatParameter public="1" get="inline" set="null" line="1721" static="1"><f a="target:internalformat:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getInternalformatParameter>
		<getParameter public="1" get="inline" set="null" line="1728" static="1"><f a="pname">
	<x path="Int"/>
	<d/>
</f></getParameter>
		<getProgramInfoLog public="1" get="inline" set="null" line="1762" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
</f></getProgramInfoLog>
		<getProgramParameter public="1" get="inline" set="null" line="1769" static="1"><f a="program:pname">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<d/>
</f></getProgramParameter>
		<getQuery public="1" get="inline" set="null" line="1776" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLQuery"/>
</f></getQuery>
		<getQueryParameter public="1" get="inline" set="null" line="1819" static="1"><f a="query:pname">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Int"/>
	<d/>
</f></getQueryParameter>
		<getRenderbufferParameter public="1" get="inline" set="null" line="1826" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getRenderbufferParameter>
		<getSamplerParameter public="1" get="inline" set="null" line="1851" static="1"><f a="sampler:pname">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<d/>
</f></getSamplerParameter>
		<getShaderInfoLog public="1" get="inline" set="null" line="1912" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderInfoLog>
		<getShaderParameter public="1" get="inline" set="null" line="1919" static="1"><f a="shader:pname">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Int"/>
	<d/>
</f></getShaderParameter>
		<getShaderPrecisionFormat public="1" get="inline" set="null" line="1926" static="1"><f a="shadertype:precisiontype">
	<x path="Int"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLShaderPrecisionFormat"/>
</f></getShaderPrecisionFormat>
		<getShaderSource public="1" get="inline" set="null" line="1933" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
</f></getShaderSource>
		<getSupportedExtensions public="1" get="inline" set="null" line="1958" static="1"><f a=""><c path="Array"><c path="String"/></c></f></getSupportedExtensions>
		<getSyncParameter public="1" get="inline" set="null" line="1965" static="1"><f a="sync:pname">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<d/>
</f></getSyncParameter>
		<getTexParameter public="1" get="inline" set="null" line="1990" static="1"><f a="target:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getTexParameter>
		<getTransformFeedbackVarying public="1" get="inline" set="null" line="2033" static="1"><f a="program:index">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<t path="lime.graphics.opengl.GLActiveInfo"/>
</f></getTransformFeedbackVarying>
		<getUniform public="1" get="inline" set="null" line="2040" static="1"><f a="program:location">
	<x path="lime.graphics.opengl.GLProgram"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
</f></getUniform>
		<getUniformBlockIndex public="1" get="inline" set="null" line="2101" static="1"><f a="program:uniformBlockName">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<x path="Int"/>
</f></getUniformBlockIndex>
		<getUniformIndices public="1" get="inline" set="null" line="2108" static="1"><f a="program:uniformNames">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<c path="Array"><x path="Int"/></c>
</f></getUniformIndices>
		<getUniformLocation public="1" get="inline" set="null" line="2115" static="1"><f a="program:name">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="String"/>
	<t path="lime.graphics.opengl.GLUniformLocation"/>
</f></getUniformLocation>
		<getVertexAttrib public="1" get="inline" set="null" line="2122" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<d/>
</f></getVertexAttrib>
		<getVertexAttribOffset public="1" get="inline" set="null" line="2202" static="1"><f a="index:pname">
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></getVertexAttribOffset>
		<hint public="1" get="inline" set="null" line="2219" static="1"><f a="target:mode">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></hint>
		<invalidateFramebuffer public="1" get="inline" set="null" line="2226" static="1"><f a="target:attachments">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Void"/>
</f></invalidateFramebuffer>
		<invalidateSubFramebuffer public="1" get="inline" set="null" line="2233" static="1"><f a="target:attachments:x:y:width:height">
	<x path="Int"/>
	<c path="Array"><x path="Int"/></c>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></invalidateSubFramebuffer>
		<isBuffer public="1" get="inline" set="null" line="2240" static="1"><f a="buffer">
	<t path="lime.graphics.opengl.GLBuffer"/>
	<x path="Bool"/>
</f></isBuffer>
		<isContextLost public="1" get="inline" set="null" line="2247" static="1"><f a=""><x path="Bool"/></f></isContextLost>
		<isEnabled public="1" get="inline" set="null" line="2254" static="1"><f a="cap">
	<x path="Int"/>
	<x path="Bool"/>
</f></isEnabled>
		<isFramebuffer public="1" get="inline" set="null" line="2261" static="1"><f a="framebuffer">
	<t path="lime.graphics.opengl.GLFramebuffer"/>
	<x path="Bool"/>
</f></isFramebuffer>
		<isProgram public="1" get="inline" set="null" line="2268" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Bool"/>
</f></isProgram>
		<isQuery public="1" get="inline" set="null" line="2275" static="1"><f a="query">
	<t path="lime.graphics.opengl.GLQuery"/>
	<x path="Bool"/>
</f></isQuery>
		<isRenderbuffer public="1" get="inline" set="null" line="2282" static="1"><f a="renderbuffer">
	<t path="lime.graphics.opengl.GLRenderbuffer"/>
	<x path="Bool"/>
</f></isRenderbuffer>
		<isSampler public="1" get="inline" set="null" line="2289" static="1"><f a="sampler">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Bool"/>
</f></isSampler>
		<isShader public="1" get="inline" set="null" line="2296" static="1"><f a="shader">
	<x path="lime.graphics.opengl.GLShader"/>
	<x path="Bool"/>
</f></isShader>
		<isSync public="1" get="inline" set="null" line="2303" static="1"><f a="sync">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Bool"/>
</f></isSync>
		<isTexture public="1" get="inline" set="null" line="2310" static="1"><f a="texture">
	<t path="lime.graphics.opengl.GLTexture"/>
	<x path="Bool"/>
</f></isTexture>
		<isTransformFeedback public="1" get="inline" set="null" line="2317" static="1"><f a="transformFeedback">
	<t path="lime.graphics.opengl.GLTransformFeedback"/>
	<x path="Bool"/>
</f></isTransformFeedback>
		<isVertexArray public="1" get="inline" set="null" line="2324" static="1"><f a="vertexArray">
	<t path="lime.graphics.opengl.GLVertexArrayObject"/>
	<x path="Bool"/>
</f></isVertexArray>
		<lineWidth public="1" get="inline" set="null" line="2331" static="1"><f a="width">
	<x path="Float"/>
	<x path="Void"/>
</f></lineWidth>
		<linkProgram public="1" get="inline" set="null" line="2338" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></linkProgram>
		<pauseTransformFeedback public="1" get="inline" set="null" line="2354" static="1"><f a=""><x path="Void"/></f></pauseTransformFeedback>
		<pixelStorei public="1" get="inline" set="null" line="2361" static="1"><f a="pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></pixelStorei>
		<polygonOffset public="1" get="inline" set="null" line="2368" static="1"><f a="factor:units">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></polygonOffset>
		<readBuffer public="1" get="inline" set="null" line="2393" static="1"><f a="src">
	<x path="Int"/>
	<x path="Void"/>
</f></readBuffer>
		<readPixelsWEBGL public="1" get="inline" set="null" line="2410" static="1"><f a="x:y:width:height:format:type:pixels:?dstOffset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></readPixelsWEBGL>
		<renderbufferStorage public="1" get="inline" set="null" line="2427" static="1"><f a="target:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorage>
		<renderbufferStorageMultisample public="1" get="inline" set="null" line="2434" static="1"><f a="target:samples:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></renderbufferStorageMultisample>
		<resumeTransformFeedback public="1" get="inline" set="null" line="2441" static="1"><f a=""><x path="Void"/></f></resumeTransformFeedback>
		<sampleCoverage public="1" get="inline" set="null" line="2448" static="1"><f a="value:invert">
	<x path="Float"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></sampleCoverage>
		<samplerParameterf public="1" get="inline" set="null" line="2455" static="1"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></samplerParameterf>
		<samplerParameteri public="1" get="inline" set="null" line="2462" static="1"><f a="sampler:pname:param">
	<t path="lime.graphics.opengl.GLSampler"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></samplerParameteri>
		<scissor public="1" get="inline" set="null" line="2469" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></scissor>
		<shaderSource public="1" get="inline" set="null" line="2485" static="1"><f a="shader:source">
	<x path="lime.graphics.opengl.GLShader"/>
	<c path="String"/>
	<x path="Void"/>
</f></shaderSource>
		<stencilFunc public="1" get="inline" set="null" line="2492" static="1"><f a="func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFunc>
		<stencilFuncSeparate public="1" get="inline" set="null" line="2499" static="1"><f a="face:func:ref:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilFuncSeparate>
		<stencilMask public="1" get="inline" set="null" line="2506" static="1"><f a="mask">
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMask>
		<stencilMaskSeparate public="1" get="inline" set="null" line="2513" static="1"><f a="face:mask">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilMaskSeparate>
		<stencilOp public="1" get="inline" set="null" line="2520" static="1"><f a="fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOp>
		<stencilOpSeparate public="1" get="inline" set="null" line="2527" static="1"><f a="face:fail:zfail:zpass">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></stencilOpSeparate>
		<texImage2DWEBGL public="1" get="inline" set="null" line="2544" static="1"><f a="target:level:internalformat:width:height:border:?format:?type:?srcData:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></texImage2DWEBGL>
		<texImage3DWEBGL public="1" get="inline" set="null" line="2562" static="1"><f a="target:level:internalformat:width:height:depth:border:format:type:srcData:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></texImage3DWEBGL>
		<texStorage2D public="1" get="inline" set="null" line="2570" static="1"><f a="target:level:internalformat:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage2D>
		<texStorage3D public="1" get="inline" set="null" line="2577" static="1"><f a="target:level:internalformat:width:height:depth">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texStorage3D>
		<texParameterf public="1" get="inline" set="null" line="2584" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></texParameterf>
		<texParameteri public="1" get="inline" set="null" line="2591" static="1"><f a="target:pname:param">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></texParameteri>
		<texSubImage2DWEBGL public="1" get="inline" set="null" line="2608" static="1"><f a="target:level:xoffset:yoffset:width:height:format:?type:?srcData:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></texSubImage2DWEBGL>
		<texSubImage3DWEBGL public="1" get="inline" set="null" line="2626" static="1"><f a="target:level:xoffset:yoffset:zoffset:width:height:depth:format:type:source:?srcOffset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<d/>
	<x path="Int"/>
	<x path="Void"/>
</f></texSubImage3DWEBGL>
		<transformFeedbackVaryings public="1" get="inline" set="null" line="2634" static="1"><f a="program:varyings:bufferMode">
	<x path="lime.graphics.opengl.GLProgram"/>
	<c path="Array"><c path="String"/></c>
	<x path="Int"/>
	<x path="Void"/>
</f></transformFeedbackVaryings>
		<uniform1f public="1" get="inline" set="null" line="2641" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform1f>
		<uniform1fvWEBGL public="1" get="inline" set="null" line="2658" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1fvWEBGL>
		<uniform1i public="1" get="inline" set="null" line="2666" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1i>
		<uniform1ivWEBGL public="1" get="inline" set="null" line="2683" static="1"><f a="location:?data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1ivWEBGL>
		<uniform1ui public="1" get="inline" set="null" line="2691" static="1"><f a="location:v0">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1ui>
		<uniform1uivWEBGL public="1" get="inline" set="null" line="2708" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform1uivWEBGL>
		<uniform2f public="1" get="inline" set="null" line="2716" static="1"><f a="location:v0:v1">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform2f>
		<uniform2fvWEBGL public="1" get="inline" set="null" line="2733" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2fvWEBGL>
		<uniform2i public="1" get="inline" set="null" line="2741" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2i>
		<uniform2ivWEBGL public="1" get="inline" set="null" line="2758" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2ivWEBGL>
		<uniform2ui public="1" get="inline" set="null" line="2766" static="1"><f a="location:x:y">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2ui>
		<uniform2uivWEBGL public="1" get="inline" set="null" line="2783" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform2uivWEBGL>
		<uniform3f public="1" get="inline" set="null" line="2791" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform3f>
		<uniform3fvWEBGL public="1" get="inline" set="null" line="2808" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3fvWEBGL>
		<uniform3i public="1" get="inline" set="null" line="2816" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3i>
		<uniform3ivWEBGL public="1" get="inline" set="null" line="2833" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3ivWEBGL>
		<uniform3ui public="1" get="inline" set="null" line="2841" static="1"><f a="location:v0:v1:v2">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3ui>
		<uniform3uivWEBGL public="1" get="inline" set="null" line="2858" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform3uivWEBGL>
		<uniform4f public="1" get="inline" set="null" line="2866" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></uniform4f>
		<uniform4fvWEBGL public="1" get="inline" set="null" line="2883" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4fvWEBGL>
		<uniform4i public="1" get="inline" set="null" line="2891" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4i>
		<uniform4ivWEBGL public="1" get="inline" set="null" line="2908" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4ivWEBGL>
		<uniform4ui public="1" get="inline" set="null" line="2916" static="1"><f a="location:v0:v1:v2:v3">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4ui>
		<uniform4uivWEBGL public="1" get="inline" set="null" line="2933" static="1"><f a="location:data:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniform4uivWEBGL>
		<uniformBlockBinding public="1" get="inline" set="null" line="2941" static="1"><f a="program:uniformBlockIndex:uniformBlockBinding">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformBlockBinding>
		<uniformMatrix2fvWEBGL public="1" get="inline" set="null" line="2958" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix2fvWEBGL>
		<uniformMatrix2x3fvWEBGL public="1" get="inline" set="null" line="2976" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix2x3fvWEBGL>
		<uniformMatrix2x4fvWEBGL public="1" get="inline" set="null" line="2994" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix2x4fvWEBGL>
		<uniformMatrix3fvWEBGL public="1" get="inline" set="null" line="3012" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix3fvWEBGL>
		<uniformMatrix3x2fvWEBGL public="1" get="inline" set="null" line="3030" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix3x2fvWEBGL>
		<uniformMatrix3x4fvWEBGL public="1" get="inline" set="null" line="3048" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix3x4fvWEBGL>
		<uniformMatrix4fvWEBGL public="1" get="inline" set="null" line="3066" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix4fvWEBGL>
		<uniformMatrix4x2fvWEBGL public="1" get="inline" set="null" line="3084" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<x path="Bool"/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix4x2fvWEBGL>
		<uniformMatrix4x3fvWEBGL public="1" get="inline" set="null" line="3102" static="1"><f a="location:transpose:v:?srcOffset:?srcLength">
	<t path="lime.graphics.opengl.GLUniformLocation"/>
	<d/>
	<d/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></uniformMatrix4x3fvWEBGL>
		<useProgram public="1" get="inline" set="null" line="3119" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></useProgram>
		<validateProgram public="1" get="inline" set="null" line="3126" static="1"><f a="program">
	<x path="lime.graphics.opengl.GLProgram"/>
	<x path="Void"/>
</f></validateProgram>
		<vertexAttrib1f public="1" get="inline" set="null" line="3133" static="1"><f a="index:v0">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib1f>
		<vertexAttrib1fv public="1" get="inline" set="null" line="3140" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib1fv>
		<vertexAttrib1fvWEBGL public="1" get="inline" set="null" line="3150" static="1"><f a="index:v">
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></vertexAttrib1fvWEBGL>
		<vertexAttrib2f public="1" get="inline" set="null" line="3158" static="1"><f a="index:v0:v1">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib2f>
		<vertexAttrib2fv public="1" get="inline" set="null" line="3165" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib2fv>
		<vertexAttrib2fvWEBGL public="1" get="inline" set="null" line="3175" static="1"><f a="index:v">
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></vertexAttrib2fvWEBGL>
		<vertexAttrib3f public="1" get="inline" set="null" line="3183" static="1"><f a="index:v0:v1:v2">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib3f>
		<vertexAttrib3fv public="1" get="inline" set="null" line="3190" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib3fv>
		<vertexAttrib3fvWEBGL public="1" get="inline" set="null" line="3200" static="1"><f a="index:v">
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></vertexAttrib3fvWEBGL>
		<vertexAttrib4f public="1" get="inline" set="null" line="3208" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></vertexAttrib4f>
		<vertexAttrib4fv public="1" get="inline" set="null" line="3215" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttrib4fv>
		<vertexAttrib4fvWEBGL public="1" get="inline" set="null" line="3225" static="1"><f a="index:v">
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></vertexAttrib4fvWEBGL>
		<vertexAttribDivisor public="1" get="inline" set="null" line="3233" static="1"><f a="index:divisor">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribDivisor>
		<vertexAttribI4i public="1" get="inline" set="null" line="3240" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4i>
		<vertexAttribI4iv public="1" get="inline" set="null" line="3247" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4iv>
		<vertexAttribI4ivWEBGL public="1" get="inline" set="null" line="3257" static="1"><f a="index:v">
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></vertexAttribI4ivWEBGL>
		<vertexAttribI4ui public="1" get="inline" set="null" line="3265" static="1"><f a="index:v0:v1:v2:v3">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vertexAttribI4ui>
		<vertexAttribI4uiv public="1" get="inline" set="null" line="3272" static="1"><f a="index:v">
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribI4uiv>
		<vertexAttribI4uivWEBGL public="1" get="inline" set="null" line="3282" static="1"><f a="index:v">
	<x path="Int"/>
	<d/>
	<x path="Void"/>
</f></vertexAttribI4uivWEBGL>
		<vertexAttribIPointer public="1" get="inline" set="null" line="3290" static="1"><f a="index:size:type:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribIPointer>
		<vertexAttribPointer public="1" get="inline" set="null" line="3297" static="1"><f a="index:size:type:normalized:stride:offset">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Bool"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
	<x path="Void"/>
</f></vertexAttribPointer>
		<viewport public="1" get="inline" set="null" line="3304" static="1"><f a="x:y:width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></viewport>
		<waitSync public="1" get="inline" set="null" line="3311" static="1"><f a="sync:flags:timeout">
	<t path="lime.graphics.opengl.GLSync"/>
	<x path="Int"/>
	<x path="haxe.Int64"/>
	<x path="Void"/>
</f></waitSync>
		<__getObjectID get="inline" set="null" line="3318" static="1"><f a="object">
	<c path="lime.graphics.opengl.GLObject"/>
	<x path="Int"/>
</f></__getObjectID>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":allow"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime.graphics.opengl.GLObject" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GL.hx" module="lime.graphics.opengl.GL">
		<fromInt public="1" set="method" line="3346" static="1"><f a="type:id">
	<x path="lime.graphics.opengl.GLObjectType"/>
	<x path="Int"/>
	<c path="lime.graphics.opengl.GLObject"/>
</f></fromInt>
		<id>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</id>
		<ptr>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</ptr>
		<refs>
			<c path="Array"><c path="lime.graphics.opengl.GLObject"/></c>
			<meta><m n=":noCompletion"/></meta>
		</refs>
		<new set="method" line="3339">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
		</meta>
	</class>
	<abstract path="lime.graphics.opengl.GLObjectType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GL.hx" module="lime.graphics.opengl.GL">
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.graphics.opengl._GL.GLObjectType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GL.hx" private="1" module="lime.graphics.opengl.GL" extern="1">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="3374" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<PROGRAM public="1" get="inline" set="null" expr="cast 1" line="3375" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PROGRAM>
	<SHADER public="1" get="inline" set="null" expr="cast 2" line="3376" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SHADER>
	<BUFFER public="1" get="inline" set="null" expr="cast 3" line="3377" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BUFFER>
	<TEXTURE public="1" get="inline" set="null" expr="cast 4" line="3378" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXTURE>
	<FRAMEBUFFER public="1" get="inline" set="null" expr="cast 5" line="3379" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FRAMEBUFFER>
	<RENDERBUFFER public="1" get="inline" set="null" expr="cast 6" line="3380" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RENDERBUFFER>
	<VERTEX_ARRAY_OBJECT public="1" get="inline" set="null" expr="cast 7" line="3381" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERTEX_ARRAY_OBJECT>
	<QUERY public="1" get="inline" set="null" expr="cast 8" line="3382" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUERY>
	<SAMPLER public="1" get="inline" set="null" expr="cast 9" line="3383" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SAMPLER>
	<SYNC public="1" get="inline" set="null" expr="cast 10" line="3384" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYNC>
	<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="cast 11" line="3385" static="1">
		<x path="lime.graphics.opengl.GLObjectType"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRANSFORM_FEEDBACK>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GL.GLObjectType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GL.hx" private="1" module="lime.graphics.opengl.GL" extern="1">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="3374" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<PROGRAM public="1" get="inline" set="null" expr="cast 1" line="3375" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PROGRAM>
		<SHADER public="1" get="inline" set="null" expr="cast 2" line="3376" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SHADER>
		<BUFFER public="1" get="inline" set="null" expr="cast 3" line="3377" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BUFFER>
		<TEXTURE public="1" get="inline" set="null" expr="cast 4" line="3378" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXTURE>
		<FRAMEBUFFER public="1" get="inline" set="null" expr="cast 5" line="3379" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FRAMEBUFFER>
		<RENDERBUFFER public="1" get="inline" set="null" expr="cast 6" line="3380" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RENDERBUFFER>
		<VERTEX_ARRAY_OBJECT public="1" get="inline" set="null" expr="cast 7" line="3381" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERTEX_ARRAY_OBJECT>
		<QUERY public="1" get="inline" set="null" expr="cast 8" line="3382" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUERY>
		<SAMPLER public="1" get="inline" set="null" expr="cast 9" line="3383" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SAMPLER>
		<SYNC public="1" get="inline" set="null" expr="cast 10" line="3384" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYNC>
		<TRANSFORM_FEEDBACK public="1" get="inline" set="null" expr="cast 11" line="3385" static="1">
			<x path="lime.graphics.opengl.GLObjectType"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRANSFORM_FEEDBACK>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<typedef path="lime.graphics.opengl.GLActiveInfo" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLActiveInfo.hx">
		<a>
			<type><x path="Int"/></type>
			<size><x path="Int"/></size>
			<name><c path="String"/></name>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLBuffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLBuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLContextAttributes" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLContextAttributes.hx">
		<a>
			<stencil><x path="Bool"/></stencil>
			<preserveDrawingBuffer><x path="Bool"/></preserveDrawingBuffer>
			<premultipliedAlpha><x path="Bool"/></premultipliedAlpha>
			<depth><x path="Bool"/></depth>
			<antialias><x path="Bool"/></antialias>
			<alpha><x path="Bool"/></alpha>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLFramebuffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLFramebuffer.hx"><d/></typedef>
	<abstract path="lime.graphics.opengl.GLProgram" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLProgram.hx">
		<from><icast><d/></icast></from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.graphics.opengl._GLProgram.GLProgram_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLProgram.hx" private="1" module="lime.graphics.opengl.GLProgram">
	<fromSources public="1" set="method" line="57" static="1"><f a="gl:vertexSource:fragmentSource">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="lime.graphics.opengl.GLProgram"/>
</f></fromSources>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GLProgram.GLProgram_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLProgram.hx" private="1" module="lime.graphics.opengl.GLProgram">
		<fromSources public="1" set="method" line="57" static="1"><f a="gl:vertexSource:fragmentSource">
	<d/>
	<c path="String"/>
	<c path="String"/>
	<x path="lime.graphics.opengl.GLProgram"/>
</f></fromSources>
		<meta><m n=":final"/></meta>
	</class>
	<typedef path="lime.graphics.opengl.GLQuery" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLQuery.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLRenderbuffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLRenderbuffer.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLSampler" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLSampler.hx"><d/></typedef>
	<abstract path="lime.graphics.opengl.GLShader" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLShader.hx">
		<from><icast><d/></icast></from>
		<this><d/></this>
		<to><icast><d/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.graphics.opengl._GLShader.GLShader_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLShader.hx" private="1" module="lime.graphics.opengl.GLShader">
	<fromSources public="1" set="method" line="58" static="1"><f a="gl:source:type">
	<d/>
	<c path="String"/>
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></fromSources>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.graphics.opengl._GLShader.GLShader_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLShader.hx" private="1" module="lime.graphics.opengl.GLShader">
		<fromSources public="1" set="method" line="58" static="1"><f a="gl:source:type">
	<d/>
	<c path="String"/>
	<x path="Int"/>
	<x path="lime.graphics.opengl.GLShader"/>
</f></fromSources>
		<meta><m n=":final"/></meta>
	</class>
	<typedef path="lime.graphics.opengl.GLShaderPrecisionFormat" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLShaderPrecisionFormat.hx">
		<a>
			<rangeMin><x path="Int"/></rangeMin>
			<rangeMax><x path="Int"/></rangeMax>
			<precision><x path="Int"/></precision>
		</a>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</typedef>
	<typedef path="lime.graphics.opengl.GLSync" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLSync.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLTexture" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLTexture.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLTransformFeedback" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLTransformFeedback.hx"><d/></typedef>
	<typedef path="lime.graphics.opengl.GLUniformLocation" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLUniformLocation.hx"><x path="Int"/></typedef>
	<typedef path="lime.graphics.opengl.GLVertexArrayObject" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/graphics/opengl/GLVertexArrayObject.hx"><d/></typedef>
	<abstract path="lime.math.ARGB" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/ARGB.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromBGRA"><x path="lime.math.BGRA"/></icast>
			<icast field="__fromRGBA"><x path="lime.math.RGBA"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>A utility for storing, accessing and converting colors in an ARGB
	(alpha, red, green, blue) color format.

	```haxe
	var color:ARGB = 0xFF883300;
	trace (color.a); // 0xFF
	trace (color.r); // 0x88
	trace (color.g); // 0x33
	trace (color.b); // 0x00

	var convert:BGRA = color; // 0x003388FF
	```</haxe_doc>
		<impl><class path="lime.math._ARGB.ARGB_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/ARGB.hx" private="1" module="lime.math.ARGB">
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the alpha component of the color</haxe_doc>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the blue component of the color</haxe_doc>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the green component of the color</haxe_doc>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the red component of the color</haxe_doc>
	</r>
	<_new public="1" get="inline" set="null" line="55" static="1">
		<f a="?argb" v="0">
			<x path="Int"/>
			<x path="lime.math.ARGB"/>
		</f>
		<meta>
			<m n=":value"><e>{ argb : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new ARGB instance
		@param	argb	(Optional) An ARGB color value</haxe_doc>
	</_new>
	<create public="1" get="inline" set="null" line="70" static="1">
		<f a="a:r:g:b">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.math.ARGB"/>
		</f>
		<haxe_doc>Creates a new ARGB instance from component values
		@param	a	An alpha component value
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@return	A new ARGB instance</haxe_doc>
	</create>
	<multiplyAlpha public="1" get="inline" set="null" line="82" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="105" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Reads a value from a `UInt8Array` into the current `ARGB` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</readUInt8>
	<set public="1" get="inline" set="null" line="139" static="1">
		<f a="this:a:r:g:b">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `ARGB` color to new component values
		@param	a	The alpha component value to set
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set</haxe_doc>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="149" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="168" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Writes the current `ARGB` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</writeUInt8>
	<__fromBGRA get="inline" set="null" line="204" static="1">
		<f a="bgra">
			<x path="lime.math.BGRA"/>
			<x path="lime.math.ARGB"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromBGRA>
	<__fromRGBA get="inline" set="null" line="211" static="1">
		<f a="rgba">
			<x path="lime.math.RGBA"/>
			<x path="lime.math.ARGB"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromRGBA>
	<get_a get="inline" set="null" line="225" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_a>
	<set_a get="inline" set="null" line="233" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_a>
	<get_b get="inline" set="null" line="241" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_b>
	<set_b get="inline" set="null" line="248" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_b>
	<get_g get="inline" set="null" line="256" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_g>
	<set_g get="inline" set="null" line="263" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_g>
	<get_r get="inline" set="null" line="271" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_r>
	<set_r get="inline" set="null" line="278" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_r>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.math._ARGB.ARGB_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/ARGB.hx" private="1" module="lime.math.ARGB">
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the alpha component of the color</haxe_doc>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the blue component of the color</haxe_doc>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the green component of the color</haxe_doc>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the red component of the color</haxe_doc>
		</r>
		<_new public="1" get="inline" set="null" line="55" static="1">
			<f a="?argb" v="0">
				<x path="Int"/>
				<x path="lime.math.ARGB"/>
			</f>
			<meta>
				<m n=":value"><e>{ argb : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new ARGB instance
		@param	argb	(Optional) An ARGB color value</haxe_doc>
		</_new>
		<create public="1" get="inline" set="null" line="70" static="1">
			<f a="a:r:g:b">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.math.ARGB"/>
			</f>
			<haxe_doc>Creates a new ARGB instance from component values
		@param	a	An alpha component value
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@return	A new ARGB instance</haxe_doc>
		</create>
		<multiplyAlpha public="1" get="inline" set="null" line="82" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="105" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Reads a value from a `UInt8Array` into the current `ARGB` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</readUInt8>
		<set public="1" get="inline" set="null" line="139" static="1">
			<f a="this:a:r:g:b">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `ARGB` color to new component values
		@param	a	The alpha component value to set
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set</haxe_doc>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="149" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="168" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Writes the current `ARGB` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</writeUInt8>
		<__fromBGRA get="inline" set="null" line="204" static="1">
			<f a="bgra">
				<x path="lime.math.BGRA"/>
				<x path="lime.math.ARGB"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromBGRA>
		<__fromRGBA get="inline" set="null" line="211" static="1">
			<f a="rgba">
				<x path="lime.math.RGBA"/>
				<x path="lime.math.ARGB"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromRGBA>
		<get_a get="inline" set="null" line="225" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_a>
		<set_a get="inline" set="null" line="233" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_a>
		<get_b get="inline" set="null" line="241" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_b>
		<set_b get="inline" set="null" line="248" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_b>
		<get_g get="inline" set="null" line="256" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_g>
		<set_g get="inline" set="null" line="263" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_g>
		<get_r get="inline" set="null" line="271" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_r>
		<set_r get="inline" set="null" line="278" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_r>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.math.BGRA" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/BGRA.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromARGB"><x path="lime.math.ARGB"/></icast>
			<icast field="__fromRGBA"><x path="lime.math.RGBA"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>A utility for storing, accessing and converting colors in a BGRA
	(blue, green, red, alpha) color format.

	```haxe
	var color:BGRA = 0x003388FF;
	trace (color.b); // 0x00
	trace (color.g); // 0x33
	trace (color.r); // 0x88
	trace (color.a); // 0xFF

	var convert:ARGB = color; // 0xFF883300
	```</haxe_doc>
		<impl><class path="lime.math._BGRA.BGRA_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/BGRA.hx" private="1" module="lime.math.BGRA">
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the alpha component of the color</haxe_doc>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the blue component of the color</haxe_doc>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the green component of the color</haxe_doc>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the red component of the color</haxe_doc>
	</r>
	<_new public="1" get="inline" set="null" line="55" static="1">
		<f a="?bgra" v="0">
			<x path="Int"/>
			<x path="lime.math.BGRA"/>
		</f>
		<meta>
			<m n=":value"><e>{ bgra : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new BGRA instance
		@param	bgra	(Optional) A BGRA color value</haxe_doc>
	</_new>
	<create public="1" get="inline" set="null" line="70" static="1">
		<f a="b:g:r:a">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.math.BGRA"/>
		</f>
		<haxe_doc>Creates a new BGRA instance from component values
		@param	b	A blue component value
		@param	g	A green component value
		@param	r	A red component value
		@param	a	An alpha component value
		@return	A new BGRA instance</haxe_doc>
	</create>
	<multiplyAlpha public="1" get="inline" set="null" line="82" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="105" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Reads a value from a `UInt8Array` into the current `BGRA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</readUInt8>
	<set public="1" get="inline" set="null" line="139" static="1">
		<f a="this:b:g:r:a">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `BGRA` color to new component values
		@param	b	The blue component vlaue to set
		@param	g	The green component value to set
		@param	r	The red component value to set
		@param	a	The alpha component value to set</haxe_doc>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="149" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="168" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Writes the current `BGRA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</writeUInt8>
	<__fromARGB get="inline" set="null" line="204" static="1">
		<f a="argb">
			<x path="lime.math.ARGB"/>
			<x path="lime.math.BGRA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromARGB>
	<__fromRGBA get="inline" set="null" line="211" static="1">
		<f a="rgba">
			<x path="lime.math.RGBA"/>
			<x path="lime.math.BGRA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromRGBA>
	<get_a get="inline" set="null" line="225" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_a>
	<set_a get="inline" set="null" line="232" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_a>
	<get_b get="inline" set="null" line="240" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_b>
	<set_b get="inline" set="null" line="247" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_b>
	<get_g get="inline" set="null" line="255" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_g>
	<set_g get="inline" set="null" line="262" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_g>
	<get_r get="inline" set="null" line="270" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_r>
	<set_r get="inline" set="null" line="277" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_r>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.math._BGRA.BGRA_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/BGRA.hx" private="1" module="lime.math.BGRA">
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the alpha component of the color</haxe_doc>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the blue component of the color</haxe_doc>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the green component of the color</haxe_doc>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the red component of the color</haxe_doc>
		</r>
		<_new public="1" get="inline" set="null" line="55" static="1">
			<f a="?bgra" v="0">
				<x path="Int"/>
				<x path="lime.math.BGRA"/>
			</f>
			<meta>
				<m n=":value"><e>{ bgra : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new BGRA instance
		@param	bgra	(Optional) A BGRA color value</haxe_doc>
		</_new>
		<create public="1" get="inline" set="null" line="70" static="1">
			<f a="b:g:r:a">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.math.BGRA"/>
			</f>
			<haxe_doc>Creates a new BGRA instance from component values
		@param	b	A blue component value
		@param	g	A green component value
		@param	r	A red component value
		@param	a	An alpha component value
		@return	A new BGRA instance</haxe_doc>
		</create>
		<multiplyAlpha public="1" get="inline" set="null" line="82" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="105" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Reads a value from a `UInt8Array` into the current `BGRA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</readUInt8>
		<set public="1" get="inline" set="null" line="139" static="1">
			<f a="this:b:g:r:a">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `BGRA` color to new component values
		@param	b	The blue component vlaue to set
		@param	g	The green component value to set
		@param	r	The red component value to set
		@param	a	The alpha component value to set</haxe_doc>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="149" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="168" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Writes the current `BGRA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</writeUInt8>
		<__fromARGB get="inline" set="null" line="204" static="1">
			<f a="argb">
				<x path="lime.math.ARGB"/>
				<x path="lime.math.BGRA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromARGB>
		<__fromRGBA get="inline" set="null" line="211" static="1">
			<f a="rgba">
				<x path="lime.math.RGBA"/>
				<x path="lime.math.BGRA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromRGBA>
		<get_a get="inline" set="null" line="225" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_a>
		<set_a get="inline" set="null" line="232" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_a>
		<get_b get="inline" set="null" line="240" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_b>
		<set_b get="inline" set="null" line="247" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_b>
		<get_g get="inline" set="null" line="255" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_g>
		<set_g get="inline" set="null" line="262" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_g>
		<get_r get="inline" set="null" line="270" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_r>
		<set_r get="inline" set="null" line="277" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_r>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.math.ColorMatrix" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/ColorMatrix.hx">
		<from><icast><x path="lime.utils.Float32Array"/></icast></from>
		<this><x path="lime.utils.Float32Array"/></this>
		<to><icast><x path="lime.utils.Float32Array"/></icast></to>
		<haxe_doc>`ColorMatrix` is a 4x5 matrix containing color multiplication
	and offset values for tinting and other kinds of color
	manipulation. In addition to using the multiplier, offset and
	`color` properties, it can be edited directly as a `Float32Array`</haxe_doc>
		<impl><class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix">
	<__alphaTable static="1"><x path="lime.utils.UInt8Array"/></__alphaTable>
	<__blueTable static="1"><x path="lime.utils.UInt8Array"/></__blueTable>
	<__greenTable static="1"><x path="lime.utils.UInt8Array"/></__greenTable>
	<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]" line="25" static="1">
		<c path="Array"><x path="Float"/></c>
		<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]</e></m></meta>
	</__identity>
	<__redTable static="1"><x path="lime.utils.UInt8Array"/></__redTable>
	<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current alpha multiplication value (default is 1.0)</haxe_doc>
	</alphaMultiplier>
	<alphaOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current alpha offset value (default is 0)</haxe_doc>
	</alphaOffset>
	<blueMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current blue multiplication value (default is 1.0)</haxe_doc>
	</blueMultiplier>
	<blueOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current blue offset value (default is 0)</haxe_doc>
	</blueOffset>
	<color public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Gets or sets a color offset for tinting.

		This will change the red, green and blue multipliers
		to zero, and affect the red, green and blue offset
		values.</haxe_doc>
	</color>
	<greenMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current green multiplication value (default is 1.0)</haxe_doc>
	</greenMultiplier>
	<greenOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current green offset value (default is 0)</haxe_doc>
	</greenOffset>
	<redMultiplier public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current red multiplication value (default is 1.0)</haxe_doc>
	</redMultiplier>
	<redOffset public="1" get="accessor" set="accessor" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The current red offset value (default is 0)</haxe_doc>
	</redOffset>
	<_new public="1" set="method" line="82" static="1">
		<f a="?data" v="null">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta>
			<m n=":value"><e>{ data : null }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new `ColorMatrix` instance
		@param	data	(Optional) Initial `Float32Array` data to use</haxe_doc>
	</_new>
	<clone public="1" set="method" line="101" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Creates a duplicate of the current `ColorMatrix` instance
		@return	A new `ColorMatrix` instance</haxe_doc>
	</clone>
	<concat public="1" set="method" line="112" static="1">
		<f a="this:second">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Adds the color multipliers from a second `ColorMatrix` to the current one
		@param	second	The `ColorMatrix` to `concat` to the current one</haxe_doc>
	</concat>
	<copyFrom public="1" set="method" line="126" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.ColorMatrix"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `ColorMatrix` values to the same as another one
		@param	other	The `ColorMatrix` to copy from</haxe_doc>
	</copyFrom>
	<identity public="1" set="method" line="136" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Resets to default values</haxe_doc>
	</identity>
	<getAlphaTable public="1" set="method" line="182" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		alpha values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `alphaMultipler` and `alphaOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.alphaOffset = 12;

		var alphaTable = colorMatrix.getAlphaTable ();
		trace (alphaTable[0]); // 12
		trace (alphaTable[1]); // 13
		```</haxe_doc>
	</getAlphaTable>
	<getBlueTable public="1" set="method" line="227" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		blue values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `blueMultiplier` and `blueOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.blueOffset = 16;

		var blueTable = colorMatrix.getBlueTable ();
		trace (blueTable[0]); // 16
		trace (blueTable[1]); // 17
		```</haxe_doc>
	</getBlueTable>
	<getGreenTable public="1" set="method" line="271" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		green values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `greenMultiplier` and `greenOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.greenOffset = 16;

		var greenTable = colorMatrix.getGreenTable ();
		trace (greenTable[0]); // 16
		trace (greenTable[1]); // 17
		```</haxe_doc>
	</getGreenTable>
	<getRedTable public="1" set="method" line="315" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		red values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `redMultiplier` and `redOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.redOffset = 16;

		var redTable = colorMatrix.getRedTable ();
		trace (redTable[0]); // 16
		trace (redTable[1]); // 17
		```</haxe_doc>
	</getRedTable>
	<__toFlashColorTransform set="method" line="339" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<d/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</__toFlashColorTransform>
	<get_alphaMultiplier get="inline" set="null" line="357" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_alphaMultiplier>
	<set_alphaMultiplier get="inline" set="null" line="364" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_alphaMultiplier>
	<get_alphaOffset get="inline" set="null" line="371" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_alphaOffset>
	<set_alphaOffset get="inline" set="null" line="378" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_alphaOffset>
	<get_blueMultiplier get="inline" set="null" line="385" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_blueMultiplier>
	<set_blueMultiplier get="inline" set="null" line="392" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_blueMultiplier>
	<get_blueOffset get="inline" set="null" line="399" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_blueOffset>
	<set_blueOffset get="inline" set="null" line="406" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_blueOffset>
	<get_color set="method" line="413" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_color>
	<set_color set="method" line="420" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_color>
	<get_greenMultiplier get="inline" set="null" line="435" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_greenMultiplier>
	<set_greenMultiplier get="inline" set="null" line="442" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_greenMultiplier>
	<get_greenOffset get="inline" set="null" line="449" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_greenOffset>
	<set_greenOffset get="inline" set="null" line="456" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_greenOffset>
	<get_redMultiplier get="inline" set="null" line="463" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_redMultiplier>
	<set_redMultiplier get="inline" set="null" line="470" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_redMultiplier>
	<get_redOffset get="inline" set="null" line="477" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_redOffset>
	<set_redOffset get="inline" set="null" line="484" static="1">
		<f a="this:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_redOffset>
	<get public="1" set="method" line="491" static="1">
		<f a="this:index">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="498" static="1">
		<f a="this:index:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.math._ColorMatrix.ColorMatrix_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/ColorMatrix.hx" private="1" module="lime.math.ColorMatrix">
		<__alphaTable static="1"><x path="lime.utils.UInt8Array"/></__alphaTable>
		<__blueTable static="1"><x path="lime.utils.UInt8Array"/></__blueTable>
		<__greenTable static="1"><x path="lime.utils.UInt8Array"/></__greenTable>
		<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]" line="25" static="1">
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]</e></m></meta>
		</__identity>
		<__redTable static="1"><x path="lime.utils.UInt8Array"/></__redTable>
		<alphaMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current alpha multiplication value (default is 1.0)</haxe_doc>
		</alphaMultiplier>
		<alphaOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current alpha offset value (default is 0)</haxe_doc>
		</alphaOffset>
		<blueMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current blue multiplication value (default is 1.0)</haxe_doc>
		</blueMultiplier>
		<blueOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current blue offset value (default is 0)</haxe_doc>
		</blueOffset>
		<color public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Gets or sets a color offset for tinting.

		This will change the red, green and blue multipliers
		to zero, and affect the red, green and blue offset
		values.</haxe_doc>
		</color>
		<greenMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current green multiplication value (default is 1.0)</haxe_doc>
		</greenMultiplier>
		<greenOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current green offset value (default is 0)</haxe_doc>
		</greenOffset>
		<redMultiplier public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current red multiplication value (default is 1.0)</haxe_doc>
		</redMultiplier>
		<redOffset public="1" get="accessor" set="accessor" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The current red offset value (default is 0)</haxe_doc>
		</redOffset>
		<_new public="1" set="method" line="82" static="1">
			<f a="?data" v="null">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta>
				<m n=":value"><e>{ data : null }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new `ColorMatrix` instance
		@param	data	(Optional) Initial `Float32Array` data to use</haxe_doc>
		</_new>
		<clone public="1" set="method" line="101" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Creates a duplicate of the current `ColorMatrix` instance
		@return	A new `ColorMatrix` instance</haxe_doc>
		</clone>
		<concat public="1" set="method" line="112" static="1">
			<f a="this:second">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Adds the color multipliers from a second `ColorMatrix` to the current one
		@param	second	The `ColorMatrix` to `concat` to the current one</haxe_doc>
		</concat>
		<copyFrom public="1" set="method" line="126" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.ColorMatrix"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `ColorMatrix` values to the same as another one
		@param	other	The `ColorMatrix` to copy from</haxe_doc>
		</copyFrom>
		<identity public="1" set="method" line="136" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Resets to default values</haxe_doc>
		</identity>
		<getAlphaTable public="1" set="method" line="182" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		alpha values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `alphaMultipler` and `alphaOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.alphaOffset = 12;

		var alphaTable = colorMatrix.getAlphaTable ();
		trace (alphaTable[0]); // 12
		trace (alphaTable[1]); // 13
		```</haxe_doc>
		</getAlphaTable>
		<getBlueTable public="1" set="method" line="227" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		blue values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `blueMultiplier` and `blueOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.blueOffset = 16;

		var blueTable = colorMatrix.getBlueTable ();
		trace (blueTable[0]); // 16
		trace (blueTable[1]); // 17
		```</haxe_doc>
		</getBlueTable>
		<getGreenTable public="1" set="method" line="271" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		green values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `greenMultiplier` and `greenOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.greenOffset = 16;

		var greenTable = colorMatrix.getGreenTable ();
		trace (greenTable[0]); // 16
		trace (greenTable[1]); // 17
		```</haxe_doc>
		</getGreenTable>
		<getRedTable public="1" set="method" line="315" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a reference to a `UInt8Array` table for transforming
		red values using the current matrix.

		The table is 256 values in length, and includes values based
		on the `redMultiplier` and `redOffset` values of the matrix.

		The values are constrained within 0 and 255.

		For example:

		```haxe
		var colorMatrix = new ColorMatrix ();
		colorMatrix.redOffset = 16;

		var redTable = colorMatrix.getRedTable ();
		trace (redTable[0]); // 16
		trace (redTable[1]); // 17
		```</haxe_doc>
		</getRedTable>
		<__toFlashColorTransform set="method" line="339" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<d/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</__toFlashColorTransform>
		<get_alphaMultiplier get="inline" set="null" line="357" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_alphaMultiplier>
		<set_alphaMultiplier get="inline" set="null" line="364" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_alphaMultiplier>
		<get_alphaOffset get="inline" set="null" line="371" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_alphaOffset>
		<set_alphaOffset get="inline" set="null" line="378" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_alphaOffset>
		<get_blueMultiplier get="inline" set="null" line="385" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_blueMultiplier>
		<set_blueMultiplier get="inline" set="null" line="392" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_blueMultiplier>
		<get_blueOffset get="inline" set="null" line="399" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_blueOffset>
		<set_blueOffset get="inline" set="null" line="406" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_blueOffset>
		<get_color set="method" line="413" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_color>
		<set_color set="method" line="420" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_color>
		<get_greenMultiplier get="inline" set="null" line="435" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_greenMultiplier>
		<set_greenMultiplier get="inline" set="null" line="442" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_greenMultiplier>
		<get_greenOffset get="inline" set="null" line="449" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_greenOffset>
		<set_greenOffset get="inline" set="null" line="456" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_greenOffset>
		<get_redMultiplier get="inline" set="null" line="463" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_redMultiplier>
		<set_redMultiplier get="inline" set="null" line="470" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_redMultiplier>
		<get_redOffset get="inline" set="null" line="477" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_redOffset>
		<set_redOffset get="inline" set="null" line="484" static="1">
			<f a="this:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_redOffset>
		<get public="1" set="method" line="491" static="1">
			<f a="this:index">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="498" static="1">
			<f a="this:index:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<class path="lime.math.Matrix3" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Matrix3.hx">
		<__identity expr="new Matrix3()" line="60" static="1">
			<c path="lime.math.Matrix3"/>
			<meta><m n=":value"><e>new Matrix3()</e></m></meta>
		</__identity>
		<a public="1">
			<x path="Float"/>
			<haxe_doc>The matrix a component, used in scaling and skewing (default is 1)</haxe_doc>
		</a>
		<b public="1">
			<x path="Float"/>
			<haxe_doc>The matrix b component, used in rotation and skewing (default is 0)</haxe_doc>
		</b>
		<c public="1">
			<x path="Float"/>
			<haxe_doc>The matrix c component, used in rotation and skewing (default is 0)</haxe_doc>
		</c>
		<d public="1">
			<x path="Float"/>
			<haxe_doc>The matrix d component, used in scaling and skewing (default is 1)</haxe_doc>
		</d>
		<tx public="1">
			<x path="Float"/>
			<haxe_doc>The matrix tx component, used in translation (default is 0)</haxe_doc>
		</tx>
		<ty public="1">
			<x path="Float"/>
			<haxe_doc>The matrix ty component, used in translation (default is 0)</haxe_doc>
		</ty>
		<clone public="1" get="inline" set="null" line="88">
			<f a=""><c path="lime.math.Matrix3"/></f>
			<haxe_doc>Creates a duplicate of the current `Matrix3`
		@return	A duplicate `Matrix3` instance</haxe_doc>
		</clone>
		<concat public="1" set="method" line="101">
			<f a="m">
				<c path="lime.math.Matrix3"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Concatenates the values of a second matrix to the current
		`Matrix3`, combining the effects of both. This is the same
		as matrix multiplication. The second matrix is not modified.
		@param	m	A second `Matrix3` to concatenate to the current instance</haxe_doc>
		</concat>
		<copyColumnFrom public="1" set="method" line="125">
			<f a="column:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the `x` and `y` components from a `Vector4` instance
		to the `a`/`c`, `b`/`d` or the `tx`/`ty` column of the current
		matrix
		@param	column	The column to copy into (0, 1 or 2)
		@param	vector4	The `Vector4` instance to copy from</haxe_doc>
		</copyColumnFrom>
		<copyColumnTo public="1" set="method" line="157">
			<f a="column:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies a column of the current matrix into a `Vector4`
		instance. The `w` value will not be modified.
		@param	column	The column to copy from (0, 1 or 2)
		@param	vector4	The `Vector4` instance to copy to</haxe_doc>
		</copyColumnTo>
		<copyFrom public="1" set="method" line="191">
			<f a="sourceMatrix3">
				<c path="lime.math.Matrix3"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the values of another `Matrix3` and
		applies it to the current instance
		@param	sourceMatrix3	The `Matrix3` to copy from</haxe_doc>
		</copyFrom>
		<copyRowFrom public="1" set="method" line="209">
			<f a="row:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the values of a `Vector4` instance into a row
		of the current matrix
		@param	row	The row to copy into (0 or 1)
		@param	vector4	The `Vector4` instance to copy from</haxe_doc>
		</copyRowFrom>
		<copyRowTo public="1" set="method" line="238">
			<f a="row:vector4">
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies a row of the current matrix into a `Vector4`
		instance. The `w` value will not be modified.
		@param	row	The row to copy into (0, 1 or 2)
		@param	vector4	The `Vector4` instance to copy from</haxe_doc>
		</copyRowTo>
		<createBox public="1" set="method" line="276">
			<f a="scaleX:scaleY:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
			<haxe_doc>Applies a two-dimensional transformation to the current matrix.

		This is the same as calling `identity()`, `rotate()`, `scale()`
		then `translate()` with these values.
		@param	scaleX	An x scale transformation value
		@param	scaleY	A y scale transformation value
		@param	rotation (Optional) A rotation value (default is 0)
		@param	tx	(Optional) A translate x value (default is 0)
		@param	ty	(Optional) A translate y value (default is 0)</haxe_doc>
		</createBox>
		<createGradientBox public="1" set="method" line="312">
			<f a="width:height:?rotation:?tx:?ty" v="::0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, rotation : 0 }</e></m></meta>
			<haxe_doc>Creates a matrix to use for a linear gradient fill
		@param	width	The width of the gradient fill
		@param	height	The height of the gradient fill
		@param	rotation	(Optional) A rotation for the gradient fill (default is 0)
		@param	tx	(Optional) An x offset for the gradient fill (default is 0)
		@param	ty	(Optional) A y offset for the gradient fill (default is 0)
		@return	A new `Matrix` instance</haxe_doc>
		</createGradientBox>
		<equals public="1" set="method" line="345">
			<f a="matrix3">
				<c path="lime.math.Matrix3"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Check if two matrices have the same values
		@return	Whether both matrices are equal</haxe_doc>
		</equals>
		<deltaTransformVector public="1" set="method" line="358">
			<f a="Vector2:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Transforms a `Vector2` instance by the current matrix,
		without considering the `tx` and `ty` values of the matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	A new `Vector2` instance representing the transformed values</haxe_doc>
		</deltaTransformVector>
		<identity public="1" set="method" line="371">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Resets the matrix to default identity values</haxe_doc>
		</identity>
		<invert public="1" set="method" line="387">
			<f a=""><c path="lime.math.Matrix3"/></f>
			<haxe_doc>Inverts the values of the current matrix
		@return	The current matrix instance</haxe_doc>
		</invert>
		<rotate public="1" set="method" line="430">
			<f a="theta">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Applies rotation to the current matrix
		@param	theta	A rotation value in degrees</haxe_doc>
		</rotate>
		<scale public="1" set="method" line="469">
			<f a="sx:sy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scales the current matrix
		@param	sx	The x scale to apply
		@param	sy	The y scale to apply</haxe_doc>
		</scale>
		<setRotation get="inline" set="null" line="490">
			<f a="theta:?scale" v=":1">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ scale : 1 }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</setRotation>
		<setTo public="1" set="method" line="509">
			<f a="a:b:c:d:tx:ty">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the values of the current matrix
		@param	a	The new matrix a value
		@param	b	The new matrix b value
		@param	c	The new matrix c value
		@param	d	The new matrix d value
		@param	tx	The new matrix tx value
		@param	ty	The new matrix ty value</haxe_doc>
		</setTo>
		<to3DString public="1" get="inline" set="null" line="521">
			<f a="?roundPixels" v="false">
				<x path="Bool"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ roundPixels : false }</e></m>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
			</meta>
		</to3DString>
		<toString public="1" get="inline" set="null" line="544">
			<f a=""><c path="String"/></f>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</toString>
		<transformRect public="1" set="method" line="559">
			<f a="rect:?result" v=":null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Transforms a `Rectangle` instance by the current matrix
		and returns `Rectangle` with the bounds of the transformed
		rectangle.
		@param	transform	A `Matrix3` instance to transform by
		@param	result	(Optional) A `Rectangle` instance to use for the result
		@return	A `Rectangle` represented the transformed bounds</haxe_doc>
		</transformRect>
		<transformVector public="1" set="method" line="603">
			<f a="pos:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Transforms a `Vector2` instance by the current matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	A new `Vector2` instance representing the transformed values</haxe_doc>
		</transformVector>
		<translate public="1" get="inline" set="null" line="618">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Adjusts the `tx` and `ty` of the current matrix
		@param	dx	The x amount to translate
		@param	dy	The y amount to translate</haxe_doc>
		</translate>
		<new public="1" set="method" line="72">
			<f a="?a:?b:?c:?d:?tx:?ty" v="1:0:0:1:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ ty : 0, tx : 0, d : 1, c : 0, b : 0, a : 1 }</e></m></meta>
			<haxe_doc>Creates a new `Matrix` instance
		@param	a	(Optional) An initial a component value (default is 1)
		@param	b	(Optional) An initial b component value (default is 0)
		@param	c	(Optional) An initial c component value (default is 0)
		@param	d	(Optional) An initial d component value (default is 1)
		@param	tx	(Optional) An initial tx component value (default is 0)
		@param	ty	(Optional) An initial ty component value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>`Matrix3` is a 3x3 transformation matrix particularly useful for
	two-dimensional transformation. It can be used for rotation, scale
	and skewing of a two-dimensional object.

	Although a 3x3 matrix is represented, configurable values can be
	considered as a 3x2 matrix:

	```
	[ a, c, tx ]
	[ c, d, ty ]
	[ 0, 0,  1 ]
	```</haxe_doc>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.math.Matrix4" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Matrix4.hx">
		<from>
			<icast><x path="lime.utils.Float32Array"/></icast>
			<icast field="fromMatrix3"><c path="lime.math.Matrix3"/></icast>
		</from>
		<this><x path="lime.utils.Float32Array"/></this>
		<to><icast><x path="lime.utils.Float32Array"/></icast></to>
		<haxe_doc>`Matrix4` is a 4x4 matrix, useful for 3D calculations</haxe_doc>
		<impl><class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4">
	<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]" line="15" static="1">
		<c path="Array"><x path="Float"/></c>
		<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]</e></m></meta>
	</__identity>
	<determinant public="1" get="accessor" set="null" static="1">
		<x path="Float"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Gets the determinant of the matrix</haxe_doc>
	</determinant>
	<position public="1" get="accessor" set="accessor" static="1">
		<c path="lime.math.Vector4"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Gets or sets the position value of this matrix</haxe_doc>
	</position>
	<_new public="1" set="method" line="32" static="1">
		<f a="?data" v="null">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta>
			<m n=":value"><e>{ data : null }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new matrix instance
		@param	data	(Optional) A `Float32Array` of 16 values to use for this matrix</haxe_doc>
	</_new>
	<append public="1" set="method" line="51" static="1">
		<f a="this:lhs">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Appends a second matrix by multiplying its values against the current one
		@param	lhs	A second matrix instance</haxe_doc>
	</append>
	<appendRotation public="1" set="method" line="91" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ pivotPoint : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Appends rotation to the current matrix
		@param	degrees	A rotation value (in degrees)
		@param	axis	The coordinate position of the rotation axis
		@param	pivotPoint	(Optional) A pivot point to use in the rotation</haxe_doc>
	</appendRotation>
	<appendScale public="1" set="method" line="113" static="1">
		<f a="this:xScale:yScale:zScale">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Appends a scale value to the current matrix
		@param	xScale	The x scale to append
		@param	yScale	The y scale to append
		@param	zScale	The z scale to append</haxe_doc>
	</appendScale>
	<appendTranslation public="1" set="method" line="126" static="1">
		<f a="this:x:y:z">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Increases the position/translation of the current matrix
		@param	x	The x amount to offset the current position
		@param	y	The y amount to offset the current position
		@param	z	The z amount to offset the current position</haxe_doc>
	</appendTranslation>
	<clone public="1" set="method" line="139" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Creates a duplicate of the current `Matrix4`
		@return	A new `Matrix4` with the same values as the current matrix</haxe_doc>
	</clone>
	<copyColumnFrom public="1" set="method" line="151" static="1">
		<f a="this:column:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a column of data from a `Vector4` instance into the values of this matrix
		@param	column	The column to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
	</copyColumnFrom>
	<copyColumnTo public="1" set="method" line="197" static="1">
		<f a="this:column:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a column of data from the current matrix into a `Vector4` instance
		@param	column	The column to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
	</copyColumnTo>
	<copyFrom public="1" set="method" line="242" static="1">
		<f a="this:other">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies the values of another `Matrix4` into the current matrix
		@param	other	A `Matrix4` instance to copy from</haxe_doc>
	</copyFrom>
	<copyRowFrom public="1" set="method" line="254" static="1">
		<f a="this:row:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a row of data from a `Vector4` instance into the values of this matrix
		@param	row	The row to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
	</copyRowFrom>
	<copyRowTo public="1" set="method" line="300" static="1">
		<f a="this:row:vector">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Copies a row of data from the current matrix into a `Vector4` instance
		@param	column	The row to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
	</copyRowTo>
	<create2D public="1" set="method" line="350" static="1">
		<f a="this:a:b:c:d:?tx:?ty" v=":::::0:0">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ ty : 0, tx : 0 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Resets the current matrix using two-dimensional transform values
		@param	a	A two-dimensional matrix a value
		@param	b	A two-dimensional matrix b value
		@param	c	A two-dimensional matrix c value
		@param	d	A two-dimensional matrix d value
		@param	tx	(Optional) A two-dimensional matrix tx value (default is 0)
		@param	ty	(Optional) A two-dimensional matrix ty value (default is 0)</haxe_doc>
	</create2D>
	<createOrtho public="1" set="method" line="384" static="1">
		<f a="this:left:right:bottom:top:zNear:zFar">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Initializes this matrix with values for an orthographic projection, useful in rendering
		@param	left	The left (or x0) coordinate for the projection
		@param	right	The right (or x1) coordinate for the projection
		@param	bottom	The bottom (or y0) coordinate for the projection
		@param	top	The top (or y1) coordinate for the projection
		@param	zNear	The near depth-clipping plane position
		@param	zFar	The far depth-clipping plane position</haxe_doc>
	</createOrtho>
	<deltaTransformVector public="1" set="method" line="518" static="1">
		<f a="this:v:?result" v="::null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":value"><e>{ result : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
	</deltaTransformVector>
	<fromMatrix3 public="1" set="method" line="530" static="1">
		<f a="matrix3">
			<c path="lime.math.Matrix3"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromMatrix3>
	<identity public="1" set="method" line="542" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Resets the current matrix using default identity values</haxe_doc>
	</identity>
	<interpolate public="1" set="method" line="572" static="1">
		<f a="thisMat:toMat:percent:?result" v=":::null">
			<x path="lime.math.Matrix4"/>
			<x path="lime.math.Matrix4"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta><m n=":value"><e>{ result : null }</e></m></meta>
		<haxe_doc>Interpolates from one `Matrix4` instance to another, given a percentage between the two
		@param	thisMat	The first `Matrix4` object to start from
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percent	The percentage value to interpolate by
		@param	result	(Optional) A `Matrix4` instance to use when returning the result
		@return	A `Matrix4` with the resulting value</haxe_doc>
	</interpolate>
	<interpolateTo public="1" set="method" line="592" static="1">
		<f a="this:toMat:percent">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Interpolates the current matrix toward another matrix, resetting the values of the current matrix
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percetn	The percentage value to interpolate by</haxe_doc>
	</interpolateTo>
	<invert public="1" set="method" line="607" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Attempts to invert the current matrix, so long as the determinant is greater than zero
		@return	Whether the `invert` operation was successful</haxe_doc>
	</invert>
	<pointAt public="1" set="method" line="651" static="1">
		<f a="this:pos:?at:?up" v="::null:null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ up : null, at : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Sets the matrix values as a transformation orientated toward a certain vector position
		@param	pos	A target vector position in absolute coordinates
		@param	at	(Optional) A vector relative to this matrix which defines the current direction
		@param	up	(Optional) A vector relative to this matrix which defines the "up" direction</haxe_doc>
	</pointAt>
	<prepend public="1" set="method" line="724" static="1">
		<f a="this:rhs">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.math.Matrix4"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Prepends a right-hand matrix to the current matrix
		@param	rhx	A right-hand `Matrix4` to append</haxe_doc>
	</prepend>
	<prependRotation public="1" set="method" line="764" static="1">
		<f a="this:degrees:axis:?pivotPoint" v=":::null">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ pivotPoint : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Prepends rotation to this matrix
		@param	degrees	The rotation amount in degrees
		@param	axis	The rotation axis
		@param	pivotPoint	(Optional) A pivot point for the rotation</haxe_doc>
	</prependRotation>
	<prependScale public="1" set="method" line="786" static="1">
		<f a="this:xScale:yScale:zScale">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Prepends scale to this matrix
		@param	xScale	An x scale value
		@param	yScale	A y scale value
		@param	zScale	A z scale value</haxe_doc>
	</prependScale>
	<prependTranslation public="1" set="method" line="799" static="1">
		<f a="this:x:y:z">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Prepends translation values to this matrix
		@param	x	An x translation value
		@param	y	A y translation value
		@param	z	A z translation value</haxe_doc>
	</prependTranslation>
	<transformVector public="1" set="method" line="897" static="1">
		<f a="this:v:?result" v="::null">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":value"><e>{ result : null }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Transforms a `Vector4` instance using the current matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	The resulting `Vector4` instance</haxe_doc>
	</transformVector>
	<transformVectors public="1" set="method" line="915" static="1">
		<f a="this:ain:aout">
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Transforms a series of [x, y, z] value pairs at once
		@param	ain	An input `Float32Array` to transform
		@param	aout	An output `Float32Array` to write to</haxe_doc>
	</transformVectors>
	<transpose public="1" set="method" line="940" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Transposes the current matrix</haxe_doc>
	</transpose>
	<__getAxisRotation set="method" line="952" static="1">
		<f a="this:x:y:z:degrees">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="Float"/>
			<x path="lime.math.Matrix4"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</__getAxisRotation>
	<__swap get="inline" set="null" line="984" static="1">
		<f a="this:a:b">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</__swap>
	<get_determinant set="method" line="1000" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_determinant>
	<get_position set="method" line="1012" static="1">
		<f a="this">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_position>
	<set_position set="method" line="1019" static="1">
		<f a="this:val">
			<x path="lime.utils.Float32Array"/>
			<c path="lime.math.Vector4"/>
			<c path="lime.math.Vector4"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_position>
	<get public="1" set="method" line="1029" static="1">
		<f a="this:index">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</get>
	<set public="1" set="method" line="1036" static="1">
		<f a="this:index:value">
			<x path="lime.utils.Float32Array"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
		</meta>
	</set>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.math._Matrix4.Matrix4_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Matrix4.hx" private="1" module="lime.math.Matrix4">
		<__identity expr="[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]" line="15" static="1">
			<c path="Array"><x path="Float"/></c>
			<meta><m n=":value"><e>[1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]</e></m></meta>
		</__identity>
		<determinant public="1" get="accessor" set="null" static="1">
			<x path="Float"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Gets the determinant of the matrix</haxe_doc>
		</determinant>
		<position public="1" get="accessor" set="accessor" static="1">
			<c path="lime.math.Vector4"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Gets or sets the position value of this matrix</haxe_doc>
		</position>
		<_new public="1" set="method" line="32" static="1">
			<f a="?data" v="null">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta>
				<m n=":value"><e>{ data : null }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new matrix instance
		@param	data	(Optional) A `Float32Array` of 16 values to use for this matrix</haxe_doc>
		</_new>
		<append public="1" set="method" line="51" static="1">
			<f a="this:lhs">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Appends a second matrix by multiplying its values against the current one
		@param	lhs	A second matrix instance</haxe_doc>
		</append>
		<appendRotation public="1" set="method" line="91" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ pivotPoint : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Appends rotation to the current matrix
		@param	degrees	A rotation value (in degrees)
		@param	axis	The coordinate position of the rotation axis
		@param	pivotPoint	(Optional) A pivot point to use in the rotation</haxe_doc>
		</appendRotation>
		<appendScale public="1" set="method" line="113" static="1">
			<f a="this:xScale:yScale:zScale">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Appends a scale value to the current matrix
		@param	xScale	The x scale to append
		@param	yScale	The y scale to append
		@param	zScale	The z scale to append</haxe_doc>
		</appendScale>
		<appendTranslation public="1" set="method" line="126" static="1">
			<f a="this:x:y:z">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Increases the position/translation of the current matrix
		@param	x	The x amount to offset the current position
		@param	y	The y amount to offset the current position
		@param	z	The z amount to offset the current position</haxe_doc>
		</appendTranslation>
		<clone public="1" set="method" line="139" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Creates a duplicate of the current `Matrix4`
		@return	A new `Matrix4` with the same values as the current matrix</haxe_doc>
		</clone>
		<copyColumnFrom public="1" set="method" line="151" static="1">
			<f a="this:column:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a column of data from a `Vector4` instance into the values of this matrix
		@param	column	The column to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
		</copyColumnFrom>
		<copyColumnTo public="1" set="method" line="197" static="1">
			<f a="this:column:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a column of data from the current matrix into a `Vector4` instance
		@param	column	The column to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
		</copyColumnTo>
		<copyFrom public="1" set="method" line="242" static="1">
			<f a="this:other">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies the values of another `Matrix4` into the current matrix
		@param	other	A `Matrix4` instance to copy from</haxe_doc>
		</copyFrom>
		<copyRowFrom public="1" set="method" line="254" static="1">
			<f a="this:row:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a row of data from a `Vector4` instance into the values of this matrix
		@param	row	The row to copy into (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy from</haxe_doc>
		</copyRowFrom>
		<copyRowTo public="1" set="method" line="300" static="1">
			<f a="this:row:vector">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Copies a row of data from the current matrix into a `Vector4` instance
		@param	column	The row to copy (0, 1, 2 or 3)
		@param	vector	The `Vector4` copy to</haxe_doc>
		</copyRowTo>
		<create2D public="1" set="method" line="350" static="1">
			<f a="this:a:b:c:d:?tx:?ty" v=":::::0:0">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ ty : 0, tx : 0 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Resets the current matrix using two-dimensional transform values
		@param	a	A two-dimensional matrix a value
		@param	b	A two-dimensional matrix b value
		@param	c	A two-dimensional matrix c value
		@param	d	A two-dimensional matrix d value
		@param	tx	(Optional) A two-dimensional matrix tx value (default is 0)
		@param	ty	(Optional) A two-dimensional matrix ty value (default is 0)</haxe_doc>
		</create2D>
		<createOrtho public="1" set="method" line="384" static="1">
			<f a="this:left:right:bottom:top:zNear:zFar">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Initializes this matrix with values for an orthographic projection, useful in rendering
		@param	left	The left (or x0) coordinate for the projection
		@param	right	The right (or x1) coordinate for the projection
		@param	bottom	The bottom (or y0) coordinate for the projection
		@param	top	The top (or y1) coordinate for the projection
		@param	zNear	The near depth-clipping plane position
		@param	zFar	The far depth-clipping plane position</haxe_doc>
		</createOrtho>
		<deltaTransformVector public="1" set="method" line="518" static="1">
			<f a="this:v:?result" v="::null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":value"><e>{ result : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>* Returns the transformation matrix's translation, rotation, and scale settings as a Vector of three Vector4 objects.</haxe_doc>
		</deltaTransformVector>
		<fromMatrix3 public="1" set="method" line="530" static="1">
			<f a="matrix3">
				<c path="lime.math.Matrix3"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromMatrix3>
		<identity public="1" set="method" line="542" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Resets the current matrix using default identity values</haxe_doc>
		</identity>
		<interpolate public="1" set="method" line="572" static="1">
			<f a="thisMat:toMat:percent:?result" v=":::null">
				<x path="lime.math.Matrix4"/>
				<x path="lime.math.Matrix4"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Interpolates from one `Matrix4` instance to another, given a percentage between the two
		@param	thisMat	The first `Matrix4` object to start from
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percent	The percentage value to interpolate by
		@param	result	(Optional) A `Matrix4` instance to use when returning the result
		@return	A `Matrix4` with the resulting value</haxe_doc>
		</interpolate>
		<interpolateTo public="1" set="method" line="592" static="1">
			<f a="this:toMat:percent">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Interpolates the current matrix toward another matrix, resetting the values of the current matrix
		@param	toMat	The second `Matrix4` object to interpolate toward
		@param	percetn	The percentage value to interpolate by</haxe_doc>
		</interpolateTo>
		<invert public="1" set="method" line="607" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Attempts to invert the current matrix, so long as the determinant is greater than zero
		@return	Whether the `invert` operation was successful</haxe_doc>
		</invert>
		<pointAt public="1" set="method" line="651" static="1">
			<f a="this:pos:?at:?up" v="::null:null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ up : null, at : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Sets the matrix values as a transformation orientated toward a certain vector position
		@param	pos	A target vector position in absolute coordinates
		@param	at	(Optional) A vector relative to this matrix which defines the current direction
		@param	up	(Optional) A vector relative to this matrix which defines the "up" direction</haxe_doc>
		</pointAt>
		<prepend public="1" set="method" line="724" static="1">
			<f a="this:rhs">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.math.Matrix4"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Prepends a right-hand matrix to the current matrix
		@param	rhx	A right-hand `Matrix4` to append</haxe_doc>
		</prepend>
		<prependRotation public="1" set="method" line="764" static="1">
			<f a="this:degrees:axis:?pivotPoint" v=":::null">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ pivotPoint : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Prepends rotation to this matrix
		@param	degrees	The rotation amount in degrees
		@param	axis	The rotation axis
		@param	pivotPoint	(Optional) A pivot point for the rotation</haxe_doc>
		</prependRotation>
		<prependScale public="1" set="method" line="786" static="1">
			<f a="this:xScale:yScale:zScale">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Prepends scale to this matrix
		@param	xScale	An x scale value
		@param	yScale	A y scale value
		@param	zScale	A z scale value</haxe_doc>
		</prependScale>
		<prependTranslation public="1" set="method" line="799" static="1">
			<f a="this:x:y:z">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Prepends translation values to this matrix
		@param	x	An x translation value
		@param	y	A y translation value
		@param	z	A z translation value</haxe_doc>
		</prependTranslation>
		<transformVector public="1" set="method" line="897" static="1">
			<f a="this:v:?result" v="::null">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":value"><e>{ result : null }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Transforms a `Vector4` instance using the current matrix
		@param	result	(Optional) An existing `Vector2` instance to fill with the result
		@return	The resulting `Vector4` instance</haxe_doc>
		</transformVector>
		<transformVectors public="1" set="method" line="915" static="1">
			<f a="this:ain:aout">
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Transforms a series of [x, y, z] value pairs at once
		@param	ain	An input `Float32Array` to transform
		@param	aout	An output `Float32Array` to write to</haxe_doc>
		</transformVectors>
		<transpose public="1" set="method" line="940" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Transposes the current matrix</haxe_doc>
		</transpose>
		<__getAxisRotation set="method" line="952" static="1">
			<f a="this:x:y:z:degrees">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="lime.math.Matrix4"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</__getAxisRotation>
		<__swap get="inline" set="null" line="984" static="1">
			<f a="this:a:b">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</__swap>
		<get_determinant set="method" line="1000" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_determinant>
		<get_position set="method" line="1012" static="1">
			<f a="this">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_position>
		<set_position set="method" line="1019" static="1">
			<f a="this:val">
				<x path="lime.utils.Float32Array"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_position>
		<get public="1" set="method" line="1029" static="1">
			<f a="this:index">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</get>
		<set public="1" set="method" line="1036" static="1">
			<f a="this:index:value">
				<x path="lime.utils.Float32Array"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
			</meta>
		</set>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.math.RGBA" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/RGBA.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="__fromARGB"><x path="lime.math.ARGB"/></icast>
			<icast field="__fromBGRA"><x path="lime.math.BGRA"/></icast>
		</from>
		<this><x path="UInt"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<haxe_doc>A utility for storing, accessing and converting colors in an RGBA
	(red, green, blue, alpha) color format.

	```haxe
	var color:RGBA = 0x883300FF;
	trace (color.r); // 0x88
	trace (color.g); // 0x33
	trace (color.b); // 0x00
	trace (color.a); // 0xFF

	var convert:ARGB = color; // 0xFF883300
	```</haxe_doc>
		<meta><m n=":allow"><e>lime.math</e></m></meta>
		<impl><class path="lime.math._RGBA.RGBA_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/RGBA.hx" private="1" module="lime.math.RGBA">
	<__alpha16 static="1"><x path="lime.utils.UInt32Array"/></__alpha16>
	<__clamp static="1"><x path="lime.utils.UInt8Array"/></__clamp>
	<a16 static="1"><x path="Int"/></a16>
	<unmult static="1"><x path="Float"/></unmult>
	<a public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the alpha component of the color</haxe_doc>
	</a>
	<b public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the blue component of the color</haxe_doc>
	</b>
	<g public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the green component of the color</haxe_doc>
	</g>
	<r public="1" get="accessor" set="accessor" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Accesses the red component of the color</haxe_doc>
	</r>
	<_new public="1" get="inline" set="null" line="120" static="1">
		<f a="?rgba" v="0">
			<x path="Int"/>
			<x path="lime.math.RGBA"/>
		</f>
		<meta>
			<m n=":value"><e>{ rgba : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a new RGBA instance
		@param	rgba	(Optional) An RGBA color value</haxe_doc>
	</_new>
	<create public="1" get="inline" set="null" line="135" static="1">
		<f a="r:g:b:a">
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.math.RGBA"/>
		</f>
		<haxe_doc>Creates a new RGBA instance from component values
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@param	a	An alpha component value
		@return	A new RGBA instance</haxe_doc>
	</create>
	<multiplyAlpha public="1" get="inline" set="null" line="147" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
	</multiplyAlpha>
	<readUInt8 public="1" get="inline" set="null" line="174" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Reads a value from a `UInt8Array` into the current `RGBA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</readUInt8>
	<set public="1" get="inline" set="null" line="208" static="1">
		<f a="this:r:g:b:a">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Sets the current `RGBA` color to new component values
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set
		@param	a	The alpha component value to set</haxe_doc>
	</set>
	<unmultiplyAlpha public="1" get="inline" set="null" line="218" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
	</unmultiplyAlpha>
	<writeUInt8 public="1" get="inline" set="null" line="237" static="1">
		<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
			<x path="UInt"/>
			<x path="lime.utils.UInt8Array"/>
			<x path="Int"/>
			<x path="lime.graphics.PixelFormat"/>
			<x path="Bool"/>
			<x path="Void"/>
		</f>
		<meta>
			<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Writes the current `RGBA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
	</writeUInt8>
	<__fromARGB get="inline" set="null" line="273" static="1">
		<f a="argb">
			<x path="lime.math.ARGB"/>
			<x path="lime.math.RGBA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromARGB>
	<__fromBGRA get="inline" set="null" line="280" static="1">
		<f a="bgra">
			<x path="lime.math.BGRA"/>
			<x path="lime.math.RGBA"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromBGRA>
	<get_a get="inline" set="null" line="294" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_a>
	<set_a get="inline" set="null" line="301" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_a>
	<get_b get="inline" set="null" line="309" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_b>
	<set_b get="inline" set="null" line="316" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_b>
	<get_g get="inline" set="null" line="324" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_g>
	<set_g get="inline" set="null" line="331" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_g>
	<get_r get="inline" set="null" line="339" static="1">
		<f a="this">
			<x path="UInt"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_r>
	<set_r get="inline" set="null" line="346" static="1">
		<f a="this:value">
			<x path="UInt"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_r>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":allow"><e>lime.math</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils.ArrayBufferView" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBufferView.hx">
		<type public="1" expr="TypedArrayType.None">
			<x path="lime.utils.TypedArrayType"/>
			<meta><m n=":value"><e>TypedArrayType.None</e></m></meta>
		</type>
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<byteOffset public="1"><x path="Int"/></byteOffset>
		<byteLength public="1"><x path="Int"/></byteLength>
		<length public="1"><x path="Int"/></length>
		<bytesPerElement set="null" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</bytesPerElement>
		<initTypedArray get="inline" set="null" line="52">
			<f a="view">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta><m n=":allow"><e>lime.utils</e></m></meta>
		</initTypedArray>
		<initBuffer get="inline" set="null" line="79">
			<f a="in_buffer:?in_byteOffset:?len" v=":0:null">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta>
				<m n=":value"><e>{ len : null, in_byteOffset : 0 }</e></m>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</initBuffer>
		<initArray params="T" get="inline" set="null" line="116">
			<f a="array">
				<c path="Array"><c path="initArray.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
			</f>
			<meta><m n=":allow"><e>lime.utils</e></m></meta>
		</initArray>
		<set public="1" params="T" get="inline" set="null" line="134">
			<f a="?view:?array:?offset" v="null:null:0">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="Array"><c path="set.T"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0, array : null, view : null }</e></m></meta>
		</set>
		<cloneBuffer get="inline" set="null" line="150">
			<f a="src:?srcByteOffset" v=":0">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ srcByteOffset : 0 }</e></m></meta>
		</cloneBuffer>
		<subarray params="T_subarray" get="inline" set="null" line="164">
			<f a="begin:?end" v=":null">
				<x path="Int"/>
				<x path="Int"/>
				<c path="subarray.T_subarray"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":generic"/>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</subarray>
		<bytesForType get="inline" set="null" line="209"><f a="type">
	<x path="lime.utils.TypedArrayType"/>
	<x path="Int"/>
</f></bytesForType>
		<toString get="inline" set="null" line="247"><f a=""><c path="String"/></f></toString>
		<toByteLength get="inline" set="null" line="268"><f a="elemCount">
	<x path="Int"/>
	<x path="Int"/>
</f></toByteLength>
		<copyFromArray set="method" line="278">
			<f a="array:?offset" v=":0">
				<c path="Array"><x path="Float"/></c>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0 }</e></m></meta>
		</copyFromArray>
		<new get="inline" set="null" line="26">
			<f a="?elements:in_type" v="null:">
				<x path="Int"/>
				<x path="lime.utils.TypedArrayType"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ elements : null }</e></m>
				<m n=":allow"><e>lime.utils</e></m>
			</meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.utils.TAError" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<RangeError/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</enum>
	<class path="lime.math._RGBA.RGBA_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/RGBA.hx" private="1" module="lime.math.RGBA">
		<__alpha16 static="1"><x path="lime.utils.UInt32Array"/></__alpha16>
		<__clamp static="1"><x path="lime.utils.UInt8Array"/></__clamp>
		<a16 static="1"><x path="Int"/></a16>
		<unmult static="1"><x path="Float"/></unmult>
		<a public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the alpha component of the color</haxe_doc>
		</a>
		<b public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the blue component of the color</haxe_doc>
		</b>
		<g public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the green component of the color</haxe_doc>
		</g>
		<r public="1" get="accessor" set="accessor" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Accesses the red component of the color</haxe_doc>
		</r>
		<_new public="1" get="inline" set="null" line="120" static="1">
			<f a="?rgba" v="0">
				<x path="Int"/>
				<x path="lime.math.RGBA"/>
			</f>
			<meta>
				<m n=":value"><e>{ rgba : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a new RGBA instance
		@param	rgba	(Optional) An RGBA color value</haxe_doc>
		</_new>
		<create public="1" get="inline" set="null" line="135" static="1">
			<f a="r:g:b:a">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.math.RGBA"/>
			</f>
			<haxe_doc>Creates a new RGBA instance from component values
		@param	r	A red component value
		@param	g	A green component value
		@param	b	A blue component value
		@param	a	An alpha component value
		@return	A new RGBA instance</haxe_doc>
		</create>
		<multiplyAlpha public="1" get="inline" set="null" line="147" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Multiplies the red, green and blue components by the current alpha component</haxe_doc>
		</multiplyAlpha>
		<readUInt8 public="1" get="inline" set="null" line="174" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Reads a value from a `UInt8Array` into the current `RGBA` color
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to read
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</readUInt8>
		<set public="1" get="inline" set="null" line="208" static="1">
			<f a="this:r:g:b:a">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Sets the current `RGBA` color to new component values
		@param	r	The red component value to set
		@param	g	The green component value to set
		@param	b	The blue component vlaue to set
		@param	a	The alpha component value to set</haxe_doc>
		</set>
		<unmultiplyAlpha public="1" get="inline" set="null" line="218" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Divides the current red, green and blue components by the alpha component</haxe_doc>
		</unmultiplyAlpha>
		<writeUInt8 public="1" get="inline" set="null" line="237" static="1">
			<f a="this:data:offset:?format:?premultiplied" v=":::RGBA32:false">
				<x path="UInt"/>
				<x path="lime.utils.UInt8Array"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ premultiplied : false, format : RGBA32 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Writes the current `RGBA` color into a `UInt8Array`
		@param	data	A `UInt8Array` instance
		@param	offset	An offset into the `UInt8Array` to write
		@param	format	(Optional) The `PixelFormat` represented by the `UInt8Array` data
		@param	premultiplied	(Optional) Whether the data is stored in premultiplied alpha format</haxe_doc>
		</writeUInt8>
		<__fromARGB get="inline" set="null" line="273" static="1">
			<f a="argb">
				<x path="lime.math.ARGB"/>
				<x path="lime.math.RGBA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromARGB>
		<__fromBGRA get="inline" set="null" line="280" static="1">
			<f a="bgra">
				<x path="lime.math.BGRA"/>
				<x path="lime.math.RGBA"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromBGRA>
		<get_a get="inline" set="null" line="294" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_a>
		<set_a get="inline" set="null" line="301" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_a>
		<get_b get="inline" set="null" line="309" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_b>
		<set_b get="inline" set="null" line="316" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_b>
		<get_g get="inline" set="null" line="324" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_g>
		<set_g get="inline" set="null" line="331" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_g>
		<get_r get="inline" set="null" line="339" static="1">
			<f a="this">
				<x path="UInt"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_r>
		<set_r get="inline" set="null" line="346" static="1">
			<f a="this:value">
				<x path="UInt"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_r>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":allow"><e>lime.math</e></m>
		</meta>
	</class>
	<class path="lime.math.Rectangle" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Rectangle.hx">
		<bottom public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the bottom (y + height) value of the `Rectangle`</haxe_doc>
		</bottom>
		<bottomRight public="1" get="accessor" set="accessor">
			<c path="lime.math.Vector2"/>
			<haxe_doc>Get or set the bottom-right (x + width, y + height) as a `Vector2`</haxe_doc>
		</bottomRight>
		<height public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the height of the rectangle</haxe_doc>
		</height>
		<left public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the left (x) of the rectangle</haxe_doc>
		</left>
		<right public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the right (x + width) of the rectangle</haxe_doc>
		</right>
		<size public="1" get="accessor" set="accessor">
			<c path="lime.math.Vector2"/>
			<haxe_doc>Get or set the size (width, height) as a `Vector2`</haxe_doc>
		</size>
		<top public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>Get or set the top (y) of the rectangle</haxe_doc>
		</top>
		<topLeft public="1" get="accessor" set="accessor">
			<c path="lime.math.Vector2"/>
			<haxe_doc>Get or set the top-left (x, y) as a `Vector2`</haxe_doc>
		</topLeft>
		<width public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the width of the rectangle</haxe_doc>
		</width>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the x of the rectangle</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>Get or set the y of the rectangle</haxe_doc>
		</y>
		<clone public="1" set="method" line="102">
			<f a=""><c path="lime.math.Rectangle"/></f>
			<haxe_doc>Creates a clone of this `Rectangle`
		@return	A new `Rectangle` instance</haxe_doc>
		</clone>
		<contains public="1" set="method" line="115">
			<f a="x:y">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether this rectangle contains the specified (x, y) point
		@param	x	The x coordinate to test
		@param	y	The y coordinate to test
		@return	Whether the point is contained in the rectangle</haxe_doc>
		</contains>
		<containsPoint public="1" set="method" line="122">
			<f a="point">
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":dox"><e>hide</e></m>
				<m n=":noCompletion"/>
				<m n=":deprecated"><e>"Use containsVector"</e></m>
			</meta>
		</containsPoint>
		<containsRect public="1" set="method" line="136">
			<f a="rect">
				<c path="lime.math.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether this rectangle contains another rectangle
		This will return `false` if the second rectangle only
		overlaps but is not fully contained within the current rectangle
		@param	rect	A second `Rectangle` instance to test
		@return	Whether the `rect` is contained within the current `Rectangle`</haxe_doc>
		</containsRect>
		<containsVector public="1" set="method" line="156">
			<f a="vector">
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns whether this rectangle contains the specified vector
		@param	vector	The vector to test
		@return	Whether the vector is contained in the rectangle</haxe_doc>
		</containsVector>
		<copyFrom public="1" set="method" line="167">
			<f a="sourceRect">
				<c path="lime.math.Rectangle"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the x, y, width and height of another `Rectangle`
		@param	sourceRect	Another `Rectangle` instance</haxe_doc>
		</copyFrom>
		<equals public="1" set="method" line="183">
			<f a="toCompare">
				<c path="lime.math.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Checks whether the current `Rectangle` and another
		instance have equal values
		@param	toCompare	Another `Rectangle` to compare with
		@return	Whether both rectangles are not `null` and have equal values</haxe_doc>
		</equals>
		<inflate public="1" set="method" line="196">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Increases the size of the current rectangle by
		the given delta x and y values
		@param	dx	A delta x value to increase the size by
		@param	dy	A delta y value to increase the size by</haxe_doc>
		</inflate>
		<inflateVector public="1" set="method" line="209">
			<f a="vector">
				<c path="lime.math.Vector2"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Increases the size of the current rectangle by
		the given delta vector values
		@param	vector	A delta vector to increase the size by</haxe_doc>
		</inflateVector>
		<intersection public="1" set="method" line="225">
			<f a="toIntersect:?result" v=":null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Returns a new rectangle with the area where the current
		`Rectangle` and another `Rectangle` instance overlap.
		If they do not overlap, the returned `Rectangle` will
		be empty
		@param	toIntersect	Another `Rectangle` instance to intersect with
		@param	result	(Optional) A `Rectangle` instance to use for the result
		@return	A `Rectangle` of the intersection area</haxe_doc>
		</intersection>
		<intersects public="1" set="method" line="263">
			<f a="toIntersect">
				<c path="lime.math.Rectangle"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Returns if the current `Rectangle` overlaps with another instance
		@param	toIntersect	Another `Rectangle` to compare with
		@return	Whether the rectangles intersect</haxe_doc>
		</intersects>
		<isEmpty public="1" set="method" line="286">
			<f a=""><x path="Bool"/></f>
			<haxe_doc><![CDATA[Whether this rectangle is empty
		@return	`true` if the width or height is <= 0]]></haxe_doc>
		</isEmpty>
		<offset public="1" set="method" line="298">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Moves the rectangle by offset x and values
		@param	dx	A delta x value
		@param	dy	A delta y value</haxe_doc>
		</offset>
		<offsetVector public="1" set="method" line="310">
			<f a="vector">
				<c path="lime.math.Vector2"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Moves the rectangle by the values of a `Vector2`
		@param	dx	A delta vector</haxe_doc>
		</offsetVector>
		<setEmpty public="1" set="method" line="321">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Makes this rectangle empty</haxe_doc>
		</setEmpty>
		<setTo public="1" set="method" line="335">
			<f a="xa:ya:widtha:heighta">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the values of this rectangle at once
		@param	xa	A new x value
		@param	ya	A new y value
		@param	widtha	A new width value
		@param	heighta	A new height value</haxe_doc>
		</setTo>
		<union public="1" set="method" line="352">
			<f a="toUnion:?result" v=":null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
				<c path="lime.math.Rectangle"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Combines two rectangles together, returning the
		minimum `Rectangle` that contains both rectangles
		@param	toUnion	A second `Rectangle` to unify
		@param	result	(Optional) A `Rectangle` instance for the result
		@return	A `Rectangle` that contains the dimensions of both rectangles</haxe_doc>
		</union>
		<__toFlashRectangle set="method" line="380">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toFlashRectangle>
		<get_bottom set="method" line="398">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottom>
		<set_bottom set="method" line="399">
			<f a="b">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_bottom>
		<get_bottomRight set="method" line="400">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_bottomRight>
		<set_bottomRight set="method" line="401">
			<f a="p">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_bottomRight>
		<get_left set="method" line="402">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_left>
		<set_left set="method" line="403">
			<f a="l">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_left>
		<get_right set="method" line="404">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_right>
		<set_right set="method" line="405">
			<f a="r">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_right>
		<get_size set="method" line="406">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_size>
		<set_size set="method" line="407">
			<f a="p">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_size>
		<get_top set="method" line="408">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_top>
		<set_top set="method" line="409">
			<f a="t">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_top>
		<get_topLeft set="method" line="410">
			<f a=""><c path="lime.math.Vector2"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_topLeft>
		<set_topLeft set="method" line="411">
			<f a="p">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_topLeft>
		<new public="1" set="method" line="88">
			<f a="?x:?y:?width:?height" v="0:0:0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ height : 0, width : 0, y : 0, x : 0 }</e></m></meta>
			<haxe_doc>Create a new `Rectangle` instance
		@param	x	(Optional) Initial x value (default is 0)
		@param	y	(Optional) Initial y value (default is 0)
		@param	width	(Optional) Initial width value (default is 0)
		@param	height	(Optional) Initial height value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>The `Rectangle` class provides a simple object for storing
	and manipulating a logical rectangle for calculations</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.math.Vector2" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Vector2.hx">
		<distance public="1" set="method" line="93" static="1">
			<f a="pt1:pt2">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the distance between two `Vector2` points
		@param	pt1	A `Vector2` instance
		@param	pt2	A second `Vector2` instance
		@return	The distance between each `Vector2`</haxe_doc>
		</distance>
		<interpolate public="1" set="method" line="122" static="1">
			<f a="pt1:pt2:f:?result" v=":::null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<x path="Float"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Interpolates between two points, given a specified percentage value
		@param	pt1	A `Vector2` instance
		@param	pt2	A second `Vector2` instance
		@param	f	A percentage value to interpolate
		@param	result	(Optional) A `Vector2` instance to use for the result
		@return	A `Vector2` instance holding the interpolated value</haxe_doc>
		</interpolate>
		<polar public="1" set="method" line="172" static="1">
			<f a="len:angle:?result" v="::null">
				<x path="Float"/>
				<x path="Float"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Converts a polar coordinate to into a cartesian `Vector2` instance
		@param	len	The length of the polar value
		@param	angle	The angle of the polar value
		@param	result	(Optional) A `Vector2` instance to store the result
		@return	A `Vector2` instance in cartesian coordinates</haxe_doc>
		</polar>
		<length public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Gets the length of this vector from (0, 0) to (x, y)</haxe_doc>
		</length>
		<lengthSquared public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Gets the square of the length of this vector, which
		avoids use of `Math.sqrt` for faster performance</haxe_doc>
		</lengthSquared>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>The x coodinate for this vector</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>The y coodinate for this vector</haxe_doc>
		</y>
		<add public="1" set="method" line="67">
			<f a="v:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Adds the current vector to a second `Vector2` instance
		and returns the result
		@param	v	A `Vector2` instance to add
		@param	result	(Optional) A `Vector2` instance to store the result
		@return	A `Vector2` instance that combines both vector values</haxe_doc>
		</add>
		<clone public="1" set="method" line="80">
			<f a=""><c path="lime.math.Vector2"/></f>
			<haxe_doc>Clones the current `Vector2`
		@return	A new `Vector2` instance with the same values as the current one</haxe_doc>
		</clone>
		<equals public="1" set="method" line="107">
			<f a="toCompare">
				<c path="lime.math.Vector2"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>Whether this `Vector2` has the same values as another instance
		@param	toCompare	A `Vector2` instance to compare against
		@return	Whether the values of each vector are equal</haxe_doc>
		</equals>
		<normalize public="1" set="method" line="135">
			<f a="thickness">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Normalizes this vector between the current length and a set scale value
		@param	thickness	The scaling value. . For example, if the current vector is `(0, 5)` and you normalize it to 1, the normalized value will be `(0, 1)`</haxe_doc>
		</normalize>
		<offset public="1" set="method" line="157">
			<f a="dx:dy">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Offsets the current value of this vector
		@param	dx	An offset x value
		@param	dy	An offset y value</haxe_doc>
		</offset>
		<setTo public="1" get="inline" set="null" line="186">
			<f a="xa:ya">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets this `Vector2` to new values
		@param	xa	An `x` value
		@param	ya	A `y` value</haxe_doc>
		</setTo>
		<subtract public="1" set="method" line="199">
			<f a="v:?result" v=":null">
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
				<c path="lime.math.Vector2"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Subtracts the current vector from another `Vector2` instance
		@param	v	A `Vector2` instance to subtract from the current vector
		@param	result	(Optional) A `Vector2` instance to store the result
		@return	A `Vector2` instance containing the subtracted values</haxe_doc>
		</subtract>
		<__toFlashPoint set="method" line="208">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</__toFlashPoint>
		<get_length set="method" line="226">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<get_lengthSquared set="method" line="233">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lengthSquared>
		<new public="1" set="method" line="52">
			<f a="?x:?y" v="0:0">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ y : 0, x : 0 }</e></m></meta>
			<haxe_doc>Creates a new `Vector` instance
		@param	x	(Optional) An initial `x` value (default is 0)
		@param	y	(Optional) An initial `y` value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>The `Vector2` class can be used for calculating math with
	basic (x, y) coordinates</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.math.Vector4" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/math/Vector4.hx">
		<X_AXIS public="1" get="accessor" set="null" static="1">
			<c path="lime.math.Vector4"/>
			<haxe_doc>A constant representing the x axis (1, 0, 0)</haxe_doc>
		</X_AXIS>
		<Y_AXIS public="1" get="accessor" set="null" static="1">
			<c path="lime.math.Vector4"/>
			<haxe_doc>A constant representing the y axis (0, 1, 0)</haxe_doc>
		</Y_AXIS>
		<Z_AXIS public="1" get="accessor" set="null" static="1">
			<c path="lime.math.Vector4"/>
			<haxe_doc>A constant representing the z axis (0, 0, 1)</haxe_doc>
		</Z_AXIS>
		<angleBetween public="1" get="inline" set="null" line="105" static="1">
			<f a="a:b">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the angle between two `Vector4` coordinates
		@param	a	A `Vector4` instance
		@param	b	A second `Vector4` instance
		@return	The calculated angle</haxe_doc>
		</angleBetween>
		<distance public="1" get="inline" set="null" line="176" static="1">
			<f a="pt1:pt2">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the distance between two vectors
		@param	pt1	A `Vector4` instance
		@param	pt2	A second `Vector4` instance
		@return	The distance between each vector</haxe_doc>
		</distance>
		<distanceSquared public="1" get="inline" set="null" line="194" static="1">
			<f a="pt1:pt2">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the squared distance between two vectors,
		(avoids the use of `Math.sqrt` for faster performance)
		@param	pt1	A `Vector4` instance
		@param	pt2	A second `Vector4` instance
		@return	The square of the distance between each vector</haxe_doc>
		</distanceSquared>
		<get_X_AXIS get="inline" set="null" line="379" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_X_AXIS>
		<get_Y_AXIS get="inline" set="null" line="386" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Y_AXIS>
		<get_Z_AXIS get="inline" set="null" line="393" static="1"><f a=""><c path="lime.math.Vector4"/></f></get_Z_AXIS>
		<length public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Get the length of this vector</haxe_doc>
		</length>
		<lengthSquared public="1" get="accessor" set="null">
			<x path="Float"/>
			<haxe_doc>Get the squared length of this vector
		(avoiding the use of `Math.sqrt` for faster
		performance)</haxe_doc>
		</lengthSquared>
		<w public="1">
			<x path="Float"/>
			<haxe_doc>The w component value</haxe_doc>
		</w>
		<x public="1">
			<x path="Float"/>
			<haxe_doc>The x component value</haxe_doc>
		</x>
		<y public="1">
			<x path="Float"/>
			<haxe_doc>The y component value</haxe_doc>
		</y>
		<z public="1">
			<x path="Float"/>
			<haxe_doc>The z component value</haxe_doc>
		</z>
		<add public="1" get="inline" set="null" line="90">
			<f a="a:?result" v=":null">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Adds two `Vector4` instances together and returns the result
		@param	a	A `Vector4` instance to add to the current one
		@param	result	(Optional) A `Vector4` instance to store the result
		@return	A `Vector4` instance with the added value</haxe_doc>
		</add>
		<clone public="1" get="inline" set="null" line="121">
			<f a=""><c path="lime.math.Vector4"/></f>
			<haxe_doc>Creates a new `Vector4` instance with the same values as the current one
		@return	A new `Vector4` instance with the same values</haxe_doc>
		</clone>
		<copyFrom public="1" get="inline" set="null" line="132">
			<f a="sourceVector4">
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Copies the x, y and z component values of another `Vector4` instance
		@param	sourceVector4	A `Vector4` instance to copy from</haxe_doc>
		</copyFrom>
		<crossProduct public="1" get="inline" set="null" line="147">
			<f a="a:?result" v=":null">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Performs vector multiplication between this vector and another `Vector4` instance
		@param	a	A `Vector4` instance to multiply by
		@param	result	(Optional) A `Vector4` to use for the result
		@return	A `Vector4` instance with the result</haxe_doc>
		</crossProduct>
		<decrementBy public="1" get="inline" set="null" line="161">
			<f a="a">
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Decrements the x, y and z component values by those in another `Vector4` instance
		@param	a	A `Vector4` instance to decrement the current vector by</haxe_doc>
		</decrementBy>
		<dotProduct public="1" get="inline" set="null" line="210">
			<f a="a">
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
			</f>
			<haxe_doc>Calculates the dot product of the current vector with another `Vector4` instance
		@param	a	A `Vector4` instance to use in the dot product
		@return	The calculated dot product value</haxe_doc>
		</dotProduct>
		<equals public="1" get="inline" set="null" line="225">
			<f a="toCompare:?allFour" v=":false">
				<c path="lime.math.Vector4"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
			<haxe_doc>Whether two `Vector4` instances have equal component values.

		Comparing the w component value is optional.
		@param	toCompare	A `Vector4` instance to compare against
		@param	allFour	(Optional) Whether to compare against the w component (default is false)
		@return	Whether both instances have equal values</haxe_doc>
		</equals>
		<incrementBy public="1" get="inline" set="null" line="236">
			<f a="a">
				<c path="lime.math.Vector4"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Increments the x, y and z component values by those in a second `Vector4` instance
		@param	a	A `Vector4` instance to increment the current vector by</haxe_doc>
		</incrementBy>
		<nearEquals public="1" get="inline" set="null" line="253">
			<f a="toCompare:tolerance:?allFour" v="::false">
				<c path="lime.math.Vector4"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ allFour : false }</e></m></meta>
			<haxe_doc>Whether two `Vector4` instances have nearly equal component values.
		Comparison is performed within a given tolerance value.
		@param	toCompare	A `Vector4` instance to compare against
		@param	tolerance	A floating point value determining how near the values must be to be considered near equal
		@param	allFour	(Optional) Whether to compare against the w component (default is false)
		@return	Whether both instances have equal values, within the given tolerance</haxe_doc>
		</nearEquals>
		<negate public="1" get="inline" set="null" line="264">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Negates the x, y and z values of the current vector
		(multiplying each value by -1)</haxe_doc>
		</negate>
		<normalize public="1" get="inline" set="null" line="277">
			<f a=""><x path="Float"/></f>
			<haxe_doc>Divides the x, y and z component values by the
		length of the vector</haxe_doc>
		</normalize>
		<project public="1" get="inline" set="null" line="298">
			<f a=""><x path="Void"/></f>
			<haxe_doc>Divides the x, y and z component values by the
		w component value</haxe_doc>
		</project>
		<scaleBy public="1" get="inline" set="null" line="311">
			<f a="s">
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Scales the x, y and z component values by a scale value
		@param	s	The amount of scale to apply</haxe_doc>
		</scaleBy>
		<setTo public="1" get="inline" set="null" line="326">
			<f a="xa:ya:za">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<haxe_doc>Sets the x, y and z component values
		@param	xa	An x value
		@param	ya	A y value
		@param	za	A z value</haxe_doc>
		</setTo>
		<subtract public="1" get="inline" set="null" line="342">
			<f a="a:?result" v=":null">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":value"><e>{ result : null }</e></m></meta>
			<haxe_doc>Subtracts the values of a second `Vector4` instance
		from the current one
		@param	a	A second `Vector4` instance to substract
		@param	result	(Optional) A `Vector4` instance to store the result
		@return	A `Vector4` instance containing the subtracted value</haxe_doc>
		</subtract>
		<toString public="1" get="inline" set="null" line="351">
			<f a=""><c path="String"/></f>
			<meta><m n=":dox"><e>hide</e></m></meta>
		</toString>
		<get_length get="inline" set="null" line="365">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<get_lengthSquared get="inline" set="null" line="372">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_lengthSquared>
		<new public="1" set="method" line="74">
			<f a="?x:?y:?z:?w" v="0.:0.:0.:0.">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ w : 0., z : 0., y : 0., x : 0. }</e></m></meta>
			<haxe_doc>Creates a new `Vector4` instance
		@param	x	(Optional) An initial x value (default is 0)
		@param	y	(Optional) An initial y value (default is 0)
		@param	z	(Optional) An initial z value (default is 0)
		@param	w	(Optional) An initial w value (default is 0)</haxe_doc>
		</new>
		<haxe_doc>`Vector4` is a vector suitable for three-dimensional
	math, containing (x, y, z, w) components</haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.AudioBuffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioBuffer.hx">
		<fromBase64 public="1" set="method" line="87" static="1"><f a="base64String">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromBase64>
		<fromBytes public="1" set="method" line="143" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="185" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></fromFile>
		<fromFiles public="1" set="method" line="243" static="1"><f a="paths">
	<c path="Array"><c path="String"/></c>
	<c path="lime.media.AudioBuffer"/>
</f></fromFiles>
		<fromVorbisFile public="1" set="method" line="289" static="1"><f a="vorbisFile">
	<d/>
	<c path="lime.media.AudioBuffer"/>
</f></fromVorbisFile>
		<loadFromFile public="1" set="method" line="298" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadFromFile>
		<loadFromFiles public="1" set="method" line="382" static="1"><f a="paths">
	<c path="Array"><c path="String"/></c>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadFromFiles>
		<__getCodec set="method" line="423" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="String"/>
</f></__getCodec>
		<bitsPerSample public="1"><x path="Int"/></bitsPerSample>
		<channels public="1"><x path="Int"/></channels>
		<data public="1"><x path="lime.utils.UInt8Array"/></data>
		<sampleRate public="1"><x path="Int"/></sampleRate>
		<src public="1" get="accessor" set="accessor"><d/></src>
		<__srcAudio>
			<c path="js.html.Audio"/>
			<meta><m n=":noCompletion"/></meta>
		</__srcAudio>
		<__srcBuffer>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcBuffer>
		<__srcCustom>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcCustom>
		<__srcHowl>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcHowl>
		<__srcSound>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcSound>
		<__srcVorbisFile>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__srcVorbisFile>
		<dispose public="1" set="method" line="76"><f a=""><x path="Void"/></f></dispose>
		<get_src set="method" line="456">
			<f a=""><d/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_src>
		<set_src set="method" line="485">
			<f a="value">
				<d/>
				<d/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_src>
		<new public="1" set="method" line="69"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.utils.Assets</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.media.AudioContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioContext.hx">
		<custom public="1"><d/></custom>
		<html5 public="1" set="null"><c path="lime.media.HTML5AudioContext"/></html5>
		<type public="1" set="null"><x path="lime.media.AudioContextType"/></type>
		<web public="1" set="null"><t path="lime.media.WebAudioContext"/></web>
		<new public="1" set="method" line="34">
			<f a="?type" v="null">
				<x path="lime.media.AudioContextType"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ type : null }</e></m>
			</meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.media.FlashAudioContext</e></m>
			<m n=":access"><e>lime.media.HTML5AudioContext</e></m>
			<m n=":access"><e>lime.media.OpenALAudioContext</e></m>
			<m n=":access"><e>lime.media.WebAudioContext</e></m>
		</meta>
	</class>
	<abstract path="lime.media.AudioContextType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioContextType.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.media._AudioContextType.AudioContextType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioContextType.hx" private="1" module="lime.media.AudioContextType" extern="1">
	<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="6" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "flash"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FLASH>
	<HTML5 public="1" get="inline" set="null" expr="cast &quot;html5&quot;" line="7" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "html5"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HTML5>
	<OPENAL public="1" get="inline" set="null" expr="cast &quot;openal&quot;" line="8" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "openal"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPENAL>
	<WEB public="1" get="inline" set="null" expr="cast &quot;web&quot;" line="9" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "web"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WEB>
	<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="10" static="1">
		<x path="lime.media.AudioContextType"/>
		<meta>
			<m n=":value"><e>cast "custom"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUSTOM>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.media._AudioContextType.AudioContextType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioContextType.hx" private="1" module="lime.media.AudioContextType" extern="1">
		<FLASH public="1" get="inline" set="null" expr="cast &quot;flash&quot;" line="6" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "flash"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FLASH>
		<HTML5 public="1" get="inline" set="null" expr="cast &quot;html5&quot;" line="7" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "html5"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HTML5>
		<OPENAL public="1" get="inline" set="null" expr="cast &quot;openal&quot;" line="8" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "openal"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPENAL>
		<WEB public="1" get="inline" set="null" expr="cast &quot;web&quot;" line="9" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "web"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WEB>
		<CUSTOM public="1" get="inline" set="null" expr="cast &quot;custom&quot;" line="10" static="1">
			<x path="lime.media.AudioContextType"/>
			<meta>
				<m n=":value"><e>cast "custom"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUSTOM>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.media.AudioManager" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioManager.hx">
		<context public="1" static="1"><c path="lime.media.AudioContext"/></context>
		<init public="1" set="method" line="29" static="1">
			<f a="?context" v="null">
				<c path="lime.media.AudioContext"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ context : null }</e></m></meta>
		</init>
		<resume public="1" set="method" line="70" static="1"><f a=""><x path="Void"/></f></resume>
		<shutdown public="1" set="method" line="92" static="1"><f a=""><x path="Void"/></f></shutdown>
		<suspend public="1" set="method" line="122" static="1"><f a=""><x path="Void"/></f></suspend>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.media.AudioSource" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioSource.hx">
		<onComplete public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onComplete>
		<buffer public="1"><c path="lime.media.AudioBuffer"/></buffer>
		<currentTime public="1" get="accessor" set="accessor"><x path="Int"/></currentTime>
		<gain public="1" get="accessor" set="accessor"><x path="Float"/></gain>
		<length public="1" get="accessor" set="accessor"><x path="Int"/></length>
		<loops public="1" get="accessor" set="accessor"><x path="Int"/></loops>
		<offset public="1"><x path="Int"/></offset>
		<position public="1" get="accessor" set="accessor"><c path="lime.math.Vector4"/></position>
		<__backend>
			<t path="lime.media._AudioSource.AudioSourceBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</__backend>
		<dispose public="1" set="method" line="55"><f a=""><x path="Void"/></f></dispose>
		<init set="method" line="62">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</init>
		<play public="1" set="method" line="69"><f a=""><x path="Void"/></f></play>
		<pause public="1" set="method" line="76"><f a=""><x path="Void"/></f></pause>
		<stop public="1" set="method" line="83"><f a=""><x path="Void"/></f></stop>
		<get_currentTime set="method" line="97">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_currentTime>
		<set_currentTime set="method" line="104">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_currentTime>
		<get_gain set="method" line="111">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_gain>
		<set_gain set="method" line="118">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_gain>
		<get_length set="method" line="125">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_length>
		<set_length set="method" line="132">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_length>
		<get_loops set="method" line="139">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_loops>
		<set_loops set="method" line="146">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_loops>
		<get_position set="method" line="153">
			<f a=""><c path="lime.math.Vector4"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_position>
		<set_position set="method" line="160">
			<f a="value">
				<c path="lime.math.Vector4"/>
				<c path="lime.math.Vector4"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_position>
		<new public="1" set="method" line="31">
			<f a="?buffer:?offset:?length:?loops" v="null:0:null:0">
				<c path="lime.media.AudioBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ loops : 0, length : null, offset : 0, buffer : null }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.media._AudioSource.AudioSourceBackend" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/AudioSource.hx" private="1" module="lime.media.AudioSource">
		<c path="lime._internal.backend.html5.HTML5AudioSource"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<class path="lime.media.HTML5AudioContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/HTML5AudioContext.hx">
		<HAVE_CURRENT_DATA public="1" expr="2">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</HAVE_CURRENT_DATA>
		<HAVE_ENOUGH_DATA public="1" expr="4">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</HAVE_ENOUGH_DATA>
		<HAVE_FUTURE_DATA public="1" expr="3">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</HAVE_FUTURE_DATA>
		<HAVE_METADATA public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</HAVE_METADATA>
		<HAVE_NOTHING public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</HAVE_NOTHING>
		<NETWORK_EMPTY public="1" expr="0">
			<x path="Int"/>
			<meta><m n=":value"><e>0</e></m></meta>
		</NETWORK_EMPTY>
		<NETWORK_IDLE public="1" expr="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</NETWORK_IDLE>
		<NETWORK_LOADING public="1" expr="2">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</NETWORK_LOADING>
		<NETWORK_NO_SOURCE public="1" expr="3">
			<x path="Int"/>
			<meta><m n=":value"><e>3</e></m></meta>
		</NETWORK_NO_SOURCE>
		<canPlayType public="1" set="method" line="32"><f a="buffer:type">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
	<c path="String"/>
</f></canPlayType>
		<createBuffer public="1" set="method" line="47">
			<f a="?urlString" v="null">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
			</f>
			<meta><m n=":value"><e>{ urlString : null }</e></m></meta>
		</createBuffer>
		<getAutoplay public="1" set="method" line="61"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getAutoplay>
		<getBuffered public="1" set="method" line="76"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getBuffered>
		<getCurrentSrc public="1" set="method" line="91"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getCurrentSrc>
		<getCurrentTime public="1" set="method" line="106"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getCurrentTime>
		<getDefaultPlaybackRate public="1" set="method" line="121"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getDefaultPlaybackRate>
		<getDuration public="1" set="method" line="136"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getDuration>
		<getEnded public="1" set="method" line="151"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getEnded>
		<getError public="1" set="method" line="166"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getError>
		<getLoop public="1" set="method" line="181"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getLoop>
		<getMuted public="1" set="method" line="196"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getMuted>
		<getNetworkState public="1" set="method" line="211"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Int"/>
</f></getNetworkState>
		<getPaused public="1" set="method" line="226"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getPaused>
		<getPlaybackRate public="1" set="method" line="241"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getPlaybackRate>
		<getPlayed public="1" set="method" line="256"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getPlayed>
		<getPreload public="1" set="method" line="271"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getPreload>
		<getReadyState public="1" set="method" line="286"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Int"/>
</f></getReadyState>
		<getSeekable public="1" set="method" line="301"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<d/>
</f></getSeekable>
		<getSeeking public="1" set="method" line="316"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></getSeeking>
		<getSrc public="1" set="method" line="331"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
</f></getSrc>
		<getStartTime public="1" set="method" line="346"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getStartTime>
		<getVolume public="1" set="method" line="361"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
</f></getVolume>
		<load public="1" set="method" line="376"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></load>
		<pause public="1" set="method" line="389"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></pause>
		<play public="1" set="method" line="402"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Void"/>
</f></play>
		<setAutoplay public="1" set="method" line="415"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setAutoplay>
		<setCurrentTime public="1" set="method" line="428"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setCurrentTime>
		<setDefaultPlaybackRate public="1" set="method" line="441"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setDefaultPlaybackRate>
		<setLoop public="1" set="method" line="454"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setLoop>
		<setMuted public="1" set="method" line="467"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
	<x path="Void"/>
</f></setMuted>
		<setPlaybackRate public="1" set="method" line="480"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setPlaybackRate>
		<setPreload public="1" set="method" line="493"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setPreload>
		<setSrc public="1" set="method" line="506"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<c path="String"/>
	<x path="Void"/>
</f></setSrc>
		<setVolume public="1" set="method" line="519"><f a="buffer:value">
	<c path="lime.media.AudioBuffer"/>
	<x path="Float"/>
	<x path="Void"/>
</f></setVolume>
		<new set="method" line="25">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.media.AudioBuffer</e></m>
		</meta>
	</class>
	<typedef path="lime.media.WebAudioContext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/WebAudioContext.hx"><c path="js.html.audio.AudioContext"/></typedef>
	<class path="lime.media.howlerjs.Howl" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/howlerjs/Howl.hx">
		<duration public="1" set="method" line="22">
			<f a="?id">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Get the duration of this sound. Passing a sound id will return the sprite duration.
	 * @param	id		The sound id to check. If none is passed, return full source duration.
	 * @return	Audio duration in seconds.</haxe_doc>
		</duration>
		<fade public="1" set="method" line="37">
			<f a="from:to:len:?id">
				<x path="Float"/>
				<x path="Float"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).
	 * @param	from		The value to fade from (0.0 to 1.0).
	 * @param	to		The volume to fade to (0.0 to 1.0).
	 * @param	len		Time in milliseconds to fade.
	 * @param	id		The sound id (omit to fade all sounds).
	 * @return</haxe_doc>
		</fade>
		<load public="1" set="method" line="48">
			<f a=""><c path="lime.media.howlerjs.Howl"/></f>
			<haxe_doc>* Load the audio file.
	 * @return</haxe_doc>
		</load>
		<loop public="1" set="method" line="63">
			<f a="?loop:?id">
				<d/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.
	 * 	loop() -> Returns the group's loop value.
	 * 	loop(id) -> Returns the sound id's loop value.
	 * 	loop(loop) -> Sets the loop value for all sounds in this Howl group.
	 * 	loop(loop, id) -> Sets the loop value of passed sound id.
	 * @return	Returns self or current loop value.]]></haxe_doc>
		</loop>
		<mute public="1" set="method" line="76">
			<f a="muted:?id">
				<x path="Bool"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Mute/unmute a single sound or all sounds in this Howl group.
	 * @param	muted		Set to true to mute and false to unmute.
	 * @param	id		The sound ID to update (omit to mute/unmute all).
	 * @return</haxe_doc>
		</mute>
		<off public="1" set="method" line="90">
			<f a="event:fn:?id">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Remove a custom event. Call without parameters to remove all events.
	 * @param	event		Event name.
	 * @param	fn		Listener to remove. Leave empty to remove all.
	 * @param	id		(optional) Only remove events for this sound.
	 * @return</haxe_doc>
		</off>
		<on public="1" set="method" line="104">
			<f a="event:fn:?id">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Listen to a custom event.
	 * @param	event		Event name.
	 * @param	fn		Listener to call.
	 * @param	id		(optional) Only listen to events for this sound.
	 * @return</haxe_doc>
		</on>
		<once public="1" set="method" line="118">
			<f a="event:fn:?id">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Listen to a custom event and remove it once fired.
	 * @param	event		Event name.
	 * @param	fn		Listener to call.
	 * @param	id		(optional) Only listen to events for this sound.
	 * @return</haxe_doc>
		</once>
		<pause public="1" set="method" line="130">
			<f a="?id">
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Pause playback and save current position.
	 * @param	id		The sound ID (empty to pause all in group).
	 * @return</haxe_doc>
		</pause>
		<play public="1" set="method" line="142">
			<f a="?sprite">
				<d/>
				<x path="Int"/>
			</f>
			<haxe_doc>* Play a sound or resume previous playback.
	 * @param	sprite		Sprite name for sprite playback or sound id to continue previous.
	 * @return	Sound ID.</haxe_doc>
		</play>
		<playing public="1" set="method" line="154">
			<f a="?id">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.
	 * @param	id		The sound id to check. If none is passed, the whole sound group is checked.
	 * @return	True if playing and false if not.</haxe_doc>
		</playing>
		<rate public="1" set="method" line="169">
			<f a="?rate:?id">
				<x path="Float"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.
	 * 	rate() -> Returns the first sound node's current playback rate.
	 * 	rate(id) -> Returns the sound id's current playback rate.
	 * 	rate(rate) -> Sets the playback rate of all sounds in this Howl group.
	 * 	rate(rate, id) -> Sets the playback rate of passed sound id.
	 * @return	Returns self or the current playback rate.]]></haxe_doc>
		</rate>
		<seek public="1" set="method" line="184">
			<f a="?seek:?id">
				<x path="Float"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the seek position of a sound (in seconds). This method can optionally take 0, 1 or 2 arguments.
	 * 	seek() -> Returns the first sound node's current seek position.
	 * 	seek(id) -> Returns the sound id's current seek position.
	 * 	seek(seek) -> Sets the seek position of the first sound node.
	 * 	seek(seek, id) -> Sets the seek position of passed sound id.
	 * @return	Returns self or the current seek position.]]></haxe_doc>
		</seek>
		<state public="1" set="method" line="195">
			<f a=""><c path="String"/></f>
			<haxe_doc>* Returns the current loaded state of this Howl.
	 * @return	'unloaded', 'loading', 'loaded'</haxe_doc>
		</state>
		<stop public="1" set="method" line="207">
			<f a="?id">
				<x path="Int"/>
				<c path="lime.media.howlerjs.Howl"/>
			</f>
			<haxe_doc>* Stop playback and reset to start.
	 * @param	id		The sound ID (empty to stop all in group).
	 * @return</haxe_doc>
		</stop>
		<unload public="1" set="method" line="218">
			<f a=""><x path="Void"/></f>
			<haxe_doc>* Unload and destroy the current Howl object.
	 * This will immediately stop all sound instances attached to this group.</haxe_doc>
		</unload>
		<volume public="1" set="method" line="233">
			<f a="?vol:?id">
				<x path="Float"/>
				<x path="Int"/>
				<d/>
			</f>
			<haxe_doc><![CDATA[* Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.
	 * 	volume() -> Returns the group's volume value.
	 * 	volume(id) -> Returns the sound id's current volume.
	 * 	volume(vol) -> Sets the volume of all sounds in this Howl group.
	 * 	volume(vol, id) -> Sets the volume of passed sound id.
	 * @return	Returns self or current volume.]]></haxe_doc>
		</volume>
		<new public="1" set="method" line="10"><f a="options">
	<t path="lime.media.howlerjs.HowlOptions"/>
	<x path="Void"/>
</f></new>
	</class>
	<typedef path="lime.media.howlerjs.HowlOptions" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/howlerjs/Howl.hx" module="lime.media.howlerjs.Howl"><a>
	<volume>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</volume>
	<src><c path="Array"><c path="String"/></c></src>
	<sprite>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</sprite>
	<rate>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</rate>
	<preload>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</preload>
	<pool>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</pool>
	<onvolume>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onvolume>
	<onstop>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onstop>
	<onseek>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onseek>
	<onrate>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onrate>
	<onplay>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onplay>
	<onpause>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onpause>
	<onmute>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onmute>
	<onloaderror>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onloaderror>
	<onload>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onload>
	<onfade>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onfade>
	<onend>
		<x path="Null"><x path="haxe.Function"/></x>
		<meta><m n=":optional"/></meta>
	</onend>
	<mute>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</mute>
	<loop>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</loop>
	<html5>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</html5>
	<format>
		<x path="Null"><c path="Array"><c path="String"/></c></x>
		<meta><m n=":optional"/></meta>
	</format>
	<autoplay>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</autoplay>
</a></typedef>
	<class path="lime.media.howlerjs.Howler" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/media/howlerjs/Howler.hx">
		<autoSuspend public="1" static="1"><x path="Bool"/></autoSuspend>
		<ctx public="1" static="1"><t path="lime.media.WebAudioContext"/></ctx>
		<masterGain public="1" static="1"><d/></masterGain>
		<mobileAutoEnable public="1" static="1"><x path="Bool"/></mobileAutoEnable>
		<noAudio public="1" static="1"><x path="Bool"/></noAudio>
		<usingWebAudio public="1" static="1"><x path="Bool"/></usingWebAudio>
		<codecs public="1" set="method" line="20" static="1">
			<f a="ext">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<haxe_doc>* Check for codec support of specific extension.
	 * @param	ext		Audio file extention.
	 * @return</haxe_doc>
		</codecs>
		<mute public="1" set="method" line="31" static="1">
			<f a="muted">
				<x path="Bool"/>
				<x path="Class"><c path="lime.media.howlerjs.Howler"/></x>
			</f>
			<haxe_doc>* Handle muting and unmuting globally.
	 * @param	muted		Is muted or not.</haxe_doc>
		</mute>
		<unload public="1" set="method" line="42" static="1">
			<f a=""><x path="Class"><c path="lime.media.howlerjs.Howler"/></x></f>
			<haxe_doc>* Unload and destroy all currently loaded Howl objects.
	 * @return</haxe_doc>
		</unload>
		<volume public="1" set="method" line="54" static="1">
			<f a="?vol">
				<x path="Float"/>
				<d/>
			</f>
			<haxe_doc>* Get/set the global volume for all sounds.
	 * @param	vol		Volume from 0.0 to 1.0.
	 * @return	Returns self or current volume.</haxe_doc>
		</volume>
	</class>
	<class path="lime.net.HTTPRequest" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/net/HTTPRequest.hx">
		<contentType public="1"><c path="String"/></contentType>
		<data public="1"><c path="haxe.io.Bytes"/></data>
		<enableResponseHeaders public="1"><x path="Bool"/></enableResponseHeaders>
		<followRedirects public="1"><x path="Bool"/></followRedirects>
		<formData public="1"><t path="Map">
	<c path="String"/>
	<d/>
</t></formData>
		<headers public="1"><c path="Array"><c path="lime.net.HTTPRequestHeader"/></c></headers>
		<method public="1"><x path="lime.net.HTTPRequestMethod"/></method>
		<responseData public="1"><c path="lime.net.HTTPRequest.T"/></responseData>
		<responseHeaders public="1"><c path="Array"><c path="lime.net.HTTPRequestHeader"/></c></responseHeaders>
		<responseStatus public="1"><x path="Int"/></responseStatus>
		<timeout public="1"><x path="Int"/></timeout>
		<uri public="1"><c path="String"/></uri>
		<userAgent public="1"><c path="String"/></userAgent>
		<withCredentials public="1"><x path="Bool"/></withCredentials>
		<cancel public="1" set="method" line="78"><f a=""><x path="Void"/></f></cancel>
		<load public="1" set="method" line="87">
			<f a="?uri" v="null">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.net.HTTPRequest.T"/></c>
			</f>
			<meta><m n=":value"><e>{ uri : null }</e></m></meta>
		</load>
		<new public="1" set="method" line="57">
			<f a="?uri" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ uri : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.net.HTTPRequestHeader" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/HTTPRequestHeader.hx">
		<name public="1"><c path="String"/></name>
		<value public="1"><c path="String"/></value>
		<new public="1" set="method" line="17">
			<f a="name:?value" v=":&quot;&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ value : "" }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.net.HTTPRequestMethod" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/HTTPRequestMethod.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net._HTTPRequestMethod.HTTPRequestMethod_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/HTTPRequestMethod.hx" private="1" module="lime.net.HTTPRequestMethod" extern="1">
	<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="6" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "DELETE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="7" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "GET"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GET>
	<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="8" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "HEAD"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HEAD>
	<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="9" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "OPTIONS"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPTIONS>
	<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="10" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "POST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POST>
	<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="11" static="1">
		<x path="lime.net.HTTPRequestMethod"/>
		<meta>
			<m n=":value"><e>cast "PUT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PUT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net._HTTPRequestMethod.HTTPRequestMethod_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/HTTPRequestMethod.hx" private="1" module="lime.net.HTTPRequestMethod" extern="1">
		<DELETE public="1" get="inline" set="null" expr="cast &quot;DELETE&quot;" line="6" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "DELETE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<GET public="1" get="inline" set="null" expr="cast &quot;GET&quot;" line="7" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "GET"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GET>
		<HEAD public="1" get="inline" set="null" expr="cast &quot;HEAD&quot;" line="8" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "HEAD"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HEAD>
		<OPTIONS public="1" get="inline" set="null" expr="cast &quot;OPTIONS&quot;" line="9" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "OPTIONS"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPTIONS>
		<POST public="1" get="inline" set="null" expr="cast &quot;POST&quot;" line="10" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "POST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POST>
		<PUT public="1" get="inline" set="null" expr="cast &quot;PUT&quot;" line="11" static="1">
			<x path="lime.net.HTTPRequestMethod"/>
			<meta>
				<m n=":value"><e>cast "PUT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PUT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.net.URIParser" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/URIParser.hx">
		<URI_REGEX public="1" expr="~/^(?:([^:/?#]+):)?(?://((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?))?((((?:[^?#/]*/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/" line="13" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e>~/^(?:([^:/?#]+):)?(?://((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:/?#]*)(?::(\d*))?))?((((?:[^?#/]*/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/</e></m></meta>
		</URI_REGEX>
		<QUERY_REGEX public="1" expr="~/(?:^|&amp;)([^&amp;=]*)=?([^&amp;]*)/" line="14" static="1">
			<c path="EReg"/>
			<meta><m n=":value"><e><![CDATA[~/(?:^|&)([^&=]*)=?([^&]*)/]]></e></m></meta>
		</QUERY_REGEX>
		<parseQuery public="1" set="method" line="63" static="1"><f a="query">
	<c path="String"/>
	<c path="Array"><t path="lime.net.KVPair"/></c>
</f></parseQuery>
		<source public="1"><c path="String"/></source>
		<protocol public="1"><c path="String"/></protocol>
		<authority public="1"><c path="String"/></authority>
		<userInfo public="1"><c path="String"/></userInfo>
		<user public="1"><c path="String"/></user>
		<password public="1"><c path="String"/></password>
		<host public="1"><c path="String"/></host>
		<port public="1"><c path="String"/></port>
		<relative public="1"><c path="String"/></relative>
		<path public="1"><c path="String"/></path>
		<directory public="1"><c path="String"/></directory>
		<file public="1"><c path="String"/></file>
		<query public="1"><c path="String"/></query>
		<anchor public="1"><c path="String"/></anchor>
		<queryArray public="1"><c path="Array"><t path="lime.net.KVPair"/></c></queryArray>
		<new public="1" set="method" line="34"><f a="uri">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.net.KVPair" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/URIParser.hx" module="lime.net.URIParser">
		<a>
			<v><c path="String"/></v>
			<k><c path="String"/></k>
		</a>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</typedef>
	<class path="lime.net.oauth.OAuthClient" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthClient.hx">
		<version public="1"><x path="lime.net.oauth.OAuthVersion"/></version>
		<consumer public="1"><c path="lime.net.oauth.OAuthConsumer"/></consumer>
		<generateNonce public="1" set="method" line="41"><f a=""><c path="String"/></f></generateNonce>
		<new public="1" set="method" line="15"><f a="version:consumer">
	<x path="lime.net.oauth.OAuthVersion"/>
	<c path="lime.net.oauth.OAuthConsumer"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.OAuthConsumer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthConsumer.hx">
		<key public="1"><c path="String"/></key>
		<secret public="1"><c path="String"/></secret>
		<new public="1" set="method" line="11"><f a="key:secret">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.net.oauth.OAuthSignatureMethod" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthSignatureMethod.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.oauth._OAuthSignatureMethod.OAuthSignatureMethod_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthSignatureMethod.hx" private="1" module="lime.net.oauth.OAuthSignatureMethod" extern="1">
	<HMAC_SHA1 public="1" get="inline" set="null" expr="cast &quot;HMAC-SHA1&quot;" line="7" static="1">
		<x path="lime.net.oauth.OAuthSignatureMethod"/>
		<meta>
			<m n=":value"><e>cast "HMAC-SHA1"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HMAC_SHA1>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.oauth._OAuthSignatureMethod.OAuthSignatureMethod_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthSignatureMethod.hx" private="1" module="lime.net.oauth.OAuthSignatureMethod" extern="1">
		<HMAC_SHA1 public="1" get="inline" set="null" expr="cast &quot;HMAC-SHA1&quot;" line="7" static="1">
			<x path="lime.net.oauth.OAuthSignatureMethod"/>
			<meta>
				<m n=":value"><e>cast "HMAC-SHA1"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HMAC_SHA1>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.net.oauth.RequestToken" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<token public="1" set="null"><c path="String"/></token>
		<secret public="1" set="null"><c path="String"/></secret>
		<new public="1" set="method" line="9"><f a="token:secret">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.AccessToken" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<token public="1" set="null"><c path="String"/></token>
		<new public="1" set="method" line="22"><f a="token">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.OAuth1AccessToken" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<extends path="lime.net.oauth.AccessToken"/>
		<secret public="1" set="null"><c path="String"/></secret>
		<new public="1" set="method" line="34"><f a="token:?secret">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.OAuth2AccessToken" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<extends path="lime.net.oauth.AccessToken"/>
		<expires public="1" set="null" expr="-1">
			<x path="Int"/>
			<meta><m n=":value"><e>-1</e></m></meta>
		</expires>
		<new public="1" set="method" line="47"><f a="token:?expires">
	<c path="String"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.net.oauth.RefreshToken" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthToken.hx" module="lime.net.oauth.OAuthToken">
		<token public="1" set="null"><c path="String"/></token>
		<new public="1" set="method" line="60"><f a="token">
	<c path="String"/>
	<x path="Void"/>
</f></new>
	</class>
	<abstract path="lime.net.oauth.OAuthVersion" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthVersion.hx">
		<this><c path="String"/></this>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.net.oauth._OAuthVersion.OAuthVersion_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthVersion.hx" private="1" module="lime.net.oauth.OAuthVersion" extern="1">
	<V1 public="1" get="inline" set="null" expr="cast &quot;1.0&quot;" line="6" static="1">
		<x path="lime.net.oauth.OAuthVersion"/>
		<meta>
			<m n=":value"><e>cast "1.0"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V1>
	<V2 public="1" get="inline" set="null" expr="cast &quot;2.0&quot;" line="7" static="1">
		<x path="lime.net.oauth.OAuthVersion"/>
		<meta>
			<m n=":value"><e>cast "2.0"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V2>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.net.oauth._OAuthVersion.OAuthVersion_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/net/oauth/OAuthVersion.hx" private="1" module="lime.net.oauth.OAuthVersion" extern="1">
		<V1 public="1" get="inline" set="null" expr="cast &quot;1.0&quot;" line="6" static="1">
			<x path="lime.net.oauth.OAuthVersion"/>
			<meta>
				<m n=":value"><e>cast "1.0"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V1>
		<V2 public="1" get="inline" set="null" expr="cast &quot;2.0&quot;" line="7" static="1">
			<x path="lime.net.oauth.OAuthVersion"/>
			<meta>
				<m n=":value"><e>cast "2.0"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V2>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.system.BackgroundWorker" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/BackgroundWorker.hx">
		<MESSAGE_COMPLETE expr="&quot;__COMPLETE__&quot;" line="24" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"__COMPLETE__"</e></m></meta>
		</MESSAGE_COMPLETE>
		<MESSAGE_ERROR expr="&quot;__ERROR__&quot;" line="25" static="1">
			<c path="String"/>
			<meta><m n=":value"><e>"__ERROR__"</e></m></meta>
		</MESSAGE_ERROR>
		<canceled public="1" set="null"><x path="Bool"/></canceled>
		<completed public="1" set="null"><x path="Bool"/></completed>
		<doWork public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</doWork>
		<onComplete public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onComplete>
		<onError public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onError>
		<onProgress public="1" expr="new Event&lt;Dynamic&gt;()">
			<c path="lime.app._Event_Dynamic_Void"><f a="">
	<d/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Dynamic>()]]></e></m></meta>
		</onProgress>
		<__runMessage>
			<d/>
			<meta><m n=":noCompletion"/></meta>
		</__runMessage>
		<cancel public="1" set="method" line="49"><f a=""><x path="Void"/></f></cancel>
		<run public="1" set="method" line="62">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</run>
		<sendComplete public="1" set="method" line="90">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</sendComplete>
		<sendError public="1" set="method" line="113">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</sendError>
		<sendProgress public="1" set="method" line="134">
			<f a="?message" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ message : null }</e></m></meta>
		</sendProgress>
		<__doWork set="method" line="153">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__doWork>
		<__update set="method" line="175">
			<f a="deltaTime">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__update>
		<new public="1" set="method" line="42"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.system.Clipboard" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Clipboard.hx">
		<onUpdate public="1" expr="new Event&lt;Void&gt;()" line="26" static="1">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onUpdate>
		<text public="1" get="accessor" set="accessor" static="1"><c path="String"/></text>
		<_text static="1"><c path="String"/></_text>
		<__update set="method" line="33" static="1"><f a=""><x path="Void"/></f></__update>
		<get_text set="method" line="68" static="1"><f a=""><c path="String"/></f></get_text>
		<set_text set="method" line="79" static="1"><f a="value">
	<c path="String"/>
	<c path="String"/>
</f></set_text>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.Window</e></m>
		</meta>
	</class>
	<class path="lime.system.Display" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Display.hx">
		<bounds public="1" set="null">
			<c path="lime.math.Rectangle"/>
			<haxe_doc>* The desktop area represented by this display, with the upper-leftmost display at 0,0</haxe_doc>
		</bounds>
		<currentMode public="1" set="null">
			<c path="lime.system.DisplayMode"/>
			<haxe_doc>* The current display mode</haxe_doc>
		</currentMode>
		<id public="1" set="null"><x path="Int"/></id>
		<dpi public="1" set="null">
			<x path="Float"/>
			<haxe_doc>* Pixel density of the display</haxe_doc>
		</dpi>
		<name public="1" set="null">
			<c path="String"/>
			<haxe_doc>* The name of the device, such as "Samsung SyncMaster P2350", "iPhone 6", "Oculus Rift DK2", etc.</haxe_doc>
		</name>
		<supportedModes public="1" set="null">
			<c path="Array"><c path="lime.system.DisplayMode"/></c>
			<haxe_doc>* All of the display modes supported by this device</haxe_doc>
		</supportedModes>
		<new set="method" line="43">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.system.DisplayMode" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/DisplayMode.hx">
		<height public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* vertical resolution</haxe_doc>
		</height>
		<pixelFormat public="1" set="null">
			<x path="lime.graphics.PixelFormat"/>
			<haxe_doc>* pixel format</haxe_doc>
		</pixelFormat>
		<refreshRate public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* refresh rate in Hz</haxe_doc>
		</refreshRate>
		<width public="1" set="null">
			<x path="Int"/>
			<haxe_doc>* horizontal resolution</haxe_doc>
		</width>
		<new set="method" line="36">
			<f a="width:height:refreshRate:pixelFormat">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.graphics.PixelFormat"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system.Endian" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Endian.hx">
		<LITTLE_ENDIAN/>
		<BIG_ENDIAN/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.system.Locale" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Locale.hx">
		<from><icast><c path="String"/></icast></from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<impl><class path="lime.system._Locale.Locale_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Locale.hx" private="1" module="lime.system.Locale">
	<currentLocale public="1" get="accessor" set="accessor" static="1">
		<x path="lime.system.Locale"/>
		<meta><m n=":isVar"/></meta>
	</currentLocale>
	<systemLocale public="1" get="accessor" set="null" static="1"><x path="lime.system.Locale"/></systemLocale>
	<__systemLocale static="1"><x path="lime.system.Locale"/></__systemLocale>
	<language public="1" get="accessor" set="null" static="1">
		<c path="String"/>
		<meta><m n=":impl"/></meta>
	</language>
	<region public="1" get="accessor" set="null" static="1">
		<c path="String"/>
		<meta><m n=":impl"/></meta>
	</region>
	<_new public="1" set="method" line="24" static="1">
		<f a="value">
			<c path="String"/>
			<x path="lime.system.Locale"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<equals set="method" line="31" static="1">
		<f a="a:b">
			<x path="lime.system.Locale"/>
			<x path="lime.system.Locale"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<__init set="method" line="64" static="1">
		<f a=""><x path="Void"/></f>
		<meta><m n=":has_untyped"/></meta>
	</__init>
	<get_language set="method" line="121" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_language>
	<get_region set="method" line="151" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_region>
	<get_currentLocale set="method" line="199" static="1"><f a=""><x path="lime.system.Locale"/></f></get_currentLocale>
	<set_currentLocale set="method" line="208" static="1"><f a="value">
	<x path="lime.system.Locale"/>
	<x path="lime.system.Locale"/>
</f></set_currentLocale>
	<get_systemLocale set="method" line="217" static="1"><f a=""><x path="lime.system.Locale"/></f></get_systemLocale>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.system._Locale.Locale_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Locale.hx" private="1" module="lime.system.Locale">
		<currentLocale public="1" get="accessor" set="accessor" static="1">
			<x path="lime.system.Locale"/>
			<meta><m n=":isVar"/></meta>
		</currentLocale>
		<systemLocale public="1" get="accessor" set="null" static="1"><x path="lime.system.Locale"/></systemLocale>
		<__systemLocale static="1"><x path="lime.system.Locale"/></__systemLocale>
		<language public="1" get="accessor" set="null" static="1">
			<c path="String"/>
			<meta><m n=":impl"/></meta>
		</language>
		<region public="1" get="accessor" set="null" static="1">
			<c path="String"/>
			<meta><m n=":impl"/></meta>
		</region>
		<_new public="1" set="method" line="24" static="1">
			<f a="value">
				<c path="String"/>
				<x path="lime.system.Locale"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<equals set="method" line="31" static="1">
			<f a="a:b">
				<x path="lime.system.Locale"/>
				<x path="lime.system.Locale"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<__init set="method" line="64" static="1">
			<f a=""><x path="Void"/></f>
			<meta><m n=":has_untyped"/></meta>
		</__init>
		<get_language set="method" line="121" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_language>
		<get_region set="method" line="151" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_region>
		<get_currentLocale set="method" line="199" static="1"><f a=""><x path="lime.system.Locale"/></f></get_currentLocale>
		<set_currentLocale set="method" line="208" static="1"><f a="value">
	<x path="lime.system.Locale"/>
	<x path="lime.system.Locale"/>
</f></set_currentLocale>
		<get_systemLocale set="method" line="217" static="1"><f a=""><x path="lime.system.Locale"/></f></get_systemLocale>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.system.Sensor" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/Sensor.hx">
		<sensorByID expr="new Map&lt;Int,Sensor&gt;()" line="15" static="1">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.system.Sensor"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Sensor>()]]></e></m></meta>
		</sensorByID>
		<sensors expr="new Array&lt;Sensor&gt;()" line="16" static="1">
			<c path="Array"><c path="lime.system.Sensor"/></c>
			<meta><m n=":value"><e><![CDATA[new Array<Sensor>()]]></e></m></meta>
		</sensors>
		<getSensors public="1" set="method" line="31" static="1">
			<f a="?type" v="null">
				<e path="lime.system.SensorType"/>
				<c path="Array"><c path="lime.system.Sensor"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</getSensors>
		<registerSensor set="method" line="58" static="1"><f a="type:id">
	<e path="lime.system.SensorType"/>
	<x path="Int"/>
	<c path="lime.system.Sensor"/>
</f></registerSensor>
		<id public="1"><x path="Int"/></id>
		<onUpdate public="1" expr="new Event&lt;Float -&gt; Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Float_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Float>()]]></e></m></meta>
		</onUpdate>
		<type public="1"><e path="lime.system.SensorType"/></type>
		<new set="method" line="23">
			<f a="type:id">
				<e path="lime.system.SensorType"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system.SensorType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/SensorType.hx">
		<ACCELEROMETER/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.system.System" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/System.hx">
		<allowScreenTimeout public="1" get="accessor" set="accessor" static="1"><x path="Bool"/></allowScreenTimeout>
		<applicationDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></applicationDirectory>
		<applicationStorageDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></applicationStorageDirectory>
		<desktopDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></desktopDirectory>
		<deviceModel public="1" get="accessor" set="null" static="1"><c path="String"/></deviceModel>
		<deviceVendor public="1" get="accessor" set="null" static="1"><c path="String"/></deviceVendor>
		<disableCFFI public="1" static="1"><x path="Bool"/></disableCFFI>
		<documentsDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></documentsDirectory>
		<endianness public="1" get="accessor" set="null" static="1"><e path="lime.system.Endian"/></endianness>
		<fontsDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></fontsDirectory>
		<numDisplays public="1" get="accessor" set="null" static="1"><x path="Int"/></numDisplays>
		<platformLabel public="1" get="accessor" set="null" static="1"><c path="String"/></platformLabel>
		<platformName public="1" get="accessor" set="null" static="1"><c path="String"/></platformName>
		<platformVersion public="1" get="accessor" set="null" static="1"><c path="String"/></platformVersion>
		<userDirectory public="1" get="accessor" set="null" static="1"><c path="String"/></userDirectory>
		<__applicationDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__applicationDirectory>
		<__applicationEntryPoint static="1">
			<t path="Map">
				<c path="String"/>
				<x path="haxe.Function"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</__applicationEntryPoint>
		<__applicationStorageDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__applicationStorageDirectory>
		<__desktopDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__desktopDirectory>
		<__deviceModel static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__deviceModel>
		<__deviceVendor static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__deviceVendor>
		<__directories expr="new Map&lt;SystemDirectory,String&gt;()" line="79" static="1">
			<x path="haxe.ds.Map">
				<x path="lime.system._System.SystemDirectory"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<SystemDirectory,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</__directories>
		<__documentsDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__documentsDirectory>
		<__endianness static="1">
			<e path="lime.system.Endian"/>
			<meta><m n=":noCompletion"/></meta>
		</__endianness>
		<__fontsDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontsDirectory>
		<__platformLabel static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__platformLabel>
		<__platformName static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__platformName>
		<__platformVersion static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__platformVersion>
		<__userDirectory static="1">
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__userDirectory>
		<embed public="1" set="method" line="91" static="1">
			<f a="projectName:element:?width:?height:?config" v="::null:null:null">
				<c path="String"/>
				<d/>
				<x path="Int"/>
				<x path="Int"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ config : null, height : null, width : null }</e></m>
				<m n=":keep"/>
				<m n=":expose"><e>"lime.embed"</e></m>
			</meta>
		</embed>
		<getDisplay public="1" set="method" line="189" static="1"><f a="id">
	<x path="Int"/>
	<c path="lime.system.Display"/>
</f></getDisplay>
		<getTimer public="1" set="method" line="279" static="1"><f a=""><x path="Int"/></f></getTimer>
		<openFile public="1" set="method" line="313" static="1"><f a="path">
	<c path="String"/>
	<x path="Void"/>
</f></openFile>
		<openURL public="1" set="method" line="353" static="1">
			<f a="url:?target" v=":&quot;_blank&quot;">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ target : "_blank" }</e></m></meta>
		</openURL>
		<__copyMissingFields set="method" line="385" static="1">
			<f a="target:source">
				<d/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__copyMissingFields>
		<__getDirectory set="method" line="402" static="1">
			<f a="type">
				<x path="lime.system._System.SystemDirectory"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__getDirectory>
		<__parseBool get="inline" set="null" line="580" static="1">
			<f a="value">
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__parseBool>
		<__registerEntryPoint set="method" line="587" static="1">
			<f a="projectName:entryPoint">
				<c path="String"/>
				<x path="haxe.Function"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__registerEntryPoint>
		<__runProcess set="method" line="600" static="1">
			<f a="command:?args" v=":null">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
				<c path="String"/>
			</f>
			<meta>
				<m n=":value"><e>{ args : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</__runProcess>
		<get_allowScreenTimeout set="method" line="626" static="1"><f a=""><x path="Bool"/></f></get_allowScreenTimeout>
		<set_allowScreenTimeout set="method" line="637" static="1"><f a="value">
	<x path="Bool"/>
	<x path="Bool"/>
</f></set_allowScreenTimeout>
		<get_applicationDirectory set="method" line="648" static="1"><f a=""><c path="String"/></f></get_applicationDirectory>
		<get_applicationStorageDirectory set="method" line="661" static="1"><f a=""><c path="String"/></f></get_applicationStorageDirectory>
		<get_deviceModel set="method" line="674" static="1"><f a=""><c path="String"/></f></get_deviceModel>
		<get_deviceVendor set="method" line="709" static="1"><f a=""><c path="String"/></f></get_deviceVendor>
		<get_desktopDirectory set="method" line="737" static="1"><f a=""><c path="String"/></f></get_desktopDirectory>
		<get_documentsDirectory set="method" line="750" static="1"><f a=""><c path="String"/></f></get_documentsDirectory>
		<get_endianness set="method" line="763" static="1"><f a=""><e path="lime.system.Endian"/></f></get_endianness>
		<get_fontsDirectory set="method" line="786" static="1"><f a=""><c path="String"/></f></get_fontsDirectory>
		<get_numDisplays set="method" line="799" static="1"><f a=""><x path="Int"/></f></get_numDisplays>
		<get_platformLabel set="method" line="810" static="1"><f a=""><c path="String"/></f></get_platformLabel>
		<get_platformName set="method" line="837" static="1"><f a=""><c path="String"/></f></get_platformName>
		<get_platformVersion set="method" line="878" static="1"><f a=""><c path="String"/></f></get_platformVersion>
		<get_userDirectory set="method" line="909" static="1"><f a=""><c path="String"/></f></get_userDirectory>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.system.Display</e></m>
			<m n=":access"><e>lime.system.DisplayMode</e></m>
		</meta>
	</class>
	<abstract path="lime.system._System.SystemDirectory" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/System.hx" private="1" module="lime.system.System">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.system._System.SystemDirectory_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/System.hx" private="1" module="lime.system.System" extern="1">
	<APPLICATION public="1" get="inline" set="null" expr="cast 0" line="927" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<APPLICATION_STORAGE public="1" get="inline" set="null" expr="cast 1" line="928" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION_STORAGE>
	<DESKTOP public="1" get="inline" set="null" expr="cast 2" line="929" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DESKTOP>
	<DOCUMENTS public="1" get="inline" set="null" expr="cast 3" line="930" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOCUMENTS>
	<FONTS public="1" get="inline" set="null" expr="cast 4" line="931" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONTS>
	<USER public="1" get="inline" set="null" expr="cast 5" line="932" static="1">
		<x path="lime.system._System.SystemDirectory"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</USER>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.system._System.SystemDirectory_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/System.hx" private="1" module="lime.system.System" extern="1">
		<APPLICATION public="1" get="inline" set="null" expr="cast 0" line="927" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<APPLICATION_STORAGE public="1" get="inline" set="null" expr="cast 1" line="928" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION_STORAGE>
		<DESKTOP public="1" get="inline" set="null" expr="cast 2" line="929" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DESKTOP>
		<DOCUMENTS public="1" get="inline" set="null" expr="cast 3" line="930" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOCUMENTS>
		<FONTS public="1" get="inline" set="null" expr="cast 4" line="931" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONTS>
		<USER public="1" get="inline" set="null" expr="cast 5" line="932" static="1">
			<x path="lime.system._System.SystemDirectory"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</USER>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.system.ThreadPool" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/ThreadPool.hx">
		<currentThreads public="1" set="null"><x path="Int"/></currentThreads>
		<doWork public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app._Event_haxe_Function_Void"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</doWork>
		<maxThreads public="1"><x path="Int"/></maxThreads>
		<minThreads public="1"><x path="Int"/></minThreads>
		<onComplete public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app._Event_haxe_Function_Void"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onComplete>
		<onError public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app._Event_haxe_Function_Void"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onError>
		<onProgress public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app._Event_haxe_Function_Void"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onProgress>
		<onRun public="1" expr="new Event&lt;Function&gt;()">
			<c path="lime.app._Event_haxe_Function_Void"><f a="">
	<x path="haxe.Function"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Function>()]]></e></m></meta>
		</onRun>
		<queue public="1" set="method" line="76">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</queue>
		<sendComplete public="1" set="method" line="116">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendComplete>
		<sendError public="1" set="method" line="132">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendError>
		<sendProgress public="1" set="method" line="148">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ state : null }</e></m></meta>
		</sendProgress>
		<runWork set="method" line="164">
			<f a="?state" v="null">
				<d/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ state : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</runWork>
		<new public="1" set="method" line="43">
			<f a="?minThreads:?maxThreads" v="0:1">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ maxThreads : 1, minThreads : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<enum path="lime.system._ThreadPool.ThreadPoolMessageType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/ThreadPool.hx" private="1" module="lime.system.ThreadPool">
		<COMPLETE/>
		<ERROR/>
		<EXIT/>
		<PROGRESS/>
		<WORK/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<class path="lime.system._ThreadPool.ThreadPoolMessage" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/system/ThreadPool.hx" private="1" module="lime.system.ThreadPool">
		<state public="1"><d/></state>
		<type public="1"><e path="lime.system._ThreadPool.ThreadPoolMessageType"/></type>
		<new public="1" set="method" line="290"><f a="type:state">
	<e path="lime.system._ThreadPool.ThreadPoolMessageType"/>
	<d/>
	<x path="Void"/>
</f></new>
	</class>
	<class path="lime.text.Font" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Font.hx">
		<fromBytes public="1" set="method" line="103" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.text.Font"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="119" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="135" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="142" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromFile>
		<loadFromName public="1" set="method" line="162" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFromName>
		<__measureFontNode set="method" line="592" static="1"><f a="fontFamily">
	<c path="String"/>
	<c path="js.html.SpanElement"/>
</f></__measureFontNode>
		<ascender public="1" set="null"><x path="Int"/></ascender>
		<descender public="1" set="null"><x path="Int"/></descender>
		<height public="1" set="null"><x path="Int"/></height>
		<name public="1" set="null"><c path="String"/></name>
		<numGlyphs public="1" set="null"><x path="Int"/></numGlyphs>
		<src public="1"><d/></src>
		<underlinePosition public="1" set="null"><x path="Int"/></underlinePosition>
		<underlineThickness public="1" set="null"><x path="Int"/></underlineThickness>
		<unitsPerEM public="1" set="null"><x path="Int"/></unitsPerEM>
		<__fontID>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontID>
		<__fontPath>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__fontPath>
		<decompose public="1" set="method" line="86"><f a=""><t path="lime.text.NativeFontData"/></f></decompose>
		<getGlyph public="1" set="method" line="178"><f a="character">
	<c path="String"/>
	<x path="lime.text.Glyph"/>
</f></getGlyph>
		<getGlyphs public="1" set="method" line="189">
			<f a="?characters" v="&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`&apos;\&quot;/\\&amp;*()[]{}&lt;&gt;|:;_-+=?,. &quot;">
				<c path="String"/>
				<c path="Array"><x path="lime.text.Glyph"/></c>
			</f>
			<meta><m n=":value"><e><![CDATA[{ characters : "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^`'\"/\\&*()[]{}<>|:;_-+=?,. " }]]></e></m></meta>
		</getGlyphs>
		<getGlyphMetrics public="1" set="method" line="201"><f a="glyph">
	<x path="lime.text.Glyph"/>
	<c path="lime.text.GlyphMetrics"/>
</f></getGlyphMetrics>
		<renderGlyph public="1" set="method" line="220"><f a="glyph:fontSize">
	<x path="lime.text.Glyph"/>
	<x path="Int"/>
	<c path="lime.graphics.Image"/>
</f></renderGlyph>
		<renderGlyphs public="1" set="method" line="258"><f a="glyphs:fontSize">
	<c path="Array"><x path="lime.text.Glyph"/></c>
	<x path="Int"/>
	<t path="Map">
		<x path="lime.text.Glyph"/>
		<c path="lime.graphics.Image"/>
	</t>
</f></renderGlyphs>
		<__copyFrom set="method" line="429">
			<f a="other">
				<c path="lime.text.Font"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__copyFrom>
		<__fromBytes set="method" line="455">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromBytes>
		<__fromFile set="method" line="470">
			<f a="path">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromFile>
		<__initializeSource set="method" line="485">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__initializeSource>
		<__loadFromName set="method" line="510">
			<f a="name">
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.text.Font"/></c>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</__loadFromName>
		<__setSize set="method" line="619">
			<f a="size">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__setSize>
		<new public="1" set="method" line="61">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ name : null }</e></m></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.text.Glyph</e></m>
		</meta>
	</class>
	<typedef path="lime.text.NativeFontData" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Font.hx" module="lime.text.Font"><a>
	<style_name><c path="String"/></style_name>
	<num_glyphs><x path="Int"/></num_glyphs>
	<kerning><c path="Array"><t path="lime.text.NativeKerningData"/></c></kerning>
	<is_italic><x path="Bool"/></is_italic>
	<is_fixed_width><x path="Bool"/></is_fixed_width>
	<is_bold><x path="Bool"/></is_bold>
	<height><x path="Int"/></height>
	<has_kerning><x path="Bool"/></has_kerning>
	<has_glyph_names><x path="Bool"/></has_glyph_names>
	<glyphs><c path="Array"><t path="lime.text.NativeGlyphData"/></c></glyphs>
	<family_name><c path="String"/></family_name>
	<em_size><x path="Int"/></em_size>
	<descend><x path="Int"/></descend>
	<ascend><x path="Int"/></ascend>
</a></typedef>
	<typedef path="lime.text.NativeGlyphData" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Font.hx" module="lime.text.Font"><a>
	<points><c path="Array"><x path="Int"/></c></points>
	<min_y><x path="Int"/></min_y>
	<min_x><x path="Int"/></min_x>
	<max_y><x path="Int"/></max_y>
	<max_x><x path="Int"/></max_x>
	<char_code><x path="Int"/></char_code>
	<advance><x path="Int"/></advance>
</a></typedef>
	<typedef path="lime.text.NativeKerningData" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Font.hx" module="lime.text.Font"><a>
	<y><x path="Int"/></y>
	<x><x path="Int"/></x>
	<right_glyph><x path="Int"/></right_glyph>
	<left_glyph><x path="Int"/></left_glyph>
</a></typedef>
	<abstract path="lime.text.Glyph" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Glyph.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.text._Glyph.Glyph_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Glyph.hx" private="1" module="lime.text.Glyph">
	<_new public="1" set="method" line="7" static="1">
		<f a="i">
			<x path="Int"/>
			<x path="lime.text.Glyph"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.text._Glyph.Glyph_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/Glyph.hx" private="1" module="lime.text.Glyph">
		<_new public="1" set="method" line="7" static="1">
			<f a="i">
				<x path="Int"/>
				<x path="lime.text.Glyph"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.text.GlyphMetrics" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/GlyphMetrics.hx">
		<advance public="1"><c path="lime.math.Vector2"/></advance>
		<height public="1"><x path="Int"/></height>
		<horizontalBearing public="1"><c path="lime.math.Vector2"/></horizontalBearing>
		<verticalBearing public="1"><c path="lime.math.Vector2"/></verticalBearing>
		<new public="1" set="method" line="21"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.text.UTF8String" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/UTF8String.hx">
		<from>
			<icast><c path="String"/></icast>
			<icast field="fromDynamic"><d/></icast>
		</from>
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<impl><class path="lime.text._UTF8String.UTF8String_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/UTF8String.hx" private="1" module="lime.text.UTF8String">
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
		<haxe_doc>The number of characters in `this` String.</haxe_doc>
	</length>
	<_new public="1" set="method" line="26" static="1">
		<f a="str">
			<c path="String"/>
			<x path="lime.text.UTF8String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
		<haxe_doc>Creates a copy from a given String.</haxe_doc>
	</_new>
	<charAt public="1" set="method" line="39" static="1">
		<f a="this:index">
			<c path="String"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the character at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, the empty String `""`
		is returned.</haxe_doc>
	</charAt>
	<charCodeAt public="1" set="method" line="55" static="1">
		<f a="this:index">
			<c path="String"/>
			<x path="Int"/>
			<x path="Null"><x path="Int"/></x>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the character code at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, `null` is returned.

		To obtain the character code of a single character, `"x".code` can be
		used instead to inline the character code at compile time. Note that
		this only works on String literals of length 1.</haxe_doc>
	</charCodeAt>
	<fromCharCode public="1" set="method" line="69" static="1">
		<f a="code">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<haxe_doc>Returns the String corresponding to the character code `code`.

		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
	</fromCharCode>
	<fromCharCodes public="1" set="method" line="82" static="1">
		<f a="codes">
			<c path="Array"><x path="Int"/></c>
			<c path="String"/>
		</f>
		<haxe_doc>Returns the string corresponding to the array of character codes `codes`.

		If #unifill is defined, these codes will be treated as UTF-8 code points,
		otherwise it will default to using String.fromCharCode() for each character</haxe_doc>
	</fromCharCodes>
	<indexOf public="1" set="method" line="108" static="1">
		<f a="this:str:?startIndex" v="::0">
			<c path="String"/>
			<c path="String"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":value"><e>{ startIndex : 0 }</e></m>
			<m n=":impl"/>
		</meta>
		<haxe_doc>Returns the position of the leftmost occurence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
	</indexOf>
	<lastIndexOf public="1" set="method" line="126" static="1">
		<f a="this:str:?startIndex">
			<c path="String"/>
			<c path="String"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the position of the rightmost occurence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
	</lastIndexOf>
	<split public="1" set="method" line="153" static="1">
		<f a="this:delimiter">
			<c path="String"/>
			<c path="String"/>
			<c path="Array"><c path="String"/></c>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Splits `this` String at each occurence of `delimiter`.

		If `this` String is the empty String `""`, the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.

		If `delimiter` is the empty String `""`, `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.

		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.

		If `delimiter` is null, the result is unspecified.

		Otherwise, `this` String is split into parts at each occurence of
		`delimiter`. If `this` String starts (or ends) with `delimiter`, the
		result `Array` contains a leading (or trailing) empty String `""` element.
		Two subsequent delimiters also result in an empty String `""` element.</haxe_doc>
	</split>
	<substr public="1" set="method" line="175" static="1">
		<f a="this:pos:?len">
			<c path="String"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.

		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.

		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.

		If `len` is negative, the result is unspecified.</haxe_doc>
	</substr>
	<substring public="1" set="method" line="201" static="1">
		<f a="this:startIndex:?endIndex">
			<c path="String"/>
			<x path="Int"/>
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the part of `this` String from `startIndex` to but not including `endIndex`.

		If `startIndex` or `endIndex` are negative, 0 is used instead.

		If `startIndex` exceeds `endIndex`, they are swapped.

		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.

		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String `""` is returned.</haxe_doc>
	</substring>
	<toLowerCase public="1" set="method" line="213" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a String where all characters of `this` String are lower case.

		Affects the characters `A-Z`. Other characters remain unchanged.</haxe_doc>
	</toLowerCase>
	<toString public="1" set="method" line="246" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns the String itself.</haxe_doc>
	</toString>
	<toUpperCase public="1" set="method" line="258" static="1">
		<f a="this">
			<c path="String"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
		<haxe_doc>Returns a String where all characters of `this` String are upper case.

		Affects the characters `a-z`. Other characters remain unchanged.</haxe_doc>
	</toUpperCase>
	<equals set="method" line="288" static="1">
		<f a="a:b">
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e>A == B</e></m></meta>
	</equals>
	<lt set="method" line="296" static="1">
		<f a="a:b">
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<gt set="method" line="305" static="1">
		<f a="a:b">
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<lteq set="method" line="314" static="1">
		<f a="a:b">
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lteq>
	<gteq set="method" line="323" static="1">
		<f a="a:b">
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gteq>
	<plus set="method" line="332" static="1">
		<f a="a:b">
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
			<x path="lime.text.UTF8String"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<fromDynamic set="method" line="346" static="1">
		<f a="value">
			<d/>
			<x path="lime.text.UTF8String"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromDynamic>
	<get_length set="method" line="360" static="1">
		<f a="this">
			<c path="String"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_length>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.text._UTF8String.UTF8String_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/UTF8String.hx" private="1" module="lime.text.UTF8String">
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
			<haxe_doc>The number of characters in `this` String.</haxe_doc>
		</length>
		<_new public="1" set="method" line="26" static="1">
			<f a="str">
				<c path="String"/>
				<x path="lime.text.UTF8String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
			<haxe_doc>Creates a copy from a given String.</haxe_doc>
		</_new>
		<charAt public="1" set="method" line="39" static="1">
			<f a="this:index">
				<c path="String"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the character at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, the empty String `""`
		is returned.</haxe_doc>
		</charAt>
		<charCodeAt public="1" set="method" line="55" static="1">
			<f a="this:index">
				<c path="String"/>
				<x path="Int"/>
				<x path="Null"><x path="Int"/></x>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the character code at position `index` of `this` String.

		If `index` is negative or exceeds `this.length`, `null` is returned.

		To obtain the character code of a single character, `"x".code` can be
		used instead to inline the character code at compile time. Note that
		this only works on String literals of length 1.</haxe_doc>
		</charCodeAt>
		<fromCharCode public="1" set="method" line="69" static="1">
			<f a="code">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the String corresponding to the character code `code`.

		If `code` is negative or has another invalid value, the result is
		unspecified.</haxe_doc>
		</fromCharCode>
		<fromCharCodes public="1" set="method" line="82" static="1">
			<f a="codes">
				<c path="Array"><x path="Int"/></c>
				<c path="String"/>
			</f>
			<haxe_doc>Returns the string corresponding to the array of character codes `codes`.

		If #unifill is defined, these codes will be treated as UTF-8 code points,
		otherwise it will default to using String.fromCharCode() for each character</haxe_doc>
		</fromCharCodes>
		<indexOf public="1" set="method" line="108" static="1">
			<f a="this:str:?startIndex" v="::0">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":value"><e>{ startIndex : 0 }</e></m>
				<m n=":impl"/>
			</meta>
			<haxe_doc>Returns the position of the leftmost occurence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String starting from `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</indexOf>
		<lastIndexOf public="1" set="method" line="126" static="1">
			<f a="this:str:?startIndex">
				<c path="String"/>
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the position of the rightmost occurence of `str` within `this`
		String.

		If `startIndex` is given, the search is performed within the substring
		of `this` String from 0 to `startIndex`. Otherwise the search is
		performed within `this` String. In either case, the returned position
		is relative to the beginning of `this` String.

		If `str` cannot be found, -1 is returned.</haxe_doc>
		</lastIndexOf>
		<split public="1" set="method" line="153" static="1">
			<f a="this:delimiter">
				<c path="String"/>
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Splits `this` String at each occurence of `delimiter`.

		If `this` String is the empty String `""`, the result is not consistent
		across targets and may either be `[]` (on Js, Cpp) or `[""]`.

		If `delimiter` is the empty String `""`, `this` String is split into an
		Array of `this.length` elements, where the elements correspond to the
		characters of `this` String.

		If `delimiter` is not found within `this` String, the result is an Array
		with one element, which equals `this` String.

		If `delimiter` is null, the result is unspecified.

		Otherwise, `this` String is split into parts at each occurence of
		`delimiter`. If `this` String starts (or ends) with `delimiter`, the
		result `Array` contains a leading (or trailing) empty String `""` element.
		Two subsequent delimiters also result in an empty String `""` element.</haxe_doc>
		</split>
		<substr public="1" set="method" line="175" static="1">
			<f a="this:pos:?len">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns `len` characters of `this` String, starting at position `pos`.

		If `len` is omitted, all characters from position `pos` to the end of
		`this` String are included.

		If `pos` is negative, its value is calculated from the end of `this`
		String by `this.length + pos`. If this yields a negative value, 0 is
		used instead.

		If the calculated position + `len` exceeds `this.length`, the characters
		from that position to the end of `this` String are returned.

		If `len` is negative, the result is unspecified.</haxe_doc>
		</substr>
		<substring public="1" set="method" line="201" static="1">
			<f a="this:startIndex:?endIndex">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the part of `this` String from `startIndex` to but not including `endIndex`.

		If `startIndex` or `endIndex` are negative, 0 is used instead.

		If `startIndex` exceeds `endIndex`, they are swapped.

		If the (possibly swapped) `endIndex` is omitted or exceeds
		`this.length`, `this.length` is used instead.

		If the (possibly swapped) `startIndex` exceeds `this.length`, the empty
		String `""` is returned.</haxe_doc>
		</substring>
		<toLowerCase public="1" set="method" line="213" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a String where all characters of `this` String are lower case.

		Affects the characters `A-Z`. Other characters remain unchanged.</haxe_doc>
		</toLowerCase>
		<toString public="1" set="method" line="246" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns the String itself.</haxe_doc>
		</toString>
		<toUpperCase public="1" set="method" line="258" static="1">
			<f a="this">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
			<haxe_doc>Returns a String where all characters of `this` String are upper case.

		Affects the characters `a-z`. Other characters remain unchanged.</haxe_doc>
		</toUpperCase>
		<equals set="method" line="288" static="1">
			<f a="a:b">
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e>A == B</e></m></meta>
		</equals>
		<lt set="method" line="296" static="1">
			<f a="a:b">
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<gt set="method" line="305" static="1">
			<f a="a:b">
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<lteq set="method" line="314" static="1">
			<f a="a:b">
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lteq>
		<gteq set="method" line="323" static="1">
			<f a="a:b">
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gteq>
		<plus set="method" line="332" static="1">
			<f a="a:b">
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
				<x path="lime.text.UTF8String"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<fromDynamic set="method" line="346" static="1">
			<f a="value">
				<d/>
				<x path="lime.text.UTF8String"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromDynamic>
		<get_length set="method" line="360" static="1">
			<f a="this">
				<c path="String"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_length>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.text._UTF8String.Utf8Ext" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/text/UTF8String.hx" private="1" module="lime.text.UTF8String">
		<fillUpperToLowerMap public="1" set="method" line="373" static="1"><f a="map">
	<t path="Map">
		<x path="Int"/>
		<x path="Int"/>
	</t>
	<x path="Void"/>
</f></fillUpperToLowerMap>
		<fillLowerToUpperMap public="1" set="method" line="535" static="1"><f a="map">
	<t path="Map">
		<x path="Int"/>
		<x path="Int"/>
	</t>
	<x path="Void"/>
</f></fillLowerToUpperMap>
	</class>
	<class path="lime.ui.FileDialog" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/FileDialog.hx">
		<onCancel public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onCancel>
		<onOpen public="1" expr="new Event&lt;Resource&gt;()">
			<c path="lime.app._Event_lime_utils_Resource_Void"><f a="">
	<x path="lime.utils.Resource"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Resource>()]]></e></m></meta>
		</onOpen>
		<onSave public="1" expr="new Event&lt;String&gt;()">
			<c path="lime.app._Event_String_Void"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onSave>
		<onSelect public="1" expr="new Event&lt;String&gt;()">
			<c path="lime.app._Event_String_Void"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onSelect>
		<onSelectMultiple public="1" expr="new Event&lt;Array&lt;String&gt;&gt;()">
			<c path="lime.app._Event_Array_String__Void"><f a="">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Array<String>>()]]></e></m></meta>
		</onSelectMultiple>
		<browse public="1" set="method" line="47">
			<f a="?type:?filter:?defaultPath:?title" v="null:null:null:null">
				<e path="lime.ui.FileDialogType"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ title : null, defaultPath : null, filter : null, type : null }</e></m></meta>
		</browse>
		<open public="1" set="method" line="152">
			<f a="?filter:?defaultPath:?title" v="null:null:null">
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ title : null, defaultPath : null, filter : null }</e></m></meta>
		</open>
		<save public="1" set="method" line="200">
			<f a="data:?filter:?defaultPath:?title" v=":null:null:null">
				<x path="lime.utils.Resource"/>
				<c path="String"/>
				<c path="String"/>
				<c path="String"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":value"><e>{ title : null, defaultPath : null, filter : null }</e></m>
			</meta>
		</save>
		<new public="1" set="method" line="40"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.graphics.Image</e></m>
		</meta>
	</class>
	<enum path="lime.ui.FileDialogType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/FileDialogType.hx">
		<OPEN/>
		<OPEN_MULTIPLE/>
		<SAVE/>
		<OPEN_DIRECTORY/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<class path="lime.ui.Gamepad" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Gamepad.hx">
		<devices public="1" expr="new Map&lt;Int,Gamepad&gt;()" line="19" static="1">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.ui.Gamepad"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Gamepad>()]]></e></m></meta>
		</devices>
		<onConnect public="1" expr="new Event&lt;Gamepad&gt;()" line="20" static="1">
			<c path="lime.app._Event_lime_ui_Gamepad_Void"><f a="">
	<c path="lime.ui.Gamepad"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Gamepad>()]]></e></m></meta>
		</onConnect>
		<addMappings public="1" set="method" line="40" static="1"><f a="mappings">
	<c path="Array"><c path="String"/></c>
	<x path="Void"/>
</f></addMappings>
		<__connect set="method" line="54" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__connect>
		<__disconnect set="method" line="67" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__disconnect>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<guid public="1" get="accessor" set="null"><c path="String"/></guid>
		<id public="1" set="null"><x path="Int"/></id>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<onAxisMove public="1" expr="new Event&lt;GamepadAxis -&gt; Float&gt;()">
			<c path="lime.app._Event_lime_ui_GamepadAxis_Float_Void"><f a=":">
	<x path="lime.ui.GamepadAxis"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadAxis -> Float>()]]></e></m></meta>
		</onAxisMove>
		<onButtonDown public="1" expr="new Event&lt;GamepadButton&gt;()">
			<c path="lime.app._Event_lime_ui_GamepadButton_Void"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadButton>()]]></e></m></meta>
		</onButtonDown>
		<onButtonUp public="1" expr="new Event&lt;GamepadButton&gt;()">
			<c path="lime.app._Event_lime_ui_GamepadButton_Void"><f a="">
	<x path="lime.ui.GamepadButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<GamepadButton>()]]></e></m></meta>
		</onButtonUp>
		<onDisconnect public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDisconnect>
		<get_guid get="inline" set="null" line="84">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_guid>
		<get_name get="inline" set="null" line="102">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<new public="1" set="method" line="32"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.Joystick</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.GamepadAxis" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/GamepadAxis.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._GamepadAxis.GamepadAxis_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/GamepadAxis.hx" private="1" module="lime.ui.GamepadAxis">
	<LEFT_X public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_X>
	<LEFT_Y public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_Y>
	<RIGHT_X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_X>
	<RIGHT_Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_Y>
	<TRIGGER_LEFT public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIGGER_LEFT>
	<TRIGGER_RIGHT public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
		<x path="lime.ui.GamepadAxis"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TRIGGER_RIGHT>
	<toString public="1" get="inline" set="null" line="15" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._GamepadAxis.GamepadAxis_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/GamepadAxis.hx" private="1" module="lime.ui.GamepadAxis">
		<LEFT_X public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_X>
		<LEFT_Y public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_Y>
		<RIGHT_X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_X>
		<RIGHT_Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_Y>
		<TRIGGER_LEFT public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIGGER_LEFT>
		<TRIGGER_RIGHT public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
			<x path="lime.ui.GamepadAxis"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TRIGGER_RIGHT>
		<toString public="1" get="inline" set="null" line="15" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<abstract path="lime.ui.GamepadButton" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/GamepadButton.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._GamepadButton.GamepadButton_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/GamepadButton.hx" private="1" module="lime.ui.GamepadButton">
	<A public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<BACK public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACK>
	<GUIDE public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GUIDE>
	<START public="1" get="inline" set="null" expr="cast 6" line="13" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</START>
	<LEFT_STICK public="1" get="inline" set="null" expr="cast 7" line="14" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_STICK>
	<RIGHT_STICK public="1" get="inline" set="null" expr="cast 8" line="15" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_STICK>
	<LEFT_SHOULDER public="1" get="inline" set="null" expr="cast 9" line="16" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHOULDER>
	<RIGHT_SHOULDER public="1" get="inline" set="null" expr="cast 10" line="17" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHOULDER>
	<DPAD_UP public="1" get="inline" set="null" expr="cast 11" line="18" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_UP>
	<DPAD_DOWN public="1" get="inline" set="null" expr="cast 12" line="19" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_DOWN>
	<DPAD_LEFT public="1" get="inline" set="null" expr="cast 13" line="20" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_LEFT>
	<DPAD_RIGHT public="1" get="inline" set="null" expr="cast 14" line="21" static="1">
		<x path="lime.ui.GamepadButton"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DPAD_RIGHT>
	<toString public="1" get="inline" set="null" line="24" static="1">
		<f a="this">
			<x path="Int"/>
			<c path="String"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._GamepadButton.GamepadButton_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/GamepadButton.hx" private="1" module="lime.ui.GamepadButton">
		<A public="1" get="inline" set="null" expr="cast 0" line="7" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 1" line="8" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<X public="1" get="inline" set="null" expr="cast 2" line="9" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 3" line="10" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<BACK public="1" get="inline" set="null" expr="cast 4" line="11" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACK>
		<GUIDE public="1" get="inline" set="null" expr="cast 5" line="12" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GUIDE>
		<START public="1" get="inline" set="null" expr="cast 6" line="13" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</START>
		<LEFT_STICK public="1" get="inline" set="null" expr="cast 7" line="14" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_STICK>
		<RIGHT_STICK public="1" get="inline" set="null" expr="cast 8" line="15" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_STICK>
		<LEFT_SHOULDER public="1" get="inline" set="null" expr="cast 9" line="16" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHOULDER>
		<RIGHT_SHOULDER public="1" get="inline" set="null" expr="cast 10" line="17" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHOULDER>
		<DPAD_UP public="1" get="inline" set="null" expr="cast 11" line="18" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_UP>
		<DPAD_DOWN public="1" get="inline" set="null" expr="cast 12" line="19" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_DOWN>
		<DPAD_LEFT public="1" get="inline" set="null" expr="cast 13" line="20" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_LEFT>
		<DPAD_RIGHT public="1" get="inline" set="null" expr="cast 14" line="21" static="1">
			<x path="lime.ui.GamepadButton"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DPAD_RIGHT>
		<toString public="1" get="inline" set="null" line="24" static="1">
			<f a="this">
				<x path="Int"/>
				<c path="String"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.ui.Haptic" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Haptic.hx">
		<vibrate public="1" set="method" line="24" static="1"><f a="period:duration">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></vibrate>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.ui.Joystick" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Joystick.hx">
		<devices public="1" expr="new Map&lt;Int,Joystick&gt;()" line="18" static="1">
			<x path="haxe.ds.Map">
				<x path="Int"/>
				<c path="lime.ui.Joystick"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<Int,Joystick>()]]></e></m></meta>
		</devices>
		<onConnect public="1" expr="new Event&lt;Joystick&gt;()" line="19" static="1">
			<c path="lime.app._Event_lime_ui_Joystick_Void"><f a="">
	<c path="lime.ui.Joystick"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Joystick>()]]></e></m></meta>
		</onConnect>
		<__connect set="method" line="45" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__connect>
		<__disconnect set="method" line="58" static="1">
			<f a="id">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__disconnect>
		<__getDeviceData set="method" line="69" static="1">
			<f a=""><c path="Array"><d/></c></f>
			<meta>
				<m n=":has_untyped"/>
				<m n=":noCompletion"/>
			</meta>
		</__getDeviceData>
		<connected public="1" set="null"><x path="Bool"/></connected>
		<guid public="1" get="accessor" set="null"><c path="String"/></guid>
		<id public="1" set="null"><x path="Int"/></id>
		<name public="1" get="accessor" set="null"><c path="String"/></name>
		<numAxes public="1" get="accessor" set="null"><x path="Int"/></numAxes>
		<numButtons public="1" get="accessor" set="null"><x path="Int"/></numButtons>
		<numHats public="1" get="accessor" set="null"><x path="Int"/></numHats>
		<numTrackballs public="1" get="accessor" set="null"><x path="Int"/></numTrackballs>
		<onAxisMove public="1" expr="new Event&lt;Int -&gt; Float&gt;()">
			<c path="lime.app._Event_Int_Float_Void"><f a=":">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Float>()]]></e></m></meta>
		</onAxisMove>
		<onButtonDown public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
		</onButtonDown>
		<onButtonUp public="1" expr="new Event&lt;Int&gt;()">
			<c path="lime.app._Event_Int_Void"><f a="">
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int>()]]></e></m></meta>
		</onButtonUp>
		<onDisconnect public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDisconnect>
		<onHatMove public="1" expr="new Event&lt;Int -&gt; JoystickHatPosition&gt;()">
			<c path="lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"><f a=":">
	<x path="Int"/>
	<x path="lime.ui.JoystickHatPosition"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> JoystickHatPosition>()]]></e></m></meta>
		</onHatMove>
		<onTrackballMove public="1" expr="new Event&lt;Int -&gt; Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Int_Float_Float_Void"><f a="::">
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Float -> Float>()]]></e></m></meta>
		</onTrackballMove>
		<get_guid get="inline" set="null" line="84">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_guid>
		<get_name get="inline" set="null" line="102">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_name>
		<get_numAxes get="inline" set="null" line="120">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numAxes>
		<get_numButtons get="inline" set="null" line="134">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numButtons>
		<get_numHats get="inline" set="null" line="148">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numHats>
		<get_numTrackballs get="inline" set="null" line="159">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_numTrackballs>
		<new public="1" set="method" line="37"><f a="id">
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.JoystickHatPosition" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/JoystickHatPosition.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/JoystickHatPosition.hx" private="1" module="lime.ui.JoystickHatPosition">
	<CENTER public="1" get="inline" set="null" expr="0x00" line="7" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x00</e></m></meta>
	</CENTER>
	<DOWN public="1" get="inline" set="null" expr="0x04" line="8" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x04</e></m></meta>
	</DOWN>
	<LEFT public="1" get="inline" set="null" expr="0x08" line="9" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x08</e></m></meta>
	</LEFT>
	<RIGHT public="1" get="inline" set="null" expr="0x02" line="10" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x02</e></m></meta>
	</RIGHT>
	<UP public="1" get="inline" set="null" expr="0x01" line="11" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>0x01</e></m></meta>
	</UP>
	<DOWN_LEFT public="1" get="inline" set="null" expr="(0x04 | 0x08)" line="13" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x04 | 0x08)</e></m></meta>
	</DOWN_LEFT>
	<DOWN_RIGHT public="1" get="inline" set="null" expr="(0x04 | 0x02)" line="14" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x04 | 0x02)</e></m></meta>
	</DOWN_RIGHT>
	<UP_LEFT public="1" get="inline" set="null" expr="(0x01 | 0x08)" line="15" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x01 | 0x08)</e></m></meta>
	</UP_LEFT>
	<UP_RIGHT public="1" get="inline" set="null" expr="(0x01 | 0x02)" line="16" static="1">
		<x path="lime.ui.JoystickHatPosition"/>
		<meta><m n=":value"><e>(0x01 | 0x02)</e></m></meta>
	</UP_RIGHT>
	<center public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</center>
	<down public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</down>
	<left public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</left>
	<right public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</right>
	<up public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</up>
	<_new public="1" set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<x path="lime.ui.JoystickHatPosition"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<get_center set="method" line="32" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_center>
	<set_center get="inline" set="null" line="39" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_center>
	<get_down set="method" line="52" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_down>
	<set_down get="inline" set="null" line="59" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_down>
	<get_left set="method" line="76" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_left>
	<set_left get="inline" set="null" line="83" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_left>
	<get_right set="method" line="100" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_right>
	<set_right get="inline" set="null" line="107" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_right>
	<get_up set="method" line="124" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_up>
	<set_up get="inline" set="null" line="131" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_up>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/JoystickHatPosition.hx" private="1" module="lime.ui.JoystickHatPosition">
		<CENTER public="1" get="inline" set="null" expr="0x00" line="7" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x00</e></m></meta>
		</CENTER>
		<DOWN public="1" get="inline" set="null" expr="0x04" line="8" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x04</e></m></meta>
		</DOWN>
		<LEFT public="1" get="inline" set="null" expr="0x08" line="9" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x08</e></m></meta>
		</LEFT>
		<RIGHT public="1" get="inline" set="null" expr="0x02" line="10" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x02</e></m></meta>
		</RIGHT>
		<UP public="1" get="inline" set="null" expr="0x01" line="11" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>0x01</e></m></meta>
		</UP>
		<DOWN_LEFT public="1" get="inline" set="null" expr="(0x04 | 0x08)" line="13" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x04 | 0x08)</e></m></meta>
		</DOWN_LEFT>
		<DOWN_RIGHT public="1" get="inline" set="null" expr="(0x04 | 0x02)" line="14" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x04 | 0x02)</e></m></meta>
		</DOWN_RIGHT>
		<UP_LEFT public="1" get="inline" set="null" expr="(0x01 | 0x08)" line="15" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x01 | 0x08)</e></m></meta>
		</UP_LEFT>
		<UP_RIGHT public="1" get="inline" set="null" expr="(0x01 | 0x02)" line="16" static="1">
			<x path="lime.ui.JoystickHatPosition"/>
			<meta><m n=":value"><e>(0x01 | 0x02)</e></m></meta>
		</UP_RIGHT>
		<center public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</center>
		<down public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</down>
		<left public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</left>
		<right public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</right>
		<up public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</up>
		<_new public="1" set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<x path="lime.ui.JoystickHatPosition"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<get_center set="method" line="32" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_center>
		<set_center get="inline" set="null" line="39" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_center>
		<get_down set="method" line="52" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_down>
		<set_down get="inline" set="null" line="59" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_down>
		<get_left set="method" line="76" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_left>
		<set_left get="inline" set="null" line="83" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_left>
		<get_right set="method" line="100" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_right>
		<set_right get="inline" set="null" line="107" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_right>
		<get_up set="method" line="124" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_up>
		<set_up get="inline" set="null" line="131" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_up>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.ui.KeyCode" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/KeyCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="fromScanCode"><x path="lime.ui.ScanCode"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0x00" line="12" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x00</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" expr="cast 0x08" line="13" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x08</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" expr="cast 0x09" line="14" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x09</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" expr="cast 0x0D" line="15" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x0D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" expr="cast 0x1B" line="16" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x1B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" expr="cast 0x20" line="17" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<EXCLAMATION public="1" get="inline" set="null" expr="cast 0x21" line="18" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXCLAMATION>
	<QUOTE public="1" get="inline" set="null" expr="cast 0x22" line="19" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUOTE>
	<HASH public="1" get="inline" set="null" expr="cast 0x23" line="20" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HASH>
	<DOLLAR public="1" get="inline" set="null" expr="cast 0x24" line="21" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOLLAR>
	<PERCENT public="1" get="inline" set="null" expr="cast 0x25" line="22" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERCENT>
	<AMPERSAND public="1" get="inline" set="null" expr="cast 0x26" line="23" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AMPERSAND>
	<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 0x27" line="24" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x28" line="25" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_PARENTHESIS>
	<RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x29" line="26" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_PARENTHESIS>
	<ASTERISK public="1" get="inline" set="null" expr="cast 0x2A" line="27" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ASTERISK>
	<PLUS public="1" get="inline" set="null" expr="cast 0x2B" line="28" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PLUS>
	<COMMA public="1" get="inline" set="null" expr="cast 0x2C" line="29" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" expr="cast 0x2D" line="30" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" expr="cast 0x2E" line="31" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" expr="cast 0x2F" line="32" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x2F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" expr="cast 0x30" line="33" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" expr="cast 0x31" line="34" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" expr="cast 0x32" line="35" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" expr="cast 0x33" line="36" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" expr="cast 0x34" line="37" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" expr="cast 0x35" line="38" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" expr="cast 0x36" line="39" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" expr="cast 0x37" line="40" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" expr="cast 0x38" line="41" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" expr="cast 0x39" line="42" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<COLON public="1" get="inline" set="null" expr="cast 0x3A" line="43" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COLON>
	<SEMICOLON public="1" get="inline" set="null" expr="cast 0x3B" line="44" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<LESS_THAN public="1" get="inline" set="null" expr="cast 0x3C" line="45" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LESS_THAN>
	<EQUALS public="1" get="inline" set="null" expr="cast 0x3D" line="46" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<GREATER_THAN public="1" get="inline" set="null" expr="cast 0x3E" line="47" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GREATER_THAN>
	<QUESTION public="1" get="inline" set="null" expr="cast 0x3F" line="48" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x3F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</QUESTION>
	<AT public="1" get="inline" set="null" expr="cast 0x40" line="49" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AT>
	<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 0x5B" line="50" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" expr="cast 0x5C" line="51" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 0x5D" line="52" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<CARET public="1" get="inline" set="null" expr="cast 0x5E" line="53" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CARET>
	<UNDERSCORE public="1" get="inline" set="null" expr="cast 0x5F" line="54" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x5F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDERSCORE>
	<GRAVE public="1" get="inline" set="null" expr="cast 0x60" line="55" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" expr="cast 0x61" line="56" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 0x62" line="57" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" expr="cast 0x63" line="58" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" expr="cast 0x64" line="59" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" expr="cast 0x65" line="60" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" expr="cast 0x66" line="61" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" expr="cast 0x67" line="62" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" expr="cast 0x68" line="63" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" expr="cast 0x69" line="64" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" expr="cast 0x6A" line="65" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" expr="cast 0x6B" line="66" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" expr="cast 0x6C" line="67" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" expr="cast 0x6D" line="68" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" expr="cast 0x6E" line="69" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" expr="cast 0x6F" line="70" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x6F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" expr="cast 0x70" line="71" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" expr="cast 0x71" line="72" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" expr="cast 0x72" line="73" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" expr="cast 0x73" line="74" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" expr="cast 0x74" line="75" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" expr="cast 0x75" line="76" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" expr="cast 0x76" line="77" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" expr="cast 0x77" line="78" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" expr="cast 0x78" line="79" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 0x79" line="80" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" expr="cast 0x7A" line="81" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x7A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" expr="cast 0x7F" line="82" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x7F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" expr="cast 0x40000039" line="83" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000039</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" expr="cast 0x4000003A" line="84" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" expr="cast 0x4000003B" line="85" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" expr="cast 0x4000003C" line="86" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" expr="cast 0x4000003D" line="87" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" expr="cast 0x4000003E" line="88" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" expr="cast 0x4000003F" line="89" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000003F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" expr="cast 0x40000040" line="90" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000040</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" expr="cast 0x40000041" line="91" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000041</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" expr="cast 0x40000042" line="92" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000042</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" expr="cast 0x40000043" line="93" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000043</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" expr="cast 0x40000044" line="94" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000044</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" expr="cast 0x40000045" line="95" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000045</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 0x40000046" line="96" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000046</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 0x40000047" line="97" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000047</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" expr="cast 0x40000048" line="98" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000048</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" expr="cast 0x40000049" line="99" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000049</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" expr="cast 0x4000004A" line="100" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" expr="cast 0x4000004B" line="101" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" expr="cast 0x4000004D" line="102" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" expr="cast 0x4000004E" line="103" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" expr="cast 0x4000004F" line="104" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000004F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 0x40000050" line="105" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000050</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" expr="cast 0x40000051" line="106" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000051</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" expr="cast 0x40000052" line="107" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000052</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" expr="cast 0x40000053" line="108" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000053</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 0x40000054" line="109" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000054</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 0x40000055" line="110" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000055</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 0x40000056" line="111" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000056</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 0x40000057" line="112" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000057</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 0x40000058" line="113" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000058</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" expr="cast 0x40000059" line="114" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000059</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" expr="cast 0x4000005A" line="115" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" expr="cast 0x4000005B" line="116" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" expr="cast 0x4000005C" line="117" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" expr="cast 0x4000005D" line="118" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" expr="cast 0x4000005E" line="119" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" expr="cast 0x4000005F" line="120" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000005F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" expr="cast 0x40000060" line="121" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000060</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" expr="cast 0x40000061" line="122" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000061</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" expr="cast 0x40000062" line="123" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000062</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 0x40000063" line="124" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000063</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" expr="cast 0x40000065" line="125" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000065</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" expr="cast 0x40000066" line="126" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000066</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 0x40000067" line="127" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000067</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" expr="cast 0x40000068" line="128" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000068</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" expr="cast 0x40000069" line="129" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000069</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" expr="cast 0x4000006A" line="130" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" expr="cast 0x4000006B" line="131" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" expr="cast 0x4000006C" line="132" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" expr="cast 0x4000006D" line="133" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" expr="cast 0x4000006E" line="134" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" expr="cast 0x4000006F" line="135" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000006F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" expr="cast 0x40000070" line="136" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000070</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" expr="cast 0x40000071" line="137" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000071</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" expr="cast 0x40000072" line="138" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000072</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" expr="cast 0x40000073" line="139" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000073</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" expr="cast 0x40000074" line="140" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000074</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" expr="cast 0x40000075" line="141" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000075</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" expr="cast 0x40000076" line="142" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000076</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" expr="cast 0x40000077" line="143" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000077</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" expr="cast 0x40000078" line="144" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000078</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" expr="cast 0x40000079" line="145" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000079</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" expr="cast 0x4000007A" line="146" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" expr="cast 0x4000007B" line="147" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" expr="cast 0x4000007C" line="148" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" expr="cast 0x4000007D" line="149" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" expr="cast 0x4000007E" line="150" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" expr="cast 0x4000007F" line="151" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000007F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" expr="cast 0x40000080" line="152" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000080</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 0x40000081" line="153" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000081</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 0x40000085" line="154" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000085</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" expr="cast 0x40000099" line="156" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000099</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 0x4000009A" line="157" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" expr="cast 0x4000009B" line="158" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" expr="cast 0x4000009C" line="159" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" expr="cast 0x4000009D" line="160" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" expr="cast 0x4000009E" line="161" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" expr="cast 0x4000009F" line="162" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000009F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" expr="cast 0x400000A0" line="163" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" expr="cast 0x400000A1" line="164" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 0x400000A2" line="165" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" expr="cast 0x400000A3" line="166" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" expr="cast 0x400000A4" line="167" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000A4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" expr="cast 0x400000B0" line="168" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" expr="cast 0x400000B1" line="169" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B2" line="170" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B3" line="171" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 0x400000B4" line="172" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 0x400000B5" line="173" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B6" line="174" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B7" line="175" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B8" line="176" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B9" line="177" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000B9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 0x400000BA" line="178" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 0x400000BB" line="179" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" expr="cast 0x400000BC" line="180" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" expr="cast 0x400000BD" line="181" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" expr="cast 0x400000BE" line="182" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" expr="cast 0x400000BF" line="183" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000BF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" expr="cast 0x400000C0" line="184" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" expr="cast 0x400000C1" line="185" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 0x400000C2" line="186" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 0x400000C3" line="187" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 0x400000C4" line="188" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 0x400000C5" line="189" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 0x400000C6" line="190" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C7" line="191" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C8" line="192" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000C9" line="193" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000C9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000CA" line="194" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 0x400000CB" line="195" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 0x400000CC" line="196" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 0x400000CD" line="197" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" expr="cast 0x400000CE" line="198" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CE</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 0x400000CF" line="199" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000CF</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 0x400000D0" line="200" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 0x400000D1" line="201" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D2" line="202" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 0x400000D3" line="203" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 0x400000D4" line="204" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 0x400000D5" line="205" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 0x400000D6" line="206" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 0x400000D7" line="207" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D8" line="208" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 0x400000D9" line="209" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000D9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 0x400000DA" line="210" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DA</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 0x400000DB" line="211" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DB</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 0x400000DC" line="212" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DC</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 0x400000DD" line="213" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000DD</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E0" line="214" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E1" line="215" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" expr="cast 0x400000E2" line="216" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="cast 0x400000E3" line="217" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E4" line="218" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E5" line="219" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="cast 0x400000E6" line="220" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" expr="cast 0x400000E7" line="221" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x400000E7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" expr="cast 0x40000101" line="222" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 0x40000102" line="223" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 0x40000103" line="224" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" expr="cast 0x40000104" line="225" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 0x40000105" line="226" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 0x40000106" line="227" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 0x40000107" line="228" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" expr="cast 0x40000108" line="229" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" expr="cast 0x40000109" line="230" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" expr="cast 0x4000010A" line="231" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" expr="cast 0x4000010B" line="232" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010B</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 0x4000010C" line="233" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010C</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 0x4000010D" line="234" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010D</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 0x4000010E" line="235" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010E</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 0x4000010F" line="236" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000010F</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 0x40000110" line="237" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 0x40000111" line="238" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 0x40000112" line="239" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 0x40000113" line="240" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 0x40000114" line="241" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 0x40000115" line="242" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 0x40000116" line="243" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 0x40000117" line="244" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 0x40000118" line="245" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" expr="cast 0x40000119" line="246" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x40000119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" expr="cast 0x4000011A" line="247" static="1">
		<x path="lime.ui.KeyCode"/>
		<meta>
			<m n=":value"><e>cast 0x4000011A</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<fromScanCode public="1" set="method" line="249" static="1">
		<f a="scanCode">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.KeyCode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromScanCode>
	<toScanCode set="method" line="260" static="1"><f a="keyCode">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.ScanCode"/>
</f></toScanCode>
	<gt get="inline" set="null" line="271" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="272" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="273" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="274" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.KeyCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<plus get="inline" set="null" line="275" static="1">
		<f a="a:b">
			<x path="lime.ui.KeyCode"/>
			<x path="Int"/>
			<x path="lime.ui.KeyCode"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":enum"/>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyCode.KeyCode_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/KeyCode.hx" private="1" module="lime.ui.KeyCode">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0x00" line="12" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x00</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" expr="cast 0x08" line="13" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x08</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="cast 0x09" line="14" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x09</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" expr="cast 0x0D" line="15" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x0D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" expr="cast 0x1B" line="16" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x1B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="cast 0x20" line="17" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<EXCLAMATION public="1" get="inline" set="null" expr="cast 0x21" line="18" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXCLAMATION>
		<QUOTE public="1" get="inline" set="null" expr="cast 0x22" line="19" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUOTE>
		<HASH public="1" get="inline" set="null" expr="cast 0x23" line="20" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HASH>
		<DOLLAR public="1" get="inline" set="null" expr="cast 0x24" line="21" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOLLAR>
		<PERCENT public="1" get="inline" set="null" expr="cast 0x25" line="22" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERCENT>
		<AMPERSAND public="1" get="inline" set="null" expr="cast 0x26" line="23" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AMPERSAND>
		<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 0x27" line="24" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x28" line="25" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_PARENTHESIS>
		<RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x29" line="26" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_PARENTHESIS>
		<ASTERISK public="1" get="inline" set="null" expr="cast 0x2A" line="27" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ASTERISK>
		<PLUS public="1" get="inline" set="null" expr="cast 0x2B" line="28" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PLUS>
		<COMMA public="1" get="inline" set="null" expr="cast 0x2C" line="29" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="cast 0x2D" line="30" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="cast 0x2E" line="31" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="cast 0x2F" line="32" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x2F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" expr="cast 0x30" line="33" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="cast 0x31" line="34" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="cast 0x32" line="35" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="cast 0x33" line="36" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="cast 0x34" line="37" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="cast 0x35" line="38" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="cast 0x36" line="39" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="cast 0x37" line="40" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="cast 0x38" line="41" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="cast 0x39" line="42" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<COLON public="1" get="inline" set="null" expr="cast 0x3A" line="43" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COLON>
		<SEMICOLON public="1" get="inline" set="null" expr="cast 0x3B" line="44" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<LESS_THAN public="1" get="inline" set="null" expr="cast 0x3C" line="45" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LESS_THAN>
		<EQUALS public="1" get="inline" set="null" expr="cast 0x3D" line="46" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<GREATER_THAN public="1" get="inline" set="null" expr="cast 0x3E" line="47" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GREATER_THAN>
		<QUESTION public="1" get="inline" set="null" expr="cast 0x3F" line="48" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x3F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</QUESTION>
		<AT public="1" get="inline" set="null" expr="cast 0x40" line="49" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AT>
		<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 0x5B" line="50" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="cast 0x5C" line="51" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 0x5D" line="52" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<CARET public="1" get="inline" set="null" expr="cast 0x5E" line="53" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CARET>
		<UNDERSCORE public="1" get="inline" set="null" expr="cast 0x5F" line="54" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x5F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDERSCORE>
		<GRAVE public="1" get="inline" set="null" expr="cast 0x60" line="55" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" expr="cast 0x61" line="56" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 0x62" line="57" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" expr="cast 0x63" line="58" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" expr="cast 0x64" line="59" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" expr="cast 0x65" line="60" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" expr="cast 0x66" line="61" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" expr="cast 0x67" line="62" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" expr="cast 0x68" line="63" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" expr="cast 0x69" line="64" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" expr="cast 0x6A" line="65" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" expr="cast 0x6B" line="66" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" expr="cast 0x6C" line="67" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" expr="cast 0x6D" line="68" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" expr="cast 0x6E" line="69" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" expr="cast 0x6F" line="70" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x6F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" expr="cast 0x70" line="71" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" expr="cast 0x71" line="72" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" expr="cast 0x72" line="73" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" expr="cast 0x73" line="74" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" expr="cast 0x74" line="75" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" expr="cast 0x75" line="76" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" expr="cast 0x76" line="77" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" expr="cast 0x77" line="78" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" expr="cast 0x78" line="79" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 0x79" line="80" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" expr="cast 0x7A" line="81" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x7A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" expr="cast 0x7F" line="82" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x7F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" expr="cast 0x40000039" line="83" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000039</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" expr="cast 0x4000003A" line="84" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" expr="cast 0x4000003B" line="85" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" expr="cast 0x4000003C" line="86" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" expr="cast 0x4000003D" line="87" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" expr="cast 0x4000003E" line="88" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" expr="cast 0x4000003F" line="89" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000003F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" expr="cast 0x40000040" line="90" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000040</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" expr="cast 0x40000041" line="91" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000041</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" expr="cast 0x40000042" line="92" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000042</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" expr="cast 0x40000043" line="93" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000043</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" expr="cast 0x40000044" line="94" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000044</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" expr="cast 0x40000045" line="95" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000045</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 0x40000046" line="96" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000046</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 0x40000047" line="97" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000047</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" expr="cast 0x40000048" line="98" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000048</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" expr="cast 0x40000049" line="99" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000049</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" expr="cast 0x4000004A" line="100" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" expr="cast 0x4000004B" line="101" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" expr="cast 0x4000004D" line="102" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" expr="cast 0x4000004E" line="103" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" expr="cast 0x4000004F" line="104" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000004F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 0x40000050" line="105" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000050</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" expr="cast 0x40000051" line="106" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000051</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" expr="cast 0x40000052" line="107" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000052</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" expr="cast 0x40000053" line="108" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000053</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 0x40000054" line="109" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000054</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 0x40000055" line="110" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000055</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 0x40000056" line="111" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000056</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 0x40000057" line="112" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000057</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 0x40000058" line="113" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000058</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" expr="cast 0x40000059" line="114" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000059</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="cast 0x4000005A" line="115" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="cast 0x4000005B" line="116" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="cast 0x4000005C" line="117" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="cast 0x4000005D" line="118" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="cast 0x4000005E" line="119" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="cast 0x4000005F" line="120" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000005F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="cast 0x40000060" line="121" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000060</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="cast 0x40000061" line="122" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000061</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" expr="cast 0x40000062" line="123" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000062</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 0x40000063" line="124" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000063</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" expr="cast 0x40000065" line="125" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000065</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" expr="cast 0x40000066" line="126" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000066</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 0x40000067" line="127" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000067</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" expr="cast 0x40000068" line="128" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000068</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" expr="cast 0x40000069" line="129" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000069</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" expr="cast 0x4000006A" line="130" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" expr="cast 0x4000006B" line="131" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" expr="cast 0x4000006C" line="132" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" expr="cast 0x4000006D" line="133" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" expr="cast 0x4000006E" line="134" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" expr="cast 0x4000006F" line="135" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000006F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" expr="cast 0x40000070" line="136" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000070</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" expr="cast 0x40000071" line="137" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000071</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" expr="cast 0x40000072" line="138" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000072</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" expr="cast 0x40000073" line="139" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000073</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" expr="cast 0x40000074" line="140" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000074</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" expr="cast 0x40000075" line="141" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000075</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" expr="cast 0x40000076" line="142" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000076</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" expr="cast 0x40000077" line="143" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000077</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" expr="cast 0x40000078" line="144" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000078</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" expr="cast 0x40000079" line="145" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000079</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" expr="cast 0x4000007A" line="146" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" expr="cast 0x4000007B" line="147" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" expr="cast 0x4000007C" line="148" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" expr="cast 0x4000007D" line="149" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" expr="cast 0x4000007E" line="150" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" expr="cast 0x4000007F" line="151" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000007F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" expr="cast 0x40000080" line="152" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000080</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 0x40000081" line="153" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000081</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 0x40000085" line="154" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000085</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" expr="cast 0x40000099" line="156" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000099</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 0x4000009A" line="157" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" expr="cast 0x4000009B" line="158" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" expr="cast 0x4000009C" line="159" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" expr="cast 0x4000009D" line="160" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" expr="cast 0x4000009E" line="161" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" expr="cast 0x4000009F" line="162" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000009F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" expr="cast 0x400000A0" line="163" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" expr="cast 0x400000A1" line="164" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 0x400000A2" line="165" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" expr="cast 0x400000A3" line="166" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" expr="cast 0x400000A4" line="167" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000A4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" expr="cast 0x400000B0" line="168" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" expr="cast 0x400000B1" line="169" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B2" line="170" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 0x400000B3" line="171" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 0x400000B4" line="172" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 0x400000B5" line="173" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B6" line="174" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 0x400000B7" line="175" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B8" line="176" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 0x400000B9" line="177" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000B9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 0x400000BA" line="178" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 0x400000BB" line="179" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" expr="cast 0x400000BC" line="180" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" expr="cast 0x400000BD" line="181" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" expr="cast 0x400000BE" line="182" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" expr="cast 0x400000BF" line="183" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000BF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" expr="cast 0x400000C0" line="184" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" expr="cast 0x400000C1" line="185" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 0x400000C2" line="186" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 0x400000C3" line="187" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 0x400000C4" line="188" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 0x400000C5" line="189" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 0x400000C6" line="190" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C7" line="191" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 0x400000C8" line="192" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000C9" line="193" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000C9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 0x400000CA" line="194" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 0x400000CB" line="195" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 0x400000CC" line="196" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 0x400000CD" line="197" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" expr="cast 0x400000CE" line="198" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CE</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 0x400000CF" line="199" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000CF</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 0x400000D0" line="200" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 0x400000D1" line="201" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D2" line="202" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 0x400000D3" line="203" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 0x400000D4" line="204" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 0x400000D5" line="205" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 0x400000D6" line="206" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 0x400000D7" line="207" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 0x400000D8" line="208" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 0x400000D9" line="209" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000D9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 0x400000DA" line="210" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DA</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 0x400000DB" line="211" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DB</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 0x400000DC" line="212" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DC</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 0x400000DD" line="213" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000DD</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E0" line="214" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E1" line="215" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" expr="cast 0x400000E2" line="216" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="cast 0x400000E3" line="217" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 0x400000E4" line="218" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 0x400000E5" line="219" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="cast 0x400000E6" line="220" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" expr="cast 0x400000E7" line="221" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x400000E7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" expr="cast 0x40000101" line="222" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 0x40000102" line="223" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 0x40000103" line="224" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" expr="cast 0x40000104" line="225" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 0x40000105" line="226" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 0x40000106" line="227" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 0x40000107" line="228" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" expr="cast 0x40000108" line="229" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" expr="cast 0x40000109" line="230" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" expr="cast 0x4000010A" line="231" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" expr="cast 0x4000010B" line="232" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010B</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 0x4000010C" line="233" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010C</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 0x4000010D" line="234" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010D</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 0x4000010E" line="235" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010E</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 0x4000010F" line="236" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000010F</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 0x40000110" line="237" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 0x40000111" line="238" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 0x40000112" line="239" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 0x40000113" line="240" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 0x40000114" line="241" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 0x40000115" line="242" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 0x40000116" line="243" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 0x40000117" line="244" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 0x40000118" line="245" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" expr="cast 0x40000119" line="246" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x40000119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" expr="cast 0x4000011A" line="247" static="1">
			<x path="lime.ui.KeyCode"/>
			<meta>
				<m n=":value"><e>cast 0x4000011A</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<fromScanCode public="1" set="method" line="249" static="1">
			<f a="scanCode">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.KeyCode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromScanCode>
		<toScanCode set="method" line="260" static="1"><f a="keyCode">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.ScanCode"/>
</f></toScanCode>
		<gt get="inline" set="null" line="271" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="272" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="273" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="274" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.KeyCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<plus get="inline" set="null" line="275" static="1">
			<f a="a:b">
				<x path="lime.ui.KeyCode"/>
				<x path="Int"/>
				<x path="lime.ui.KeyCode"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":enum"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<abstract path="lime.ui.KeyModifier" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/KeyModifier.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<impl><class path="lime.ui._KeyModifier.KeyModifier_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/KeyModifier.hx" private="1" module="lime.ui.KeyModifier">
	<NONE public="1" get="inline" set="null" expr="0x0000" line="7" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0000</e></m></meta>
	</NONE>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="0x0001" line="8" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0001</e></m></meta>
	</LEFT_SHIFT>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="0x0002" line="9" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0002</e></m></meta>
	</RIGHT_SHIFT>
	<LEFT_CTRL public="1" get="inline" set="null" expr="0x0040" line="10" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0040</e></m></meta>
	</LEFT_CTRL>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="0x0080" line="11" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0080</e></m></meta>
	</RIGHT_CTRL>
	<LEFT_ALT public="1" get="inline" set="null" expr="0x0100" line="12" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0100</e></m></meta>
	</LEFT_ALT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="0x0200" line="13" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0200</e></m></meta>
	</RIGHT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="0x0400" line="14" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0400</e></m></meta>
	</LEFT_META>
	<RIGHT_META public="1" get="inline" set="null" expr="0x0800" line="15" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x0800</e></m></meta>
	</RIGHT_META>
	<NUM_LOCK public="1" get="inline" set="null" expr="0x1000" line="16" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x1000</e></m></meta>
	</NUM_LOCK>
	<CAPS_LOCK public="1" get="inline" set="null" expr="0x2000" line="17" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x2000</e></m></meta>
	</CAPS_LOCK>
	<MODE public="1" get="inline" set="null" expr="0x4000" line="18" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>0x4000</e></m></meta>
	</MODE>
	<CTRL public="1" get="inline" set="null" expr="(0x0040 | 0x0080)" line="20" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0040 | 0x0080)</e></m></meta>
	</CTRL>
	<SHIFT public="1" get="inline" set="null" expr="(0x001 | 0x0002)" line="21" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x001 | 0x0002)</e></m></meta>
	</SHIFT>
	<ALT public="1" get="inline" set="null" expr="(0x0100 | 0x0200)" line="22" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0100 | 0x0200)</e></m></meta>
	</ALT>
	<META public="1" get="inline" set="null" expr="(0x0400 | 0x0800)" line="23" static="1">
		<x path="lime.ui.KeyModifier"/>
		<meta><m n=":value"><e>(0x0400 | 0x0800)</e></m></meta>
	</META>
	<altKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</altKey>
	<capsLock public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</capsLock>
	<ctrlKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</ctrlKey>
	<metaKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</metaKey>
	<numLock public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</numLock>
	<shiftKey public="1" get="accessor" set="accessor" static="1">
		<x path="Bool"/>
		<meta><m n=":impl"/></meta>
	</shiftKey>
	<get_altKey set="method" line="33" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_altKey>
	<set_altKey get="inline" set="null" line="40" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_altKey>
	<get_capsLock set="method" line="57" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_capsLock>
	<set_capsLock get="inline" set="null" line="64" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_capsLock>
	<get_ctrlKey set="method" line="81" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_ctrlKey>
	<set_ctrlKey get="inline" set="null" line="88" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_ctrlKey>
	<get_metaKey set="method" line="105" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_metaKey>
	<set_metaKey get="inline" set="null" line="112" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_metaKey>
	<get_numLock set="method" line="129" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_numLock>
	<set_numLock get="inline" set="null" line="136" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_numLock>
	<get_shiftKey set="method" line="153" static="1">
		<f a="this">
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</get_shiftKey>
	<set_shiftKey get="inline" set="null" line="160" static="1">
		<f a="this:value">
			<x path="Int"/>
			<x path="Bool"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</set_shiftKey>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.ui._KeyModifier.KeyModifier_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/KeyModifier.hx" private="1" module="lime.ui.KeyModifier">
		<NONE public="1" get="inline" set="null" expr="0x0000" line="7" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0000</e></m></meta>
		</NONE>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="0x0001" line="8" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0001</e></m></meta>
		</LEFT_SHIFT>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="0x0002" line="9" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0002</e></m></meta>
		</RIGHT_SHIFT>
		<LEFT_CTRL public="1" get="inline" set="null" expr="0x0040" line="10" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0040</e></m></meta>
		</LEFT_CTRL>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="0x0080" line="11" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0080</e></m></meta>
		</RIGHT_CTRL>
		<LEFT_ALT public="1" get="inline" set="null" expr="0x0100" line="12" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0100</e></m></meta>
		</LEFT_ALT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="0x0200" line="13" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0200</e></m></meta>
		</RIGHT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="0x0400" line="14" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0400</e></m></meta>
		</LEFT_META>
		<RIGHT_META public="1" get="inline" set="null" expr="0x0800" line="15" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x0800</e></m></meta>
		</RIGHT_META>
		<NUM_LOCK public="1" get="inline" set="null" expr="0x1000" line="16" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x1000</e></m></meta>
		</NUM_LOCK>
		<CAPS_LOCK public="1" get="inline" set="null" expr="0x2000" line="17" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x2000</e></m></meta>
		</CAPS_LOCK>
		<MODE public="1" get="inline" set="null" expr="0x4000" line="18" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>0x4000</e></m></meta>
		</MODE>
		<CTRL public="1" get="inline" set="null" expr="(0x0040 | 0x0080)" line="20" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0040 | 0x0080)</e></m></meta>
		</CTRL>
		<SHIFT public="1" get="inline" set="null" expr="(0x001 | 0x0002)" line="21" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x001 | 0x0002)</e></m></meta>
		</SHIFT>
		<ALT public="1" get="inline" set="null" expr="(0x0100 | 0x0200)" line="22" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0100 | 0x0200)</e></m></meta>
		</ALT>
		<META public="1" get="inline" set="null" expr="(0x0400 | 0x0800)" line="23" static="1">
			<x path="lime.ui.KeyModifier"/>
			<meta><m n=":value"><e>(0x0400 | 0x0800)</e></m></meta>
		</META>
		<altKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</altKey>
		<capsLock public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</capsLock>
		<ctrlKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</ctrlKey>
		<metaKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</metaKey>
		<numLock public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</numLock>
		<shiftKey public="1" get="accessor" set="accessor" static="1">
			<x path="Bool"/>
			<meta><m n=":impl"/></meta>
		</shiftKey>
		<get_altKey set="method" line="33" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_altKey>
		<set_altKey get="inline" set="null" line="40" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_altKey>
		<get_capsLock set="method" line="57" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_capsLock>
		<set_capsLock get="inline" set="null" line="64" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_capsLock>
		<get_ctrlKey set="method" line="81" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_ctrlKey>
		<set_ctrlKey get="inline" set="null" line="88" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_ctrlKey>
		<get_metaKey set="method" line="105" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_metaKey>
		<set_metaKey get="inline" set="null" line="112" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_metaKey>
		<get_numLock set="method" line="129" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_numLock>
		<set_numLock get="inline" set="null" line="136" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_numLock>
		<get_shiftKey set="method" line="153" static="1">
			<f a="this">
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</get_shiftKey>
		<set_shiftKey get="inline" set="null" line="160" static="1">
			<f a="this:value">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</set_shiftKey>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.ui.MouseButton" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/MouseButton.hx">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.ui._MouseButton.MouseButton_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/MouseButton.hx" private="1" module="lime.ui.MouseButton" extern="1">
	<LEFT public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
		<x path="lime.ui.MouseButton"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<MIDDLE public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
		<x path="lime.ui.MouseButton"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MIDDLE>
	<RIGHT public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
		<x path="lime.ui.MouseButton"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._MouseButton.MouseButton_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/MouseButton.hx" private="1" module="lime.ui.MouseButton" extern="1">
		<LEFT public="1" get="inline" set="null" expr="cast 1" line="6" static="1">
			<x path="lime.ui.MouseButton"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<MIDDLE public="1" get="inline" set="null" expr="cast 2" line="7" static="1">
			<x path="lime.ui.MouseButton"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MIDDLE>
		<RIGHT public="1" get="inline" set="null" expr="cast 3" line="8" static="1">
			<x path="lime.ui.MouseButton"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<enum path="lime.ui.MouseCursor" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/MouseCursor.hx">
		<ARROW/>
		<CROSSHAIR/>
		<DEFAULT/>
		<MOVE/>
		<POINTER/>
		<RESIZE_NESW/>
		<RESIZE_NS/>
		<RESIZE_NWSE/>
		<RESIZE_WE/>
		<TEXT/>
		<WAIT/>
		<WAIT_ARROW/>
		<CUSTOM/>
		<meta><m n=":flatEnum"/></meta>
	</enum>
	<enum path="lime.ui.MouseWheelMode" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/MouseWheelMode.hx">
		<PIXELS/>
		<LINES/>
		<PAGES/>
		<UNKNOWN/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.ui.ScanCode" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/ScanCode.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
			<icast field="fromKeyCode"><x path="lime.ui.KeyCode"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>lime.ui.KeyCode</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.ui._ScanCode.ScanCode_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/ScanCode.hx" private="1" module="lime.ui.ScanCode">
	<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNKNOWN>
	<BACKSPACE public="1" get="inline" set="null" expr="cast 42" line="14" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 42</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSPACE>
	<TAB public="1" get="inline" set="null" expr="cast 43" line="15" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 43</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TAB>
	<RETURN public="1" get="inline" set="null" expr="cast 40" line="16" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 40</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN>
	<ESCAPE public="1" get="inline" set="null" expr="cast 41" line="17" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 41</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ESCAPE>
	<SPACE public="1" get="inline" set="null" expr="cast 44" line="18" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 44</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SPACE>
	<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 52" line="25" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 52</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SINGLE_QUOTE>
	<COMMA public="1" get="inline" set="null" expr="cast 54" line="30" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 54</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMMA>
	<MINUS public="1" get="inline" set="null" expr="cast 45" line="31" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 45</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MINUS>
	<PERIOD public="1" get="inline" set="null" expr="cast 55" line="32" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 55</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PERIOD>
	<SLASH public="1" get="inline" set="null" expr="cast 56" line="33" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 56</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLASH>
	<NUMBER_0 public="1" get="inline" set="null" expr="cast 39" line="34" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 39</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_0>
	<NUMBER_1 public="1" get="inline" set="null" expr="cast 30" line="35" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 30</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_1>
	<NUMBER_2 public="1" get="inline" set="null" expr="cast 31" line="36" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 31</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_2>
	<NUMBER_3 public="1" get="inline" set="null" expr="cast 32" line="37" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 32</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_3>
	<NUMBER_4 public="1" get="inline" set="null" expr="cast 33" line="38" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 33</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_4>
	<NUMBER_5 public="1" get="inline" set="null" expr="cast 34" line="39" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 34</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_5>
	<NUMBER_6 public="1" get="inline" set="null" expr="cast 35" line="40" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 35</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_6>
	<NUMBER_7 public="1" get="inline" set="null" expr="cast 36" line="41" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 36</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_7>
	<NUMBER_8 public="1" get="inline" set="null" expr="cast 37" line="42" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 37</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_8>
	<NUMBER_9 public="1" get="inline" set="null" expr="cast 38" line="43" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 38</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMBER_9>
	<SEMICOLON public="1" get="inline" set="null" expr="cast 51" line="45" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 51</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEMICOLON>
	<EQUALS public="1" get="inline" set="null" expr="cast 46" line="47" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 46</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EQUALS>
	<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 47" line="51" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 47</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_BRACKET>
	<BACKSLASH public="1" get="inline" set="null" expr="cast 49" line="52" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 49</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKSLASH>
	<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 48" line="53" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 48</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_BRACKET>
	<GRAVE public="1" get="inline" set="null" expr="cast 53" line="56" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 53</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</GRAVE>
	<A public="1" get="inline" set="null" expr="cast 4" line="57" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</A>
	<B public="1" get="inline" set="null" expr="cast 5" line="58" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</B>
	<C public="1" get="inline" set="null" expr="cast 6" line="59" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</C>
	<D public="1" get="inline" set="null" expr="cast 7" line="60" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</D>
	<E public="1" get="inline" set="null" expr="cast 8" line="61" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</E>
	<F public="1" get="inline" set="null" expr="cast 9" line="62" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F>
	<G public="1" get="inline" set="null" expr="cast 10" line="63" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 10</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</G>
	<H public="1" get="inline" set="null" expr="cast 11" line="64" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 11</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</H>
	<I public="1" get="inline" set="null" expr="cast 12" line="65" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 12</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</I>
	<J public="1" get="inline" set="null" expr="cast 13" line="66" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 13</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</J>
	<K public="1" get="inline" set="null" expr="cast 14" line="67" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 14</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</K>
	<L public="1" get="inline" set="null" expr="cast 15" line="68" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 15</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</L>
	<M public="1" get="inline" set="null" expr="cast 16" line="69" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 16</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</M>
	<N public="1" get="inline" set="null" expr="cast 17" line="70" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 17</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</N>
	<O public="1" get="inline" set="null" expr="cast 18" line="71" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 18</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</O>
	<P public="1" get="inline" set="null" expr="cast 19" line="72" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 19</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</P>
	<Q public="1" get="inline" set="null" expr="cast 20" line="73" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 20</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Q>
	<R public="1" get="inline" set="null" expr="cast 21" line="74" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 21</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</R>
	<S public="1" get="inline" set="null" expr="cast 22" line="75" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 22</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</S>
	<T public="1" get="inline" set="null" expr="cast 23" line="76" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 23</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</T>
	<U public="1" get="inline" set="null" expr="cast 24" line="77" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 24</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</U>
	<V public="1" get="inline" set="null" expr="cast 25" line="78" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 25</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</V>
	<W public="1" get="inline" set="null" expr="cast 26" line="79" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 26</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</W>
	<X public="1" get="inline" set="null" expr="cast 27" line="80" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 27</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</X>
	<Y public="1" get="inline" set="null" expr="cast 28" line="81" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 28</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Y>
	<Z public="1" get="inline" set="null" expr="cast 29" line="82" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 29</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Z>
	<DELETE public="1" get="inline" set="null" expr="cast 76" line="83" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 76</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DELETE>
	<CAPS_LOCK public="1" get="inline" set="null" expr="cast 57" line="84" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 57</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CAPS_LOCK>
	<F1 public="1" get="inline" set="null" expr="cast 58" line="85" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 58</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F1>
	<F2 public="1" get="inline" set="null" expr="cast 59" line="86" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 59</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F2>
	<F3 public="1" get="inline" set="null" expr="cast 60" line="87" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 60</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F3>
	<F4 public="1" get="inline" set="null" expr="cast 61" line="88" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 61</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F4>
	<F5 public="1" get="inline" set="null" expr="cast 62" line="89" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 62</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F5>
	<F6 public="1" get="inline" set="null" expr="cast 63" line="90" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 63</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F6>
	<F7 public="1" get="inline" set="null" expr="cast 64" line="91" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 64</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F7>
	<F8 public="1" get="inline" set="null" expr="cast 65" line="92" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 65</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F8>
	<F9 public="1" get="inline" set="null" expr="cast 66" line="93" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 66</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F9>
	<F10 public="1" get="inline" set="null" expr="cast 67" line="94" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 67</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F10>
	<F11 public="1" get="inline" set="null" expr="cast 68" line="95" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 68</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F11>
	<F12 public="1" get="inline" set="null" expr="cast 69" line="96" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 69</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F12>
	<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 70" line="97" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 70</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRINT_SCREEN>
	<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 71" line="98" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 71</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SCROLL_LOCK>
	<PAUSE public="1" get="inline" set="null" expr="cast 72" line="99" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 72</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAUSE>
	<INSERT public="1" get="inline" set="null" expr="cast 73" line="100" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 73</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INSERT>
	<HOME public="1" get="inline" set="null" expr="cast 74" line="101" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 74</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HOME>
	<PAGE_UP public="1" get="inline" set="null" expr="cast 75" line="102" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 75</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_UP>
	<END public="1" get="inline" set="null" expr="cast 77" line="103" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 77</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</END>
	<PAGE_DOWN public="1" get="inline" set="null" expr="cast 78" line="104" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 78</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PAGE_DOWN>
	<RIGHT public="1" get="inline" set="null" expr="cast 79" line="105" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 79</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT>
	<LEFT public="1" get="inline" set="null" expr="cast 80" line="106" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 80</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT>
	<DOWN public="1" get="inline" set="null" expr="cast 81" line="107" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 81</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DOWN>
	<UP public="1" get="inline" set="null" expr="cast 82" line="108" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 82</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UP>
	<NUM_LOCK public="1" get="inline" set="null" expr="cast 83" line="109" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 83</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUM_LOCK>
	<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 84" line="110" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 84</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DIVIDE>
	<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 85" line="111" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 85</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MULTIPLY>
	<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 86" line="112" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 86</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MINUS>
	<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 87" line="113" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 87</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS>
	<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 88" line="114" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 88</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_ENTER>
	<NUMPAD_1 public="1" get="inline" set="null" expr="cast 89" line="115" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 89</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_1>
	<NUMPAD_2 public="1" get="inline" set="null" expr="cast 90" line="116" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 90</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_2>
	<NUMPAD_3 public="1" get="inline" set="null" expr="cast 91" line="117" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 91</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_3>
	<NUMPAD_4 public="1" get="inline" set="null" expr="cast 92" line="118" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 92</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_4>
	<NUMPAD_5 public="1" get="inline" set="null" expr="cast 93" line="119" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 93</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_5>
	<NUMPAD_6 public="1" get="inline" set="null" expr="cast 94" line="120" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 94</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_6>
	<NUMPAD_7 public="1" get="inline" set="null" expr="cast 95" line="121" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 95</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_7>
	<NUMPAD_8 public="1" get="inline" set="null" expr="cast 96" line="122" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 96</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_8>
	<NUMPAD_9 public="1" get="inline" set="null" expr="cast 97" line="123" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 97</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_9>
	<NUMPAD_0 public="1" get="inline" set="null" expr="cast 98" line="124" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 98</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_0>
	<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 99" line="125" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 99</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERIOD>
	<APPLICATION public="1" get="inline" set="null" expr="cast 101" line="126" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 101</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APPLICATION>
	<POWER public="1" get="inline" set="null" expr="cast 102" line="127" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 102</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</POWER>
	<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 103" line="128" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 103</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EQUALS>
	<F13 public="1" get="inline" set="null" expr="cast 104" line="129" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 104</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F13>
	<F14 public="1" get="inline" set="null" expr="cast 105" line="130" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 105</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F14>
	<F15 public="1" get="inline" set="null" expr="cast 106" line="131" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 106</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F15>
	<F16 public="1" get="inline" set="null" expr="cast 107" line="132" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 107</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F16>
	<F17 public="1" get="inline" set="null" expr="cast 108" line="133" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 108</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F17>
	<F18 public="1" get="inline" set="null" expr="cast 109" line="134" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 109</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F18>
	<F19 public="1" get="inline" set="null" expr="cast 110" line="135" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 110</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F19>
	<F20 public="1" get="inline" set="null" expr="cast 111" line="136" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 111</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F20>
	<F21 public="1" get="inline" set="null" expr="cast 112" line="137" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 112</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F21>
	<F22 public="1" get="inline" set="null" expr="cast 113" line="138" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 113</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F22>
	<F23 public="1" get="inline" set="null" expr="cast 114" line="139" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 114</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F23>
	<F24 public="1" get="inline" set="null" expr="cast 115" line="140" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 115</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</F24>
	<EXECUTE public="1" get="inline" set="null" expr="cast 116" line="141" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 116</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXECUTE>
	<HELP public="1" get="inline" set="null" expr="cast 117" line="142" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 117</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</HELP>
	<MENU public="1" get="inline" set="null" expr="cast 118" line="143" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 118</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MENU>
	<SELECT public="1" get="inline" set="null" expr="cast 119" line="144" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 119</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SELECT>
	<STOP public="1" get="inline" set="null" expr="cast 120" line="145" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 120</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</STOP>
	<AGAIN public="1" get="inline" set="null" expr="cast 121" line="146" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 121</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AGAIN>
	<UNDO public="1" get="inline" set="null" expr="cast 122" line="147" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 122</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</UNDO>
	<CUT public="1" get="inline" set="null" expr="cast 123" line="148" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 123</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CUT>
	<COPY public="1" get="inline" set="null" expr="cast 124" line="149" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 124</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COPY>
	<PASTE public="1" get="inline" set="null" expr="cast 125" line="150" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 125</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PASTE>
	<FIND public="1" get="inline" set="null" expr="cast 126" line="151" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 126</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FIND>
	<MUTE public="1" get="inline" set="null" expr="cast 127" line="152" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 127</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUTE>
	<VOLUME_UP public="1" get="inline" set="null" expr="cast 128" line="153" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 128</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_UP>
	<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 129" line="154" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 129</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VOLUME_DOWN>
	<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 133" line="155" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 133</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COMMA>
	<ALT_ERASE public="1" get="inline" set="null" expr="cast 153" line="157" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 153</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ALT_ERASE>
	<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 154" line="158" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 154</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SYSTEM_REQUEST>
	<CANCEL public="1" get="inline" set="null" expr="cast 155" line="159" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 155</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CANCEL>
	<CLEAR public="1" get="inline" set="null" expr="cast 156" line="160" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 156</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR>
	<PRIOR public="1" get="inline" set="null" expr="cast 157" line="161" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 157</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</PRIOR>
	<RETURN2 public="1" get="inline" set="null" expr="cast 158" line="162" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 158</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RETURN2>
	<SEPARATOR public="1" get="inline" set="null" expr="cast 159" line="163" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 159</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SEPARATOR>
	<OUT public="1" get="inline" set="null" expr="cast 160" line="164" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 160</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OUT>
	<OPER public="1" get="inline" set="null" expr="cast 161" line="165" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 161</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</OPER>
	<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 162" line="166" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 162</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CLEAR_AGAIN>
	<CRSEL public="1" get="inline" set="null" expr="cast 163" line="167" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 163</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CRSEL>
	<EXSEL public="1" get="inline" set="null" expr="cast 164" line="168" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 164</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EXSEL>
	<NUMPAD_00 public="1" get="inline" set="null" expr="cast 176" line="169" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 176</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_00>
	<NUMPAD_000 public="1" get="inline" set="null" expr="cast 177" line="170" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 177</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_000>
	<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 178" line="171" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 178</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</THOUSAND_SEPARATOR>
	<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 179" line="172" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 179</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DECIMAL_SEPARATOR>
	<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 180" line="173" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 180</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_UNIT>
	<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 181" line="174" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 181</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CURRENCY_SUBUNIT>
	<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 182" line="175" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 182</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_PARENTHESIS>
	<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 183" line="176" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 183</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_PARENTHESIS>
	<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 184" line="177" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 184</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LEFT_BRACE>
	<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 185" line="178" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 185</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_RIGHT_BRACE>
	<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 186" line="179" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 186</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_TAB>
	<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 187" line="180" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 187</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BACKSPACE>
	<NUMPAD_A public="1" get="inline" set="null" expr="cast 188" line="181" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 188</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_A>
	<NUMPAD_B public="1" get="inline" set="null" expr="cast 189" line="182" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 189</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_B>
	<NUMPAD_C public="1" get="inline" set="null" expr="cast 190" line="183" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 190</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_C>
	<NUMPAD_D public="1" get="inline" set="null" expr="cast 191" line="184" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 191</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_D>
	<NUMPAD_E public="1" get="inline" set="null" expr="cast 192" line="185" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 192</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_E>
	<NUMPAD_F public="1" get="inline" set="null" expr="cast 193" line="186" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 193</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_F>
	<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 194" line="187" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 194</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_XOR>
	<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 195" line="188" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 195</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_POWER>
	<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 196" line="189" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 196</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PERCENT>
	<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 197" line="190" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 197</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_LESS_THAN>
	<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 198" line="191" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 198</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_GREATER_THAN>
	<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 199" line="192" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 199</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AMPERSAND>
	<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 200" line="193" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 200</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_AMPERSAND>
	<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 201" line="194" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 201</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_VERTICAL_BAR>
	<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 202" line="195" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 202</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DOUBLE_VERTICAL_BAR>
	<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 203" line="196" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 203</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_COLON>
	<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 204" line="197" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 204</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HASH>
	<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 205" line="198" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 205</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_SPACE>
	<NUMPAD_AT public="1" get="inline" set="null" expr="cast 206" line="199" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 206</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_AT>
	<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 207" line="200" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 207</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_EXCLAMATION>
	<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 208" line="201" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 208</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_STORE>
	<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 209" line="202" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 209</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_RECALL>
	<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 210" line="203" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 210</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_CLEAR>
	<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 211" line="204" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 211</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_ADD>
	<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 212" line="205" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 212</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_SUBTRACT>
	<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 213" line="206" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 213</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_MULTIPLY>
	<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 214" line="207" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 214</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_MEM_DIVIDE>
	<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 215" line="208" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 215</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_PLUS_MINUS>
	<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 216" line="209" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 216</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR>
	<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 217" line="210" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 217</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_CLEAR_ENTRY>
	<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 218" line="211" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 218</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_BINARY>
	<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 219" line="212" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 219</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_OCTAL>
	<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 220" line="213" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 220</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_DECIMAL>
	<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 221" line="214" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 221</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NUMPAD_HEXADECIMAL>
	<LEFT_CTRL public="1" get="inline" set="null" expr="cast 224" line="215" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 224</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_CTRL>
	<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 225" line="216" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 225</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_SHIFT>
	<LEFT_ALT public="1" get="inline" set="null" expr="cast 226" line="217" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 226</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_ALT>
	<LEFT_META public="1" get="inline" set="null" expr="cast 227" line="218" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 227</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</LEFT_META>
	<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 228" line="219" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 228</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_CTRL>
	<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 229" line="220" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 229</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_SHIFT>
	<RIGHT_ALT public="1" get="inline" set="null" expr="cast 230" line="221" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 230</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_ALT>
	<RIGHT_META public="1" get="inline" set="null" expr="cast 231" line="222" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 231</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</RIGHT_META>
	<MODE public="1" get="inline" set="null" expr="cast 257" line="223" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 257</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MODE>
	<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 258" line="224" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 258</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_NEXT>
	<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 259" line="225" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 259</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PREVIOUS>
	<AUDIO_STOP public="1" get="inline" set="null" expr="cast 260" line="226" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 260</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_STOP>
	<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 261" line="227" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 261</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_PLAY>
	<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 262" line="228" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 262</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</AUDIO_MUTE>
	<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 263" line="229" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 263</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MEDIA_SELECT>
	<WWW public="1" get="inline" set="null" expr="cast 264" line="230" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 264</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WWW>
	<MAIL public="1" get="inline" set="null" expr="cast 265" line="231" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 265</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MAIL>
	<CALCULATOR public="1" get="inline" set="null" expr="cast 266" line="232" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 266</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</CALCULATOR>
	<COMPUTER public="1" get="inline" set="null" expr="cast 267" line="233" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 267</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</COMPUTER>
	<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 268" line="234" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 268</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_SEARCH>
	<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 269" line="235" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 269</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_HOME>
	<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 270" line="236" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 270</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BACK>
	<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 271" line="237" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 271</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_FORWARD>
	<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 272" line="238" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 272</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_STOP>
	<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 273" line="239" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 273</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_REFRESH>
	<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 274" line="240" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 274</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</APP_CONTROL_BOOKMARKS>
	<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 275" line="241" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 275</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_DOWN>
	<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 276" line="242" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 276</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BRIGHTNESS_UP>
	<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 277" line="243" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 277</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DISPLAY_SWITCH>
	<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 278" line="244" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 278</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_TOGGLE>
	<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 279" line="245" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 279</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_DOWN>
	<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 280" line="246" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 280</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BACKLIGHT_UP>
	<EJECT public="1" get="inline" set="null" expr="cast 281" line="247" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 281</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</EJECT>
	<SLEEP public="1" get="inline" set="null" expr="cast 282" line="248" static="1">
		<x path="lime.ui.ScanCode"/>
		<meta>
			<m n=":value"><e>cast 282</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SLEEP>
	<fromKeyCode public="1" set="method" line="250" static="1">
		<f a="keyCode">
			<x path="lime.ui.KeyCode"/>
			<x path="lime.ui.ScanCode"/>
		</f>
		<meta><m n=":from"/></meta>
	</fromKeyCode>
	<toKeyCode set="method" line="256" static="1"><f a="scanCode">
	<x path="lime.ui.ScanCode"/>
	<x path="lime.ui.KeyCode"/>
</f></toKeyCode>
	<gt get="inline" set="null" line="262" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="263" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="264" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="265" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="lime.ui.ScanCode"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<plus get="inline" set="null" line="266" static="1">
		<f a="a:b">
			<x path="lime.ui.ScanCode"/>
			<x path="Int"/>
			<x path="lime.ui.ScanCode"/>
		</f>
		<meta><m n=":op"><e>A + B</e></m></meta>
	</plus>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
		<m n=":access"><e>lime.ui.KeyCode</e></m>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.ui._ScanCode.ScanCode_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/ScanCode.hx" private="1" module="lime.ui.ScanCode">
		<UNKNOWN public="1" get="inline" set="null" expr="cast 0" line="13" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNKNOWN>
		<BACKSPACE public="1" get="inline" set="null" expr="cast 42" line="14" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 42</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSPACE>
		<TAB public="1" get="inline" set="null" expr="cast 43" line="15" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 43</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TAB>
		<RETURN public="1" get="inline" set="null" expr="cast 40" line="16" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 40</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN>
		<ESCAPE public="1" get="inline" set="null" expr="cast 41" line="17" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 41</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ESCAPE>
		<SPACE public="1" get="inline" set="null" expr="cast 44" line="18" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 44</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SPACE>
		<SINGLE_QUOTE public="1" get="inline" set="null" expr="cast 52" line="25" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 52</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SINGLE_QUOTE>
		<COMMA public="1" get="inline" set="null" expr="cast 54" line="30" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 54</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMMA>
		<MINUS public="1" get="inline" set="null" expr="cast 45" line="31" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 45</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MINUS>
		<PERIOD public="1" get="inline" set="null" expr="cast 55" line="32" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 55</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PERIOD>
		<SLASH public="1" get="inline" set="null" expr="cast 56" line="33" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 56</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLASH>
		<NUMBER_0 public="1" get="inline" set="null" expr="cast 39" line="34" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 39</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_0>
		<NUMBER_1 public="1" get="inline" set="null" expr="cast 30" line="35" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 30</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_1>
		<NUMBER_2 public="1" get="inline" set="null" expr="cast 31" line="36" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 31</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_2>
		<NUMBER_3 public="1" get="inline" set="null" expr="cast 32" line="37" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 32</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_3>
		<NUMBER_4 public="1" get="inline" set="null" expr="cast 33" line="38" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 33</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_4>
		<NUMBER_5 public="1" get="inline" set="null" expr="cast 34" line="39" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 34</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_5>
		<NUMBER_6 public="1" get="inline" set="null" expr="cast 35" line="40" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 35</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_6>
		<NUMBER_7 public="1" get="inline" set="null" expr="cast 36" line="41" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 36</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_7>
		<NUMBER_8 public="1" get="inline" set="null" expr="cast 37" line="42" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 37</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_8>
		<NUMBER_9 public="1" get="inline" set="null" expr="cast 38" line="43" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 38</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMBER_9>
		<SEMICOLON public="1" get="inline" set="null" expr="cast 51" line="45" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 51</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEMICOLON>
		<EQUALS public="1" get="inline" set="null" expr="cast 46" line="47" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 46</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EQUALS>
		<LEFT_BRACKET public="1" get="inline" set="null" expr="cast 47" line="51" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 47</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_BRACKET>
		<BACKSLASH public="1" get="inline" set="null" expr="cast 49" line="52" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 49</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKSLASH>
		<RIGHT_BRACKET public="1" get="inline" set="null" expr="cast 48" line="53" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 48</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_BRACKET>
		<GRAVE public="1" get="inline" set="null" expr="cast 53" line="56" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 53</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</GRAVE>
		<A public="1" get="inline" set="null" expr="cast 4" line="57" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</A>
		<B public="1" get="inline" set="null" expr="cast 5" line="58" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</B>
		<C public="1" get="inline" set="null" expr="cast 6" line="59" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</C>
		<D public="1" get="inline" set="null" expr="cast 7" line="60" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</D>
		<E public="1" get="inline" set="null" expr="cast 8" line="61" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</E>
		<F public="1" get="inline" set="null" expr="cast 9" line="62" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F>
		<G public="1" get="inline" set="null" expr="cast 10" line="63" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 10</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</G>
		<H public="1" get="inline" set="null" expr="cast 11" line="64" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 11</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</H>
		<I public="1" get="inline" set="null" expr="cast 12" line="65" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 12</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</I>
		<J public="1" get="inline" set="null" expr="cast 13" line="66" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 13</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</J>
		<K public="1" get="inline" set="null" expr="cast 14" line="67" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 14</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</K>
		<L public="1" get="inline" set="null" expr="cast 15" line="68" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 15</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</L>
		<M public="1" get="inline" set="null" expr="cast 16" line="69" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 16</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</M>
		<N public="1" get="inline" set="null" expr="cast 17" line="70" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 17</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</N>
		<O public="1" get="inline" set="null" expr="cast 18" line="71" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 18</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</O>
		<P public="1" get="inline" set="null" expr="cast 19" line="72" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 19</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</P>
		<Q public="1" get="inline" set="null" expr="cast 20" line="73" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 20</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Q>
		<R public="1" get="inline" set="null" expr="cast 21" line="74" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 21</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</R>
		<S public="1" get="inline" set="null" expr="cast 22" line="75" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 22</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</S>
		<T public="1" get="inline" set="null" expr="cast 23" line="76" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 23</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</T>
		<U public="1" get="inline" set="null" expr="cast 24" line="77" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 24</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</U>
		<V public="1" get="inline" set="null" expr="cast 25" line="78" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 25</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</V>
		<W public="1" get="inline" set="null" expr="cast 26" line="79" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 26</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</W>
		<X public="1" get="inline" set="null" expr="cast 27" line="80" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 27</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</X>
		<Y public="1" get="inline" set="null" expr="cast 28" line="81" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 28</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Y>
		<Z public="1" get="inline" set="null" expr="cast 29" line="82" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 29</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Z>
		<DELETE public="1" get="inline" set="null" expr="cast 76" line="83" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 76</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DELETE>
		<CAPS_LOCK public="1" get="inline" set="null" expr="cast 57" line="84" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 57</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CAPS_LOCK>
		<F1 public="1" get="inline" set="null" expr="cast 58" line="85" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 58</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F1>
		<F2 public="1" get="inline" set="null" expr="cast 59" line="86" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 59</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F2>
		<F3 public="1" get="inline" set="null" expr="cast 60" line="87" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 60</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F3>
		<F4 public="1" get="inline" set="null" expr="cast 61" line="88" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 61</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F4>
		<F5 public="1" get="inline" set="null" expr="cast 62" line="89" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 62</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F5>
		<F6 public="1" get="inline" set="null" expr="cast 63" line="90" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 63</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F6>
		<F7 public="1" get="inline" set="null" expr="cast 64" line="91" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 64</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F7>
		<F8 public="1" get="inline" set="null" expr="cast 65" line="92" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 65</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F8>
		<F9 public="1" get="inline" set="null" expr="cast 66" line="93" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 66</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F9>
		<F10 public="1" get="inline" set="null" expr="cast 67" line="94" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 67</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F10>
		<F11 public="1" get="inline" set="null" expr="cast 68" line="95" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 68</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F11>
		<F12 public="1" get="inline" set="null" expr="cast 69" line="96" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 69</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F12>
		<PRINT_SCREEN public="1" get="inline" set="null" expr="cast 70" line="97" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 70</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRINT_SCREEN>
		<SCROLL_LOCK public="1" get="inline" set="null" expr="cast 71" line="98" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 71</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SCROLL_LOCK>
		<PAUSE public="1" get="inline" set="null" expr="cast 72" line="99" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 72</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAUSE>
		<INSERT public="1" get="inline" set="null" expr="cast 73" line="100" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 73</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INSERT>
		<HOME public="1" get="inline" set="null" expr="cast 74" line="101" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 74</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HOME>
		<PAGE_UP public="1" get="inline" set="null" expr="cast 75" line="102" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 75</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_UP>
		<END public="1" get="inline" set="null" expr="cast 77" line="103" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 77</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</END>
		<PAGE_DOWN public="1" get="inline" set="null" expr="cast 78" line="104" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 78</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PAGE_DOWN>
		<RIGHT public="1" get="inline" set="null" expr="cast 79" line="105" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 79</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT>
		<LEFT public="1" get="inline" set="null" expr="cast 80" line="106" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 80</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT>
		<DOWN public="1" get="inline" set="null" expr="cast 81" line="107" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 81</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DOWN>
		<UP public="1" get="inline" set="null" expr="cast 82" line="108" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 82</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UP>
		<NUM_LOCK public="1" get="inline" set="null" expr="cast 83" line="109" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 83</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUM_LOCK>
		<NUMPAD_DIVIDE public="1" get="inline" set="null" expr="cast 84" line="110" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 84</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DIVIDE>
		<NUMPAD_MULTIPLY public="1" get="inline" set="null" expr="cast 85" line="111" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 85</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MULTIPLY>
		<NUMPAD_MINUS public="1" get="inline" set="null" expr="cast 86" line="112" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 86</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MINUS>
		<NUMPAD_PLUS public="1" get="inline" set="null" expr="cast 87" line="113" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 87</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS>
		<NUMPAD_ENTER public="1" get="inline" set="null" expr="cast 88" line="114" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 88</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_ENTER>
		<NUMPAD_1 public="1" get="inline" set="null" expr="cast 89" line="115" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 89</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_1>
		<NUMPAD_2 public="1" get="inline" set="null" expr="cast 90" line="116" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 90</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_2>
		<NUMPAD_3 public="1" get="inline" set="null" expr="cast 91" line="117" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 91</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_3>
		<NUMPAD_4 public="1" get="inline" set="null" expr="cast 92" line="118" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 92</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_4>
		<NUMPAD_5 public="1" get="inline" set="null" expr="cast 93" line="119" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 93</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_5>
		<NUMPAD_6 public="1" get="inline" set="null" expr="cast 94" line="120" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 94</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_6>
		<NUMPAD_7 public="1" get="inline" set="null" expr="cast 95" line="121" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 95</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_7>
		<NUMPAD_8 public="1" get="inline" set="null" expr="cast 96" line="122" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 96</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_8>
		<NUMPAD_9 public="1" get="inline" set="null" expr="cast 97" line="123" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 97</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_9>
		<NUMPAD_0 public="1" get="inline" set="null" expr="cast 98" line="124" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 98</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_0>
		<NUMPAD_PERIOD public="1" get="inline" set="null" expr="cast 99" line="125" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 99</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERIOD>
		<APPLICATION public="1" get="inline" set="null" expr="cast 101" line="126" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 101</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APPLICATION>
		<POWER public="1" get="inline" set="null" expr="cast 102" line="127" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 102</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</POWER>
		<NUMPAD_EQUALS public="1" get="inline" set="null" expr="cast 103" line="128" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 103</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EQUALS>
		<F13 public="1" get="inline" set="null" expr="cast 104" line="129" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 104</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F13>
		<F14 public="1" get="inline" set="null" expr="cast 105" line="130" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 105</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F14>
		<F15 public="1" get="inline" set="null" expr="cast 106" line="131" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 106</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F15>
		<F16 public="1" get="inline" set="null" expr="cast 107" line="132" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 107</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F16>
		<F17 public="1" get="inline" set="null" expr="cast 108" line="133" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 108</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F17>
		<F18 public="1" get="inline" set="null" expr="cast 109" line="134" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 109</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F18>
		<F19 public="1" get="inline" set="null" expr="cast 110" line="135" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 110</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F19>
		<F20 public="1" get="inline" set="null" expr="cast 111" line="136" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 111</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F20>
		<F21 public="1" get="inline" set="null" expr="cast 112" line="137" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 112</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F21>
		<F22 public="1" get="inline" set="null" expr="cast 113" line="138" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 113</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F22>
		<F23 public="1" get="inline" set="null" expr="cast 114" line="139" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 114</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F23>
		<F24 public="1" get="inline" set="null" expr="cast 115" line="140" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 115</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</F24>
		<EXECUTE public="1" get="inline" set="null" expr="cast 116" line="141" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 116</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXECUTE>
		<HELP public="1" get="inline" set="null" expr="cast 117" line="142" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 117</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</HELP>
		<MENU public="1" get="inline" set="null" expr="cast 118" line="143" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 118</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MENU>
		<SELECT public="1" get="inline" set="null" expr="cast 119" line="144" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 119</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SELECT>
		<STOP public="1" get="inline" set="null" expr="cast 120" line="145" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 120</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</STOP>
		<AGAIN public="1" get="inline" set="null" expr="cast 121" line="146" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 121</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AGAIN>
		<UNDO public="1" get="inline" set="null" expr="cast 122" line="147" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 122</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</UNDO>
		<CUT public="1" get="inline" set="null" expr="cast 123" line="148" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 123</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CUT>
		<COPY public="1" get="inline" set="null" expr="cast 124" line="149" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 124</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COPY>
		<PASTE public="1" get="inline" set="null" expr="cast 125" line="150" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 125</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PASTE>
		<FIND public="1" get="inline" set="null" expr="cast 126" line="151" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 126</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FIND>
		<MUTE public="1" get="inline" set="null" expr="cast 127" line="152" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 127</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUTE>
		<VOLUME_UP public="1" get="inline" set="null" expr="cast 128" line="153" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 128</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_UP>
		<VOLUME_DOWN public="1" get="inline" set="null" expr="cast 129" line="154" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 129</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VOLUME_DOWN>
		<NUMPAD_COMMA public="1" get="inline" set="null" expr="cast 133" line="155" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 133</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COMMA>
		<ALT_ERASE public="1" get="inline" set="null" expr="cast 153" line="157" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 153</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ALT_ERASE>
		<SYSTEM_REQUEST public="1" get="inline" set="null" expr="cast 154" line="158" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 154</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SYSTEM_REQUEST>
		<CANCEL public="1" get="inline" set="null" expr="cast 155" line="159" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 155</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CANCEL>
		<CLEAR public="1" get="inline" set="null" expr="cast 156" line="160" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 156</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR>
		<PRIOR public="1" get="inline" set="null" expr="cast 157" line="161" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 157</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</PRIOR>
		<RETURN2 public="1" get="inline" set="null" expr="cast 158" line="162" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 158</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RETURN2>
		<SEPARATOR public="1" get="inline" set="null" expr="cast 159" line="163" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 159</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SEPARATOR>
		<OUT public="1" get="inline" set="null" expr="cast 160" line="164" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 160</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OUT>
		<OPER public="1" get="inline" set="null" expr="cast 161" line="165" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 161</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</OPER>
		<CLEAR_AGAIN public="1" get="inline" set="null" expr="cast 162" line="166" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 162</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CLEAR_AGAIN>
		<CRSEL public="1" get="inline" set="null" expr="cast 163" line="167" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 163</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CRSEL>
		<EXSEL public="1" get="inline" set="null" expr="cast 164" line="168" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 164</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EXSEL>
		<NUMPAD_00 public="1" get="inline" set="null" expr="cast 176" line="169" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 176</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_00>
		<NUMPAD_000 public="1" get="inline" set="null" expr="cast 177" line="170" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 177</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_000>
		<THOUSAND_SEPARATOR public="1" get="inline" set="null" expr="cast 178" line="171" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 178</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</THOUSAND_SEPARATOR>
		<DECIMAL_SEPARATOR public="1" get="inline" set="null" expr="cast 179" line="172" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 179</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DECIMAL_SEPARATOR>
		<CURRENCY_UNIT public="1" get="inline" set="null" expr="cast 180" line="173" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 180</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_UNIT>
		<CURRENCY_SUBUNIT public="1" get="inline" set="null" expr="cast 181" line="174" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 181</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CURRENCY_SUBUNIT>
		<NUMPAD_LEFT_PARENTHESIS public="1" get="inline" set="null" expr="cast 182" line="175" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 182</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_PARENTHESIS>
		<NUMPAD_RIGHT_PARENTHESIS public="1" get="inline" set="null" expr="cast 183" line="176" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 183</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_PARENTHESIS>
		<NUMPAD_LEFT_BRACE public="1" get="inline" set="null" expr="cast 184" line="177" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 184</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LEFT_BRACE>
		<NUMPAD_RIGHT_BRACE public="1" get="inline" set="null" expr="cast 185" line="178" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 185</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_RIGHT_BRACE>
		<NUMPAD_TAB public="1" get="inline" set="null" expr="cast 186" line="179" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 186</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_TAB>
		<NUMPAD_BACKSPACE public="1" get="inline" set="null" expr="cast 187" line="180" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 187</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BACKSPACE>
		<NUMPAD_A public="1" get="inline" set="null" expr="cast 188" line="181" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 188</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_A>
		<NUMPAD_B public="1" get="inline" set="null" expr="cast 189" line="182" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 189</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_B>
		<NUMPAD_C public="1" get="inline" set="null" expr="cast 190" line="183" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 190</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_C>
		<NUMPAD_D public="1" get="inline" set="null" expr="cast 191" line="184" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 191</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_D>
		<NUMPAD_E public="1" get="inline" set="null" expr="cast 192" line="185" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 192</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_E>
		<NUMPAD_F public="1" get="inline" set="null" expr="cast 193" line="186" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 193</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_F>
		<NUMPAD_XOR public="1" get="inline" set="null" expr="cast 194" line="187" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 194</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_XOR>
		<NUMPAD_POWER public="1" get="inline" set="null" expr="cast 195" line="188" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 195</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_POWER>
		<NUMPAD_PERCENT public="1" get="inline" set="null" expr="cast 196" line="189" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 196</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PERCENT>
		<NUMPAD_LESS_THAN public="1" get="inline" set="null" expr="cast 197" line="190" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 197</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_LESS_THAN>
		<NUMPAD_GREATER_THAN public="1" get="inline" set="null" expr="cast 198" line="191" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 198</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_GREATER_THAN>
		<NUMPAD_AMPERSAND public="1" get="inline" set="null" expr="cast 199" line="192" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 199</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AMPERSAND>
		<NUMPAD_DOUBLE_AMPERSAND public="1" get="inline" set="null" expr="cast 200" line="193" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 200</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_AMPERSAND>
		<NUMPAD_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 201" line="194" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 201</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_VERTICAL_BAR>
		<NUMPAD_DOUBLE_VERTICAL_BAR public="1" get="inline" set="null" expr="cast 202" line="195" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 202</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DOUBLE_VERTICAL_BAR>
		<NUMPAD_COLON public="1" get="inline" set="null" expr="cast 203" line="196" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 203</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_COLON>
		<NUMPAD_HASH public="1" get="inline" set="null" expr="cast 204" line="197" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 204</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HASH>
		<NUMPAD_SPACE public="1" get="inline" set="null" expr="cast 205" line="198" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 205</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_SPACE>
		<NUMPAD_AT public="1" get="inline" set="null" expr="cast 206" line="199" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 206</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_AT>
		<NUMPAD_EXCLAMATION public="1" get="inline" set="null" expr="cast 207" line="200" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 207</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_EXCLAMATION>
		<NUMPAD_MEM_STORE public="1" get="inline" set="null" expr="cast 208" line="201" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 208</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_STORE>
		<NUMPAD_MEM_RECALL public="1" get="inline" set="null" expr="cast 209" line="202" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 209</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_RECALL>
		<NUMPAD_MEM_CLEAR public="1" get="inline" set="null" expr="cast 210" line="203" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 210</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_CLEAR>
		<NUMPAD_MEM_ADD public="1" get="inline" set="null" expr="cast 211" line="204" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 211</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_ADD>
		<NUMPAD_MEM_SUBTRACT public="1" get="inline" set="null" expr="cast 212" line="205" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 212</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_SUBTRACT>
		<NUMPAD_MEM_MULTIPLY public="1" get="inline" set="null" expr="cast 213" line="206" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 213</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_MULTIPLY>
		<NUMPAD_MEM_DIVIDE public="1" get="inline" set="null" expr="cast 214" line="207" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 214</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_MEM_DIVIDE>
		<NUMPAD_PLUS_MINUS public="1" get="inline" set="null" expr="cast 215" line="208" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 215</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_PLUS_MINUS>
		<NUMPAD_CLEAR public="1" get="inline" set="null" expr="cast 216" line="209" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 216</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR>
		<NUMPAD_CLEAR_ENTRY public="1" get="inline" set="null" expr="cast 217" line="210" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 217</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_CLEAR_ENTRY>
		<NUMPAD_BINARY public="1" get="inline" set="null" expr="cast 218" line="211" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 218</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_BINARY>
		<NUMPAD_OCTAL public="1" get="inline" set="null" expr="cast 219" line="212" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 219</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_OCTAL>
		<NUMPAD_DECIMAL public="1" get="inline" set="null" expr="cast 220" line="213" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 220</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_DECIMAL>
		<NUMPAD_HEXADECIMAL public="1" get="inline" set="null" expr="cast 221" line="214" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 221</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NUMPAD_HEXADECIMAL>
		<LEFT_CTRL public="1" get="inline" set="null" expr="cast 224" line="215" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 224</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_CTRL>
		<LEFT_SHIFT public="1" get="inline" set="null" expr="cast 225" line="216" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 225</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_SHIFT>
		<LEFT_ALT public="1" get="inline" set="null" expr="cast 226" line="217" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 226</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_ALT>
		<LEFT_META public="1" get="inline" set="null" expr="cast 227" line="218" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 227</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</LEFT_META>
		<RIGHT_CTRL public="1" get="inline" set="null" expr="cast 228" line="219" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 228</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_CTRL>
		<RIGHT_SHIFT public="1" get="inline" set="null" expr="cast 229" line="220" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 229</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_SHIFT>
		<RIGHT_ALT public="1" get="inline" set="null" expr="cast 230" line="221" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 230</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_ALT>
		<RIGHT_META public="1" get="inline" set="null" expr="cast 231" line="222" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 231</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</RIGHT_META>
		<MODE public="1" get="inline" set="null" expr="cast 257" line="223" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 257</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MODE>
		<AUDIO_NEXT public="1" get="inline" set="null" expr="cast 258" line="224" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 258</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_NEXT>
		<AUDIO_PREVIOUS public="1" get="inline" set="null" expr="cast 259" line="225" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 259</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PREVIOUS>
		<AUDIO_STOP public="1" get="inline" set="null" expr="cast 260" line="226" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 260</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_STOP>
		<AUDIO_PLAY public="1" get="inline" set="null" expr="cast 261" line="227" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 261</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_PLAY>
		<AUDIO_MUTE public="1" get="inline" set="null" expr="cast 262" line="228" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 262</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</AUDIO_MUTE>
		<MEDIA_SELECT public="1" get="inline" set="null" expr="cast 263" line="229" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 263</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MEDIA_SELECT>
		<WWW public="1" get="inline" set="null" expr="cast 264" line="230" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 264</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WWW>
		<MAIL public="1" get="inline" set="null" expr="cast 265" line="231" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 265</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MAIL>
		<CALCULATOR public="1" get="inline" set="null" expr="cast 266" line="232" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 266</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</CALCULATOR>
		<COMPUTER public="1" get="inline" set="null" expr="cast 267" line="233" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 267</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</COMPUTER>
		<APP_CONTROL_SEARCH public="1" get="inline" set="null" expr="cast 268" line="234" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 268</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_SEARCH>
		<APP_CONTROL_HOME public="1" get="inline" set="null" expr="cast 269" line="235" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 269</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_HOME>
		<APP_CONTROL_BACK public="1" get="inline" set="null" expr="cast 270" line="236" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 270</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BACK>
		<APP_CONTROL_FORWARD public="1" get="inline" set="null" expr="cast 271" line="237" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 271</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_FORWARD>
		<APP_CONTROL_STOP public="1" get="inline" set="null" expr="cast 272" line="238" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 272</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_STOP>
		<APP_CONTROL_REFRESH public="1" get="inline" set="null" expr="cast 273" line="239" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 273</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_REFRESH>
		<APP_CONTROL_BOOKMARKS public="1" get="inline" set="null" expr="cast 274" line="240" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 274</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</APP_CONTROL_BOOKMARKS>
		<BRIGHTNESS_DOWN public="1" get="inline" set="null" expr="cast 275" line="241" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 275</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_DOWN>
		<BRIGHTNESS_UP public="1" get="inline" set="null" expr="cast 276" line="242" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 276</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BRIGHTNESS_UP>
		<DISPLAY_SWITCH public="1" get="inline" set="null" expr="cast 277" line="243" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 277</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DISPLAY_SWITCH>
		<BACKLIGHT_TOGGLE public="1" get="inline" set="null" expr="cast 278" line="244" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 278</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_TOGGLE>
		<BACKLIGHT_DOWN public="1" get="inline" set="null" expr="cast 279" line="245" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 279</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_DOWN>
		<BACKLIGHT_UP public="1" get="inline" set="null" expr="cast 280" line="246" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 280</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BACKLIGHT_UP>
		<EJECT public="1" get="inline" set="null" expr="cast 281" line="247" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 281</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</EJECT>
		<SLEEP public="1" get="inline" set="null" expr="cast 282" line="248" static="1">
			<x path="lime.ui.ScanCode"/>
			<meta>
				<m n=":value"><e>cast 282</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SLEEP>
		<fromKeyCode public="1" set="method" line="250" static="1">
			<f a="keyCode">
				<x path="lime.ui.KeyCode"/>
				<x path="lime.ui.ScanCode"/>
			</f>
			<meta><m n=":from"/></meta>
		</fromKeyCode>
		<toKeyCode set="method" line="256" static="1"><f a="scanCode">
	<x path="lime.ui.ScanCode"/>
	<x path="lime.ui.KeyCode"/>
</f></toKeyCode>
		<gt get="inline" set="null" line="262" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="263" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="264" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="265" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="lime.ui.ScanCode"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<plus get="inline" set="null" line="266" static="1">
			<f a="a:b">
				<x path="lime.ui.ScanCode"/>
				<x path="Int"/>
				<x path="lime.ui.ScanCode"/>
			</f>
			<meta><m n=":op"><e>A + B</e></m></meta>
		</plus>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
			<m n=":access"><e>lime.ui.KeyCode</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		</meta>
	</class>
	<class path="lime.ui.Touch" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Touch.hx">
		<onCancel public="1" expr="new Event&lt;Touch&gt;()" line="15" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onCancel>
		<onEnd public="1" expr="new Event&lt;Touch&gt;()" line="16" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onEnd>
		<onMove public="1" expr="new Event&lt;Touch&gt;()" line="17" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onMove>
		<onStart public="1" expr="new Event&lt;Touch&gt;()" line="18" static="1">
			<c path="lime.app._Event_lime_ui_Touch_Void"><f a="">
	<c path="lime.ui.Touch"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Touch>()]]></e></m></meta>
		</onStart>
		<device public="1"><x path="Int"/></device>
		<dx public="1"><x path="Float"/></dx>
		<dy public="1"><x path="Float"/></dy>
		<id public="1"><x path="Int"/></id>
		<pressure public="1"><x path="Float"/></pressure>
		<x public="1"><x path="Float"/></x>
		<y public="1"><x path="Float"/></y>
		<new public="1" set="method" line="29"><f a="x:y:id:dx:dy:pressure:device">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.ui.Stage" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx" module="lime.ui.Window"><d/></typedef>
	<class path="lime.ui.Window" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx">
		<application public="1" set="null"><c path="lime.app.Application"/></application>
		<borderless public="1" get="accessor" set="accessor"><x path="Bool"/></borderless>
		<context public="1" set="null"><c path="lime.graphics.RenderContext"/></context>
		<cursor public="1" get="accessor" set="accessor"><e path="lime.ui.MouseCursor"/></cursor>
		<display public="1" get="accessor" set="null"><c path="lime.system.Display"/></display>
		<displayMode public="1" get="accessor" set="accessor"><c path="lime.system.DisplayMode"/></displayMode>
		<element public="1" set="null"><c path="js.html.Element"/></element>
		<frameRate public="1" get="accessor" set="accessor">
			<x path="Float"/>
			<haxe_doc>* The current frame rate (measured in frames-per-second) of the window.
	 *
	 * On some platforms, a frame rate of 60 or greater may imply vsync, which will
	 * perform more quickly on displays with a higher refresh rate</haxe_doc>
		</frameRate>
		<fullscreen public="1" get="accessor" set="accessor"><x path="Bool"/></fullscreen>
		<height public="1" get="accessor" set="accessor"><x path="Int"/></height>
		<hidden public="1" get="accessor" set="null"><x path="Bool"/></hidden>
		<id public="1" set="null"><x path="Int"/></id>
		<maximized public="1" get="accessor" set="accessor"><x path="Bool"/></maximized>
		<minimized public="1" get="accessor" set="accessor"><x path="Bool"/></minimized>
		<mouseLock public="1" get="accessor" set="accessor"><x path="Bool"/></mouseLock>
		<onActivate public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onActivate>
		<onClose public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onClose>
		<onDeactivate public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onDeactivate>
		<onDropFile public="1" set="null" expr="new Event&lt;String&gt;()">
			<c path="lime.app._Event_String_Void"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onDropFile>
		<onEnter public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onEnter>
		<onExpose public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onExpose>
		<onFocusIn public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFocusIn>
		<onFocusOut public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFocusOut>
		<onFullscreen public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onFullscreen>
		<onKeyDown public="1" set="null" expr="new Event&lt;KeyCode -&gt; KeyModifier&gt;()">
			<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<KeyCode -> KeyModifier>()]]></e></m></meta>
		</onKeyDown>
		<onKeyUp public="1" set="null" expr="new Event&lt;KeyCode -&gt; KeyModifier&gt;()">
			<c path="lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"><f a=":">
	<x path="lime.ui.KeyCode"/>
	<x path="lime.ui.KeyModifier"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<KeyCode -> KeyModifier>()]]></e></m></meta>
		</onKeyUp>
		<onLeave public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onLeave>
		<onMaximize public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onMaximize>
		<onMinimize public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onMinimize>
		<onMouseDown public="1" set="null" expr="new Event&lt;Float -&gt; Float -&gt; MouseButton&gt;()">
			<c path="lime.app._Event_Float_Float_lime_ui_MouseButton_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="lime.ui.MouseButton"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> MouseButton>()]]></e></m></meta>
		</onMouseDown>
		<onMouseMove public="1" set="null" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Void"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseMove>
		<onMouseMoveRelative public="1" set="null" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Void"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMouseMoveRelative>
		<onMouseUp public="1" set="null" expr="new Event&lt;Float -&gt; Float -&gt; Int&gt;()">
			<c path="lime.app._Event_Float_Float_Int_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> Int>()]]></e></m></meta>
		</onMouseUp>
		<onMouseWheel public="1" set="null" expr="new Event&lt;Float -&gt; Float -&gt; MouseWheelMode&gt;()">
			<c path="lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"><f a="::">
	<x path="Float"/>
	<x path="Float"/>
	<e path="lime.ui.MouseWheelMode"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float -> MouseWheelMode>()]]></e></m></meta>
		</onMouseWheel>
		<onMove public="1" set="null" expr="new Event&lt;Float -&gt; Float&gt;()">
			<c path="lime.app._Event_Float_Float_Void"><f a=":">
	<x path="Float"/>
	<x path="Float"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Float -> Float>()]]></e></m></meta>
		</onMove>
		<onRender public="1" set="null" expr="new Event&lt;RenderContext&gt;()">
			<c path="lime.app._Event_lime_graphics_RenderContext_Void"><f a="">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<RenderContext>()]]></e></m></meta>
		</onRender>
		<onRenderContextLost public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onRenderContextLost>
		<onRenderContextRestored public="1" set="null" expr="new Event&lt;RenderContext&gt;()">
			<c path="lime.app._Event_lime_graphics_RenderContext_Void"><f a="">
	<c path="lime.graphics.RenderContext"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<RenderContext>()]]></e></m></meta>
		</onRenderContextRestored>
		<onResize public="1" set="null" expr="new Event&lt;Int -&gt; Int&gt;()">
			<c path="lime.app._Event_Int_Int_Void"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Int>()]]></e></m></meta>
		</onResize>
		<onRestore public="1" set="null" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onRestore>
		<onTextEdit public="1" set="null" expr="new Event&lt;String -&gt; Int -&gt; Int&gt;()">
			<c path="lime.app._Event_String_Int_Int_Void"><f a="::">
	<c path="String"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String -> Int -> Int>()]]></e></m></meta>
		</onTextEdit>
		<onTextInput public="1" set="null" expr="new Event&lt;String&gt;()">
			<c path="lime.app._Event_String_Void"><f a="">
	<c path="String"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<String>()]]></e></m></meta>
		</onTextInput>
		<parameters public="1"><d/></parameters>
		<resizable public="1" get="accessor" set="accessor"><x path="Bool"/></resizable>
		<scale public="1" get="accessor" set="null"><x path="Float"/></scale>
		<textInputEnabled public="1" get="accessor" set="accessor"><x path="Bool"/></textInputEnabled>
		<title public="1" get="accessor" set="accessor"><c path="String"/></title>
		<width public="1" get="accessor" set="accessor"><x path="Int"/></width>
		<x public="1" get="accessor" set="accessor"><x path="Int"/></x>
		<y public="1" get="accessor" set="accessor"><x path="Int"/></y>
		<__attributes>
			<t path="lime.ui.WindowAttributes"/>
			<meta><m n=":noCompletion"/></meta>
		</__attributes>
		<__backend>
			<t path="lime.ui._Window.WindowBackend"/>
			<meta><m n=":noCompletion"/></meta>
		</__backend>
		<__borderless>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__borderless>
		<__fullscreen>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__fullscreen>
		<__height>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__height>
		<__hidden>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__hidden>
		<__maximized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__maximized>
		<__minimized>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__minimized>
		<__resizable>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</__resizable>
		<__scale>
			<x path="Float"/>
			<meta><m n=":noCompletion"/></meta>
		</__scale>
		<__title>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</__title>
		<__width>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__width>
		<__x>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__x>
		<__y>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</__y>
		<alert public="1" set="method" line="380">
			<f a="?message:?title" v="null:null">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ title : null, message : null }</e></m></meta>
		</alert>
		<close public="1" set="method" line="387"><f a=""><x path="Void"/></f></close>
		<focus public="1" set="method" line="394"><f a=""><x path="Void"/></f></focus>
		<move public="1" set="method" line="401"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></move>
		<readPixels public="1" set="method" line="411">
			<f a="?rect" v="null">
				<c path="lime.math.Rectangle"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ rect : null }</e></m></meta>
		</readPixels>
		<resize public="1" set="method" line="418"><f a="width:height">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></resize>
		<setIcon public="1" set="method" line="428"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Void"/>
</f></setIcon>
		<toString public="1" set="method" line="441"><f a=""><c path="String"/></f></toString>
		<warpMouse public="1" set="method" line="448"><f a="x:y">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></warpMouse>
		<get_cursor set="method" line="462">
			<f a=""><e path="lime.ui.MouseCursor"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_cursor>
		<set_cursor set="method" line="469">
			<f a="value">
				<e path="lime.ui.MouseCursor"/>
				<e path="lime.ui.MouseCursor"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_cursor>
		<get_display set="method" line="476">
			<f a=""><c path="lime.system.Display"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_display>
		<get_displayMode set="method" line="483">
			<f a=""><c path="lime.system.DisplayMode"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_displayMode>
		<set_displayMode set="method" line="490">
			<f a="value">
				<c path="lime.system.DisplayMode"/>
				<c path="lime.system.DisplayMode"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_displayMode>
		<get_borderless get="inline" set="null" line="497">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_borderless>
		<set_borderless set="method" line="504">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_borderless>
		<get_frameRate get="inline" set="null" line="511">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_frameRate>
		<set_frameRate get="inline" set="null" line="518">
			<f a="value">
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_frameRate>
		<get_fullscreen get="inline" set="null" line="525">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_fullscreen>
		<set_fullscreen set="method" line="532">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_fullscreen>
		<get_height get="inline" set="null" line="539">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_height>
		<set_height set="method" line="546">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_height>
		<get_hidden get="inline" set="null" line="554">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_hidden>
		<get_maximized get="inline" set="null" line="561">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_maximized>
		<set_maximized get="inline" set="null" line="568">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_maximized>
		<get_minimized get="inline" set="null" line="576">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_minimized>
		<set_minimized set="method" line="583">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_minimized>
		<get_mouseLock set="method" line="591">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_mouseLock>
		<set_mouseLock set="method" line="598">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_mouseLock>
		<get_resizable get="inline" set="null" line="606">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_resizable>
		<set_resizable set="method" line="613">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_resizable>
		<get_scale get="inline" set="null" line="621">
			<f a=""><x path="Float"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_scale>
		<get_textInputEnabled get="inline" set="null" line="628">
			<f a=""><x path="Bool"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_textInputEnabled>
		<set_textInputEnabled get="inline" set="null" line="635">
			<f a="value">
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_textInputEnabled>
		<get_title get="inline" set="null" line="642">
			<f a=""><c path="String"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_title>
		<set_title set="method" line="649">
			<f a="value">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_title>
		<get_width get="inline" set="null" line="656">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_width>
		<set_width set="method" line="663">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_width>
		<get_x get="inline" set="null" line="671">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_x>
		<set_x set="method" line="678">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_x>
		<get_y get="inline" set="null" line="686">
			<f a=""><x path="Int"/></f>
			<meta><m n=":noCompletion"/></meta>
		</get_y>
		<set_y set="method" line="693">
			<f a="value">
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_y>
		<new set="method" line="149">
			<f a="application:attributes">
				<c path="lime.app.Application"/>
				<t path="lime.ui.WindowAttributes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<typedef path="lime.ui._Window.WindowBackend" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/Window.hx" private="1" module="lime.ui.Window">
		<c path="lime._internal.backend.html5.HTML5Window"/>
		<meta><m n=":noCompletion"/></meta>
	</typedef>
	<typedef path="lime.ui.WindowAttributes" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/ui/WindowAttributes.hx"><a>
	<y>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</y>
	<x>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</x>
	<width>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</width>
	<title>
		<x path="Null"><c path="String"/></x>
		<meta><m n=":optional"/></meta>
	</title>
	<resizable>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</resizable>
	<parameters>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</parameters>
	<minimized>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</minimized>
	<maximized>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</maximized>
	<hidden>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</hidden>
	<height>
		<x path="Null"><x path="Int"/></x>
		<meta><m n=":optional"/></meta>
	</height>
	<fullscreen>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</fullscreen>
	<frameRate>
		<x path="Null"><x path="Float"/></x>
		<meta><m n=":optional"/></meta>
	</frameRate>
	<element>
		<x path="Null"><d/></x>
		<meta><m n=":optional"/></meta>
	</element>
	<context>
		<x path="Null"><t path="lime.graphics.RenderContextAttributes"/></x>
		<meta><m n=":optional"/></meta>
	</context>
	<borderless>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</borderless>
	<alwaysOnTop>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</alwaysOnTop>
	<allowHighDPI>
		<x path="Null"><x path="Bool"/></x>
		<meta><m n=":optional"/></meta>
	</allowHighDPI>
</a></typedef>
	<abstract path="lime.utils.ArrayBuffer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBuffer.hx">
		<from><icast><c path="haxe.io.Bytes"/></icast></from>
		<this><c path="haxe.io.Bytes"/></this>
		<to><icast><c path="haxe.io.Bytes"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBuffer.hx" private="1" module="lime.utils.ArrayBuffer">
	<_new public="1" get="inline" set="null" line="13" static="1">
		<f a="byteLength">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._ArrayBuffer.ArrayBuffer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBuffer.hx" private="1" module="lime.utils.ArrayBuffer">
		<_new public="1" get="inline" set="null" line="13" static="1">
			<f a="byteLength">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.TypedArrayType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<from><icast><x path="Int"/></icast></from>
		<this><x path="Int"/></this>
		<to><icast><x path="Int"/></icast></to>
		<meta>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
			<m n=":enum"/>
		</meta>
		<impl><class path="lime.utils._ArrayBufferView.TypedArrayType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBufferView.hx" private="1" module="lime.utils.ArrayBufferView" extern="1">
	<None public="1" get="inline" set="null" expr="cast 0" line="409" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</None>
	<Int8 public="1" get="inline" set="null" expr="cast 1" line="410" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int8>
	<Int16 public="1" get="inline" set="null" expr="cast 2" line="411" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int16>
	<Int32 public="1" get="inline" set="null" expr="cast 3" line="412" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Int32>
	<Uint8 public="1" get="inline" set="null" expr="cast 4" line="413" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint8>
	<Uint8Clamped public="1" get="inline" set="null" expr="cast 5" line="414" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint8Clamped>
	<Uint16 public="1" get="inline" set="null" expr="cast 6" line="415" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 6</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint16>
	<Uint32 public="1" get="inline" set="null" expr="cast 7" line="416" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 7</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Uint32>
	<Float32 public="1" get="inline" set="null" expr="cast 8" line="417" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 8</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Float32>
	<Float64 public="1" get="inline" set="null" expr="cast 9" line="418" static="1">
		<x path="lime.utils.TypedArrayType"/>
		<meta>
			<m n=":value"><e>cast 9</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</Float64>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._ArrayBufferView.TypedArrayType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBufferView.hx" private="1" module="lime.utils.ArrayBufferView" extern="1">
		<None public="1" get="inline" set="null" expr="cast 0" line="409" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</None>
		<Int8 public="1" get="inline" set="null" expr="cast 1" line="410" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int8>
		<Int16 public="1" get="inline" set="null" expr="cast 2" line="411" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int16>
		<Int32 public="1" get="inline" set="null" expr="cast 3" line="412" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Int32>
		<Uint8 public="1" get="inline" set="null" expr="cast 4" line="413" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint8>
		<Uint8Clamped public="1" get="inline" set="null" expr="cast 5" line="414" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint8Clamped>
		<Uint16 public="1" get="inline" set="null" expr="cast 6" line="415" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 6</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint16>
		<Uint32 public="1" get="inline" set="null" expr="cast 7" line="416" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 7</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Uint32>
		<Float32 public="1" get="inline" set="null" expr="cast 8" line="417" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 8</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Float32>
		<Float64 public="1" get="inline" set="null" expr="cast 9" line="418" static="1">
			<x path="lime.utils.TypedArrayType"/>
			<meta>
				<m n=":value"><e>cast 9</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</Float64>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.utils.ArrayBufferIO" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ArrayBufferView.hx" module="lime.utils.ArrayBufferView">
		<getInt8 public="1" get="inline" set="null" line="428" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getInt8>
		<setInt8 public="1" get="inline" set="null" line="440" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setInt8>
		<getUint8 public="1" get="inline" set="null" line="454" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint8>
		<setUint8Clamped public="1" get="inline" set="null" line="465" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint8Clamped>
		<setUint8 public="1" get="inline" set="null" line="472" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint8>
		<getInt16 public="1" set="method" line="488" static="1"><f a="buffer:byteOffset">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInt16>
		<getInt16_BE public="1" set="method" line="505" static="1"><f a="buffer:byteOffset">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
</f></getInt16_BE>
		<setInt16 public="1" set="method" line="523" static="1"><f a="buffer:byteOffset:value">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt16>
		<setInt16_BE public="1" set="method" line="539" static="1"><f a="buffer:byteOffset:value">
	<x path="lime.utils.ArrayBuffer"/>
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt16_BE>
		<getUint16 public="1" get="inline" set="null" line="555" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint16>
		<getUint16_BE public="1" get="inline" set="null" line="571" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint16_BE>
		<setUint16 public="1" get="inline" set="null" line="587" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint16>
		<setUint16_BE public="1" get="inline" set="null" line="598" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint16_BE>
		<getInt32 public="1" get="inline" set="null" line="612" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getInt32>
		<getInt32_BE public="1" get="inline" set="null" line="623" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getInt32_BE>
		<setInt32 public="1" get="inline" set="null" line="634" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setInt32>
		<setInt32_BE public="1" get="inline" set="null" line="649" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setInt32_BE>
		<getUint32 public="1" get="inline" set="null" line="664" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint32>
		<getUint32_BE public="1" get="inline" set="null" line="675" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta><m n=":extern"/></meta>
		</getUint32_BE>
		<setUint32 public="1" get="inline" set="null" line="686" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint32>
		<setUint32_BE public="1" get="inline" set="null" line="696" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setUint32_BE>
		<getFloat32 public="1" get="inline" set="null" line="709" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat32>
		<getFloat32_BE public="1" get="inline" set="null" line="720" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat32_BE>
		<setFloat32 public="1" get="inline" set="null" line="731" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat32>
		<setFloat32_BE public="1" get="inline" set="null" line="745" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat32_BE>
		<getFloat64 public="1" get="inline" set="null" line="759" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat64>
		<getFloat64_BE public="1" get="inline" set="null" line="770" static="1">
			<f a="buffer:byteOffset">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta><m n=":extern"/></meta>
		</getFloat64_BE>
		<setFloat64 public="1" get="inline" set="null" line="781" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat64>
		<setFloat64_BE public="1" get="inline" set="null" line="795" static="1">
			<f a="buffer:byteOffset:value">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Void"/>
			</f>
			<meta><m n=":extern"/></meta>
		</setFloat64_BE>
		<_clamp get="inline" set="null" line="811" static="1">
			<f a="_in">
				<x path="Float"/>
				<x path="Int"/>
			</f>
			<meta><m n=":extern"/></meta>
		</_clamp>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":noCompletion"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</class>
	<class path="lime.utils.AssetCache" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/AssetCache.hx">
		<audio public="1"><t path="Map">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</t></audio>
		<enabled public="1" expr="true">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
		</enabled>
		<image public="1"><t path="Map">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</t></image>
		<font public="1"><t path="Map">
	<c path="String"/>
	<d/>
</t></font>
		<version public="1"><x path="Int"/></version>
		<exists public="1" set="method" line="37"><f a="id:?type">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<x path="Bool"/>
</f></exists>
		<set public="1" set="method" line="62"><f a="id:type:asset">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<d/>
	<x path="Void"/>
</f></set>
		<clear public="1" set="method" line="89">
			<f a="?prefix" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ prefix : null }</e></m></meta>
		</clear>
		<new public="1" set="method" line="27"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.utils.AssetLibrary" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/AssetLibrary.hx">
		<fromBytes public="1" set="method" line="106" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="113" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<fromManifest public="1" set="method" line="120" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.utils.AssetLibrary"/>
</f></fromManifest>
		<loadFromBytes public="1" set="method" line="595" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="606" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<loadFromManifest public="1" set="method" line="617" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
</f></loadFromManifest>
		<onChange public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onChange>
		<assetsLoaded>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</assetsLoaded>
		<assetsTotal>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</assetsTotal>
		<bytesLoaded>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesLoaded>
		<bytesLoadedCache>
			<t path="Map">
				<c path="String"/>
				<x path="Int"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</bytesLoadedCache>
		<bytesTotal>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesTotal>
		<cachedAudioBuffers expr="new Map&lt;String,AudioBuffer&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,AudioBuffer>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedAudioBuffers>
		<cachedBytes expr="new Map&lt;String,Bytes&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Bytes>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedBytes>
		<cachedFonts expr="new Map&lt;String,Font&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.text.Font"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Font>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedFonts>
		<cachedImages expr="new Map&lt;String,Image&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Image>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedImages>
		<cachedText expr="new Map&lt;String,String&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</cachedText>
		<classTypes expr="new Map&lt;String,Class&lt;Dynamic&gt;&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Class"><d/></x>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Class<Dynamic>>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</classTypes>
		<loaded>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</loaded>
		<pathGroups expr="new Map&lt;String,Array&lt;String&gt;&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="Array"><c path="String"/></c>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Array<String>>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</pathGroups>
		<paths expr="new Map&lt;String,String&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</paths>
		<preload expr="new Map&lt;String,Bool&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Bool"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Bool>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</preload>
		<promise>
			<c path="lime.app.Promise"><c path="lime.utils.AssetLibrary"/></c>
			<meta><m n=":noCompletion"/></meta>
		</promise>
		<sizes expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</sizes>
		<types expr="new Map&lt;String,AssetType&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,AssetType>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</types>
		<exists public="1" set="method" line="60"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<getAsset public="1" set="method" line="154"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<d/>
</f></getAsset>
		<getAudioBuffer public="1" set="method" line="172"><f a="id">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></getAudioBuffer>
		<getBytes public="1" set="method" line="201"><f a="id">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></getBytes>
		<getFont public="1" set="method" line="251"><f a="id">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></getFont>
		<getImage public="1" set="method" line="282"><f a="id">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></getImage>
		<getPath public="1" set="method" line="309"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getPath>
		<getText public="1" set="method" line="328"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getText>
		<isLocal public="1" set="method" line="353"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<list public="1" set="method" line="394"><f a="type">
	<c path="String"/>
	<c path="Array"><c path="String"/></c>
</f></list>
		<loadAsset public="1" set="method" line="414"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<c path="lime.app.Future"><d/></c>
</f></loadAsset>
		<load public="1" set="method" line="432"><f a=""><c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c></f></load>
		<loadAudioBuffer public="1" set="method" line="516"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="543"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="566"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFont>
		<loadImage public="1" set="method" line="634"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadImage>
		<loadText public="1" set="method" line="653"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<unload public="1" set="method" line="685"><f a=""><x path="Void"/></f></unload>
		<__assetLoaded set="method" line="692">
			<f a="id">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__assetLoaded>
		<__cacheBreak set="method" line="741">
			<f a="path">
				<c path="String"/>
				<c path="String"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__cacheBreak>
		<__fromManifest set="method" line="760">
			<f a="manifest">
				<c path="lime.utils.AssetManifest"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromManifest>
		<loadAudioBuffer_onComplete set="method" line="845">
			<f a="id:audioBuffer">
				<c path="String"/>
				<c path="lime.media.AudioBuffer"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadAudioBuffer_onComplete>
		<loadAudioBuffer_onError set="method" line="877">
			<f a="id:message">
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadAudioBuffer_onError>
		<loadBytes_onComplete set="method" line="902">
			<f a="id:bytes">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadBytes_onComplete>
		<loadFont_onComplete set="method" line="910">
			<f a="id:font">
				<c path="String"/>
				<c path="lime.text.Font"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadFont_onComplete>
		<loadImage_onComplete set="method" line="918">
			<f a="id:image">
				<c path="String"/>
				<c path="lime.graphics.Image"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadImage_onComplete>
		<loadText_onComplete set="method" line="926">
			<f a="id:text">
				<c path="String"/>
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</loadText_onComplete>
		<load_onError set="method" line="934">
			<f a="id:message">
				<c path="String"/>
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</load_onError>
		<load_onProgress set="method" line="950">
			<f a="id:bytesLoaded:bytesTotal">
				<c path="String"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</load_onProgress>
		<new public="1" set="method" line="52"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime.text.Font</e></m>
		</meta>
	</class>
	<class path="lime.utils.AssetManifest" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/AssetManifest.hx">
		<fromBytes public="1" set="method" line="40" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="55" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<loadFromBytes public="1" set="method" line="67" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetManifest"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="74" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.AssetManifest"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<parse public="1" set="method" line="90" static="1">
			<f a="data:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.AssetManifest"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</parse>
		<__resolvePath set="method" line="158" static="1"><f a="path">
	<c path="String"/>
	<c path="String"/>
</f></__resolvePath>
		<__resolveRootPath set="method" line="204" static="1"><f a="rootPath:path">
	<c path="String"/>
	<c path="String"/>
	<c path="String"/>
</f></__resolveRootPath>
		<assets public="1"><c path="Array"><d/></c></assets>
		<libraryArgs public="1"><c path="Array"><c path="String"/></c></libraryArgs>
		<libraryType public="1"><c path="String"/></libraryType>
		<name public="1"><c path="String"/></name>
		<rootPath public="1"><c path="String"/></rootPath>
		<version public="1"><x path="Int"/></version>
		<serialize public="1" set="method" line="135"><f a=""><c path="String"/></f></serialize>
		<new public="1" set="method" line="31"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.AssetType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/AssetType.hx">
		<this><c path="String"/></this>
		<to><icast><c path="String"/></icast></to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.utils._AssetType.AssetType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/AssetType.hx" private="1" module="lime.utils.AssetType" extern="1">
	<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="6" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "BINARY"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</BINARY>
	<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="7" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "FONT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</FONT>
	<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="8" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "IMAGE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</IMAGE>
	<MANIFEST public="1" get="inline" set="null" expr="cast &quot;MANIFEST&quot;" line="9" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MANIFEST"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MANIFEST>
	<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="10" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "MUSIC"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</MUSIC>
	<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="11" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "SOUND"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</SOUND>
	<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="12" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEMPLATE"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEMPLATE>
	<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="13" static="1">
		<x path="lime.utils.AssetType"/>
		<meta>
			<m n=":value"><e>cast "TEXT"</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</TEXT>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._AssetType.AssetType_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/AssetType.hx" private="1" module="lime.utils.AssetType" extern="1">
		<BINARY public="1" get="inline" set="null" expr="cast &quot;BINARY&quot;" line="6" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "BINARY"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</BINARY>
		<FONT public="1" get="inline" set="null" expr="cast &quot;FONT&quot;" line="7" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "FONT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</FONT>
		<IMAGE public="1" get="inline" set="null" expr="cast &quot;IMAGE&quot;" line="8" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "IMAGE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</IMAGE>
		<MANIFEST public="1" get="inline" set="null" expr="cast &quot;MANIFEST&quot;" line="9" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MANIFEST"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MANIFEST>
		<MUSIC public="1" get="inline" set="null" expr="cast &quot;MUSIC&quot;" line="10" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "MUSIC"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</MUSIC>
		<SOUND public="1" get="inline" set="null" expr="cast &quot;SOUND&quot;" line="11" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "SOUND"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</SOUND>
		<TEMPLATE public="1" get="inline" set="null" expr="cast &quot;TEMPLATE&quot;" line="12" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEMPLATE"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEMPLATE>
		<TEXT public="1" get="inline" set="null" expr="cast &quot;TEXT&quot;" line="13" static="1">
			<x path="lime.utils.AssetType"/>
			<meta>
				<m n=":value"><e>cast "TEXT"</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</TEXT>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.utils.Assets" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Assets.hx">
		<cache public="1" expr="new AssetCache()" line="47" static="1">
			<c path="lime.utils.AssetCache"/>
			<meta><m n=":value"><e>new AssetCache()</e></m></meta>
		</cache>
		<onChange public="1" expr="new Event&lt;Void&gt;()" line="48" static="1">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onChange>
		<defaultRootPath static="1"><c path="String"/></defaultRootPath>
		<libraries set="null" expr="new Map&lt;String,AssetLibrary&gt;()" line="51" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="lime.utils.AssetLibrary"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,AssetLibrary>()]]></e></m></meta>
		</libraries>
		<libraryPaths expr="new Map&lt;String,String&gt;()" line="52" static="1">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<c path="String"/>
			</x>
			<meta><m n=":value"><e><![CDATA[new Map<String,String>()]]></e></m></meta>
		</libraryPaths>
		<exists public="1" set="method" line="55" static="1">
			<f a="id:?type" v=":null">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</exists>
		<getAsset public="1" set="method" line="86" static="1">
			<f a="id:type:useCache">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
				<d/>
			</f>
			<haxe_doc>* Gets an instance of a cached or embedded asset
	 * @usage		var sound = Assets.getAsset("sound.wav", SOUND);
	 * @param	id		The ID or asset path for the asset
	 * @return		An Asset object, or null.</haxe_doc>
		</getAsset>
		<getAudioBuffer public="1" set="method" line="189" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.media.AudioBuffer"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded sound
	 * @usage		var sound = Assets.getSound("sound.wav");
	 * @param	id		The ID or asset path for the sound
	 * @return		A new Sound object</haxe_doc>
		</getAudioBuffer>
		<getBytes public="1" set="method" line="202" static="1">
			<f a="id">
				<c path="String"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded binary asset
	 * @usage		var bytes = Assets.getBytes("file.zip");
	 * @param	id		The ID or asset path for the file
	 * @return		A new Bytes object</haxe_doc>
		</getBytes>
		<getFont public="1" set="method" line="215" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.text.Font"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded font
	 * @usage		var fontName = Assets.getFont("font.ttf").fontName;
	 * @param	id		The ID or asset path for the font
	 * @return		A new Font object</haxe_doc>
		</getFont>
		<getImage public="1" set="method" line="229" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.graphics.Image"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
			<haxe_doc>* Gets an instance of an embedded bitmap
	 * @usage		var bitmap = new Bitmap(Assets.getBitmapData("image.jpg"));
	 * @param	id		The ID or asset path for the bitmap
	 * @param	useCache		(Optional) Whether to use BitmapData from the cache(Default: true)
	 * @return		A new BitmapData object</haxe_doc>
		</getImage>
		<getLibrary public="1" set="method" line="236" static="1"><f a="name">
	<c path="String"/>
	<c path="lime.utils.AssetLibrary"/>
</f></getLibrary>
		<getPath public="1" set="method" line="255" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets the file path (if available) for an asset
	 * @usage		var path = Assets.getPath("image.jpg");
	 * @param	id		The ID or asset path for the asset
	 * @return		The path to the asset (or null)</haxe_doc>
		</getPath>
		<getText public="1" set="method" line="292" static="1">
			<f a="id">
				<c path="String"/>
				<c path="String"/>
			</f>
			<haxe_doc>* Gets an instance of an embedded text asset
	 * @usage		var text = Assets.getText("text.txt");
	 * @param	id		The ID or asset path for the file
	 * @return		A new String object</haxe_doc>
		</getText>
		<hasLibrary public="1" set="method" line="299" static="1"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasLibrary>
		<isLocal public="1" set="method" line="312" static="1">
			<f a="id:?type:?useCache" v=":null:true">
				<c path="String"/>
				<x path="lime.utils.AssetType"/>
				<x path="Bool"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":value"><e>{ useCache : true, type : null }</e></m></meta>
		</isLocal>
		<isValidAudio set="method" line="334" static="1"><f a="buffer">
	<c path="lime.media.AudioBuffer"/>
	<x path="Bool"/>
</f></isValidAudio>
		<isValidImage set="method" line="343" static="1"><f a="image">
	<c path="lime.graphics.Image"/>
	<x path="Bool"/>
</f></isValidImage>
		<list public="1" set="method" line="352" static="1">
			<f a="?type" v="null">
				<x path="lime.utils.AssetType"/>
				<c path="Array"><c path="String"/></c>
			</f>
			<meta><m n=":value"><e>{ type : null }</e></m></meta>
		</list>
		<loadAsset public="1" set="method" line="373" static="1"><f a="id:type:useCache">
	<c path="String"/>
	<x path="lime.utils.AssetType"/>
	<x path="Bool"/>
	<c path="lime.app.Future"><d/></c>
</f></loadAsset>
		<loadAudioBuffer public="1" set="method" line="464" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadAudioBuffer>
		<loadBytes public="1" set="method" line="471" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="478" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.text.Font"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadFont>
		<loadImage public="1" set="method" line="485" static="1">
			<f a="id:?useCache" v=":true">
				<c path="String"/>
				<x path="Bool"/>
				<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
			</f>
			<meta><m n=":value"><e>{ useCache : true }</e></m></meta>
		</loadImage>
		<loadLibrary public="1" set="method" line="492" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c>
</f></loadLibrary>
		<loadText public="1" set="method" line="556" static="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<registerLibrary public="1" set="method" line="563" static="1"><f a="name:library">
	<c path="String"/>
	<c path="lime.utils.AssetLibrary"/>
	<x path="Void"/>
</f></registerLibrary>
		<unloadLibrary public="1" set="method" line="590" static="1"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></unloadLibrary>
		<__libraryNotFound set="method" line="611" static="1"><f a="name">
	<c path="String"/>
	<c path="String"/>
</f></__libraryNotFound>
		<library_onChange set="method" line="639" static="1"><f a=""><x path="Void"/></f></library_onChange>
		<haxe_doc><![CDATA[* <p>The Assets class provides a cross-platform interface to access
 * embedded images, fonts, sounds and other resource files.</p>
 *
 * <p>The contents are populated automatically when an application
 * is compiled using the Lime command-line tools, based on the
 * contents of the project file.</p>
 *
 * <p>For most platforms, the assets are included in the same directory
 * or package as the application, and the paths are handled
 * automatically. For web content, the assets are preloaded before
 * the start of the rest of the application.</p>]]></haxe_doc>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":access"><e>lime.utils.AssetLibrary</e></m>
		</meta>
	</class>
	<class path="lime.utils._Assets.LibrarySymbol" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Assets.hx" private="1" module="lime.utils.Assets">
		<library public="1" set="null"><c path="lime.utils.AssetLibrary"/></library>
		<libraryName public="1" set="null"><c path="String"/></libraryName>
		<symbolName public="1" set="null"><c path="String"/></symbolName>
		<isLocal public="1" get="inline" set="null" line="674"><f a="?type">
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<exists public="1" get="inline" set="null" line="675"><f a="?type">
	<c path="String"/>
	<x path="Bool"/>
</f></exists>
		<new public="1" get="inline" set="null" line="664"><f a="id">
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.BytePointer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/BytePointer.hx">
		<from>
			<icast><c path="lime.utils.BytePointerData"/></icast>
			<icast field="fromArrayBufferView"><c path="lime.utils.ArrayBufferView"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
		</from>
		<this><c path="lime.utils.BytePointerData"/></this>
		<to>
			<icast><c path="lime.utils.BytePointerData"/></icast>
			<icast field="toUInt8Array"><x path="lime.utils.UInt8Array"/></icast>
			<icast field="toUInt8ClampedArray"><x path="lime.utils.UInt8ClampedArray"/></icast>
			<icast field="toInt8Array"><x path="lime.utils.Int8Array"/></icast>
			<icast field="toUInt16Array"><x path="lime.utils.UInt16Array"/></icast>
			<icast field="toInt16Array"><x path="lime.utils.Int16Array"/></icast>
			<icast field="toUInt32Array"><x path="lime.utils.UInt32Array"/></icast>
			<icast field="toInt32Array"><x path="lime.utils.Int32Array"/></icast>
			<icast field="toFloat32Array"><x path="lime.utils.Float32Array"/></icast>
			<icast field="toFloat64Array"><x path="lime.utils.Float64Array"/></icast>
		</to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime.utils.BytePointerData</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.utils._BytePointer.BytePointer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/BytePointer.hx" private="1" module="lime.utils.BytePointer">
	<_new public="1" get="inline" set="null" line="16" static="1">
		<f a="?bytes:?offset" v="null:0">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":value"><e>{ offset : 0, bytes : null }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<set public="1" set="method" line="23" static="1">
		<f a="this:?bytes:?bufferView:?buffer:?offset">
			<c path="lime.utils.BytePointerData"/>
			<c path="haxe.io.Bytes"/>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.ArrayBuffer"/>
			<x path="Int"/>
			<x path="Void"/>
		</f>
		<meta><m n=":impl"/></meta>
	</set>
	<__arrayGet get="inline" set="null" line="55" static="1">
		<f a="this:index">
			<c path="lime.utils.BytePointerData"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</__arrayGet>
	<__arraySet get="inline" set="null" line="62" static="1">
		<f a="this:index:value">
			<c path="lime.utils.BytePointerData"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":arrayAccess"/>
			<m n=":noCompletion"/>
		</meta>
	</__arraySet>
	<fromArrayBufferView public="1" set="method" line="70" static="1">
		<f a="arrayBufferView">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBufferView>
	<fromArrayBuffer public="1" set="method" line="83" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="96" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="103" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromFile public="1" set="method" line="111" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.BytePointer"/>
</f></fromFile>
	<fromLimeBytes public="1" set="method" line="118" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="lime.utils.BytePointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<toUInt8Array public="1" set="method" line="125" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt8Array>
	<toUInt8ClampedArray public="1" set="method" line="136" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt8ClampedArray>
	<toInt8Array public="1" set="method" line="149" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt8Array>
	<toUInt16Array public="1" set="method" line="162" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt16Array>
	<toInt16Array public="1" set="method" line="175" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt16Array>
	<toUInt32Array public="1" set="method" line="188" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toUInt32Array>
	<toInt32Array public="1" set="method" line="201" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toInt32Array>
	<toFloat32Array public="1" set="method" line="214" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toFloat32Array>
	<toFloat64Array public="1" set="method" line="227" static="1">
		<f a="bytePointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
			<m n=":noCompletion"/>
		</meta>
	</toFloat64Array>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>lime.utils.BytePointerData</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._BytePointer.BytePointer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/BytePointer.hx" private="1" module="lime.utils.BytePointer">
		<_new public="1" get="inline" set="null" line="16" static="1">
			<f a="?bytes:?offset" v="null:0">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":value"><e>{ offset : 0, bytes : null }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<set public="1" set="method" line="23" static="1">
			<f a="this:?bytes:?bufferView:?buffer:?offset">
				<c path="lime.utils.BytePointerData"/>
				<c path="haxe.io.Bytes"/>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":impl"/></meta>
		</set>
		<__arrayGet get="inline" set="null" line="55" static="1">
			<f a="this:index">
				<c path="lime.utils.BytePointerData"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</__arrayGet>
		<__arraySet get="inline" set="null" line="62" static="1">
			<f a="this:index:value">
				<c path="lime.utils.BytePointerData"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":arrayAccess"/>
				<m n=":noCompletion"/>
			</meta>
		</__arraySet>
		<fromArrayBufferView public="1" set="method" line="70" static="1">
			<f a="arrayBufferView">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBufferView>
		<fromArrayBuffer public="1" set="method" line="83" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="96" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="103" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromFile public="1" set="method" line="111" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.BytePointer"/>
</f></fromFile>
		<fromLimeBytes public="1" set="method" line="118" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="lime.utils.BytePointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<toUInt8Array public="1" set="method" line="125" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt8Array>
		<toUInt8ClampedArray public="1" set="method" line="136" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt8ClampedArray>
		<toInt8Array public="1" set="method" line="149" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt8Array>
		<toUInt16Array public="1" set="method" line="162" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt16Array>
		<toInt16Array public="1" set="method" line="175" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt16Array>
		<toUInt32Array public="1" set="method" line="188" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toUInt32Array>
		<toInt32Array public="1" set="method" line="201" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toInt32Array>
		<toFloat32Array public="1" set="method" line="214" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toFloat32Array>
		<toFloat64Array public="1" set="method" line="227" static="1">
			<f a="bytePointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
				<m n=":noCompletion"/>
			</meta>
		</toFloat64Array>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>lime.utils.BytePointerData</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<abstract path="lime.utils.Bytes" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Bytes.hx">
		<from><icast><t path="haxe.io._Bytes.HaxeBytes"/></icast></from>
		<this><t path="haxe.io._Bytes.HaxeBytes"/></this>
		<to><icast><t path="haxe.io._Bytes.HaxeBytes"/></icast></to>
		<meta>
			<m n=":access"><e>haxe.io.Bytes</e></m>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":forward"/>
		</meta>
		<impl><class path="lime.utils._Bytes.Bytes_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Bytes.hx" private="1" module="lime.utils.Bytes">
	<_new public="1" set="method" line="22" static="1">
		<f a="length:bytesData">
			<x path="Int"/>
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<alloc public="1" set="method" line="35" static="1"><f a="length">
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></alloc>
	<compress public="1" set="method" line="45" static="1">
		<f a="this:algorithm">
			<t path="haxe.io._Bytes.HaxeBytes"/>
			<e path="lime.utils.CompressionAlgorithm"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</compress>
	<decompress public="1" set="method" line="72" static="1">
		<f a="this:algorithm">
			<t path="haxe.io._Bytes.HaxeBytes"/>
			<e path="lime.utils.CompressionAlgorithm"/>
			<x path="lime.utils.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</decompress>
	<fastGet public="1" get="inline" set="null" line="99" static="1"><f a="b:pos">
	<t path="haxe.io.BytesData"/>
	<x path="Int"/>
	<x path="Int"/>
</f></fastGet>
	<fromBytes public="1" set="method" line="106" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="lime.utils.Bytes"/>
</f></fromBytes>
	<fromFile public="1" set="method" line="115" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></fromFile>
	<loadFromBytes public="1" set="method" line="132" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromBytes>
	<loadFromFile public="1" set="method" line="139" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromFile>
	<ofData public="1" set="method" line="147" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<x path="lime.utils.Bytes"/>
</f></ofData>
	<ofString public="1" set="method" line="155" static="1"><f a="s">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></ofString>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
		<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
		<m n=":access"><e>haxe.io.Bytes</e></m>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Bytes.Bytes_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Bytes.hx" private="1" module="lime.utils.Bytes">
		<_new public="1" set="method" line="22" static="1">
			<f a="length:bytesData">
				<x path="Int"/>
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<alloc public="1" set="method" line="35" static="1"><f a="length">
	<x path="Int"/>
	<x path="lime.utils.Bytes"/>
</f></alloc>
		<compress public="1" set="method" line="45" static="1">
			<f a="this:algorithm">
				<t path="haxe.io._Bytes.HaxeBytes"/>
				<e path="lime.utils.CompressionAlgorithm"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</compress>
		<decompress public="1" set="method" line="72" static="1">
			<f a="this:algorithm">
				<t path="haxe.io._Bytes.HaxeBytes"/>
				<e path="lime.utils.CompressionAlgorithm"/>
				<x path="lime.utils.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</decompress>
		<fastGet public="1" get="inline" set="null" line="99" static="1"><f a="b:pos">
	<t path="haxe.io.BytesData"/>
	<x path="Int"/>
	<x path="Int"/>
</f></fastGet>
		<fromBytes public="1" set="method" line="106" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<x path="lime.utils.Bytes"/>
</f></fromBytes>
		<fromFile public="1" set="method" line="115" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></fromFile>
		<loadFromBytes public="1" set="method" line="132" static="1"><f a="bytes">
	<c path="haxe.io.Bytes"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromBytes>
		<loadFromFile public="1" set="method" line="139" static="1"><f a="path">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadFromFile>
		<ofData public="1" set="method" line="147" static="1"><f a="b">
	<t path="haxe.io.BytesData"/>
	<x path="lime.utils.Bytes"/>
</f></ofData>
		<ofString public="1" set="method" line="155" static="1"><f a="s">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></ofString>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
			<m n=":access"><e>lime._internal.backend.native.NativeCFFI</e></m>
			<m n=":access"><e>haxe.io.Bytes</e></m>
		</meta>
	</class>
	<enum path="lime.utils.CompressionAlgorithm" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/CompressionAlgorithm.hx">
		<DEFLATE/>
		<GZIP/>
		<LZMA/>
		<ZLIB/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
		</meta>
	</enum>
	<abstract path="lime.utils.DataPointer" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataPointer.hx">
		<from>
			<icast field="fromInt"><x path="Int"/></icast>
			<icast field="fromFloat"><x path="Float"/></icast>
			<icast field="fromBytesPointer"><x path="lime.utils.BytePointer"/></icast>
			<icast field="fromArrayBufferView"><c path="lime.utils.ArrayBufferView"/></icast>
			<icast field="fromArrayBuffer"><x path="lime.utils.ArrayBuffer"/></icast>
			<icast field="fromBytes"><c path="haxe.io.Bytes"/></icast>
			<icast field="fromBytesData"><t path="haxe.io.BytesData"/></icast>
			<icast field="fromLimeBytes"><t path="lime.utils._Bytes.LimeBytes"/></icast>
		</from>
		<this><t path="lime.utils._DataPointer.DataPointerType"/></this>
		<to><icast><t path="lime.utils._DataPointer.DataPointerType"/></icast></to>
		<impl><class path="lime.utils._DataPointer.DataPointer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer">
	<_new set="method" line="18" static="1">
		<f a="data">
			<t path="lime.utils._DataPointer.DataPointerType"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<fromInt set="method" line="25" static="1">
		<f a="value">
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromInt>
	<fromFloat set="method" line="39" static="1">
		<f a="value">
			<x path="Float"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromFloat>
	<fromBytesPointer public="1" set="method" line="52" static="1">
		<f a="pointer">
			<x path="lime.utils.BytePointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesPointer>
	<fromArrayBufferView public="1" set="method" line="67" static="1">
		<f a="arrayBufferView">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBufferView>
	<fromArrayBuffer public="1" set="method" line="82" static="1">
		<f a="buffer">
			<x path="lime.utils.ArrayBuffer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromArrayBuffer>
	<fromBytes public="1" set="method" line="96" static="1">
		<f a="bytes">
			<c path="haxe.io.Bytes"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytes>
	<fromBytesData public="1" set="method" line="111" static="1">
		<f a="bytesData">
			<t path="haxe.io.BytesData"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromBytesData>
	<fromLimeBytes public="1" set="method" line="125" static="1">
		<f a="bytes">
			<t path="lime.utils._Bytes.LimeBytes"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":from"/>
			<m n=":noCompletion"/>
		</meta>
	</fromLimeBytes>
	<fromFile public="1" set="method" line="146" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.DataPointer"/>
</f></fromFile>
	<__withOffset set="method" line="396" static="1"><f a="data:offset">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></__withOffset>
	<equals get="inline" set="null" line="409" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equals>
	<equalsPointer get="inline" set="null" line="410" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A == B</e></m>
		</meta>
	</equalsPointer>
	<greaterThan get="inline" set="null" line="411" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A > B]]></e></m>
		</meta>
	</greaterThan>
	<greaterThanOrEqual get="inline" set="null" line="415" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A >= B]]></e></m>
		</meta>
	</greaterThanOrEqual>
	<lessThan get="inline" set="null" line="419" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A < B]]></e></m>
		</meta>
	</lessThan>
	<lessThanOrEqual get="inline" set="null" line="423" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e><![CDATA[A <= B]]></e></m>
		</meta>
	</lessThanOrEqual>
	<notEquals get="inline" set="null" line="427" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEquals>
	<notEqualsPointer get="inline" set="null" line="428" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="Bool"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A != B</e></m>
		</meta>
	</notEqualsPointer>
	<plus get="inline" set="null" line="429" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A + B</e></m>
		</meta>
	</plus>
	<plusPointer get="inline" set="null" line="430" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A + B</e></m>
		</meta>
	</plusPointer>
	<minus get="inline" set="null" line="431" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="Int"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A - B</e></m>
		</meta>
	</minus>
	<minusPointer get="inline" set="null" line="432" static="1">
		<f a="a:b">
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
			<x path="lime.utils.DataPointer"/>
		</f>
		<meta>
			<m n=":noCompletion"/>
			<m n=":op"><e>A - B</e></m>
		</meta>
	</minusPointer>
	<meta>
		<m n=":directlyUsed"/>
		<m n=":final"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._DataPointer.DataPointer_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer">
		<_new set="method" line="18" static="1">
			<f a="data">
				<t path="lime.utils._DataPointer.DataPointerType"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<fromInt set="method" line="25" static="1">
			<f a="value">
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromInt>
		<fromFloat set="method" line="39" static="1">
			<f a="value">
				<x path="Float"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromFloat>
		<fromBytesPointer public="1" set="method" line="52" static="1">
			<f a="pointer">
				<x path="lime.utils.BytePointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesPointer>
		<fromArrayBufferView public="1" set="method" line="67" static="1">
			<f a="arrayBufferView">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBufferView>
		<fromArrayBuffer public="1" set="method" line="82" static="1">
			<f a="buffer">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromArrayBuffer>
		<fromBytes public="1" set="method" line="96" static="1">
			<f a="bytes">
				<c path="haxe.io.Bytes"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytes>
		<fromBytesData public="1" set="method" line="111" static="1">
			<f a="bytesData">
				<t path="haxe.io.BytesData"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromBytesData>
		<fromLimeBytes public="1" set="method" line="125" static="1">
			<f a="bytes">
				<t path="lime.utils._Bytes.LimeBytes"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":from"/>
				<m n=":noCompletion"/>
			</meta>
		</fromLimeBytes>
		<fromFile public="1" set="method" line="146" static="1"><f a="path">
	<c path="String"/>
	<x path="lime.utils.DataPointer"/>
</f></fromFile>
		<__withOffset set="method" line="396" static="1"><f a="data:offset">
	<x path="lime.utils.DataPointer"/>
	<x path="Int"/>
	<x path="lime.utils.DataPointer"/>
</f></__withOffset>
		<equals get="inline" set="null" line="409" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equals>
		<equalsPointer get="inline" set="null" line="410" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A == B</e></m>
			</meta>
		</equalsPointer>
		<greaterThan get="inline" set="null" line="411" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A > B]]></e></m>
			</meta>
		</greaterThan>
		<greaterThanOrEqual get="inline" set="null" line="415" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A >= B]]></e></m>
			</meta>
		</greaterThanOrEqual>
		<lessThan get="inline" set="null" line="419" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A < B]]></e></m>
			</meta>
		</lessThan>
		<lessThanOrEqual get="inline" set="null" line="423" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e><![CDATA[A <= B]]></e></m>
			</meta>
		</lessThanOrEqual>
		<notEquals get="inline" set="null" line="427" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEquals>
		<notEqualsPointer get="inline" set="null" line="428" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="Bool"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A != B</e></m>
			</meta>
		</notEqualsPointer>
		<plus get="inline" set="null" line="429" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A + B</e></m>
			</meta>
		</plus>
		<plusPointer get="inline" set="null" line="430" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A + B</e></m>
			</meta>
		</plusPointer>
		<minus get="inline" set="null" line="431" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="Int"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A - B</e></m>
			</meta>
		</minus>
		<minusPointer get="inline" set="null" line="432" static="1">
			<f a="a:b">
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
				<x path="lime.utils.DataPointer"/>
			</f>
			<meta>
				<m n=":noCompletion"/>
				<m n=":op"><e>A - B</e></m>
			</meta>
		</minusPointer>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":final"/>
		</meta>
	</class>
	<typedef path="lime.utils._DataPointer.DataPointerType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataPointer.hx" private="1" module="lime.utils.DataPointer"><d/></typedef>
	<class path="lime.utils.DataPointerObject" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataPointer.hx" module="lime.utils.DataPointer">
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<bufferView public="1"><c path="lime.utils.ArrayBufferView"/></bufferView>
		<offset public="1"><x path="Int"/></offset>
		<type public="1"><e path="lime.utils.DataPointerObjectType"/></type>
		<new public="1" set="method" line="452">
			<f a="?bufferView:?buffer:?offset" v="::0">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ offset : 0 }</e></m></meta>
		</new>
		<meta><m n=":dox"><e>hide</e></m></meta>
	</class>
	<enum path="lime.utils.DataPointerObjectType" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataPointer.hx" module="lime.utils.DataPointer">
		<BUFFER/>
		<BUFFER_VIEW/>
		<VALUE/>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":flatEnum"/>
			<m n=":dox"><e>hide</e></m>
		</meta>
	</enum>
	<class path="lime.utils.DataView" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/DataView.hx">
		<buffer public="1"><x path="lime.utils.ArrayBuffer"/></buffer>
		<byteLength public="1"><x path="Int"/></byteLength>
		<byteOffset public="1"><x path="Int"/></byteOffset>
		<getInt8 public="1" get="inline" set="null" line="146"><f a="byteOffset">
	<x path="Int"/>
	<x path="Int"/>
</f></getInt8>
		<getInt16 public="1" get="inline" set="null" line="151">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getInt16>
		<getInt32 public="1" get="inline" set="null" line="158">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Int"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getInt32>
		<getUint8 public="1" get="inline" set="null" line="165"><f a="byteOffset">
	<x path="Int"/>
	<x path="UInt"/>
</f></getUint8>
		<getUint16 public="1" get="inline" set="null" line="170">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="UInt"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getUint16>
		<getUint32 public="1" get="inline" set="null" line="177">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="UInt"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getUint32>
		<getFloat32 public="1" get="inline" set="null" line="184">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getFloat32>
		<getFloat64 public="1" get="inline" set="null" line="191">
			<f a="byteOffset:?littleEndian" v=":true">
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Float"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</getFloat64>
		<setInt8 public="1" get="inline" set="null" line="201"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></setInt8>
		<setInt16 public="1" get="inline" set="null" line="206">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setInt16>
		<setInt32 public="1" get="inline" set="null" line="213">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setInt32>
		<setUint8 public="1" get="inline" set="null" line="220"><f a="byteOffset:value">
	<x path="Int"/>
	<x path="UInt"/>
	<x path="Void"/>
</f></setUint8>
		<setUint16 public="1" get="inline" set="null" line="225">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setUint16>
		<setUint32 public="1" get="inline" set="null" line="232">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="UInt"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setUint32>
		<setFloat32 public="1" get="inline" set="null" line="239">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setFloat32>
		<setFloat64 public="1" get="inline" set="null" line="246">
			<f a="byteOffset:value:?littleEndian" v="::true">
				<x path="Int"/>
				<x path="Float"/>
				<x path="Bool"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ littleEndian : true }</e></m></meta>
		</setFloat64>
		<new public="1" get="inline" set="null" line="119">
			<f a="buffer:?byteOffset:?byteLength" v=":0:null">
				<x path="lime.utils.ArrayBuffer"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ byteLength : null, byteOffset : 0 }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.Float32Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Float32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Float32Array.Float32Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Float32Array.hx" private="1" module="lime.utils.Float32Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="67" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<hello public="1" static="1"><x path="Int"/></hello>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="72" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="97" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="101" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="105" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<toString get="inline" set="null" line="111" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_length get="inline" set="null" line="113" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":extern"/>
		</meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="118" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="124" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Float32Array.Float32Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Float32Array.hx" private="1" module="lime.utils.Float32Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="67" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<hello public="1" static="1"><x path="Int"/></hello>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="72" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="97" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="101" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="105" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<toString get="inline" set="null" line="111" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_length get="inline" set="null" line="113" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":extern"/>
			</meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="118" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="124" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Float64Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Float64Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Float64Array.Float64Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Float64Array.hx" private="1" module="lime.utils.Float64Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="65" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>8</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="70" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="95" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="99" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Float64Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="114" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Float"/>
			<x path="Float"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="125" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Float64Array.Float64Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Float64Array.hx" private="1" module="lime.utils.Float64Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="8" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>8</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="95" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="99" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Float64Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="114" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Float"/>
				<x path="Float"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="125" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Int16Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int16Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int16Array.Int16Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int16Array.hx" private="1" module="lime.utils.Int16Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="65" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>2</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="70" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="95" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="99" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int16Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="114" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="125" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Int16Array.Int16Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int16Array.hx" private="1" module="lime.utils.Int16Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="95" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="99" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int16Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="114" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="125" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Int32Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int32Array.Int32Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int32Array.hx" private="1" module="lime.utils.Int32Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="65" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="70" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="95" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="99" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="114" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="125" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Int32Array.Int32Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int32Array.hx" private="1" module="lime.utils.Int32Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="95" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="99" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="114" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="125" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.Int8Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int8Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._Int8Array.Int8Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int8Array.hx" private="1" module="lime.utils.Int8Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="63" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="68" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="93" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="97" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.Int8Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="114" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="Int"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="125" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Int8Array.Int8Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Int8Array.hx" private="1" module="lime.utils.Int8Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="63" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="68" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="93" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="97" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.Int8Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="114" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="Int"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="125" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<class path="lime.utils.Log" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Log.hx">
		<level public="1" static="1"><x path="lime.utils.LogLevel"/></level>
		<throwErrors public="1" expr="true" line="16" static="1">
			<x path="Bool"/>
			<meta><m n=":value"><e>true</e></m></meta>
		</throwErrors>
		<debug public="1" set="method" line="19" static="1">
			<f a="message:?info">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</debug>
		<error public="1" set="method" line="34" static="1">
			<f a="message:?info">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</error>
		<info public="1" set="method" line="59" static="1">
			<f a="message:?info">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</info>
		<print public="1" get="inline" set="null" line="74" static="1">
			<f a="message">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</print>
		<println public="1" get="inline" set="null" line="89" static="1">
			<f a="message">
				<d/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</println>
		<verbose public="1" set="method" line="104" static="1"><f a="message:?info">
	<d/>
	<t path="haxe.PosInfos"/>
	<x path="Void"/>
</f></verbose>
		<warn public="1" set="method" line="115" static="1">
			<f a="message:?info">
				<d/>
				<t path="haxe.PosInfos"/>
				<x path="Void"/>
			</f>
			<meta><m n=":has_untyped"/></meta>
		</warn>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.LogLevel" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/LogLevel.hx">
		<from>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</from>
		<this><x path="Int"/></this>
		<to>
			<icast><x path="UInt"/></icast>
			<icast><x path="Int"/></icast>
		</to>
		<meta><m n=":enum"/></meta>
		<impl><class path="lime.utils._LogLevel.LogLevel_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/LogLevel.hx" private="1" module="lime.utils.LogLevel">
	<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 0</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</NONE>
	<ERROR public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 1</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</ERROR>
	<WARN public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 2</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</WARN>
	<INFO public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 3</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</INFO>
	<DEBUG public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 4</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</DEBUG>
	<VERBOSE public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
		<x path="lime.utils.LogLevel"/>
		<meta>
			<m n=":value"><e>cast 5</e></m>
			<m n=":enum"/>
			<m n=":impl"/>
		</meta>
	</VERBOSE>
	<gt get="inline" set="null" line="13" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
	</gt>
	<gte get="inline" set="null" line="14" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
	</gte>
	<lt get="inline" set="null" line="15" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
	</lt>
	<lte get="inline" set="null" line="16" static="1">
		<f a="a:b">
			<x path="lime.utils.LogLevel"/>
			<x path="lime.utils.LogLevel"/>
			<x path="Bool"/>
		</f>
		<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
	</lte>
	<meta>
		<m n=":final"/>
		<m n=":enum"/>
	</meta>
</class></impl>
	</abstract>
	<class path="lime.utils._LogLevel.LogLevel_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/LogLevel.hx" private="1" module="lime.utils.LogLevel">
		<NONE public="1" get="inline" set="null" expr="cast 0" line="6" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 0</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</NONE>
		<ERROR public="1" get="inline" set="null" expr="cast 1" line="7" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 1</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</ERROR>
		<WARN public="1" get="inline" set="null" expr="cast 2" line="8" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 2</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</WARN>
		<INFO public="1" get="inline" set="null" expr="cast 3" line="9" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 3</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</INFO>
		<DEBUG public="1" get="inline" set="null" expr="cast 4" line="10" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 4</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</DEBUG>
		<VERBOSE public="1" get="inline" set="null" expr="cast 5" line="11" static="1">
			<x path="lime.utils.LogLevel"/>
			<meta>
				<m n=":value"><e>cast 5</e></m>
				<m n=":enum"/>
				<m n=":impl"/>
			</meta>
		</VERBOSE>
		<gt get="inline" set="null" line="13" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A > B]]></e></m></meta>
		</gt>
		<gte get="inline" set="null" line="14" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A >= B]]></e></m></meta>
		</gte>
		<lt get="inline" set="null" line="15" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A < B]]></e></m></meta>
		</lt>
		<lte get="inline" set="null" line="16" static="1">
			<f a="a:b">
				<x path="lime.utils.LogLevel"/>
				<x path="lime.utils.LogLevel"/>
				<x path="Bool"/>
			</f>
			<meta><m n=":op"><e><![CDATA[A <= B]]></e></m></meta>
		</lte>
		<meta>
			<m n=":final"/>
			<m n=":enum"/>
		</meta>
	</class>
	<class path="lime.utils.ObjectPool" params="T" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/ObjectPool.hx">
		<activeObjects public="1" set="null"><x path="Int"/></activeObjects>
		<inactiveObjects public="1" set="null"><x path="Int"/></inactiveObjects>
		<size public="1" get="accessor" set="accessor"><x path="Null"><x path="Int"/></x></size>
		<__inactiveObject0>
			<c path="lime.utils.ObjectPool.T"/>
			<meta><m n=":noCompletion"/></meta>
		</__inactiveObject0>
		<__inactiveObject1>
			<c path="lime.utils.ObjectPool.T"/>
			<meta><m n=":noCompletion"/></meta>
		</__inactiveObject1>
		<__inactiveObjectList>
			<t path="List"><c path="lime.utils.ObjectPool.T"/></t>
			<meta><m n=":noCompletion"/></meta>
		</__inactiveObjectList>
		<__pool>
			<t path="Map">
				<c path="lime.utils.ObjectPool.T"/>
				<x path="Bool"/>
			</t>
			<meta><m n=":noCompletion"/></meta>
		</__pool>
		<__size>
			<x path="Null"><x path="Int"/></x>
			<meta><m n=":noCompletion"/></meta>
		</__size>
		<add public="1" set="method" line="49"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></add>
		<clean public="1" set="dynamic" line="62"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></clean>
		<clear public="1" set="method" line="69"><f a=""><x path="Void"/></f></clear>
		<create public="1" set="dynamic" line="83"><f a=""><c path="lime.utils.ObjectPool.T"/></f></create>
		<get public="1" set="method" line="90"><f a=""><c path="lime.utils.ObjectPool.T"/></f></get>
		<release public="1" set="method" line="116"><f a="object">
	<c path="lime.utils.ObjectPool.T"/>
	<x path="Void"/>
</f></release>
		<__addInactive get="inline" set="null" line="146">
			<f a="object">
				<c path="lime.utils.ObjectPool.T"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__addInactive>
		<__getInactive get="inline" set="null" line="171">
			<f a=""><c path="lime.utils.ObjectPool.T"/></f>
			<meta><m n=":noCompletion"/></meta>
		</__getInactive>
		<__removeInactive set="method" line="215">
			<f a="count">
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__removeInactive>
		<get_size set="method" line="262">
			<f a=""><x path="Null"><x path="Int"/></x></f>
			<meta><m n=":noCompletion"/></meta>
		</get_size>
		<set_size set="method" line="269">
			<f a="value">
				<x path="Null"><x path="Int"/></x>
				<x path="Null"><x path="Int"/></x>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</set_size>
		<new public="1" set="method" line="26">
			<f a="?create:?clean:?size" v="null:null:null">
				<f a=""><c path="lime.utils.ObjectPool.T"/></f>
				<f a="">
					<c path="lime.utils.ObjectPool.T"/>
					<x path="Void"/>
				</f>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":value"><e>{ size : null, clean : null, create : null }</e></m></meta>
		</new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<class path="lime.utils.PackedAssetLibrary" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/PackedAssetLibrary.hx">
		<extends path="lime.utils.AssetLibrary"/>
		<fromBytes public="1" set="method" line="48" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.utils.PackedAssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromBytes>
		<fromFile public="1" set="method" line="55" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.utils.PackedAssetLibrary"/>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</fromFile>
		<fromManifest public="1" set="method" line="62" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.utils.PackedAssetLibrary"/>
</f></fromManifest>
		<loadFromBytes public="1" set="method" line="386" static="1">
			<f a="bytes:?rootPath" v=":null">
				<x path="lime.utils.Bytes"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.PackedAssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromBytes>
		<loadFromFile public="1" set="method" line="398" static="1">
			<f a="path:?rootPath" v=":null">
				<c path="String"/>
				<c path="String"/>
				<c path="lime.app.Future"><c path="lime.utils.PackedAssetLibrary"/></c>
			</f>
			<meta><m n=":value"><e>{ rootPath : null }</e></m></meta>
		</loadFromFile>
		<loadFromManifest public="1" set="method" line="410" static="1"><f a="manifest">
	<c path="lime.utils.AssetManifest"/>
	<c path="lime.app.Future"><c path="lime.utils.PackedAssetLibrary"/></c>
</f></loadFromManifest>
		<id>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</id>
		<lengths expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</lengths>
		<packedData>
			<x path="lime.utils.Bytes"/>
			<meta><m n=":noCompletion"/></meta>
		</packedData>
		<positions expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</positions>
		<type>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</type>
		<rootPath>
			<c path="String"/>
			<meta><m n=":noCompletion"/></meta>
		</rootPath>
		<getAudioBuffer public="1" set="method" line="69" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.media.AudioBuffer"/>
</f></getAudioBuffer>
		<getBytes public="1" set="method" line="97" override="1"><f a="id">
	<c path="String"/>
	<x path="lime.utils.Bytes"/>
</f></getBytes>
		<getFont public="1" set="method" line="122" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.text.Font"/>
</f></getFont>
		<getImage public="1" set="method" line="150" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.graphics.Image"/>
</f></getImage>
		<getText public="1" set="method" line="170" override="1"><f a="id">
	<c path="String"/>
	<c path="String"/>
</f></getText>
		<isLocal public="1" set="method" line="193" override="1"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Bool"/>
</f></isLocal>
		<load public="1" set="method" line="200" override="1"><f a=""><c path="lime.app.Future"><c path="lime.utils.AssetLibrary"/></c></f></load>
		<loadAudioBuffer public="1" set="method" line="310" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.media.AudioBuffer"/></c>
</f></loadAudioBuffer>
		<loadBytes public="1" set="method" line="338" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><x path="lime.utils.Bytes"/></c>
</f></loadBytes>
		<loadFont public="1" set="method" line="358" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.text.Font"/></c>
</f></loadFont>
		<loadImage public="1" set="method" line="422" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="lime.graphics.Image"/></c>
</f></loadImage>
		<loadText public="1" set="method" line="442" override="1"><f a="id">
	<c path="String"/>
	<c path="lime.app.Future"><c path="String"/></c>
</f></loadText>
		<unload public="1" set="method" line="481" override="1"><f a=""><x path="Void"/></f></unload>
		<__fromManifest set="method" line="488" override="1">
			<f a="manifest">
				<c path="lime.utils.AssetManifest"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__fromManifest>
		<__assetLoaded set="method" line="512" override="1">
			<f a="id">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</__assetLoaded>
		<new public="1" set="method" line="38"><f a="id:type">
	<c path="String"/>
	<c path="String"/>
	<x path="Void"/>
</f></new>
		<meta>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
			<m n=":keep"/>
		</meta>
	</class>
	<class path="lime.utils.Preloader" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Preloader.hx">
		<complete public="1" set="null"><x path="Bool"/></complete>
		<onComplete public="1" expr="new Event&lt;Void&gt;()">
			<c path="lime.app._Event_Void_Void"><f a=""><x path="Void"/></f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Void>()]]></e></m></meta>
		</onComplete>
		<onProgress public="1" expr="new Event&lt;Int -&gt; Int&gt;()">
			<c path="lime.app._Event_Int_Int_Void"><f a=":">
	<x path="Int"/>
	<x path="Int"/>
	<x path="Void"/>
</f></c>
			<meta><m n=":value"><e><![CDATA[new Event<Int -> Int>()]]></e></m></meta>
		</onProgress>
		<bytesLoaded>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesLoaded>
		<bytesLoadedCache expr="new Map&lt;AssetLibrary,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="lime.utils.AssetLibrary"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<AssetLibrary,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</bytesLoadedCache>
		<bytesLoadedCache2 expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</bytesLoadedCache2>
		<bytesTotal>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</bytesTotal>
		<bytesTotalCache expr="new Map&lt;String,Int&gt;()">
			<x path="haxe.ds.Map">
				<c path="String"/>
				<x path="Int"/>
			</x>
			<meta>
				<m n=":value"><e><![CDATA[new Map<String,Int>()]]></e></m>
				<m n=":noCompletion"/>
			</meta>
		</bytesTotalCache>
		<initLibraryNames>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</initLibraryNames>
		<libraries>
			<c path="Array"><c path="lime.utils.AssetLibrary"/></c>
			<meta><m n=":noCompletion"/></meta>
		</libraries>
		<libraryNames>
			<c path="Array"><c path="String"/></c>
			<meta><m n=":noCompletion"/></meta>
		</libraryNames>
		<loadedLibraries>
			<x path="Int"/>
			<meta><m n=":noCompletion"/></meta>
		</loadedLibraries>
		<loadedStage>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</loadedStage>
		<preloadComplete>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</preloadComplete>
		<preloadStarted>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</preloadStarted>
		<simulateProgress>
			<x path="Bool"/>
			<meta><m n=":noCompletion"/></meta>
		</simulateProgress>
		<addLibrary public="1" set="method" line="119"><f a="library">
	<c path="lime.utils.AssetLibrary"/>
	<x path="Void"/>
</f></addLibrary>
		<addLibraryName public="1" set="method" line="126"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></addLibraryName>
		<load public="1" set="method" line="137"><f a=""><x path="Void"/></f></load>
		<loadedAssetLibrary set="method" line="209">
			<f a="?name" v="null">
				<c path="String"/>
				<x path="Void"/>
			</f>
			<meta>
				<m n=":value"><e>{ name : null }</e></m>
				<m n=":noCompletion"/>
			</meta>
		</loadedAssetLibrary>
		<start set="method" line="233">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</start>
		<update set="method" line="252">
			<f a="loaded:total">
				<x path="Int"/>
				<x path="Int"/>
				<x path="Void"/>
			</f>
			<meta><m n=":noCompletion"/></meta>
		</update>
		<updateProgress set="method" line="259">
			<f a=""><x path="Void"/></f>
			<meta><m n=":noCompletion"/></meta>
		</updateProgress>
		<new public="1" set="method" line="58"><f a=""><x path="Void"/></f></new>
		<meta>
			<m n=":directlyUsed"/>
			<m n=":access"><e>lime.utils.AssetLibrary</e></m>
			<m n=":fileXml"><e>"tags=\"haxe,release\""</e></m>
			<m n=":noDebug"/>
		</meta>
	</class>
	<abstract path="lime.utils.Resource" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Resource.hx">
		<from>
			<icast><c path="haxe.io.Bytes"/></icast>
			<icast field="__fromString"><c path="String"/></icast>
		</from>
		<this><c path="haxe.io.Bytes"/></this>
		<to>
			<icast><c path="haxe.io.Bytes"/></icast>
			<icast field="__toString"><c path="String"/></icast>
		</to>
		<impl><class path="lime.utils._Resource.Resource_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Resource.hx" private="1" module="lime.utils.Resource">
	<_new public="1" set="method" line="10" static="1">
		<f a="?size" v="0">
			<x path="Int"/>
			<x path="lime.utils.Resource"/>
		</f>
		<meta>
			<m n=":value"><e>{ size : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
		</meta>
	</_new>
	<__fromString get="inline" set="null" line="17" static="1">
		<f a="value">
			<c path="String"/>
			<x path="lime.utils.Resource"/>
		</f>
		<meta><m n=":from"/></meta>
	</__fromString>
	<__toString get="inline" set="null" line="24" static="1">
		<f a="value">
			<x path="lime.utils.Resource"/>
			<c path="String"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":to"/>
		</meta>
	</__toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._Resource.Resource_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/Resource.hx" private="1" module="lime.utils.Resource">
		<_new public="1" set="method" line="10" static="1">
			<f a="?size" v="0">
				<x path="Int"/>
				<x path="lime.utils.Resource"/>
			</f>
			<meta>
				<m n=":value"><e>{ size : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
			</meta>
		</_new>
		<__fromString get="inline" set="null" line="17" static="1">
			<f a="value">
				<c path="String"/>
				<x path="lime.utils.Resource"/>
			</f>
			<meta><m n=":from"/></meta>
		</__fromString>
		<__toString get="inline" set="null" line="24" static="1">
			<f a="value">
				<x path="lime.utils.Resource"/>
				<c path="String"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":to"/>
			</meta>
		</__toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt16Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt16Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt16Array.UInt16Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt16Array.hx" private="1" module="lime.utils.UInt16Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="65" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>2</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="70" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="95" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="99" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt16Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="114" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="125" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt16Array.UInt16Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt16Array.hx" private="1" module="lime.utils.UInt16Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="2" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>2</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="95" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="99" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt16Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="114" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="125" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt32Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt32Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt32Array.UInt32Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt32Array.hx" private="1" module="lime.utils.UInt32Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="65" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>4</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="70" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="95" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="99" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt32Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="114" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="120" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="125" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt32Array.UInt32Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt32Array.hx" private="1" module="lime.utils.UInt32Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="4" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>4</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="95" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="99" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt32Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="114" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="120" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="125" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt8Array" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt8Array.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta><m n=":forward"/></meta>
		<impl><class path="lime.utils._UInt8Array.UInt8Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt8Array.hx" private="1" module="lime.utils.UInt8Array">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="65" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="70" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="95" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="99" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8Array"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="103" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<toString get="inline" set="null" line="109" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<get_length get="inline" set="null" line="111" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="116" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="122" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt8Array.UInt8Array_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt8Array.hx" private="1" module="lime.utils.UInt8Array">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="65" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="70" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="95" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="99" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8Array"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="103" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<toString get="inline" set="null" line="109" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<get_length get="inline" set="null" line="111" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="116" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="122" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<meta><m n=":final"/></meta>
	</class>
	<abstract path="lime.utils.UInt8ClampedArray" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt8ClampedArray.hx">
		<from><icast><c path="lime.utils.ArrayBufferView"/></icast></from>
		<this><c path="lime.utils.ArrayBufferView"/></this>
		<to><icast><c path="lime.utils.ArrayBufferView"/></icast></to>
		<meta>
			<m n=":forward"/>
			<m n=":arrayAccess"/>
		</meta>
		<impl><class path="lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt8ClampedArray.hx" private="1" module="lime.utils.UInt8ClampedArray">
	<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="74" static="1">
		<x path="Int"/>
		<meta><m n=":value"><e>1</e></m></meta>
	</BYTES_PER_ELEMENT>
	<length public="1" get="accessor" set="null" static="1">
		<x path="Int"/>
		<meta><m n=":impl"/></meta>
	</length>
	<_new public="1" params="T" get="inline" set="null" line="79" static="1">
		<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
			<x path="Int"/>
			<x path="lime.utils.ArrayBuffer"/>
			<c path="Array"><c path="_new.T"/></c>
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":value"><e>{ byteoffset : 0 }</e></m>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":generic"/>
		</meta>
	</_new>
	<subarray public="1" get="inline" set="null" line="104" static="1">
		<f a="this:begin:?end" v="::null">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta>
			<m n=":value"><e>{ end : null }</e></m>
			<m n=":impl"/>
		</meta>
	</subarray>
	<fromBytes public="1" get="inline" set="null" line="108" static="1">
		<f a="bytes:?byteOffset:?len" v=":0:">
			<c path="haxe.io.Bytes"/>
			<x path="Int"/>
			<x path="Int"/>
			<x path="lime.utils.UInt8ClampedArray"/>
		</f>
		<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
	</fromBytes>
	<toBytes public="1" get="inline" set="null" line="112" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<c path="haxe.io.Bytes"/>
		</f>
		<meta><m n=":impl"/></meta>
	</toBytes>
	<get_length get="inline" set="null" line="118" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
		</f>
		<meta><m n=":impl"/></meta>
	</get_length>
	<__get public="1" get="inline" set="null" line="123" static="1">
		<f a="this:idx">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="Null"><x path="UInt"/></x>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__get>
	<__set public="1" get="inline" set="null" line="129" static="1">
		<f a="this:idx:val">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Int"/>
			<x path="UInt"/>
			<x path="UInt"/>
		</f>
		<meta>
			<m n=":impl"/>
			<m n=":noCompletion"/>
			<m n=":arrayAccess"/>
			<m n=":extern"/>
		</meta>
	</__set>
	<toString get="inline" set="null" line="134" static="1">
		<f a="this">
			<c path="lime.utils.ArrayBufferView"/>
			<x path="Null"><c path="String"/></x>
		</f>
		<meta><m n=":impl"/></meta>
	</toString>
	<meta><m n=":final"/></meta>
</class></impl>
	</abstract>
	<class path="lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_" params="" file="/Users/joshua/Development/Haxe/lime/src/lime/utils/UInt8ClampedArray.hx" private="1" module="lime.utils.UInt8ClampedArray">
		<BYTES_PER_ELEMENT public="1" get="inline" set="null" expr="1" line="74" static="1">
			<x path="Int"/>
			<meta><m n=":value"><e>1</e></m></meta>
		</BYTES_PER_ELEMENT>
		<length public="1" get="accessor" set="null" static="1">
			<x path="Int"/>
			<meta><m n=":impl"/></meta>
		</length>
		<_new public="1" params="T" get="inline" set="null" line="79" static="1">
			<f a="?elements:?buffer:?array:?view:?byteoffset:?len" v="::::0:">
				<x path="Int"/>
				<x path="lime.utils.ArrayBuffer"/>
				<c path="Array"><c path="_new.T"/></c>
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":value"><e>{ byteoffset : 0 }</e></m>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":generic"/>
			</meta>
		</_new>
		<subarray public="1" get="inline" set="null" line="104" static="1">
			<f a="this:begin:?end" v="::null">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta>
				<m n=":value"><e>{ end : null }</e></m>
				<m n=":impl"/>
			</meta>
		</subarray>
		<fromBytes public="1" get="inline" set="null" line="108" static="1">
			<f a="bytes:?byteOffset:?len" v=":0:">
				<c path="haxe.io.Bytes"/>
				<x path="Int"/>
				<x path="Int"/>
				<x path="lime.utils.UInt8ClampedArray"/>
			</f>
			<meta><m n=":value"><e>{ byteOffset : 0 }</e></m></meta>
		</fromBytes>
		<toBytes public="1" get="inline" set="null" line="112" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<c path="haxe.io.Bytes"/>
			</f>
			<meta><m n=":impl"/></meta>
		</toBytes>
		<get_length get="inline" set="null" line="118" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
			</f>
			<meta><m n=":impl"/></meta>
		</get_length>
		<__get public="1" get="inline" set="null" line="123" static="1">
			<f a="this:idx">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="Null"><x path="UInt"/></x>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__get>
		<__set public="1" get="inline" set="null" line="129" static="1">
			<f a="this:idx:val">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Int"/>
				<x path="UInt"/>
				<x path="UInt"/>
			</f>
			<meta>
				<m n=":impl"/>
				<m n=":noCompletion"/>
				<m n=":arrayAccess"/>
				<m n=":extern"/>
			</meta>
		</__set>
		<toString get="inline" set="null" line="134" static="1">
			<f a="this">
				<c path="lime.utils.ArrayBufferView"/>
				<x path="Null"><c path="String"/></x>
			</f>
			<meta><m n=":impl"/></meta>
		</toString>
		<meta><m n=":final"/></meta>
	</class>
</haxe>