digraph graphname {
	node [shape=plaintext];
n18046[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18046) BKNormal</td></tr>
	<tr><td port="e0" align="left">return 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18045[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18045) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18044[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18044) BKConditional</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18043[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18043) BKNormal</td></tr>
	<tr><td port="e0" align="left">sourceRect.offset(sourceImage.offsetX, sourceImage.offsetY)</td></tr>
	<tr><td port="e1" align="left">destPoint.offset(this.offsetX, this.offsetY)</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = this.buffer.__srcBitmapData.threshold</td></tr>
	<tr><td port="e3" align="left">var _hx_tmp = sourceImage.buffer.get_src()</td></tr>
	<tr><td port="e4" align="left">var _hx_tmp = sourceRect.__toFlashRectangle()</td></tr>
	<tr><td port="e5" align="left">var _hx_tmp = destPoint.__toFlashPoint()</td></tr>
	<tr><td port="e6" align="left">return _hx_tmp(_hx_tmp, _hx_tmp, _hx_tmp, operation, threshold, _color, _mask, copySource)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18042[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18042) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18041[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18041) BKConditional</td></tr>
	<tr><td port="e0" align="left">var rgba = cast mask</td></tr>
	<tr><td port="e1" align="left">var argb = 0</td></tr>
	<tr><td port="e2" align="left">var this</td></tr>
	<tr><td port="e3" align="left">this = argb</td></tr>
	<tr><td port="e4" align="left">var argb = cast this</td></tr>
	<tr><td port="e5" align="left">var argb = cast cast cast cast rgba &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var argb = argb &lt;&lt; 24</td></tr>
	<tr><td port="e7" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 24 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e8" align="left">var argb = argb &lt;&lt; 16</td></tr>
	<tr><td port="e9" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e10" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 16 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var argb = argb &lt;&lt; 8</td></tr>
	<tr><td port="e12" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e13" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 8 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">argb = argb | argb</td></tr>
	<tr><td port="e15" align="left">_mask = argb</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18040[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18040) BKConditional</td></tr>
	<tr><td port="e0" align="left">var bgra = cast mask</td></tr>
	<tr><td port="e1" align="left">var argb = 0</td></tr>
	<tr><td port="e2" align="left">var this</td></tr>
	<tr><td port="e3" align="left">this = argb</td></tr>
	<tr><td port="e4" align="left">var argb = cast this</td></tr>
	<tr><td port="e5" align="left">var argb = cast cast cast cast bgra &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var argb = argb &lt;&lt; 24</td></tr>
	<tr><td port="e7" align="left">var argb = cast cast cast cast cast cast bgra &gt;&gt;&gt; 8 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e8" align="left">var argb = argb &lt;&lt; 16</td></tr>
	<tr><td port="e9" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e10" align="left">var argb = cast cast cast cast cast cast bgra &gt;&gt;&gt; 16 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var argb = argb &lt;&lt; 8</td></tr>
	<tr><td port="e12" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e13" align="left">var argb = cast cast cast cast cast cast bgra &gt;&gt;&gt; 24 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">argb = argb | argb</td></tr>
	<tr><td port="e15" align="left">_mask = argb</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18039[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18039) BKConditional</td></tr>
	<tr><td port="e0" align="left">_mask = mask</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18038[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18038) BKConditional</td></tr>
	<tr><td port="e0" align="left">var format = format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18037[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18037) BKConditional</td></tr>
	<tr><td port="e0" align="left">var rgba = cast mask</td></tr>
	<tr><td port="e1" align="left">var argb = 0</td></tr>
	<tr><td port="e2" align="left">var this</td></tr>
	<tr><td port="e3" align="left">this = argb</td></tr>
	<tr><td port="e4" align="left">var argb = cast this</td></tr>
	<tr><td port="e5" align="left">var argb = cast cast cast cast rgba &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var argb = argb &lt;&lt; 24</td></tr>
	<tr><td port="e7" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 24 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e8" align="left">var argb = argb &lt;&lt; 16</td></tr>
	<tr><td port="e9" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e10" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 16 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var argb = argb &lt;&lt; 8</td></tr>
	<tr><td port="e12" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e13" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 8 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">argb = argb | argb</td></tr>
	<tr><td port="e15" align="left">_mask = argb</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18036[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18036) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _mask</td></tr>
	<tr><td port="e1" align="left">var _mask = format == null</td></tr>
	<tr><td port="e2" align="left">@:cond-branch _mask</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18035[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18035) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18034[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18034) BKConditional</td></tr>
	<tr><td port="e0" align="left">var rgba = cast color</td></tr>
	<tr><td port="e1" align="left">var argb = 0</td></tr>
	<tr><td port="e2" align="left">var this</td></tr>
	<tr><td port="e3" align="left">this = argb</td></tr>
	<tr><td port="e4" align="left">var argb = cast this</td></tr>
	<tr><td port="e5" align="left">var argb = cast cast cast cast rgba &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var argb = argb &lt;&lt; 24</td></tr>
	<tr><td port="e7" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 24 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e8" align="left">var argb = argb &lt;&lt; 16</td></tr>
	<tr><td port="e9" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e10" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 16 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var argb = argb &lt;&lt; 8</td></tr>
	<tr><td port="e12" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e13" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 8 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">argb = argb | argb</td></tr>
	<tr><td port="e15" align="left">_color = argb</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18033[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18033) BKConditional</td></tr>
	<tr><td port="e0" align="left">var bgra = cast color</td></tr>
	<tr><td port="e1" align="left">var argb = 0</td></tr>
	<tr><td port="e2" align="left">var this</td></tr>
	<tr><td port="e3" align="left">this = argb</td></tr>
	<tr><td port="e4" align="left">var argb = cast this</td></tr>
	<tr><td port="e5" align="left">var argb = cast cast cast cast bgra &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var argb = argb &lt;&lt; 24</td></tr>
	<tr><td port="e7" align="left">var argb = cast cast cast cast cast cast bgra &gt;&gt;&gt; 8 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e8" align="left">var argb = argb &lt;&lt; 16</td></tr>
	<tr><td port="e9" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e10" align="left">var argb = cast cast cast cast cast cast bgra &gt;&gt;&gt; 16 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var argb = argb &lt;&lt; 8</td></tr>
	<tr><td port="e12" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e13" align="left">var argb = cast cast cast cast cast cast bgra &gt;&gt;&gt; 24 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">argb = argb | argb</td></tr>
	<tr><td port="e15" align="left">_color = argb</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18032[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18032) BKConditional</td></tr>
	<tr><td port="e0" align="left">_color = color</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18031[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18031) BKConditional</td></tr>
	<tr><td port="e0" align="left">var format = format</td></tr>
	<tr><td port="e1" align="left">@:cond-branch format</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18030[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18030) BKConditional</td></tr>
	<tr><td port="e0" align="left">var rgba = cast color</td></tr>
	<tr><td port="e1" align="left">var argb = 0</td></tr>
	<tr><td port="e2" align="left">var this</td></tr>
	<tr><td port="e3" align="left">this = argb</td></tr>
	<tr><td port="e4" align="left">var argb = cast this</td></tr>
	<tr><td port="e5" align="left">var argb = cast cast cast cast rgba &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e6" align="left">var argb = argb &lt;&lt; 24</td></tr>
	<tr><td port="e7" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 24 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e8" align="left">var argb = argb &lt;&lt; 16</td></tr>
	<tr><td port="e9" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e10" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 16 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e11" align="left">var argb = argb &lt;&lt; 8</td></tr>
	<tr><td port="e12" align="left">var argb = argb | argb</td></tr>
	<tr><td port="e13" align="left">var argb = cast cast cast cast cast cast rgba &gt;&gt;&gt; 8 &amp; cast 255 &amp; 255</td></tr>
	<tr><td port="e14" align="left">argb = argb | argb</td></tr>
	<tr><td port="e15" align="left">_color = argb</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18029[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18029) BKConditional</td></tr>
	<tr><td port="e0" align="left">var _color</td></tr>
	<tr><td port="e1" align="left">var _color = format == null</td></tr>
	<tr><td port="e2" align="left">@:cond-branch _color</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18028[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18028) BKConditional</td></tr>
	<tr><td port="e0" align="left">return lime._internal.graphics.ImageDataUtil.threshold(this, sourceImage, sourceRect, destPoint, operation, threshold, color, mask, copySource, format)</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18027[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18027) BKSub</td></tr>
	<tr><td port="e0" align="left">var ` = this.type</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp = enumIndex `</td></tr>
	<tr><td port="e2" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18026[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18026) BKNormal</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18025[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18025) BKConditional</td></tr>
	<tr><td port="e0" align="left">return 0</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18024[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18024) BKNormal</td></tr>
	<tr><td port="e0" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18023[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18023) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18022[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18022) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = sourceRect == null</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18021[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18021) BKNormal</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp = ! _hx_tmp</td></tr>
	<tr><td port="e1" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18020[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18020) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = true</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18019[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18019) BKConditional</td></tr>
	<tr><td port="e0" align="left">_hx_tmp = sourceImage == null</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18018[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18018) BKFunctionEnd</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n18017[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(18017) BKFunctionBegin</td></tr>
	<tr><td port="e0" align="left">var _hx_tmp</td></tr>
	<tr><td port="e1" align="left">var _hx_tmp</td></tr>
	<tr><td port="e2" align="left">var _hx_tmp = ! this.buffer == null</td></tr>
	<tr><td port="e3" align="left">@:cond-branch _hx_tmp</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1[label=<<table BORDER="0" CELLBORDER="1" CELLSPACING="0">
	<tr><td port="in" bgcolor="lightgray">(1) BKRoot</td></tr>
	<tr><td port="out"></td></tr>
</table>>];
n1:out -> n18017:in[label="CFGFunction"];
n18017:out -> n18020:in[label="CFGCondElse"];
n18017:out -> n18019:in[label="CFGCondBranch true"];
n18019:out -> n18021:in[label="CFGGoto"];
n18021:out -> n18023:in[label="CFGCondElse"];
n18021:out -> n18022:in[label="CFGCondBranch true"];
n18022:out -> n18024:in[label="CFGGoto"];
n18024:out -> n18026:in[label="CFGCondElse"];
n18024:out -> n18025:in[label="CFGCondBranch true"];
n18025:out -> n18018:in[label="CFGGoto"];
n18026:out -> n18027:in[label="CFGGoto"];
n18027:out -> n18044:in[label="CFGCondElse"];
n18027:out -> n18029:in[label="CFGCondBranch 2"];
n18027:out -> n18028:in[label="CFGCondBranch 1"];
n18027:out -> n18028:in[label="CFGCondBranch 0"];
n18028:out -> n18018:in[label="CFGGoto"];
n18029:out -> n18031:in[label="CFGCondElse"];
n18029:out -> n18030:in[label="CFGCondBranch true"];
n18030:out -> n18036:in[label="CFGGoto"];
n18036:out -> n18038:in[label="CFGCondElse"];
n18036:out -> n18037:in[label="CFGCondBranch true"];
n18037:out -> n18043:in[label="CFGGoto"];
n18043:out -> n18018:in[label="CFGGoto"];
n18038:out -> n18041:in[label="CFGCondElse"];
n18038:out -> n18040:in[label="CFGCondBranch 2"];
n18038:out -> n18039:in[label="CFGCondBranch 1"];
n18039:out -> n18042:in[label="CFGGoto"];
n18040:out -> n18042:in[label="CFGGoto"];
n18042:out -> n18043:in[label="CFGGoto"];
n18041:out -> n18042:in[label="CFGGoto"];
n18031:out -> n18034:in[label="CFGCondElse"];
n18031:out -> n18033:in[label="CFGCondBranch 2"];
n18031:out -> n18032:in[label="CFGCondBranch 1"];
n18032:out -> n18035:in[label="CFGGoto"];
n18033:out -> n18035:in[label="CFGGoto"];
n18035:out -> n18036:in[label="CFGGoto"];
n18034:out -> n18035:in[label="CFGGoto"];
n18044:out -> n18045:in[label="CFGGoto"];
n18045:out -> n18046:in[label="CFGGoto"];
n18046:out -> n18018:in[label="CFGGoto"];
n18023:out -> n18024:in[label="CFGGoto"];
n18020:out -> n18021:in[label="CFGGoto"];
}
