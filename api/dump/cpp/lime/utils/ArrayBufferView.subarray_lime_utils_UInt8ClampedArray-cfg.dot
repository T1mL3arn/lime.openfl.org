digraph graphname {
n25924 [shape=box,label="(25924)"];
n25923 [shape=box,label="(25923)\nthrow lime.utils.TAError.RangeError"];
n25922 [shape=box,label="(25922)"];
n25921 [shape=box,label="(25921)\nvar _this = new lime.utils.ArrayBufferView(0, cast 2)\nvar in_byteOffset = byte_offset\nvar this = in_byteOffset < 0\n@:cond-branch this"];
n25920 [shape=box,label="(25920)\nvar buffer = this.buffer\nvar this\nvar view = buffer != null\n@:cond-branch view"];
n25919 [shape=box,label="(25919)\nview = cast this"];
n25918 [shape=box,label="(25918)\n_this.buffer = buffer\n_this.byteOffset = in_byteOffset\n_this.byteLength = newByteLength\nvar this = newByteLength / _this.bytesPerElement\n_this.length = Std.int(this)\nthis = _this"];
n25917 [shape=box,label="(25917)"];
n25916 [shape=box,label="(25916)\nthrow lime.utils.TAError.RangeError"];
n25915 [shape=box,label="(25915)"];
n25914 [shape=box,label="(25914)\nthrow lime.utils.TAError.RangeError"];
n25913 [shape=box,label="(25913)\nvar this = newByteLength < 0\n@:cond-branch this"];
n25912 [shape=box,label="(25912)\nthrow lime.utils.TAError.RangeError"];
n25911 [shape=box,label="(25911)\nnewByteLength = len * _this.bytesPerElement\nvar newRange = in_byteOffset + newByteLength\nvar this = newRange > bufferByteLength\n@:cond-branch this"];
n25910 [shape=box,label="(25910)\nnewByteLength = bufferByteLength - in_byteOffset\nvar this = bufferByteLength % _this.bytesPerElement\nvar this = this != 0\n@:cond-branch this"];
n25909 [shape=box,label="(25909)\nvar bufferByteLength = buffer.length\nvar elementSize = _this.bytesPerElement\nvar newByteLength = bufferByteLength\nvar this = len == null\n@:cond-branch this"];
n25908 [shape=box,label="(25908)\nthrow lime.utils.TAError.RangeError"];
n25907 [shape=box,label="(25907)\nvar this = in_byteOffset % _this.bytesPerElement\nvar this = this != 0\n@:cond-branch this"];
n25906 [shape=box,label="(25906)\nthrow lime.utils.TAError.RangeError"];
n25905 [shape=box,label="(25905)\nthrow \"Invalid constructor arguments for Int8Array\""];
n25904 [shape=box,label="(25904)\nvar _this = new lime.utils.ArrayBufferView(0, cast 1)\nvar in_byteOffset = byte_offset\nvar this = in_byteOffset < 0\n@:cond-branch this"];
n25903 [shape=box,label="(25903)\nvar buffer = this.buffer\nvar this\nvar view = buffer != null\n@:cond-branch view"];
n25902 [shape=box,label="(25902)\nthrow \"subarray on a blank ArrayBufferView\""];
n25901 [shape=box,label="(25901)\nvar len = end - begin\nvar byte_offset = begin * this.bytesPerElement\nvar byte_offset = byte_offset + this.byteOffset\nvar view\nvar ` = this.type\nvar ` = @:exhaustive `\n@:cond-branch `"];
n25900 [shape=box,label="(25900)\nend = this.length"];
n25899 [shape=box,label="<function-end>
(25899)"];
n25898 [shape=box,label="<function-begin>
(25898)\nvar _hx_tmp = end == null\n@:cond-branch _hx_tmp"];
n1 [shape=box,label="<root>
(1)"];
n1 -> n25898[label="function"];
}
